import{c as Y,g as Hl,a as Ne,e as jl,T as ye,E as ve,b as Me,D as ct,d as Ue,f as sr,V as qr,F as Hr,h as $l,A as Xn,i as dt,R as xu,z as Yi,j as Ou,k as nt,l as fm,K as ym}from"./index-wLOjEY6C.js";function _u(e,r){(r==null||r>e.length)&&(r=e.length);for(var t=0,a=new Array(r);t<r;t++)a[t]=e[t];return a}function gm(e){if(Array.isArray(e))return e}function bm(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function vm(e,r){for(var t=0;t<r.length;t++){var a=r[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Dm(e,r,t){return r&&vm(e.prototype,r),e}function Em(e,r){return r!=null&&typeof Symbol<"u"&&r[Symbol.hasInstance]?!!r[Symbol.hasInstance](e):e instanceof r}function km(e,r){var t=e==null?null:typeof Symbol<"u"&&e[Symbol.iterator]||e["@@iterator"];if(t!=null){var a=[],n=!0,i=!1,o,u;try{for(t=t.call(e);!(n=(o=t.next()).done)&&(a.push(o.value),!(r&&a.length===r));n=!0);}catch(s){i=!0,u=s}finally{try{!n&&t.return!=null&&t.return()}finally{if(i)throw u}}return a}}function Am(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function $r(e,r){return gm(e)||km(e,r)||wm(e,r)||Am()}function wm(e,r){if(e){if(typeof e=="string")return _u(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);if(t==="Object"&&e.constructor&&(t=e.constructor.name),t==="Map"||t==="Set")return Array.from(t);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _u(e,r)}}function Zn(e,r){var t,a,n,i,o={label:0,sent:function(){if(n[0]&1)throw n[1];return n[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function u(l){return function(c){return s([l,c])}}function s(l){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,a&&(n=l[0]&2?a.return:l[0]?a.throw||((n=a.return)&&n.call(a),0):a.next)&&!(n=n.call(a,l[1])).done)return n;switch(a=0,n&&(l=[l[0]&2,n.value]),l[0]){case 0:case 1:n=l;break;case 4:return o.label++,{value:l[1],done:!1};case 5:o.label++,a=l[1],l=[0];continue;case 7:l=o.ops.pop(),o.trys.pop();continue;default:if(n=o.trys,!(n=n.length>0&&n[n.length-1])&&(l[0]===6||l[0]===2)){o=0;continue}if(l[0]===3&&(!n||l[1]>n[0]&&l[1]<n[3])){o.label=l[1];break}if(l[0]===6&&o.label<n[1]){o.label=n[1],n=l;break}if(n&&o.label<n[2]){o.label=n[2],o.ops.push(l);break}n[2]&&o.ops.pop(),o.trys.pop();continue}l=r.call(e,o)}catch(c){l=[6,c],a=0}finally{t=n=0}if(l[0]&5)throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}}var Cm=Object.create,yn=Object.defineProperty,Sm=Object.getOwnPropertyDescriptor,Wl=Object.getOwnPropertyNames,Tm=Object.getPrototypeOf,Bm=Object.prototype.hasOwnProperty,Nm=function(e,r){return function(){return r||(0,e[Wl(e)[0]])((r={exports:{}}).exports,r),r.exports}},Rm=function(e,r){for(var t in r)yn(e,t,{get:r[t],enumerable:!0})},Vl=function(e,r,t,a){if(r&&typeof r=="object"||typeof r=="function"){var n=!0,i=!1,o=void 0;try{for(var u=function(){var c=l.value;!Bm.call(e,c)&&c!==t&&yn(e,c,{get:function(){return r[c]},enumerable:!(a=Sm(r,c))||a.enumerable})},s=Wl(r)[Symbol.iterator](),l;!(n=(l=s.next()).done);n=!0)u()}catch(c){i=!0,o=c}finally{try{!n&&s.return!=null&&s.return()}finally{if(i)throw o}}}return e},Lm=function(e,r,t){return t=e!=null?Cm(Tm(e)):{},Vl(!e||!e.__esModule?yn(t,"default",{value:e,enumerable:!0}):t,e)},Mm=function(e){return Vl(yn({},"__esModule",{value:!0}),e)},Im=Nm({"node_modules/set-cookie-parser/lib/set-cookie.js":function(e,r){var t=function(l){return typeof l=="string"&&!!l.trim()},a=function(l,c){var d=l.split(";").filter(t),p=d.shift(),h=n(p),g=h.name,b=h.value;c=c?Object.assign({},u,c):u;try{b=c.decodeValues?decodeURIComponent(b):b}catch(D){console.error("set-cookie-parser encountered an error while decoding a cookie with value '"+b+"'. Set options.decodeValues to false to disable this feature.",D)}var F={name:g,value:b};return d.forEach(function(D){var N=D.split("="),T=N.shift().trimLeft().toLowerCase(),E=N.join("=");T==="expires"?F.expires=new Date(E):T==="max-age"?F.maxAge=parseInt(E,10):T==="secure"?F.secure=!0:T==="httponly"?F.httpOnly=!0:T==="samesite"?F.sameSite=E:F[T]=E}),F},n=function(l){var c="",d="",p=l.split("=");return p.length>1?(c=p.shift(),d=p.join("=")):d=l,{name:c,value:d}},i=function(l,c){if(c=c?Object.assign({},u,c):u,!l)return c.map?{}:[];if(l.headers)if(typeof l.headers.getSetCookie=="function")l=l.headers.getSetCookie();else if(l.headers["set-cookie"])l=l.headers["set-cookie"];else{var d=l.headers[Object.keys(l.headers).find(function(h){return h.toLowerCase()==="set-cookie"})];!d&&l.headers.cookie&&!c.silent&&console.warn("Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."),l=d}if(Array.isArray(l)||(l=[l]),c=c?Object.assign({},u,c):u,c.map){var p={};return l.filter(t).reduce(function(h,g){var b=a(g,c);return h[b.name]=b,h},p)}else return l.filter(t).map(function(h){return a(h,c)})},o=function(l){if(Array.isArray(l))return l;if(typeof l!="string")return[];var c=[],d=0,p,h,g,b,F;function D(){for(;d<l.length&&/\s/.test(l.charAt(d));)d+=1;return d<l.length}function N(){return h=l.charAt(d),h!=="="&&h!==";"&&h!==","}for(;d<l.length;){for(p=d,F=!1;D();)if(h=l.charAt(d),h===","){for(g=d,d+=1,D(),b=d;d<l.length&&N();)d+=1;d<l.length&&l.charAt(d)==="="?(F=!0,d=b,c.push(l.substring(p,g)),p=d):d=g+1}else d+=1;(!F||d>=l.length)&&c.push(l.substring(p,l.length))}return c},u={decodeValues:!0,map:!1,silent:!1};r.exports=i,r.exports.parse=i,r.exports.parseString=a,r.exports.splitCookiesString=o}}),Ul={};Rm(Ul,{Headers:function(){return va},flattenHeadersList:function(){return Um},flattenHeadersObject:function(){return zm},headersToList:function(){return zl},headersToObject:function(){return jm},headersToString:function(){return Gm},listToHeaders:function(){return Wm},objectToHeaders:function(){return Vm},reduceHeadersObject:function(){return Fo},stringToHeaders:function(){return $m}});var pr=Mm(Ul),xm=Lm(Im()),Om=/[^a-z0-9\-#$%&'*+.^_`|~]/i;function Ut(e){if(Om.test(e)||e.trim()==="")throw new TypeError("Invalid character in header field name");return e.trim().toLowerCase()}var Pu=[`
`,"\r","	"," "],_m=new RegExp("(^[".concat(Pu.join(""),"]|$[").concat(Pu.join(""),"])"),"g");function ei(e){var r=e.replace(_m,"");return r}function zt(e){if(typeof e!="string"||e.length===0)return!1;for(var r=0;r<e.length;r++){var t=e.charCodeAt(r);if(t>127||!Pm(t))return!1}return!0}function Pm(e){return![127,32,"(",")","<",">","@",",",";",":","\\",'"',"/","[","]","?","=","{","}"].includes(e)}function Gu(e){if(typeof e!="string"||e.trim()!==e)return!1;for(var r=0;r<e.length;r++){var t=e.charCodeAt(r);if(t===0||t===10||t===13)return!1}return!0}var it=Symbol("normalizedHeaders"),Ha=Symbol("rawHeaderNames"),Hu=", ",ju,$u,va=function(){function e(r){var t=this;bm(this,e);var a;if(this[ju]={},this[$u]=new Map,["Headers","HeadersPolyfill"].includes((a=r)===null||a===void 0?void 0:a.constructor.name)||Em(r,va)){var n=r;n.forEach(function(i,o){t.append(o,i)},this)}else Array.isArray(r)?r.forEach(function(i){var o=$r(i,2),u=o[0],s=o[1];t.append(u,Array.isArray(s)?s.join(Hu):s)}):r&&Object.getOwnPropertyNames(r).forEach(function(i){var o=r[i];t.append(i,Array.isArray(o)?o.join(Hu):o)})}return Dm(e,[{key:(ju=it,$u=Ha,Symbol.iterator),value:function(){return this.entries()}},{key:"keys",value:function(){var t,a,n,i,o,u,s,l;return Zn(this,function(c){switch(c.label){case 0:t=!0,a=!1,n=void 0,c.label=1;case 1:c.trys.push([1,6,7,8]),i=this.entries()[Symbol.iterator](),c.label=2;case 2:return(t=(o=i.next()).done)?[3,5]:(u=$r(o.value,1),s=u[0],[4,s]);case 3:c.sent(),c.label=4;case 4:return t=!0,[3,2];case 5:return[3,8];case 6:return l=c.sent(),a=!0,n=l,[3,8];case 7:try{!t&&i.return!=null&&i.return()}finally{if(a)throw n}return[7];case 8:return[2]}})}},{key:"values",value:function(){var t,a,n,i,o,u,s,l;return Zn(this,function(c){switch(c.label){case 0:t=!0,a=!1,n=void 0,c.label=1;case 1:c.trys.push([1,6,7,8]),i=this.entries()[Symbol.iterator](),c.label=2;case 2:return(t=(o=i.next()).done)?[3,5]:(u=$r(o.value,2),s=u[1],[4,s]);case 3:c.sent(),c.label=4;case 4:return t=!0,[3,2];case 5:return[3,8];case 6:return l=c.sent(),a=!0,n=l,[3,8];case 7:try{!t&&i.return!=null&&i.return()}finally{if(a)throw n}return[7];case 8:return[2]}})}},{key:"entries",value:function(){var t,a,n,i,o,u,s,l,c,d,p,h,g,b,b;return Zn(this,function(F){switch(F.label){case 0:t=Object.keys(this[it]).sort(function(D,N){return D.localeCompare(N)}),a=!0,n=!1,i=void 0,F.label=1;case 1:F.trys.push([1,15,16,17]),o=t[Symbol.iterator](),F.label=2;case 2:if(a=(u=o.next()).done)return[3,14];if(s=u.value,s!=="set-cookie")return[3,11];l=!0,c=!1,d=void 0,F.label=3;case 3:F.trys.push([3,8,9,10]),p=this.getSetCookie()[Symbol.iterator](),F.label=4;case 4:return(l=(h=p.next()).done)?[3,7]:(g=h.value,[4,[s,g]]);case 5:F.sent(),F.label=6;case 6:return l=!0,[3,4];case 7:return[3,10];case 8:return b=F.sent(),c=!0,d=b,[3,10];case 9:try{!l&&p.return!=null&&p.return()}finally{if(c)throw d}return[7];case 10:return[3,13];case 11:return[4,[s,this.get(s)]];case 12:F.sent(),F.label=13;case 13:return a=!0,[3,2];case 14:return[3,17];case 15:return b=F.sent(),n=!0,i=b,[3,17];case 16:try{!a&&o.return!=null&&o.return()}finally{if(n)throw i}return[7];case 17:return[2]}})}},{key:"has",value:function(t){if(!zt(t))throw new TypeError('Invalid header name "'.concat(t,'"'));return this[it].hasOwnProperty(Ut(t))}},{key:"get",value:function(t){if(!zt(t))throw TypeError('Invalid header name "'.concat(t,'"'));var a;return(a=this[it][Ut(t)])!==null&&a!==void 0?a:null}},{key:"set",value:function(t,a){if(!(!zt(t)||!Gu(a))){var n=Ut(t),i=ei(a);this[it][n]=ei(i),this[Ha].set(n,t)}}},{key:"append",value:function(t,a){if(!(!zt(t)||!Gu(a))){var n=Ut(t),i=ei(a),o=this.has(n)?"".concat(this.get(n),", ").concat(i):i;this.set(t,o)}}},{key:"delete",value:function(t){if(zt(t)&&this.has(t)){var a=Ut(t);delete this[it][a],this[Ha].delete(a)}}},{key:"all",value:function(){return this[it]}},{key:"raw",value:function(){var t={},a=!0,n=!1,i=void 0;try{for(var o=this.entries()[Symbol.iterator](),u;!(a=(u=o.next()).done);a=!0){var s=$r(u.value,2),l=s[0],c=s[1];t[this[Ha].get(l)]=c}}catch(d){n=!0,i=d}finally{try{!a&&o.return!=null&&o.return()}finally{if(n)throw i}}return t}},{key:"forEach",value:function(t,a){var n=!0,i=!1,o=void 0;try{for(var u=this.entries()[Symbol.iterator](),s;!(n=(s=u.next()).done);n=!0){var l=$r(s.value,2),c=l[0],d=l[1];t.call(a,d,c,this)}}catch(p){i=!0,o=p}finally{try{!n&&u.return!=null&&u.return()}finally{if(i)throw o}}}},{key:"getSetCookie",value:function(){var t=this.get("set-cookie");return t===null?[]:t===""?[""]:(0,xm.splitCookiesString)(t)}}]),e}();function zl(e){var r=[];return e.forEach(function(t,a){var n=t.includes(",")?t.split(",").map(function(i){return i.trim()}):t;r.push([a,n])}),r}function Gm(e){var r=zl(e),t=r.map(function(a){var n=$r(a,2),i=n[0],o=n[1],u=[].concat(o);return"".concat(i,": ").concat(u.join(", "))});return t.join(`\r
`)}var Hm=["user-agent"];function jm(e){var r={};return e.forEach(function(t,a){var n=!Hm.includes(a.toLowerCase())&&t.includes(",");r[a]=n?t.split(",").map(function(i){return i.trim()}):t}),r}function $m(e){var r=e.trim().split(/[\r\n]+/);return r.reduce(function(t,a){if(a.trim()==="")return t;var n=a.split(": "),i=n.shift(),o=n.join(": ");return t.append(i,o),t},new va)}function Wm(e){var r=new va;return e.forEach(function(t){var a=$r(t,2),n=a[0],i=a[1],o=[].concat(i);o.forEach(function(u){r.append(n,u)})}),r}function Fo(e,r,t){return Object.keys(e).reduce(function(a,n){return r(a,n,e[n])},t)}function Vm(e){return Fo(e,function(r,t,a){var n=[].concat(a).filter(Boolean);return n.forEach(function(i){r.append(t,i)}),r},new va)}function Um(e){return e.map(function(r){var t=$r(r,2),a=t[0],n=t[1];return[a,[].concat(n).join(", ")]})}function zm(e){return Fo(e,function(r,t,a){return r[t]=[].concat(a).join(", "),r},{})}var Da={};/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */Da.parse=Jm;Da.serialize=Ym;var qm=decodeURIComponent,Km=encodeURIComponent,ja=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function Jm(e,r){if(typeof e!="string")throw new TypeError("argument str must be a string");for(var t={},a=r||{},n=e.split(";"),i=a.decode||qm,o=0;o<n.length;o++){var u=n[o],s=u.indexOf("=");if(!(s<0)){var l=u.substring(0,s).trim();if(t[l]==null){var c=u.substring(s+1,u.length).trim();c[0]==='"'&&(c=c.slice(1,-1)),t[l]=Qm(c,i)}}}return t}function Ym(e,r,t){var a=t||{},n=a.encode||Km;if(typeof n!="function")throw new TypeError("option encode is invalid");if(!ja.test(e))throw new TypeError("argument name is invalid");var i=n(r);if(i&&!ja.test(i))throw new TypeError("argument val is invalid");var o=e+"="+i;if(a.maxAge!=null){var u=a.maxAge-0;if(isNaN(u)||!isFinite(u))throw new TypeError("option maxAge is invalid");o+="; Max-Age="+Math.floor(u)}if(a.domain){if(!ja.test(a.domain))throw new TypeError("option domain is invalid");o+="; Domain="+a.domain}if(a.path){if(!ja.test(a.path))throw new TypeError("option path is invalid");o+="; Path="+a.path}if(a.expires){if(typeof a.expires.toUTCString!="function")throw new TypeError("option expires is invalid");o+="; Expires="+a.expires.toUTCString()}if(a.httpOnly&&(o+="; HttpOnly"),a.secure&&(o+="; Secure"),a.sameSite){var s=typeof a.sameSite=="string"?a.sameSite.toLowerCase():a.sameSite;switch(s){case!0:o+="; SameSite=Strict";break;case"lax":o+="; SameSite=Lax";break;case"strict":o+="; SameSite=Strict";break;case"none":o+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}}return o}function Qm(e,r){try{return r(e)}catch{return e}}var ho=Object.defineProperty,Xm=Object.getOwnPropertyDescriptor,Zm=Object.getOwnPropertyNames,eF=Object.prototype.hasOwnProperty,rF=(e,r)=>{for(var t in r)ho(e,t,{get:r[t],enumerable:!0})},tF=(e,r,t,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of Zm(r))!eF.call(e,n)&&n!==t&&ho(e,n,{get:()=>r[n],enumerable:!(a=Xm(r,n))||a.enumerable});return e},aF=e=>tF(ho({},"__esModule",{value:!0}),e),ql={};rF(ql,{isNodeProcess:()=>nF});var fo=aF(ql);function nF(){if(typeof navigator<"u"&&navigator.product==="ReactNative")return!0;if(typeof process<"u"){const e=process.type;return e==="renderer"||e==="worker"?!1:!!(process.versions&&process.versions.node)}return!1}var $a={exports:{}},Wu;function iF(){return Wu||(Wu=1,function(e,r){var t=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof Y<"u")return Y;throw new Error("unable to locate global object")},a=t();e.exports=r=a.fetch,a.fetch&&(r.default=a.fetch.bind(a)),r.Headers=a.Headers,r.Request=a.Request,r.Response=a.Response}($a,$a.exports)),$a.exports}var yo=Object.defineProperty,oF=Object.getOwnPropertyDescriptor,uF=Object.getOwnPropertyNames,sF=Object.prototype.hasOwnProperty,lF=(e,r)=>{for(var t in r)yo(e,t,{get:r[t],enumerable:!0})},cF=(e,r,t,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of uF(r))!sF.call(e,n)&&n!==t&&yo(e,n,{get:()=>r[n],enumerable:!(a=oF(r,n))||a.enumerable});return e},dF=e=>cF(yo({},"__esModule",{value:!0}),e),Kl={};lF(Kl,{InvariantError:()=>Jl,format:()=>go,invariant:()=>Yl});var Or=dF(Kl),pF=/(%?)(%([sdijo]))/g;function mF(e,r){switch(r){case"s":return e;case"d":case"i":return Number(e);case"j":return JSON.stringify(e);case"o":{if(typeof e=="string")return e;const t=JSON.stringify(e);return t==="{}"||t==="[]"||/^\[object .+?\]$/.test(t)?e:t}}}function go(e,...r){if(r.length===0)return e;let t=0,a=e.replace(pF,(n,i,o,u)=>{const s=r[t],l=mF(s,u);return i?n:(t++,l)});return t<r.length&&(a+=` ${r.slice(t).join(" ")}`),a=a.replace(/%{2,2}/g,"%"),a}var FF=2;function hF(e){if(!e.stack)return;const r=e.stack.split(`
`);r.splice(1,FF),e.stack=r.join(`
`)}var Jl=class extends Error{constructor(e,...r){super(e),this.message=e,this.name="Invariant Violation",this.message=go(e,...r),hF(this)}},Yl=(e,r,...t)=>{if(!e)throw new Jl(r,...t)};Yl.as=(e,r,t,...a)=>{if(!r){const n=a.length===0?t:go(t,...a);let i;try{i=Reflect.construct(e,[n])}catch{i=e(n)}throw i}};var Jr={},bo={};Object.defineProperty(bo,"__esModule",{value:!0});bo.until=async e=>{try{return[null,await e().catch(t=>{throw t})]}catch(r){return[r,null]}};Object.defineProperty(Jr,"__esModule",{value:!0});var fF=bo;Jr.until=fF.until;var gn={},xt={};Object.defineProperty(xt,"__esModule",{value:!0});xt.IS_PATCHED_MODULE=void 0;xt.IS_PATCHED_MODULE=Symbol("isPatchedModule");var Ea={},Qi={exports:{}},ri,Vu;function yF(){if(Vu)return ri;Vu=1;var e=1e3,r=e*60,t=r*60,a=t*24,n=a*7,i=a*365.25;ri=function(c,d){d=d||{};var p=typeof c;if(p==="string"&&c.length>0)return o(c);if(p==="number"&&isFinite(c))return d.long?s(c):u(c);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(c))};function o(c){if(c=String(c),!(c.length>100)){var d=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(c);if(d){var p=parseFloat(d[1]),h=(d[2]||"ms").toLowerCase();switch(h){case"years":case"year":case"yrs":case"yr":case"y":return p*i;case"weeks":case"week":case"w":return p*n;case"days":case"day":case"d":return p*a;case"hours":case"hour":case"hrs":case"hr":case"h":return p*t;case"minutes":case"minute":case"mins":case"min":case"m":return p*r;case"seconds":case"second":case"secs":case"sec":case"s":return p*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return p;default:return}}}}function u(c){var d=Math.abs(c);return d>=a?Math.round(c/a)+"d":d>=t?Math.round(c/t)+"h":d>=r?Math.round(c/r)+"m":d>=e?Math.round(c/e)+"s":c+"ms"}function s(c){var d=Math.abs(c);return d>=a?l(c,d,a,"day"):d>=t?l(c,d,t,"hour"):d>=r?l(c,d,r,"minute"):d>=e?l(c,d,e,"second"):c+" ms"}function l(c,d,p,h){var g=d>=p*1.5;return Math.round(c/p)+" "+h+(g?"s":"")}return ri}function gF(e){t.debug=t,t.default=t,t.coerce=s,t.disable=i,t.enable=n,t.enabled=o,t.humanize=yF(),t.destroy=l,Object.keys(e).forEach(c=>{t[c]=e[c]}),t.names=[],t.skips=[],t.formatters={};function r(c){let d=0;for(let p=0;p<c.length;p++)d=(d<<5)-d+c.charCodeAt(p),d|=0;return t.colors[Math.abs(d)%t.colors.length]}t.selectColor=r;function t(c){let d,p=null,h,g;function b(...F){if(!b.enabled)return;const D=b,N=Number(new Date),T=N-(d||N);D.diff=T,D.prev=d,D.curr=N,d=N,F[0]=t.coerce(F[0]),typeof F[0]!="string"&&F.unshift("%O");let E=0;F[0]=F[0].replace(/%([a-zA-Z%])/g,(C,j)=>{if(C==="%%")return"%";E++;const L=t.formatters[j];if(typeof L=="function"){const y=F[E];C=L.call(D,y),F.splice(E,1),E--}return C}),t.formatArgs.call(D,F),(D.log||t.log).apply(D,F)}return b.namespace=c,b.useColors=t.useColors(),b.color=t.selectColor(c),b.extend=a,b.destroy=t.destroy,Object.defineProperty(b,"enabled",{enumerable:!0,configurable:!1,get:()=>p!==null?p:(h!==t.namespaces&&(h=t.namespaces,g=t.enabled(c)),g),set:F=>{p=F}}),typeof t.init=="function"&&t.init(b),b}function a(c,d){const p=t(this.namespace+(typeof d>"u"?":":d)+c);return p.log=this.log,p}function n(c){t.save(c),t.namespaces=c,t.names=[],t.skips=[];let d;const p=(typeof c=="string"?c:"").split(/[\s,]+/),h=p.length;for(d=0;d<h;d++)p[d]&&(c=p[d].replace(/\*/g,".*?"),c[0]==="-"?t.skips.push(new RegExp("^"+c.slice(1)+"$")):t.names.push(new RegExp("^"+c+"$")))}function i(){const c=[...t.names.map(u),...t.skips.map(u).map(d=>"-"+d)].join(",");return t.enable(""),c}function o(c){if(c[c.length-1]==="*")return!0;let d,p;for(d=0,p=t.skips.length;d<p;d++)if(t.skips[d].test(c))return!1;for(d=0,p=t.names.length;d<p;d++)if(t.names[d].test(c))return!0;return!1}function u(c){return c.toString().substring(2,c.toString().length-2).replace(/\.\*\?$/,"*")}function s(c){return c instanceof Error?c.stack||c.message:c}function l(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return t.enable(t.load()),t}var bF=gF;(function(e,r){var t={};r.formatArgs=n,r.save=i,r.load=o,r.useColors=a,r.storage=u(),r.destroy=(()=>{let l=!1;return()=>{l||(l=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),r.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function a(){if(typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs))return!0;if(typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let l;return typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&(l=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(l[1],10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function n(l){if(l[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+l[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const c="color: "+this.color;l.splice(1,0,c,"color: inherit");let d=0,p=0;l[0].replace(/%[a-zA-Z%]/g,h=>{h!=="%%"&&(d++,h==="%c"&&(p=d))}),l.splice(p,0,c)}r.log=console.debug||console.log||(()=>{});function i(l){try{l?r.storage.setItem("debug",l):r.storage.removeItem("debug")}catch{}}function o(){let l;try{l=r.storage.getItem("debug")}catch{}return!l&&typeof process<"u"&&"env"in process&&(l=t.DEBUG),l}function u(){try{return localStorage}catch{}}e.exports=bF(r);const{formatters:s}=e.exports;s.j=function(l){try{return JSON.stringify(l)}catch(c){return"[UnexpectedJSONParseError]: "+c.message}}})(Qi,Qi.exports);var Ql=Qi.exports,Xl={},Zl={},bn={},vo={exports:{}},Ct=typeof Reflect=="object"?Reflect:null,Uu=Ct&&typeof Ct.apply=="function"?Ct.apply:function(r,t,a){return Function.prototype.apply.call(r,t,a)},en;Ct&&typeof Ct.ownKeys=="function"?en=Ct.ownKeys:Object.getOwnPropertySymbols?en=function(r){return Object.getOwnPropertyNames(r).concat(Object.getOwnPropertySymbols(r))}:en=function(r){return Object.getOwnPropertyNames(r)};function vF(e){console&&console.warn&&console.warn(e)}var ec=Number.isNaN||function(r){return r!==r};function Ae(){Ae.init.call(this)}vo.exports=Ae;vo.exports.once=AF;Ae.EventEmitter=Ae;Ae.prototype._events=void 0;Ae.prototype._eventsCount=0;Ae.prototype._maxListeners=void 0;var zu=10;function vn(e){if(typeof e!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}Object.defineProperty(Ae,"defaultMaxListeners",{enumerable:!0,get:function(){return zu},set:function(e){if(typeof e!="number"||e<0||ec(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");zu=e}});Ae.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};Ae.prototype.setMaxListeners=function(r){if(typeof r!="number"||r<0||ec(r))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+r+".");return this._maxListeners=r,this};function rc(e){return e._maxListeners===void 0?Ae.defaultMaxListeners:e._maxListeners}Ae.prototype.getMaxListeners=function(){return rc(this)};Ae.prototype.emit=function(r){for(var t=[],a=1;a<arguments.length;a++)t.push(arguments[a]);var n=r==="error",i=this._events;if(i!==void 0)n=n&&i.error===void 0;else if(!n)return!1;if(n){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var u=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw u.context=o,u}var s=i[r];if(s===void 0)return!1;if(typeof s=="function")Uu(s,this,t);else for(var l=s.length,c=oc(s,l),a=0;a<l;++a)Uu(c[a],this,t);return!0};function tc(e,r,t,a){var n,i,o;if(vn(t),i=e._events,i===void 0?(i=e._events=Object.create(null),e._eventsCount=0):(i.newListener!==void 0&&(e.emit("newListener",r,t.listener?t.listener:t),i=e._events),o=i[r]),o===void 0)o=i[r]=t,++e._eventsCount;else if(typeof o=="function"?o=i[r]=a?[t,o]:[o,t]:a?o.unshift(t):o.push(t),n=rc(e),n>0&&o.length>n&&!o.warned){o.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(r)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=r,u.count=o.length,vF(u)}return e}Ae.prototype.addListener=function(r,t){return tc(this,r,t,!1)};Ae.prototype.on=Ae.prototype.addListener;Ae.prototype.prependListener=function(r,t){return tc(this,r,t,!0)};function DF(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function ac(e,r,t){var a={fired:!1,wrapFn:void 0,target:e,type:r,listener:t},n=DF.bind(a);return n.listener=t,a.wrapFn=n,n}Ae.prototype.once=function(r,t){return vn(t),this.on(r,ac(this,r,t)),this};Ae.prototype.prependOnceListener=function(r,t){return vn(t),this.prependListener(r,ac(this,r,t)),this};Ae.prototype.removeListener=function(r,t){var a,n,i,o,u;if(vn(t),n=this._events,n===void 0)return this;if(a=n[r],a===void 0)return this;if(a===t||a.listener===t)--this._eventsCount===0?this._events=Object.create(null):(delete n[r],n.removeListener&&this.emit("removeListener",r,a.listener||t));else if(typeof a!="function"){for(i=-1,o=a.length-1;o>=0;o--)if(a[o]===t||a[o].listener===t){u=a[o].listener,i=o;break}if(i<0)return this;i===0?a.shift():EF(a,i),a.length===1&&(n[r]=a[0]),n.removeListener!==void 0&&this.emit("removeListener",r,u||t)}return this};Ae.prototype.off=Ae.prototype.removeListener;Ae.prototype.removeAllListeners=function(r){var t,a,n;if(a=this._events,a===void 0)return this;if(a.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):a[r]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete a[r]),this;if(arguments.length===0){var i=Object.keys(a),o;for(n=0;n<i.length;++n)o=i[n],o!=="removeListener"&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(t=a[r],typeof t=="function")this.removeListener(r,t);else if(t!==void 0)for(n=t.length-1;n>=0;n--)this.removeListener(r,t[n]);return this};function nc(e,r,t){var a=e._events;if(a===void 0)return[];var n=a[r];return n===void 0?[]:typeof n=="function"?t?[n.listener||n]:[n]:t?kF(n):oc(n,n.length)}Ae.prototype.listeners=function(r){return nc(this,r,!0)};Ae.prototype.rawListeners=function(r){return nc(this,r,!1)};Ae.listenerCount=function(e,r){return typeof e.listenerCount=="function"?e.listenerCount(r):ic.call(e,r)};Ae.prototype.listenerCount=ic;function ic(e){var r=this._events;if(r!==void 0){var t=r[e];if(typeof t=="function")return 1;if(t!==void 0)return t.length}return 0}Ae.prototype.eventNames=function(){return this._eventsCount>0?en(this._events):[]};function oc(e,r){for(var t=new Array(r),a=0;a<r;++a)t[a]=e[a];return t}function EF(e,r){for(;r+1<e.length;r++)e[r]=e[r+1];e.pop()}function kF(e){for(var r=new Array(e.length),t=0;t<r.length;++t)r[t]=e[t].listener||e[t];return r}function AF(e,r){return new Promise(function(t,a){function n(o){e.removeListener(r,i),a(o)}function i(){typeof e.removeListener=="function"&&e.removeListener("error",n),t([].slice.call(arguments))}uc(e,r,i,{once:!0}),r!=="error"&&wF(e,n,{once:!0})})}function wF(e,r,t){typeof e.on=="function"&&uc(e,"error",r,t)}function uc(e,r,t,a){if(typeof e.on=="function")a.once?e.once(r,t):e.on(r,t);else if(typeof e.addEventListener=="function")e.addEventListener(r,function n(i){a.once&&e.removeEventListener(r,n),t(i)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e)}var CF=vo.exports,SF=Y&&Y.__extends||function(){var e=function(r,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,n){a.__proto__=n}||function(a,n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(a[i]=n[i])},e(r,t)};return function(r,t){e(r,t);function a(){this.constructor=r}r.prototype=t===null?Object.create(t):(a.prototype=t.prototype,new a)}}(),TF=Y&&Y.__spreadArrays||function(){for(var e=0,r=0,t=arguments.length;r<t;r++)e+=arguments[r].length;for(var a=Array(e),n=0,r=0;r<t;r++)for(var i=arguments[r],o=0,u=i.length;o<u;o++,n++)a[n]=i[o];return a};bn.__esModule=!0;bn.StrictEventEmitter=void 0;var BF=CF,NF=function(e){SF(r,e);function r(){return e.call(this)||this}return r.prototype.on=function(t,a){return e.prototype.on.call(this,t.toString(),a)},r.prototype.once=function(t,a){return e.prototype.once.call(this,t.toString(),a)},r.prototype.off=function(t,a){return e.prototype.off.call(this,t.toString(),a)},r.prototype.emit=function(t){for(var a=[],n=1;n<arguments.length;n++)a[n-1]=arguments[n];return e.prototype.emit.apply(this,TF([t.toString()],a))},r.prototype.addListener=function(t,a){return e.prototype.addListener.call(this,t.toString(),a)},r.prototype.prependListener=function(t,a){return e.prototype.prependListener.call(this,t.toString(),a)},r.prototype.prependOnceListener=function(t,a){return e.prototype.prependOnceListener.call(this,t.toString(),a)},r.prototype.removeListener=function(t,a){return e.prototype.removeListener.call(this,t.toString(),a)},r.prototype.removeAllListeners=function(t){return t?e.prototype.removeAllListeners.call(this,t.toString()):e.prototype.removeAllListeners.call(this)},r.prototype.eventNames=function(){return e.prototype.eventNames.call(this)},r.prototype.listeners=function(t){return e.prototype.listeners.call(this,t.toString())},r.prototype.rawListeners=function(t){return e.prototype.rawListeners.call(this,t.toString())},r.prototype.listenerCount=function(t){return e.prototype.listenerCount.call(this,t.toString())},r}(BF.EventEmitter);bn.StrictEventEmitter=NF;(function(e){var r=Y&&Y.__createBinding||(Object.create?function(a,n,i,o){o===void 0&&(o=i),Object.defineProperty(a,o,{enumerable:!0,get:function(){return n[i]}})}:function(a,n,i,o){o===void 0&&(o=i),a[o]=n[i]}),t=Y&&Y.__exportStar||function(a,n){for(var i in a)i!=="default"&&!Object.prototype.hasOwnProperty.call(n,i)&&r(n,a,i)};e.__esModule=!0,t(bn,e)})(Zl);var mt={};Object.defineProperty(mt,"__esModule",{value:!0});mt.nextTickAsync=mt.nextTick=void 0;function RF(e){setTimeout(e,0)}mt.nextTick=RF;function LF(e){return new Promise(function(r){setTimeout(function(){r(e())},0)})}mt.nextTickAsync=LF;(function(e){var r=Y&&Y.__extends||function(){var d=function(p,h){return d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(g,b){g.__proto__=b}||function(g,b){for(var F in b)Object.prototype.hasOwnProperty.call(b,F)&&(g[F]=b[F])},d(p,h)};return function(p,h){if(typeof h!="function"&&h!==null)throw new TypeError("Class extends value "+String(h)+" is not a constructor or null");d(p,h);function g(){this.constructor=p}p.prototype=h===null?Object.create(h):(g.prototype=h.prototype,new g)}}(),t=Y&&Y.__awaiter||function(d,p,h,g){function b(F){return F instanceof h?F:new h(function(D){D(F)})}return new(h||(h=Promise))(function(F,D){function N(R){try{E(g.next(R))}catch(C){D(C)}}function T(R){try{E(g.throw(R))}catch(C){D(C)}}function E(R){R.done?F(R.value):b(R.value).then(N,T)}E((g=g.apply(d,p||[])).next())})},a=Y&&Y.__generator||function(d,p){var h={label:0,sent:function(){if(F[0]&1)throw F[1];return F[1]},trys:[],ops:[]},g,b,F,D;return D={next:N(0),throw:N(1),return:N(2)},typeof Symbol=="function"&&(D[Symbol.iterator]=function(){return this}),D;function N(E){return function(R){return T([E,R])}}function T(E){if(g)throw new TypeError("Generator is already executing.");for(;h;)try{if(g=1,b&&(F=E[0]&2?b.return:E[0]?b.throw||((F=b.return)&&F.call(b),0):b.next)&&!(F=F.call(b,E[1])).done)return F;switch(b=0,F&&(E=[E[0]&2,F.value]),E[0]){case 0:case 1:F=E;break;case 4:return h.label++,{value:E[1],done:!1};case 5:h.label++,b=E[1],E=[0];continue;case 7:E=h.ops.pop(),h.trys.pop();continue;default:if(F=h.trys,!(F=F.length>0&&F[F.length-1])&&(E[0]===6||E[0]===2)){h=0;continue}if(E[0]===3&&(!F||E[1]>F[0]&&E[1]<F[3])){h.label=E[1];break}if(E[0]===6&&h.label<F[1]){h.label=F[1],F=E;break}if(F&&h.label<F[2]){h.label=F[2],h.ops.push(E);break}F[2]&&h.ops.pop(),h.trys.pop();continue}E=p.call(d,h)}catch(R){E=[6,R],b=0}finally{g=F=0}if(E[0]&5)throw E[1];return{value:E[0]?E[1]:void 0,done:!0}}},n=Y&&Y.__read||function(d,p){var h=typeof Symbol=="function"&&d[Symbol.iterator];if(!h)return d;var g=h.call(d),b,F=[],D;try{for(;(p===void 0||p-- >0)&&!(b=g.next()).done;)F.push(b.value)}catch(N){D={error:N}}finally{try{b&&!b.done&&(h=g.return)&&h.call(g)}finally{if(D)throw D.error}}return F},i=Y&&Y.__spreadArray||function(d,p){for(var h=0,g=p.length,b=d.length;h<g;h++,b++)d[b]=p[h];return d};Object.defineProperty(e,"__esModule",{value:!0}),e.AsyncEventEmitter=e.AsyncEventEmitterReadyState=void 0;var o=Ql,u=Zl,s=mt,l;(function(d){d.ACTIVE="ACTIVE",d.DEACTIVATED="DEACTIVATED"})(l=e.AsyncEventEmitterReadyState||(e.AsyncEventEmitterReadyState={}));var c=function(d){r(p,d);function p(){var h=d.call(this)||this;return h.log=o.debug("async-event-emitter"),h.queue=new Map,h.readyState=l.ACTIVE,h}return p.prototype.on=function(h,g){var b=this,F=this.log.extend("on");return F('adding "%s" listener...',h),this.readyState===l.DEACTIVATED?(F("the emitter is destroyed, skipping!"),this):d.prototype.on.call(this,h,function(){for(var D=[],N=0;N<arguments.length;N++)D[N]=arguments[N];return t(b,void 0,void 0,function(){var T,E=this;return a(this,function(R){return T=this.openListenerQueue(h),F('awaiting the "%s" listener...',h),T.push({args:D,done:new Promise(function(C,j){return t(E,void 0,void 0,function(){var L;return a(this,function(y){switch(y.label){case 0:return y.trys.push([0,2,,3]),[4,g.apply(void 0,i([],n(D)))];case 1:return y.sent(),C(),F('"%s" listener has resolved!',h),[3,3];case 2:return L=y.sent(),F('"%s" listener has rejected!',L),j(L),[3,3];case 3:return[2]}})})})}),[2]})})})},p.prototype.emit=function(h){for(var g=this,b=[],F=1;F<arguments.length;F++)b[F-1]=arguments[F];var D=this.log.extend("emit");return D('emitting "%s" event...',h),this.readyState===l.DEACTIVATED?(D("the emitter is destroyed, skipping!"),!1):(this.openListenerQueue(h),D('appending a one-time cleanup "%s" listener...',h),this.once(h,function(){s.nextTick(function(){g.queue.delete(h),D('cleaned up "%s" listeners queue!',h)})}),d.prototype.emit.apply(this,i([h],n(b))))},p.prototype.untilIdle=function(h,g){return g===void 0&&(g=function(){return!0}),t(this,void 0,void 0,function(){var b,F=this;return a(this,function(D){switch(D.label){case 0:return b=this.queue.get(h)||[],[4,Promise.all(b.filter(g).map(function(N){var T=N.done;return T})).finally(function(){F.queue.delete(h)})];case 1:return D.sent(),[2]}})})},p.prototype.openListenerQueue=function(h){var g=this.log.extend("openListenerQueue");g('opening "%s" listeners queue...',h);var b=this.queue.get(h);return b?(g("returning an exising queue:",b),b):(g("no queue found, creating one..."),this.queue.set(h,[]),[])},p.prototype.removeAllListeners=function(h){var g=this.log.extend("removeAllListeners");return g("event:",h),h?(this.queue.delete(h),g('cleared the "%s" listeners queue!',h,this.queue.get(h))):(this.queue.clear(),g("cleared the listeners queue!",this.queue)),d.prototype.removeAllListeners.call(this,h)},p.prototype.activate=function(){var h=this.log.extend("activate");this.readyState=l.ACTIVE,h("set state to:",this.readyState)},p.prototype.deactivate=function(){var h=this.log.extend("deactivate");h("removing all listeners..."),this.removeAllListeners(),this.readyState=l.DEACTIVATED,h("set state to:",this.readyState)},p}(u.StrictEventEmitter);e.AsyncEventEmitter=c})(Xl);(function(e){var r=Y&&Y.__values||function(c){var d=typeof Symbol=="function"&&Symbol.iterator,p=d&&c[d],h=0;if(p)return p.call(c);if(c&&typeof c.length=="number")return{next:function(){return c&&h>=c.length&&(c=void 0),{value:c&&c[h++],done:!c}}};throw new TypeError(d?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(e,"__esModule",{value:!0}),e.Interceptor=e.InterceptorReadyState=e.deleteGlobalSymbol=e.getGlobalSymbol=void 0;var t=Ql,a=Xl,n=mt;function i(c){return globalThis[c]||void 0}e.getGlobalSymbol=i;function o(c,d){globalThis[c]=d}function u(c){delete globalThis[c]}e.deleteGlobalSymbol=u;var s;(function(c){c.IDLE="IDLE",c.APPLYING="APPLYING",c.APPLIED="APPLIED",c.DISPOSING="DISPOSING",c.DISPOSED="DISPOSED"})(s=e.InterceptorReadyState||(e.InterceptorReadyState={}));var l=function(){function c(d){this.symbol=d,this.readyState=s.IDLE,this.emitter=new a.AsyncEventEmitter,this.subscriptions=[],this.log=t.debug(d.description),this.emitter.setMaxListeners(0),this.log("constructing the interceptor...")}return c.prototype.checkEnvironment=function(){return!0},c.prototype.apply=function(){var d=this,p=this.log.extend("apply");if(p("applying the interceptor..."),this.readyState===s.APPLIED){p("intercepted already applied!");return}var h=this.checkEnvironment();if(!h){p("the interceptor cannot be applied in this environment!");return}this.readyState=s.APPLYING,this.emitter.activate(),p("activated the emiter!",this.emitter.readyState);var g=this.getInstance();if(g){p("found a running instance, reusing..."),this.on=function(b,F){p('proxying the "%s" listener',b),g.emitter.addListener(b,F),d.subscriptions.push(function(){g.emitter.removeListener(b,F),p('removed proxied "%s" listener!',b)})},n.nextTick(function(){d.readyState=s.APPLIED});return}p("no running instance found, setting up a new instance..."),this.setup(),this.setInstance(),n.nextTick(function(){d.readyState=s.APPLIED})},c.prototype.setup=function(){},c.prototype.on=function(d,p){var h=this.log.extend("on");if(this.readyState===s.DISPOSING||this.readyState===s.DISPOSED){h("cannot listen to events, already disposed!");return}h('adding "%s" event listener:',d,p.name),this.emitter.on(d,p)},c.prototype.dispose=function(){var d,p,h=this,g=this.log.extend("dispose");if(this.readyState===s.DISPOSED){g("cannot dispose, already disposed!");return}if(g("disposing the interceptor..."),this.readyState=s.DISPOSING,!this.getInstance()){g("no interceptors running, skipping dispose...");return}if(this.clearInstance(),g("global symbol deleted:",i(this.symbol)),this.subscriptions.length>0){g("disposing of %d subscriptions...",this.subscriptions.length);try{for(var b=r(this.subscriptions),F=b.next();!F.done;F=b.next()){var D=F.value;D()}}catch(N){d={error:N}}finally{try{F&&!F.done&&(p=b.return)&&p.call(b)}finally{if(d)throw d.error}}this.subscriptions=[],g("disposed of all subscriptions!",this.subscriptions.length)}this.emitter.deactivate(),g("destroyed the listener!"),n.nextTick(function(){h.readyState=s.DISPOSED})},c.prototype.getInstance=function(){var d,p=i(this.symbol);return this.log("retrieved global instance:",(d=p?.constructor)===null||d===void 0?void 0:d.name),p},c.prototype.setInstance=function(){o(this.symbol,this),this.log("set global instance!",this.symbol.description)},c.prototype.clearInstance=function(){u(this.symbol),this.log("cleared global instance!",this.symbol.description)},c}();e.Interceptor=l})(Ea);var Dn={},MF=Y&&Y.__extends||function(){var e=function(r,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,n){a.__proto__=n}||function(a,n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(a[i]=n[i])},e(r,t)};return function(r,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");e(r,t);function a(){this.constructor=r}r.prototype=t===null?Object.create(t):(a.prototype=t.prototype,new a)}}(),IF=Y&&Y.__values||function(e){var r=typeof Symbol=="function"&&Symbol.iterator,t=r&&e[r],a=0;if(t)return t.call(e);if(e&&typeof e.length=="number")return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(r?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(Dn,"__esModule",{value:!0});Dn.BatchInterceptor=void 0;var xF=Ea,OF=function(e){MF(r,e);function r(t){var a=this;return r.symbol=Symbol(t.name),a=e.call(this,r.symbol)||this,a.interceptors=t.interceptors,a}return r.prototype.setup=function(){var t,a,n=this.log.extend("setup");n("applying all %d interceptors...",this.interceptors.length);var i=function(c){n('applying "%s" interceptor...',c.constructor.name),c.apply(),n("adding interceptor dispose subscription"),o.subscriptions.push(function(){return c.dispose()})},o=this;try{for(var u=IF(this.interceptors),s=u.next();!s.done;s=u.next()){var l=s.value;i(l)}}catch(c){t={error:c}}finally{try{s&&!s.done&&(a=u.return)&&a.call(u)}finally{if(t)throw t.error}}},r.prototype.on=function(t,a){this.interceptors.forEach(function(n){n.on(t,a)})},r}(xF.Interceptor);Dn.BatchInterceptor=OF;var ft={},yr={},Do={},ti={},ai={},ni,qu;function sc(){return qu||(qu=1,ni=function(){if(typeof Symbol!="function"||typeof Object.getOwnPropertySymbols!="function")return!1;if(typeof Symbol.iterator=="symbol")return!0;var r={},t=Symbol("test"),a=Object(t);if(typeof t=="string"||Object.prototype.toString.call(t)!=="[object Symbol]"||Object.prototype.toString.call(a)!=="[object Symbol]")return!1;var n=42;r[t]=n;for(t in r)return!1;if(typeof Object.keys=="function"&&Object.keys(r).length!==0||typeof Object.getOwnPropertyNames=="function"&&Object.getOwnPropertyNames(r).length!==0)return!1;var i=Object.getOwnPropertySymbols(r);if(i.length!==1||i[0]!==t||!Object.prototype.propertyIsEnumerable.call(r,t))return!1;if(typeof Object.getOwnPropertyDescriptor=="function"){var o=Object.getOwnPropertyDescriptor(r,t);if(o.value!==n||o.enumerable!==!0)return!1}return!0}),ni}var ii,Ku;function Eo(){if(Ku)return ii;Ku=1;var e=sc();return ii=function(){return e()&&!!Symbol.toStringTag},ii}var oi,Ju;function _F(){return Ju||(Ju=1,oi=Error),oi}var ui,Yu;function PF(){return Yu||(Yu=1,ui=EvalError),ui}var si,Qu;function GF(){return Qu||(Qu=1,si=RangeError),si}var li,Xu;function HF(){return Xu||(Xu=1,li=ReferenceError),li}var ci,Zu;function lc(){return Zu||(Zu=1,ci=SyntaxError),ci}var di,es;function En(){return es||(es=1,di=TypeError),di}var pi,rs;function jF(){return rs||(rs=1,pi=URIError),pi}var mi,ts;function $F(){if(ts)return mi;ts=1;var e=typeof Symbol<"u"&&Symbol,r=sc();return mi=function(){return typeof e!="function"||typeof Symbol!="function"||typeof e("foo")!="symbol"||typeof Symbol("bar")!="symbol"?!1:r()},mi}var Fi,as;function WF(){if(as)return Fi;as=1;var e={__proto__:null,foo:{}},r=Object;return Fi=function(){return{__proto__:e}.foo===e.foo&&!(e instanceof r)},Fi}var hi,ns;function VF(){if(ns)return hi;ns=1;var e="Function.prototype.bind called on incompatible ",r=Object.prototype.toString,t=Math.max,a="[object Function]",n=function(s,l){for(var c=[],d=0;d<s.length;d+=1)c[d]=s[d];for(var p=0;p<l.length;p+=1)c[p+s.length]=l[p];return c},i=function(s,l){for(var c=[],d=l,p=0;d<s.length;d+=1,p+=1)c[p]=s[d];return c},o=function(u,s){for(var l="",c=0;c<u.length;c+=1)l+=u[c],c+1<u.length&&(l+=s);return l};return hi=function(s){var l=this;if(typeof l!="function"||r.apply(l)!==a)throw new TypeError(e+l);for(var c=i(arguments,1),d,p=function(){if(this instanceof d){var D=l.apply(this,n(c,arguments));return Object(D)===D?D:this}return l.apply(s,n(c,arguments))},h=t(0,l.length-c.length),g=[],b=0;b<h;b++)g[b]="$"+b;if(d=Function("binder","return function ("+o(g,",")+"){ return binder.apply(this,arguments); }")(p),l.prototype){var F=function(){};F.prototype=l.prototype,d.prototype=new F,F.prototype=null}return d},hi}var fi,is;function ko(){if(is)return fi;is=1;var e=VF();return fi=Function.prototype.bind||e,fi}var yi,os;function UF(){if(os)return yi;os=1;var e=Function.prototype.call,r=Object.prototype.hasOwnProperty,t=ko();return yi=t.call(e,r),yi}var gi,us;function ka(){if(us)return gi;us=1;var e,r=_F(),t=PF(),a=GF(),n=HF(),i=lc(),o=En(),u=jF(),s=Function,l=function(Q){try{return s('"use strict"; return ('+Q+").constructor;")()}catch{}},c=Object.getOwnPropertyDescriptor;if(c)try{c({},"")}catch{c=null}var d=function(){throw new o},p=c?function(){try{return arguments.callee,d}catch{try{return c(arguments,"callee").get}catch{return d}}}():d,h=$F()(),g=WF()(),b=Object.getPrototypeOf||(g?function(Q){return Q.__proto__}:null),F={},D=typeof Uint8Array>"u"||!b?e:b(Uint8Array),N={__proto__:null,"%AggregateError%":typeof AggregateError>"u"?e:AggregateError,"%Array%":Array,"%ArrayBuffer%":typeof ArrayBuffer>"u"?e:ArrayBuffer,"%ArrayIteratorPrototype%":h&&b?b([][Symbol.iterator]()):e,"%AsyncFromSyncIteratorPrototype%":e,"%AsyncFunction%":F,"%AsyncGenerator%":F,"%AsyncGeneratorFunction%":F,"%AsyncIteratorPrototype%":F,"%Atomics%":typeof Atomics>"u"?e:Atomics,"%BigInt%":typeof BigInt>"u"?e:BigInt,"%BigInt64Array%":typeof BigInt64Array>"u"?e:BigInt64Array,"%BigUint64Array%":typeof BigUint64Array>"u"?e:BigUint64Array,"%Boolean%":Boolean,"%DataView%":typeof DataView>"u"?e:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":r,"%eval%":eval,"%EvalError%":t,"%Float32Array%":typeof Float32Array>"u"?e:Float32Array,"%Float64Array%":typeof Float64Array>"u"?e:Float64Array,"%FinalizationRegistry%":typeof FinalizationRegistry>"u"?e:FinalizationRegistry,"%Function%":s,"%GeneratorFunction%":F,"%Int8Array%":typeof Int8Array>"u"?e:Int8Array,"%Int16Array%":typeof Int16Array>"u"?e:Int16Array,"%Int32Array%":typeof Int32Array>"u"?e:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":h&&b?b(b([][Symbol.iterator]())):e,"%JSON%":typeof JSON=="object"?JSON:e,"%Map%":typeof Map>"u"?e:Map,"%MapIteratorPrototype%":typeof Map>"u"||!h||!b?e:b(new Map()[Symbol.iterator]()),"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":typeof Promise>"u"?e:Promise,"%Proxy%":typeof Proxy>"u"?e:Proxy,"%RangeError%":a,"%ReferenceError%":n,"%Reflect%":typeof Reflect>"u"?e:Reflect,"%RegExp%":RegExp,"%Set%":typeof Set>"u"?e:Set,"%SetIteratorPrototype%":typeof Set>"u"||!h||!b?e:b(new Set()[Symbol.iterator]()),"%SharedArrayBuffer%":typeof SharedArrayBuffer>"u"?e:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":h&&b?b(""[Symbol.iterator]()):e,"%Symbol%":h?Symbol:e,"%SyntaxError%":i,"%ThrowTypeError%":p,"%TypedArray%":D,"%TypeError%":o,"%Uint8Array%":typeof Uint8Array>"u"?e:Uint8Array,"%Uint8ClampedArray%":typeof Uint8ClampedArray>"u"?e:Uint8ClampedArray,"%Uint16Array%":typeof Uint16Array>"u"?e:Uint16Array,"%Uint32Array%":typeof Uint32Array>"u"?e:Uint32Array,"%URIError%":u,"%WeakMap%":typeof WeakMap>"u"?e:WeakMap,"%WeakRef%":typeof WeakRef>"u"?e:WeakRef,"%WeakSet%":typeof WeakSet>"u"?e:WeakSet};if(b)try{null.error}catch(Q){var T=b(b(Q));N["%Error.prototype%"]=T}var E=function Q(W){var K;if(W==="%AsyncFunction%")K=l("async function () {}");else if(W==="%GeneratorFunction%")K=l("function* () {}");else if(W==="%AsyncGeneratorFunction%")K=l("async function* () {}");else if(W==="%AsyncGenerator%"){var re=Q("%AsyncGeneratorFunction%");re&&(K=re.prototype)}else if(W==="%AsyncIteratorPrototype%"){var U=Q("%AsyncGenerator%");U&&b&&(K=b(U.prototype))}return N[W]=K,K},R={__proto__:null,"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},C=ko(),j=UF(),L=C.call(Function.call,Array.prototype.concat),y=C.call(Function.apply,Array.prototype.splice),B=C.call(Function.call,String.prototype.replace),H=C.call(Function.call,String.prototype.slice),P=C.call(Function.call,RegExp.prototype.exec),$=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,X=/\\(\\)?/g,ie=function(W){var K=H(W,0,1),re=H(W,-1);if(K==="%"&&re!=="%")throw new i("invalid intrinsic syntax, expected closing `%`");if(re==="%"&&K!=="%")throw new i("invalid intrinsic syntax, expected opening `%`");var U=[];return B(W,$,function(M,A,w,S){U[U.length]=w?B(S,X,"$1"):A||M}),U},ee=function(W,K){var re=W,U;if(j(R,re)&&(U=R[re],re="%"+U[0]+"%"),j(N,re)){var M=N[re];if(M===F&&(M=E(re)),typeof M>"u"&&!K)throw new o("intrinsic "+W+" exists, but is not available. Please file an issue!");return{alias:U,name:re,value:M}}throw new i("intrinsic "+W+" does not exist!")};return gi=function(W,K){if(typeof W!="string"||W.length===0)throw new o("intrinsic name must be a non-empty string");if(arguments.length>1&&typeof K!="boolean")throw new o('"allowMissing" argument must be a boolean');if(P(/^%?[^%]*%?$/,W)===null)throw new i("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var re=ie(W),U=re.length>0?re[0]:"",M=ee("%"+U+"%",K),A=M.name,w=M.value,S=!1,J=M.alias;J&&(U=J[0],y(re,L([0,1],J)));for(var ne=1,q=!0;ne<re.length;ne+=1){var Z=re[ne],le=H(Z,0,1),se=H(Z,-1);if((le==='"'||le==="'"||le==="`"||se==='"'||se==="'"||se==="`")&&le!==se)throw new i("property names with quotes must have matching quotes");if((Z==="constructor"||!q)&&(S=!0),U+="."+Z,A="%"+U+"%",j(N,A))w=N[A];else if(w!=null){if(!(Z in w)){if(!K)throw new o("base intrinsic for "+W+" exists, but the property is not available.");return}if(c&&ne+1>=re.length){var de=c(w,Z);q=!!de,q&&"get"in de&&!("originalValue"in de.get)?w=de.get:w=w[Z]}else q=j(w,Z),w=w[Z];q&&!S&&(N[A]=w)}}return w},gi}var bi={exports:{}},vi,ss;function Ao(){if(ss)return vi;ss=1;var e=ka(),r=e("%Object.defineProperty%",!0)||!1;if(r)try{r({},"a",{value:1})}catch{r=!1}return vi=r,vi}var Di,ls;function wo(){if(ls)return Di;ls=1;var e=ka(),r=e("%Object.getOwnPropertyDescriptor%",!0);if(r)try{r([],"length")}catch{r=null}return Di=r,Di}var Ei,cs;function zF(){if(cs)return Ei;cs=1;var e=Ao(),r=lc(),t=En(),a=wo();return Ei=function(i,o,u){if(!i||typeof i!="object"&&typeof i!="function")throw new t("`obj` must be an object or a function`");if(typeof o!="string"&&typeof o!="symbol")throw new t("`property` must be a string or a symbol`");if(arguments.length>3&&typeof arguments[3]!="boolean"&&arguments[3]!==null)throw new t("`nonEnumerable`, if provided, must be a boolean or null");if(arguments.length>4&&typeof arguments[4]!="boolean"&&arguments[4]!==null)throw new t("`nonWritable`, if provided, must be a boolean or null");if(arguments.length>5&&typeof arguments[5]!="boolean"&&arguments[5]!==null)throw new t("`nonConfigurable`, if provided, must be a boolean or null");if(arguments.length>6&&typeof arguments[6]!="boolean")throw new t("`loose`, if provided, must be a boolean");var s=arguments.length>3?arguments[3]:null,l=arguments.length>4?arguments[4]:null,c=arguments.length>5?arguments[5]:null,d=arguments.length>6?arguments[6]:!1,p=!!a&&a(i,o);if(e)e(i,o,{configurable:c===null&&p?p.configurable:!c,enumerable:s===null&&p?p.enumerable:!s,value:u,writable:l===null&&p?p.writable:!l});else if(d||!s&&!l&&!c)i[o]=u;else throw new r("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.")},Ei}var ki,ds;function qF(){if(ds)return ki;ds=1;var e=Ao(),r=function(){return!!e};return r.hasArrayLengthDefineBug=function(){if(!e)return null;try{return e([],"length",{value:1}).length!==1}catch{return!0}},ki=r,ki}var Ai,ps;function KF(){if(ps)return Ai;ps=1;var e=ka(),r=zF(),t=qF()(),a=wo(),n=En(),i=e("%Math.floor%");return Ai=function(u,s){if(typeof u!="function")throw new n("`fn` is not a function");if(typeof s!="number"||s<0||s>4294967295||i(s)!==s)throw new n("`length` must be a positive 32-bit integer");var l=arguments.length>2&&!!arguments[2],c=!0,d=!0;if("length"in u&&a){var p=a(u,"length");p&&!p.configurable&&(c=!1),p&&!p.writable&&(d=!1)}return(c||d||!l)&&(t?r(u,"length",s,!0,!0):r(u,"length",s)),u},Ai}var ms;function cc(){return ms||(ms=1,function(e){var r=ko(),t=ka(),a=KF(),n=En(),i=t("%Function.prototype.apply%"),o=t("%Function.prototype.call%"),u=t("%Reflect.apply%",!0)||r.call(o,i),s=Ao(),l=t("%Math.max%");e.exports=function(p){if(typeof p!="function")throw new n("a function is required");var h=u(r,o,arguments);return a(h,1+l(0,p.length-(arguments.length-1)),!0)};var c=function(){return u(r,i,arguments)};s?s(e.exports,"apply",{value:c}):e.exports.apply=c}(bi)),bi.exports}var wi,Fs;function dc(){if(Fs)return wi;Fs=1;var e=ka(),r=cc(),t=r(e("String.prototype.indexOf"));return wi=function(n,i){var o=e(n,!!i);return typeof o=="function"&&t(n,".prototype.")>-1?r(o):o},wi}var Ci,hs;function JF(){if(hs)return Ci;hs=1;var e=Eo()(),r=dc(),t=r("Object.prototype.toString"),a=function(u){return e&&u&&typeof u=="object"&&Symbol.toStringTag in u?!1:t(u)==="[object Arguments]"},n=function(u){return a(u)?!0:u!==null&&typeof u=="object"&&typeof u.length=="number"&&u.length>=0&&t(u)!=="[object Array]"&&t(u.callee)==="[object Function]"},i=function(){return a(arguments)}();return a.isLegacyArguments=n,Ci=i?a:n,Ci}var Si,fs;function YF(){if(fs)return Si;fs=1;var e=Object.prototype.toString,r=Function.prototype.toString,t=/^\s*(?:function)?\*/,a=Eo()(),n=Object.getPrototypeOf,i=function(){if(!a)return!1;try{return Function("return function*() {}")()}catch{}},o;return Si=function(s){if(typeof s!="function")return!1;if(t.test(r.call(s)))return!0;if(!a){var l=e.call(s);return l==="[object GeneratorFunction]"}if(!n)return!1;if(typeof o>"u"){var c=i();o=c?n(c):!1}return n(s)===o},Si}var Ti,ys;function QF(){if(ys)return Ti;ys=1;var e=Function.prototype.toString,r=typeof Reflect=="object"&&Reflect!==null&&Reflect.apply,t,a;if(typeof r=="function"&&typeof Object.defineProperty=="function")try{t=Object.defineProperty({},"length",{get:function(){throw a}}),a={},r(function(){throw 42},null,t)}catch(N){N!==a&&(r=null)}else r=null;var n=/^\s*class\b/,i=function(T){try{var E=e.call(T);return n.test(E)}catch{return!1}},o=function(T){try{return i(T)?!1:(e.call(T),!0)}catch{return!1}},u=Object.prototype.toString,s="[object Object]",l="[object Function]",c="[object GeneratorFunction]",d="[object HTMLAllCollection]",p="[object HTML document.all class]",h="[object HTMLCollection]",g=typeof Symbol=="function"&&!!Symbol.toStringTag,b=!(0 in[,]),F=function(){return!1};if(typeof document=="object"){var D=document.all;u.call(D)===u.call(document.all)&&(F=function(T){if((b||!T)&&(typeof T>"u"||typeof T=="object"))try{var E=u.call(T);return(E===d||E===p||E===h||E===s)&&T("")==null}catch{}return!1})}return Ti=r?function(T){if(F(T))return!0;if(!T||typeof T!="function"&&typeof T!="object")return!1;try{r(T,null,t)}catch(E){if(E!==a)return!1}return!i(T)&&o(T)}:function(T){if(F(T))return!0;if(!T||typeof T!="function"&&typeof T!="object")return!1;if(g)return o(T);if(i(T))return!1;var E=u.call(T);return E!==l&&E!==c&&!/^\[object HTML/.test(E)?!1:o(T)},Ti}var Bi,gs;function XF(){if(gs)return Bi;gs=1;var e=QF(),r=Object.prototype.toString,t=Object.prototype.hasOwnProperty,a=function(s,l,c){for(var d=0,p=s.length;d<p;d++)t.call(s,d)&&(c==null?l(s[d],d,s):l.call(c,s[d],d,s))},n=function(s,l,c){for(var d=0,p=s.length;d<p;d++)c==null?l(s.charAt(d),d,s):l.call(c,s.charAt(d),d,s)},i=function(s,l,c){for(var d in s)t.call(s,d)&&(c==null?l(s[d],d,s):l.call(c,s[d],d,s))},o=function(s,l,c){if(!e(l))throw new TypeError("iterator must be a function");var d;arguments.length>=3&&(d=c),r.call(s)==="[object Array]"?a(s,l,d):typeof s=="string"?n(s,l,d):i(s,l,d)};return Bi=o,Bi}var Ni,bs;function ZF(){return bs||(bs=1,Ni=["Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","BigInt64Array","BigUint64Array"]),Ni}var Ri,vs;function eh(){if(vs)return Ri;vs=1;var e=ZF(),r=typeof globalThis>"u"?Y:globalThis;return Ri=function(){for(var a=[],n=0;n<e.length;n++)typeof r[e[n]]=="function"&&(a[a.length]=e[n]);return a},Ri}var Li,Ds;function pc(){if(Ds)return Li;Ds=1;var e=XF(),r=eh(),t=cc(),a=dc(),n=wo(),i=a("Object.prototype.toString"),o=Eo()(),u=typeof globalThis>"u"?Y:globalThis,s=r(),l=a("String.prototype.slice"),c=Object.getPrototypeOf,d=a("Array.prototype.indexOf",!0)||function(F,D){for(var N=0;N<F.length;N+=1)if(F[N]===D)return N;return-1},p={__proto__:null};o&&n&&c?e(s,function(b){var F=new u[b];if(Symbol.toStringTag in F){var D=c(F),N=n(D,Symbol.toStringTag);if(!N){var T=c(D);N=n(T,Symbol.toStringTag)}p["$"+b]=t(N.get)}}):e(s,function(b){var F=new u[b],D=F.slice||F.set;D&&(p["$"+b]=t(D))});var h=function(F){var D=!1;return e(p,function(N,T){if(!D)try{"$"+N(F)===T&&(D=l(T,1))}catch{}}),D},g=function(F){var D=!1;return e(p,function(N,T){if(!D)try{N(F),D=l(T,1)}catch{}}),D};return Li=function(F){if(!F||typeof F!="object")return!1;if(!o){var D=l(i(F),8,-1);return d(s,D)>-1?D:D!=="Object"?!1:g(F)}return n?h(F):null},Li}var Mi,Es;function rh(){if(Es)return Mi;Es=1;var e=pc();return Mi=function(t){return!!e(t)},Mi}var ks;function th(){return ks||(ks=1,function(e){var r=JF(),t=YF(),a=pc(),n=rh();function i(G){return G.call.bind(G)}var o=typeof BigInt<"u",u=typeof Symbol<"u",s=i(Object.prototype.toString),l=i(Number.prototype.valueOf),c=i(String.prototype.valueOf),d=i(Boolean.prototype.valueOf);if(o)var p=i(BigInt.prototype.valueOf);if(u)var h=i(Symbol.prototype.valueOf);function g(G,vt){if(typeof G!="object")return!1;try{return vt(G),!0}catch{return!1}}e.isArgumentsObject=r,e.isGeneratorFunction=t,e.isTypedArray=n;function b(G){return typeof Promise<"u"&&G instanceof Promise||G!==null&&typeof G=="object"&&typeof G.then=="function"&&typeof G.catch=="function"}e.isPromise=b;function F(G){return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?ArrayBuffer.isView(G):n(G)||A(G)}e.isArrayBufferView=F;function D(G){return a(G)==="Uint8Array"}e.isUint8Array=D;function N(G){return a(G)==="Uint8ClampedArray"}e.isUint8ClampedArray=N;function T(G){return a(G)==="Uint16Array"}e.isUint16Array=T;function E(G){return a(G)==="Uint32Array"}e.isUint32Array=E;function R(G){return a(G)==="Int8Array"}e.isInt8Array=R;function C(G){return a(G)==="Int16Array"}e.isInt16Array=C;function j(G){return a(G)==="Int32Array"}e.isInt32Array=j;function L(G){return a(G)==="Float32Array"}e.isFloat32Array=L;function y(G){return a(G)==="Float64Array"}e.isFloat64Array=y;function B(G){return a(G)==="BigInt64Array"}e.isBigInt64Array=B;function H(G){return a(G)==="BigUint64Array"}e.isBigUint64Array=H;function P(G){return s(G)==="[object Map]"}P.working=typeof Map<"u"&&P(new Map);function $(G){return typeof Map>"u"?!1:P.working?P(G):G instanceof Map}e.isMap=$;function X(G){return s(G)==="[object Set]"}X.working=typeof Set<"u"&&X(new Set);function ie(G){return typeof Set>"u"?!1:X.working?X(G):G instanceof Set}e.isSet=ie;function ee(G){return s(G)==="[object WeakMap]"}ee.working=typeof WeakMap<"u"&&ee(new WeakMap);function Q(G){return typeof WeakMap>"u"?!1:ee.working?ee(G):G instanceof WeakMap}e.isWeakMap=Q;function W(G){return s(G)==="[object WeakSet]"}W.working=typeof WeakSet<"u"&&W(new WeakSet);function K(G){return W(G)}e.isWeakSet=K;function re(G){return s(G)==="[object ArrayBuffer]"}re.working=typeof ArrayBuffer<"u"&&re(new ArrayBuffer);function U(G){return typeof ArrayBuffer>"u"?!1:re.working?re(G):G instanceof ArrayBuffer}e.isArrayBuffer=U;function M(G){return s(G)==="[object DataView]"}M.working=typeof ArrayBuffer<"u"&&typeof DataView<"u"&&M(new DataView(new ArrayBuffer(1),0,1));function A(G){return typeof DataView>"u"?!1:M.working?M(G):G instanceof DataView}e.isDataView=A;var w=typeof SharedArrayBuffer<"u"?SharedArrayBuffer:void 0;function S(G){return s(G)==="[object SharedArrayBuffer]"}function J(G){return typeof w>"u"?!1:(typeof S.working>"u"&&(S.working=S(new w)),S.working?S(G):G instanceof w)}e.isSharedArrayBuffer=J;function ne(G){return s(G)==="[object AsyncFunction]"}e.isAsyncFunction=ne;function q(G){return s(G)==="[object Map Iterator]"}e.isMapIterator=q;function Z(G){return s(G)==="[object Set Iterator]"}e.isSetIterator=Z;function le(G){return s(G)==="[object Generator]"}e.isGeneratorObject=le;function se(G){return s(G)==="[object WebAssembly.Module]"}e.isWebAssemblyCompiledModule=se;function de(G){return g(G,l)}e.isNumberObject=de;function Ye(G){return g(G,c)}e.isStringObject=Ye;function Oe(G){return g(G,d)}e.isBooleanObject=Oe;function ar(G){return o&&g(G,p)}e.isBigIntObject=ar;function Le(G){return u&&g(G,h)}e.isSymbolObject=Le;function gt(G){return de(G)||Ye(G)||Oe(G)||ar(G)||Le(G)}e.isBoxedPrimitive=gt;function bt(G){return typeof Uint8Array<"u"&&(U(G)||J(G))}e.isAnyArrayBuffer=bt,["isProxy","isExternal","isModuleNamespaceObject"].forEach(function(G){Object.defineProperty(e,G,{enumerable:!1,value:function(){throw new Error(G+" is not supported in userland")}})})}(ai)),ai}var Ii,As;function ah(){return As||(As=1,Ii=function(r){return r&&typeof r=="object"&&typeof r.copy=="function"&&typeof r.fill=="function"&&typeof r.readUInt8=="function"}),Ii}var Wa={exports:{}},ws;function nh(){return ws||(ws=1,typeof Object.create=="function"?Wa.exports=function(r,t){t&&(r.super_=t,r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}))}:Wa.exports=function(r,t){if(t){r.super_=t;var a=function(){};a.prototype=t.prototype,r.prototype=new a,r.prototype.constructor=r}}),Wa.exports}var Cs;function mc(){return Cs||(Cs=1,function(e){var r={},t=Object.getOwnPropertyDescriptors||function(w){for(var S=Object.keys(w),J={},ne=0;ne<S.length;ne++)J[S[ne]]=Object.getOwnPropertyDescriptor(w,S[ne]);return J},a=/%[sdj%]/g;e.format=function(A){if(!C(A)){for(var w=[],S=0;S<arguments.length;S++)w.push(u(arguments[S]));return w.join(" ")}for(var S=1,J=arguments,ne=J.length,q=String(A).replace(a,function(le){if(le==="%%")return"%";if(S>=ne)return le;switch(le){case"%s":return String(J[S++]);case"%d":return Number(J[S++]);case"%j":try{return JSON.stringify(J[S++])}catch{return"[Circular]"}default:return le}}),Z=J[S];S<ne;Z=J[++S])T(Z)||!B(Z)?q+=" "+Z:q+=" "+u(Z);return q},e.deprecate=function(A,w){if(typeof process<"u"&&process.noDeprecation===!0)return A;if(typeof process>"u")return function(){return e.deprecate(A,w).apply(this,arguments)};var S=!1;function J(){if(!S){if(process.throwDeprecation)throw new Error(w);process.traceDeprecation?console.trace(w):console.error(w),S=!0}return A.apply(this,arguments)}return J};var n={},i=/^$/;if(r.NODE_DEBUG){var o=r.NODE_DEBUG;o=o.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),i=new RegExp("^"+o+"$","i")}e.debuglog=function(A){if(A=A.toUpperCase(),!n[A])if(i.test(A)){var w=process.pid;n[A]=function(){var S=e.format.apply(e,arguments);console.error("%s %d: %s",A,w,S)}}else n[A]=function(){};return n[A]};function u(A,w){var S={seen:[],stylize:l};return arguments.length>=3&&(S.depth=arguments[2]),arguments.length>=4&&(S.colors=arguments[3]),N(w)?S.showHidden=w:w&&e._extend(S,w),L(S.showHidden)&&(S.showHidden=!1),L(S.depth)&&(S.depth=2),L(S.colors)&&(S.colors=!1),L(S.customInspect)&&(S.customInspect=!0),S.colors&&(S.stylize=s),d(S,A,S.depth)}e.inspect=u,u.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},u.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"};function s(A,w){var S=u.styles[w];return S?"\x1B["+u.colors[S][0]+"m"+A+"\x1B["+u.colors[S][1]+"m":A}function l(A,w){return A}function c(A){var w={};return A.forEach(function(S,J){w[S]=!0}),w}function d(A,w,S){if(A.customInspect&&w&&$(w.inspect)&&w.inspect!==e.inspect&&!(w.constructor&&w.constructor.prototype===w)){var J=w.inspect(S,A);return C(J)||(J=d(A,J,S)),J}var ne=p(A,w);if(ne)return ne;var q=Object.keys(w),Z=c(q);if(A.showHidden&&(q=Object.getOwnPropertyNames(w)),P(w)&&(q.indexOf("message")>=0||q.indexOf("description")>=0))return h(w);if(q.length===0){if($(w)){var le=w.name?": "+w.name:"";return A.stylize("[Function"+le+"]","special")}if(y(w))return A.stylize(RegExp.prototype.toString.call(w),"regexp");if(H(w))return A.stylize(Date.prototype.toString.call(w),"date");if(P(w))return h(w)}var se="",de=!1,Ye=["{","}"];if(D(w)&&(de=!0,Ye=["[","]"]),$(w)){var Oe=w.name?": "+w.name:"";se=" [Function"+Oe+"]"}if(y(w)&&(se=" "+RegExp.prototype.toString.call(w)),H(w)&&(se=" "+Date.prototype.toUTCString.call(w)),P(w)&&(se=" "+h(w)),q.length===0&&(!de||w.length==0))return Ye[0]+se+Ye[1];if(S<0)return y(w)?A.stylize(RegExp.prototype.toString.call(w),"regexp"):A.stylize("[Object]","special");A.seen.push(w);var ar;return de?ar=g(A,w,S,Z,q):ar=q.map(function(Le){return b(A,w,S,Z,Le,de)}),A.seen.pop(),F(ar,se,Ye)}function p(A,w){if(L(w))return A.stylize("undefined","undefined");if(C(w)){var S="'"+JSON.stringify(w).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return A.stylize(S,"string")}if(R(w))return A.stylize(""+w,"number");if(N(w))return A.stylize(""+w,"boolean");if(T(w))return A.stylize("null","null")}function h(A){return"["+Error.prototype.toString.call(A)+"]"}function g(A,w,S,J,ne){for(var q=[],Z=0,le=w.length;Z<le;++Z)K(w,String(Z))?q.push(b(A,w,S,J,String(Z),!0)):q.push("");return ne.forEach(function(se){se.match(/^\d+$/)||q.push(b(A,w,S,J,se,!0))}),q}function b(A,w,S,J,ne,q){var Z,le,se;if(se=Object.getOwnPropertyDescriptor(w,ne)||{value:w[ne]},se.get?se.set?le=A.stylize("[Getter/Setter]","special"):le=A.stylize("[Getter]","special"):se.set&&(le=A.stylize("[Setter]","special")),K(J,ne)||(Z="["+ne+"]"),le||(A.seen.indexOf(se.value)<0?(T(S)?le=d(A,se.value,null):le=d(A,se.value,S-1),le.indexOf(`
`)>-1&&(q?le=le.split(`
`).map(function(de){return"  "+de}).join(`
`).slice(2):le=`
`+le.split(`
`).map(function(de){return"   "+de}).join(`
`))):le=A.stylize("[Circular]","special")),L(Z)){if(q&&ne.match(/^\d+$/))return le;Z=JSON.stringify(""+ne),Z.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(Z=Z.slice(1,-1),Z=A.stylize(Z,"name")):(Z=Z.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),Z=A.stylize(Z,"string"))}return Z+": "+le}function F(A,w,S){var J=A.reduce(function(ne,q){return q.indexOf(`
`)>=0,ne+q.replace(/\u001b\[\d\d?m/g,"").length+1},0);return J>60?S[0]+(w===""?"":w+`
 `)+" "+A.join(`,
  `)+" "+S[1]:S[0]+w+" "+A.join(", ")+" "+S[1]}e.types=th();function D(A){return Array.isArray(A)}e.isArray=D;function N(A){return typeof A=="boolean"}e.isBoolean=N;function T(A){return A===null}e.isNull=T;function E(A){return A==null}e.isNullOrUndefined=E;function R(A){return typeof A=="number"}e.isNumber=R;function C(A){return typeof A=="string"}e.isString=C;function j(A){return typeof A=="symbol"}e.isSymbol=j;function L(A){return A===void 0}e.isUndefined=L;function y(A){return B(A)&&ie(A)==="[object RegExp]"}e.isRegExp=y,e.types.isRegExp=y;function B(A){return typeof A=="object"&&A!==null}e.isObject=B;function H(A){return B(A)&&ie(A)==="[object Date]"}e.isDate=H,e.types.isDate=H;function P(A){return B(A)&&(ie(A)==="[object Error]"||A instanceof Error)}e.isError=P,e.types.isNativeError=P;function $(A){return typeof A=="function"}e.isFunction=$;function X(A){return A===null||typeof A=="boolean"||typeof A=="number"||typeof A=="string"||typeof A=="symbol"||typeof A>"u"}e.isPrimitive=X,e.isBuffer=ah();function ie(A){return Object.prototype.toString.call(A)}function ee(A){return A<10?"0"+A.toString(10):A.toString(10)}var Q=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function W(){var A=new Date,w=[ee(A.getHours()),ee(A.getMinutes()),ee(A.getSeconds())].join(":");return[A.getDate(),Q[A.getMonth()],w].join(" ")}e.log=function(){console.log("%s - %s",W(),e.format.apply(e,arguments))},e.inherits=nh(),e._extend=function(A,w){if(!w||!B(w))return A;for(var S=Object.keys(w),J=S.length;J--;)A[S[J]]=w[S[J]];return A};function K(A,w){return Object.prototype.hasOwnProperty.call(A,w)}var re=typeof Symbol<"u"?Symbol("util.promisify.custom"):void 0;e.promisify=function(w){if(typeof w!="function")throw new TypeError('The "original" argument must be of type Function');if(re&&w[re]){var S=w[re];if(typeof S!="function")throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(S,re,{value:S,enumerable:!1,writable:!1,configurable:!0}),S}function S(){for(var J,ne,q=new Promise(function(se,de){J=se,ne=de}),Z=[],le=0;le<arguments.length;le++)Z.push(arguments[le]);Z.push(function(se,de){se?ne(se):J(de)});try{w.apply(this,Z)}catch(se){ne(se)}return q}return Object.setPrototypeOf(S,Object.getPrototypeOf(w)),re&&Object.defineProperty(S,re,{value:S,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(S,t(w))},e.promisify.custom=re;function U(A,w){if(!A){var S=new Error("Promise was rejected with a falsy value");S.reason=A,A=S}return w(A)}function M(A){if(typeof A!="function")throw new TypeError('The "original" argument must be of type Function');function w(){for(var S=[],J=0;J<arguments.length;J++)S.push(arguments[J]);var ne=S.pop();if(typeof ne!="function")throw new TypeError("The last argument must be of type Function");var q=this,Z=function(){return ne.apply(q,arguments)};A.apply(this,S).then(function(le){process.nextTick(Z.bind(null,null,le))},function(le){process.nextTick(U.bind(null,le,Z))})}return Object.setPrototypeOf(w,Object.getPrototypeOf(A)),Object.defineProperties(w,t(A)),w}e.callbackify=M}(ti)),ti}Do.TextEncoder=typeof TextEncoder<"u"?TextEncoder:mc().TextEncoder;Do.TextDecoder=typeof TextDecoder<"u"?TextDecoder:mc().TextDecoder;Object.defineProperty(yr,"__esModule",{value:!0});yr.getArrayBuffer=yr.decodeBuffer=yr.encodeBuffer=void 0;var Fc=Do;function ih(e){var r=new Fc.TextEncoder,t=r.encode(e);return hc(t)}yr.encodeBuffer=ih;function oh(e,r){var t=new Fc.TextDecoder(r);return t.decode(e)}yr.decodeBuffer=oh;function hc(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}yr.getArrayBuffer=hc;var kn={};Object.defineProperty(kn,"__esModule",{value:!0});kn.uuidv4=void 0;function uh(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var r=Math.random()*16|0,t=e=="x"?r:r&3|8;return t.toString(16)})}kn.uuidv4=uh;var xi=Y&&Y.__awaiter||function(e,r,t,a){function n(i){return i instanceof t?i:new t(function(o){o(i)})}return new(t||(t=Promise))(function(i,o){function u(c){try{l(a.next(c))}catch(d){o(d)}}function s(c){try{l(a.throw(c))}catch(d){o(d)}}function l(c){c.done?i(c.value):n(c.value).then(u,s)}l((a=a.apply(e,r||[])).next())})},Oi=Y&&Y.__generator||function(e,r){var t={label:0,sent:function(){if(i[0]&1)throw i[1];return i[1]},trys:[],ops:[]},a,n,i,o;return o={next:u(0),throw:u(1),return:u(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function u(l){return function(c){return s([l,c])}}function s(l){if(a)throw new TypeError("Generator is already executing.");for(;t;)try{if(a=1,n&&(i=l[0]&2?n.return:l[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,l[1])).done)return i;switch(n=0,i&&(l=[l[0]&2,i.value]),l[0]){case 0:case 1:i=l;break;case 4:return t.label++,{value:l[1],done:!1};case 5:t.label++,n=l[1],l=[0];continue;case 7:l=t.ops.pop(),t.trys.pop();continue;default:if(i=t.trys,!(i=i.length>0&&i[i.length-1])&&(l[0]===6||l[0]===2)){t=0;continue}if(l[0]===3&&(!i||l[1]>i[0]&&l[1]<i[3])){t.label=l[1];break}if(l[0]===6&&t.label<i[1]){t.label=i[1],i=l;break}if(i&&t.label<i[2]){t.label=i[2],t.ops.push(l);break}i[2]&&t.ops.pop(),t.trys.pop();continue}l=r.call(e,t)}catch(c){l=[6,c],n=0}finally{a=i=0}if(l[0]&5)throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}};Object.defineProperty(ft,"__esModule",{value:!0});ft.IsomorphicRequest=void 0;var sh=pr,_i=Or,Ss=yr,lh=kn,ch=function(){function e(r,t){t===void 0&&(t={});var a=new ArrayBuffer(0);if(this._bodyUsed=!1,r instanceof e){this.id=r.id,this.url=r.url,this.method=r.method,this.headers=r.headers,this.credentials=r.credentials,this._body=r._body||a;return}this.id=lh.uuidv4(),this.url=r,this.method=t.method||"GET",this.headers=new sh.Headers(t.headers),this.credentials=t.credentials||"same-origin",this._body=t.body||a}return Object.defineProperty(e.prototype,"bodyUsed",{get:function(){return this._bodyUsed},enumerable:!1,configurable:!0}),e.prototype.text=function(){return xi(this,void 0,void 0,function(){return Oi(this,function(r){return _i.invariant(!this.bodyUsed,'Failed to execute "text" on "IsomorphicRequest": body buffer already read'),this._bodyUsed=!0,[2,Ss.decodeBuffer(this._body)]})})},e.prototype.json=function(){return xi(this,void 0,void 0,function(){var r;return Oi(this,function(t){return _i.invariant(!this.bodyUsed,'Failed to execute "json" on "IsomorphicRequest": body buffer already read'),this._bodyUsed=!0,r=Ss.decodeBuffer(this._body),[2,JSON.parse(r)]})})},e.prototype.arrayBuffer=function(){return xi(this,void 0,void 0,function(){return Oi(this,function(r){return _i.invariant(!this.bodyUsed,'Failed to execute "arrayBuffer" on "IsomorphicRequest": body buffer already read'),this._bodyUsed=!0,[2,this._body]})})},e.prototype.clone=function(){return new e(this)},e}();ft.IsomorphicRequest=ch;var Ot={},An={},dh=Y&&Y.__awaiter||function(e,r,t,a){function n(i){return i instanceof t?i:new t(function(o){o(i)})}return new(t||(t=Promise))(function(i,o){function u(c){try{l(a.next(c))}catch(d){o(d)}}function s(c){try{l(a.throw(c))}catch(d){o(d)}}function l(c){c.done?i(c.value):n(c.value).then(u,s)}l((a=a.apply(e,r||[])).next())})},ph=Y&&Y.__generator||function(e,r){var t={label:0,sent:function(){if(i[0]&1)throw i[1];return i[1]},trys:[],ops:[]},a,n,i,o;return o={next:u(0),throw:u(1),return:u(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function u(l){return function(c){return s([l,c])}}function s(l){if(a)throw new TypeError("Generator is already executing.");for(;t;)try{if(a=1,n&&(i=l[0]&2?n.return:l[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,l[1])).done)return i;switch(n=0,i&&(l=[l[0]&2,i.value]),l[0]){case 0:case 1:i=l;break;case 4:return t.label++,{value:l[1],done:!1};case 5:t.label++,n=l[1],l=[0];continue;case 7:l=t.ops.pop(),t.trys.pop();continue;default:if(i=t.trys,!(i=i.length>0&&i[i.length-1])&&(l[0]===6||l[0]===2)){t=0;continue}if(l[0]===3&&(!i||l[1]>i[0]&&l[1]<i[3])){t.label=l[1];break}if(l[0]===6&&t.label<i[1]){t.label=i[1],i=l;break}if(i&&t.label<i[2]){t.label=i[2],t.ops.push(l);break}i[2]&&t.ops.pop(),t.trys.pop();continue}l=r.call(e,t)}catch(c){l=[6,c],n=0}finally{a=i=0}if(l[0]&5)throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}};Object.defineProperty(An,"__esModule",{value:!0});An.createLazyCallback=void 0;function mh(e){var r=this;e===void 0&&(e={});var t=0,a,n,i=new Promise(function(u){n=u}).finally(function(){clearTimeout(a)}),o=function(){for(var u,s=[],l=0;l<arguments.length;l++)s[l]=arguments[l];e.maxCalls&&t>=e.maxCalls&&((u=e.maxCallsCallback)===null||u===void 0||u.call(e)),n(s),t++};return o.invoked=function(){return dh(r,void 0,void 0,function(){return ph(this,function(u){return a=setTimeout(function(){n([])},0),[2,i]})})},o}An.createLazyCallback=mh;var Fh=Y&&Y.__extends||function(){var e=function(r,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,n){a.__proto__=n}||function(a,n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(a[i]=n[i])},e(r,t)};return function(r,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");e(r,t);function a(){this.constructor=r}r.prototype=t===null?Object.create(t):(a.prototype=t.prototype,new a)}}();Object.defineProperty(Ot,"__esModule",{value:!0});Ot.InteractiveIsomorphicRequest=void 0;var hh=Or,fh=ft,yh=An,gh=function(e){Fh(r,e);function r(t){var a=e.call(this,t)||this;return a.respondWith=yh.createLazyCallback({maxCalls:1,maxCallsCallback:function(){hh.invariant(!1,'Failed to respond to "%s %s" request: the "request" event has already been responded to.',a.method,a.url.href)}}),a}return r}(fh.IsomorphicRequest);Ot.InteractiveIsomorphicRequest=gh;var Aa={};Object.defineProperty(Aa,"__esModule",{value:!0});Aa.getCleanUrl=void 0;function bh(e,r){return r===void 0&&(r=!0),[r&&e.origin,e.pathname].filter(Boolean).join("")}Aa.getCleanUrl=bh;(function(e){var r=Y&&Y.__createBinding||(Object.create?function(i,o,u,s){s===void 0&&(s=u),Object.defineProperty(i,s,{enumerable:!0,get:function(){return o[u]}})}:function(i,o,u,s){s===void 0&&(s=u),i[s]=o[u]}),t=Y&&Y.__exportStar||function(i,o){for(var u in i)u!=="default"&&!Object.prototype.hasOwnProperty.call(o,u)&&r(o,i,u)};Object.defineProperty(e,"__esModule",{value:!0}),e.decodeBuffer=e.encodeBuffer=e.getCleanUrl=void 0,t(xt,e),t(Ea,e),t(Dn,e),t(ft,e),t(Ot,e);var a=Aa;Object.defineProperty(e,"getCleanUrl",{enumerable:!0,get:function(){return a.getCleanUrl}});var n=yr;Object.defineProperty(e,"encodeBuffer",{enumerable:!0,get:function(){return n.encodeBuffer}}),Object.defineProperty(e,"decodeBuffer",{enumerable:!0,get:function(){return n.decodeBuffer}})})(gn);var Co={},fc={},wa={exports:{}},At={decodeValues:!0,map:!1,silent:!1};function Xi(e){return typeof e=="string"&&!!e.trim()}function Zi(e,r){var t=e.split(";").filter(Xi),a=t.shift(),n=vh(a),i=n.name,o=n.value;r=r?Object.assign({},At,r):At;try{o=r.decodeValues?decodeURIComponent(o):o}catch(s){console.error("set-cookie-parser encountered an error while decoding a cookie with value '"+o+"'. Set options.decodeValues to false to disable this feature.",s)}var u={name:i,value:o};return t.forEach(function(s){var l=s.split("="),c=l.shift().trimLeft().toLowerCase(),d=l.join("=");c==="expires"?u.expires=new Date(d):c==="max-age"?u.maxAge=parseInt(d,10):c==="secure"?u.secure=!0:c==="httponly"?u.httpOnly=!0:c==="samesite"?u.sameSite=d:u[c]=d}),u}function vh(e){var r="",t="",a=e.split("=");return a.length>1?(r=a.shift(),t=a.join("=")):t=e,{name:r,value:t}}function yc(e,r){if(r=r?Object.assign({},At,r):At,!e)return r.map?{}:[];if(e.headers)if(typeof e.headers.getSetCookie=="function")e=e.headers.getSetCookie();else if(e.headers["set-cookie"])e=e.headers["set-cookie"];else{var t=e.headers[Object.keys(e.headers).find(function(n){return n.toLowerCase()==="set-cookie"})];!t&&e.headers.cookie&&!r.silent&&console.warn("Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."),e=t}if(Array.isArray(e)||(e=[e]),r=r?Object.assign({},At,r):At,r.map){var a={};return e.filter(Xi).reduce(function(n,i){var o=Zi(i,r);return n[o.name]=o,n},a)}else return e.filter(Xi).map(function(n){return Zi(n,r)})}function Dh(e){if(Array.isArray(e))return e;if(typeof e!="string")return[];var r=[],t=0,a,n,i,o,u;function s(){for(;t<e.length&&/\s/.test(e.charAt(t));)t+=1;return t<e.length}function l(){return n=e.charAt(t),n!=="="&&n!==";"&&n!==","}for(;t<e.length;){for(a=t,u=!1;s();)if(n=e.charAt(t),n===","){for(i=t,t+=1,s(),o=t;t<e.length&&l();)t+=1;t<e.length&&e.charAt(t)==="="?(u=!0,t=o,r.push(e.substring(a,i)),a=t):t=i+1}else t+=1;(!u||t>=e.length)&&r.push(e.substring(a,e.length))}return r}wa.exports=yc;wa.exports.parse=yc;wa.exports.parseString=Zi;wa.exports.splitCookiesString=Dh;var Eh=wa.exports;(function(e){var r=Y&&Y.__rest||function(i,o){var u={};for(var s in i)Object.prototype.hasOwnProperty.call(i,s)&&o.indexOf(s)<0&&(u[s]=i[s]);if(i!=null&&typeof Object.getOwnPropertySymbols=="function")for(var l=0,s=Object.getOwnPropertySymbols(i);l<s.length;l++)o.indexOf(s[l])<0&&Object.prototype.propertyIsEnumerable.call(i,s[l])&&(u[s[l]]=i[s[l]]);return u};Object.defineProperty(e,"__esModule",{value:!0}),e.store=e.PERSISTENCY_KEY=void 0;const t=Eh;e.PERSISTENCY_KEY="MSW_COOKIE_STORE";function a(){try{if(localStorage==null)return!1;const i=e.PERSISTENCY_KEY+"_test";return localStorage.setItem(i,"test"),localStorage.getItem(i),localStorage.removeItem(i),!0}catch{return!1}}class n{constructor(){this.store=new Map}add(o,u){if(o.credentials==="omit")return;const s=new URL(o.url),l=u.headers.get("set-cookie");if(!l)return;const c=Date.now(),d=t.parse(l).map(h=>{var{maxAge:g}=h,b=r(h,["maxAge"]);return Object.assign(Object.assign({},b),{expires:g===void 0?b.expires:new Date(c+g*1e3),maxAge:g})}),p=this.store.get(s.origin)||new Map;d.forEach(h=>{this.store.set(s.origin,p.set(h.name,h))})}get(o){this.deleteExpiredCookies();const u=new URL(o.url),s=this.store.get(u.origin)||new Map;switch(o.credentials){case"include":return typeof document>"u"||t.parse(document.cookie).forEach(c=>{s.set(c.name,c)}),s;case"same-origin":return s;default:return new Map}}getAll(){return this.deleteExpiredCookies(),this.store}deleteAll(o){const u=new URL(o.url);this.store.delete(u.origin)}clear(){this.store.clear()}hydrate(){if(!a())return;const o=localStorage.getItem(e.PERSISTENCY_KEY);if(o)try{JSON.parse(o).forEach(([s,l])=>{this.store.set(s,new Map(l.map(c=>{var[d,p]=c,{expires:h}=p,g=r(p,["expires"]);return[d,h===void 0?g:Object.assign(Object.assign({},g),{expires:new Date(h)})]})))})}catch(u){console.warn(`
[virtual-cookie] Failed to parse a stored cookie from the localStorage (key "${e.PERSISTENCY_KEY}").

Stored value:
${localStorage.getItem(e.PERSISTENCY_KEY)}

Thrown exception:
${u}

Invalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`),localStorage.removeItem(e.PERSISTENCY_KEY)}}persist(){if(!a())return;const o=Array.from(this.store.entries()).map(([u,s])=>[u,Array.from(s.entries())]);localStorage.setItem(e.PERSISTENCY_KEY,JSON.stringify(o))}deleteExpiredCookies(){const o=Date.now();this.store.forEach((u,s)=>{u.forEach(({expires:l,name:c})=>{l!==void 0&&l.getTime()<=o&&u.delete(c)}),u.size===0&&this.store.delete(s)})}}e.store=new n})(fc);(function(e){var r=Y&&Y.__createBinding||(Object.create?function(a,n,i,o){o===void 0&&(o=i),Object.defineProperty(a,o,{enumerable:!0,get:function(){return n[i]}})}:function(a,n,i,o){o===void 0&&(o=i),a[o]=n[i]}),t=Y&&Y.__exportStar||function(a,n){for(var i in a)i!=="default"&&!Object.prototype.hasOwnProperty.call(n,i)&&r(n,a,i)};Object.defineProperty(e,"__esModule",{value:!0}),t(fc,e)})(Co);var Pi,Ts;function kh(){return Ts||(Ts=1,Pi=function(){function e(r,t,a,n,i){return r<t||a<t?r>a?a+1:r+1:n===i?t:t+1}return function(r,t){if(r===t)return 0;if(r.length>t.length){var a=r;r=t,t=a}for(var n=r.length,i=t.length;n>0&&r.charCodeAt(n-1)===t.charCodeAt(i-1);)n--,i--;for(var o=0;o<n&&r.charCodeAt(o)===t.charCodeAt(o);)o++;if(n-=o,i-=o,n===0||i<3)return i;var u=0,s,l,c,d,p,h,g,b,F,D,N,T,E=[];for(s=0;s<n;s++)E.push(s+1),E.push(r.charCodeAt(o+s));for(var R=E.length-1;u<i-3;)for(F=t.charCodeAt(o+(l=u)),D=t.charCodeAt(o+(c=u+1)),N=t.charCodeAt(o+(d=u+2)),T=t.charCodeAt(o+(p=u+3)),h=u+=4,s=0;s<R;s+=2)g=E[s],b=E[s+1],l=e(g,l,c,F,b),c=e(l,c,d,D,b),d=e(c,d,p,N,b),h=e(d,p,h,T,b),E[s]=h,p=d,d=c,c=l,l=g;for(;u<i;)for(F=t.charCodeAt(o+(l=u)),h=++u,s=0;s<R;s+=2)g=E[s],E[s]=h=e(g,l,h,F,E[s+1]),l=g;return h}}()),Pi}const Ah="16.9.0",wh=Object.freeze({major:16,minor:9,patch:0,preReleaseTag:null});function he(e,r){if(!!!e)throw new Error(r)}function nr(e){return typeof e?.then=="function"}function ir(e){return typeof e=="object"&&e!==null}function _e(e,r){if(!!!e)throw new Error(r??"Unexpected invariant triggered.")}const Ch=/\r\n|[\n\r]/g;function nn(e,r){let t=0,a=1;for(const n of e.body.matchAll(Ch)){if(typeof n.index=="number"||_e(!1),n.index>=r)break;t=n.index+n[0].length,a+=1}return{line:a,column:r+1-t}}function gc(e){return So(e.source,nn(e.source,e.start))}function So(e,r){const t=e.locationOffset.column-1,a="".padStart(t)+e.body,n=r.line-1,i=e.locationOffset.line-1,o=r.line+i,u=r.line===1?t:0,s=r.column+u,l=`${e.name}:${o}:${s}
`,c=a.split(/\r\n|[\n\r]/g),d=c[n];if(d.length>120){const p=Math.floor(s/80),h=s%80,g=[];for(let b=0;b<d.length;b+=80)g.push(d.slice(b,b+80));return l+Bs([[`${o} |`,g[0]],...g.slice(1,p+1).map(b=>["|",b]),["|","^".padStart(h)],["|",g[p+1]]])}return l+Bs([[`${o-1} |`,c[n-1]],[`${o} |`,d],["|","^".padStart(s)],[`${o+1} |`,c[n+1]]])}function Bs(e){const r=e.filter(([a,n])=>n!==void 0),t=Math.max(...r.map(([a])=>a.length));return r.map(([a,n])=>a.padStart(t)+(n?" "+n:"")).join(`
`)}function Sh(e){const r=e[0];return r==null||"kind"in r||"length"in r?{nodes:r,source:e[1],positions:e[2],path:e[3],originalError:e[4],extensions:e[5]}:r}class x extends Error{constructor(r,...t){var a,n,i;const{nodes:o,source:u,positions:s,path:l,originalError:c,extensions:d}=Sh(t);super(r),this.name="GraphQLError",this.path=l??void 0,this.originalError=c??void 0,this.nodes=Ns(Array.isArray(o)?o:o?[o]:void 0);const p=Ns((a=this.nodes)===null||a===void 0?void 0:a.map(g=>g.loc).filter(g=>g!=null));this.source=u??(p==null||(n=p[0])===null||n===void 0?void 0:n.source),this.positions=s??p?.map(g=>g.start),this.locations=s&&u?s.map(g=>nn(u,g)):p?.map(g=>nn(g.source,g.start));const h=ir(c?.extensions)?c?.extensions:void 0;this.extensions=(i=d??h)!==null&&i!==void 0?i:Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),c!=null&&c.stack?Object.defineProperty(this,"stack",{value:c.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,x):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let r=this.message;if(this.nodes)for(const t of this.nodes)t.loc&&(r+=`

`+gc(t.loc));else if(this.source&&this.locations)for(const t of this.locations)r+=`

`+So(this.source,t);return r}toJSON(){const r={message:this.message};return this.locations!=null&&(r.locations=this.locations),this.path!=null&&(r.path=this.path),this.extensions!=null&&Object.keys(this.extensions).length>0&&(r.extensions=this.extensions),r}}function Ns(e){return e===void 0||e.length===0?void 0:e}function Th(e){return e.toString()}function Bh(e){return e.toJSON()}function je(e,r,t){return new x(`Syntax Error: ${t}`,{source:e,positions:[r]})}class bc{constructor(r,t,a){this.start=r.start,this.end=t.end,this.startToken=r,this.endToken=t,this.source=a}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class To{constructor(r,t,a,n,i,o){this.kind=r,this.start=t,this.end=a,this.line=n,this.column=i,this.value=o,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const vc={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},Nh=new Set(Object.keys(vc));function eo(e){const r=e?.kind;return typeof r=="string"&&Nh.has(r)}var $e;(function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"})($e||($e={}));var oe;(function(e){e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION"})(oe||(oe={}));var v;(function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"})(v||(v={}));function ro(e){return e===9||e===32}function Fa(e){return e>=48&&e<=57}function Dc(e){return e>=97&&e<=122||e>=65&&e<=90}function Bo(e){return Dc(e)||e===95}function Ec(e){return Dc(e)||Fa(e)||e===95}function Rh(e){var r;let t=Number.MAX_SAFE_INTEGER,a=null,n=-1;for(let o=0;o<e.length;++o){var i;const u=e[o],s=Lh(u);s!==u.length&&(a=(i=a)!==null&&i!==void 0?i:o,n=o,o!==0&&s<t&&(t=s))}return e.map((o,u)=>u===0?o:o.slice(t)).slice((r=a)!==null&&r!==void 0?r:0,n+1)}function Lh(e){let r=0;for(;r<e.length&&ro(e.charCodeAt(r));)++r;return r}function Mh(e){if(e==="")return!0;let r=!0,t=!1,a=!0,n=!1;for(let i=0;i<e.length;++i)switch(e.codePointAt(i)){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 11:case 12:case 14:case 15:return!1;case 13:return!1;case 10:if(r&&!n)return!1;n=!0,r=!0,t=!1;break;case 9:case 32:t||(t=r);break;default:a&&(a=t),r=!1}return!(r||a&&n)}function kc(e,r){const t=e.replace(/"""/g,'\\"""'),a=t.split(/\r\n|[\n\r]/g),n=a.length===1,i=a.length>1&&a.slice(1).every(h=>h.length===0||ro(h.charCodeAt(0))),o=t.endsWith('\\"""'),u=e.endsWith('"')&&!o,s=e.endsWith("\\"),l=u||s,c=!(r!=null&&r.minimize)&&(!n||e.length>70||l||i||o);let d="";const p=n&&ro(e.charCodeAt(0));return(c&&!p||i)&&(d+=`
`),d+=t,(c||l)&&(d+=`
`),'"""'+d+'"""'}var O;(function(e){e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment"})(O||(O={}));class No{constructor(r){const t=new To(O.SOF,0,0,0,0);this.source=r,this.lastToken=t,this.token=t,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){return this.lastToken=this.token,this.token=this.lookahead()}lookahead(){let r=this.token;if(r.kind!==O.EOF)do if(r.next)r=r.next;else{const t=Ih(this,r.end);r.next=t,t.prev=r,r=t}while(r.kind===O.COMMENT);return r}}function Ac(e){return e===O.BANG||e===O.DOLLAR||e===O.AMP||e===O.PAREN_L||e===O.PAREN_R||e===O.SPREAD||e===O.COLON||e===O.EQUALS||e===O.AT||e===O.BRACKET_L||e===O.BRACKET_R||e===O.BRACE_L||e===O.PIPE||e===O.BRACE_R}function _t(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function wn(e,r){return wc(e.charCodeAt(r))&&Cc(e.charCodeAt(r+1))}function wc(e){return e>=55296&&e<=56319}function Cc(e){return e>=56320&&e<=57343}function Ft(e,r){const t=e.source.body.codePointAt(r);if(t===void 0)return O.EOF;if(t>=32&&t<=126){const a=String.fromCodePoint(t);return a==='"'?`'"'`:`"${a}"`}return"U+"+t.toString(16).toUpperCase().padStart(4,"0")}function Ge(e,r,t,a,n){const i=e.line,o=1+t-e.lineStart;return new To(r,t,a,i,o,n)}function Ih(e,r){const t=e.source.body,a=t.length;let n=r;for(;n<a;){const i=t.charCodeAt(n);switch(i){case 65279:case 9:case 32:case 44:++n;continue;case 10:++n,++e.line,e.lineStart=n;continue;case 13:t.charCodeAt(n+1)===10?n+=2:++n,++e.line,e.lineStart=n;continue;case 35:return xh(e,n);case 33:return Ge(e,O.BANG,n,n+1);case 36:return Ge(e,O.DOLLAR,n,n+1);case 38:return Ge(e,O.AMP,n,n+1);case 40:return Ge(e,O.PAREN_L,n,n+1);case 41:return Ge(e,O.PAREN_R,n,n+1);case 46:if(t.charCodeAt(n+1)===46&&t.charCodeAt(n+2)===46)return Ge(e,O.SPREAD,n,n+3);break;case 58:return Ge(e,O.COLON,n,n+1);case 61:return Ge(e,O.EQUALS,n,n+1);case 64:return Ge(e,O.AT,n,n+1);case 91:return Ge(e,O.BRACKET_L,n,n+1);case 93:return Ge(e,O.BRACKET_R,n,n+1);case 123:return Ge(e,O.BRACE_L,n,n+1);case 124:return Ge(e,O.PIPE,n,n+1);case 125:return Ge(e,O.BRACE_R,n,n+1);case 34:return t.charCodeAt(n+1)===34&&t.charCodeAt(n+2)===34?jh(e,n):_h(e,n)}if(Fa(i)||i===45)return Oh(e,n,i);if(Bo(i))return $h(e,n);throw je(e.source,n,i===39?`Unexpected single quote character ('), did you mean to use a double quote (")?`:_t(i)||wn(t,n)?`Unexpected character: ${Ft(e,n)}.`:`Invalid character: ${Ft(e,n)}.`)}return Ge(e,O.EOF,a,a)}function xh(e,r){const t=e.source.body,a=t.length;let n=r+1;for(;n<a;){const i=t.charCodeAt(n);if(i===10||i===13)break;if(_t(i))++n;else if(wn(t,n))n+=2;else break}return Ge(e,O.COMMENT,r,n,t.slice(r+1,n))}function Oh(e,r,t){const a=e.source.body;let n=r,i=t,o=!1;if(i===45&&(i=a.charCodeAt(++n)),i===48){if(i=a.charCodeAt(++n),Fa(i))throw je(e.source,n,`Invalid number, unexpected digit after 0: ${Ft(e,n)}.`)}else n=Gi(e,n,i),i=a.charCodeAt(n);if(i===46&&(o=!0,i=a.charCodeAt(++n),n=Gi(e,n,i),i=a.charCodeAt(n)),(i===69||i===101)&&(o=!0,i=a.charCodeAt(++n),(i===43||i===45)&&(i=a.charCodeAt(++n)),n=Gi(e,n,i),i=a.charCodeAt(n)),i===46||Bo(i))throw je(e.source,n,`Invalid number, expected digit but got: ${Ft(e,n)}.`);return Ge(e,o?O.FLOAT:O.INT,r,n,a.slice(r,n))}function Gi(e,r,t){if(!Fa(t))throw je(e.source,r,`Invalid number, expected digit but got: ${Ft(e,r)}.`);const a=e.source.body;let n=r+1;for(;Fa(a.charCodeAt(n));)++n;return n}function _h(e,r){const t=e.source.body,a=t.length;let n=r+1,i=n,o="";for(;n<a;){const u=t.charCodeAt(n);if(u===34)return o+=t.slice(i,n),Ge(e,O.STRING,r,n+1,o);if(u===92){o+=t.slice(i,n);const s=t.charCodeAt(n+1)===117?t.charCodeAt(n+2)===123?Ph(e,n):Gh(e,n):Hh(e,n);o+=s.value,n+=s.size,i=n;continue}if(u===10||u===13)break;if(_t(u))++n;else if(wn(t,n))n+=2;else throw je(e.source,n,`Invalid character within String: ${Ft(e,n)}.`)}throw je(e.source,n,"Unterminated string.")}function Ph(e,r){const t=e.source.body;let a=0,n=3;for(;n<12;){const i=t.charCodeAt(r+n++);if(i===125){if(n<5||!_t(a))break;return{value:String.fromCodePoint(a),size:n}}if(a=a<<4|sa(i),a<0)break}throw je(e.source,r,`Invalid Unicode escape sequence: "${t.slice(r,r+n)}".`)}function Gh(e,r){const t=e.source.body,a=Rs(t,r+2);if(_t(a))return{value:String.fromCodePoint(a),size:6};if(wc(a)&&t.charCodeAt(r+6)===92&&t.charCodeAt(r+7)===117){const n=Rs(t,r+8);if(Cc(n))return{value:String.fromCodePoint(a,n),size:12}}throw je(e.source,r,`Invalid Unicode escape sequence: "${t.slice(r,r+6)}".`)}function Rs(e,r){return sa(e.charCodeAt(r))<<12|sa(e.charCodeAt(r+1))<<8|sa(e.charCodeAt(r+2))<<4|sa(e.charCodeAt(r+3))}function sa(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function Hh(e,r){const t=e.source.body;switch(t.charCodeAt(r+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:`
`,size:2};case 114:return{value:"\r",size:2};case 116:return{value:"	",size:2}}throw je(e.source,r,`Invalid character escape sequence: "${t.slice(r,r+2)}".`)}function jh(e,r){const t=e.source.body,a=t.length;let n=e.lineStart,i=r+3,o=i,u="";const s=[];for(;i<a;){const l=t.charCodeAt(i);if(l===34&&t.charCodeAt(i+1)===34&&t.charCodeAt(i+2)===34){u+=t.slice(o,i),s.push(u);const c=Ge(e,O.BLOCK_STRING,r,i+3,Rh(s).join(`
`));return e.line+=s.length-1,e.lineStart=n,c}if(l===92&&t.charCodeAt(i+1)===34&&t.charCodeAt(i+2)===34&&t.charCodeAt(i+3)===34){u+=t.slice(o,i),o=i+1,i+=4;continue}if(l===10||l===13){u+=t.slice(o,i),s.push(u),l===13&&t.charCodeAt(i+1)===10?i+=2:++i,u="",o=i,n=i;continue}if(_t(l))++i;else if(wn(t,i))i+=2;else throw je(e.source,i,`Invalid character within String: ${Ft(e,i)}.`)}throw je(e.source,i,"Unterminated string.")}function $h(e,r){const t=e.source.body,a=t.length;let n=r+1;for(;n<a;){const i=t.charCodeAt(n);if(Ec(i))++n;else break}return Ge(e,O.NAME,r,n,t.slice(r,n))}const Wh=10,Sc=2;function _(e){return Cn(e,[])}function Cn(e,r){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return Vh(e,r);default:return String(e)}}function Vh(e,r){if(e===null)return"null";if(r.includes(e))return"[Circular]";const t=[...r,e];if(Uh(e)){const a=e.toJSON();if(a!==e)return typeof a=="string"?a:Cn(a,t)}else if(Array.isArray(e))return qh(e,t);return zh(e,t)}function Uh(e){return typeof e.toJSON=="function"}function zh(e,r){const t=Object.entries(e);return t.length===0?"{}":r.length>Sc?"["+Kh(e)+"]":"{ "+t.map(([n,i])=>n+": "+Cn(i,r)).join(", ")+" }"}function qh(e,r){if(e.length===0)return"[]";if(r.length>Sc)return"[Array]";const t=Math.min(Wh,e.length),a=e.length-t,n=[];for(let i=0;i<t;++i)n.push(Cn(e[i],r));return a===1?n.push("... 1 more item"):a>1&&n.push(`... ${a} more items`),"["+n.join(", ")+"]"}function Kh(e){const r=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if(r==="Object"&&typeof e.constructor=="function"){const t=e.constructor.name;if(typeof t=="string"&&t!=="")return t}return r}const Jh=globalThis.process&&!1,vr=Jh?function(r,t){return r instanceof t}:function(r,t){if(r instanceof t)return!0;if(typeof r=="object"&&r!==null){var a;const n=t.prototype[Symbol.toStringTag],i=Symbol.toStringTag in r?r[Symbol.toStringTag]:(a=r.constructor)===null||a===void 0?void 0:a.name;if(n===i){const o=_(r);throw new Error(`Cannot use ${n} "${o}" from another module or realm.

Ensure that there is only one instance of "graphql" in the node_modules
directory. If different versions of "graphql" are the dependencies of other
relied on modules, use "resolutions" to ensure only one version is installed.

https://yarnpkg.com/en/docs/selective-version-resolutions

Duplicate "graphql" modules cannot be used at the same time since different
versions may have different capabilities and behavior. The data from one
version used in the function from another could produce confusing and
spurious results.`)}}return!1};class Sn{constructor(r,t="GraphQL request",a={line:1,column:1}){typeof r=="string"||he(!1,`Body must be a string. Received: ${_(r)}.`),this.body=r,this.name=t,this.locationOffset=a,this.locationOffset.line>0||he(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||he(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function Tc(e){return vr(e,Sn)}function Tn(e,r){return new Bn(e,r).parseDocument()}function Bc(e,r){const t=new Bn(e,r);t.expectToken(O.SOF);const a=t.parseValueLiteral(!1);return t.expectToken(O.EOF),a}function Yh(e,r){const t=new Bn(e,r);t.expectToken(O.SOF);const a=t.parseConstValueLiteral();return t.expectToken(O.EOF),a}function Qh(e,r){const t=new Bn(e,r);t.expectToken(O.SOF);const a=t.parseTypeReference();return t.expectToken(O.EOF),a}class Bn{constructor(r,t={}){const a=Tc(r)?r:new Sn(r);this._lexer=new No(a),this._options=t,this._tokenCounter=0}parseName(){const r=this.expectToken(O.NAME);return this.node(r,{kind:v.NAME,value:r.value})}parseDocument(){return this.node(this._lexer.token,{kind:v.DOCUMENT,definitions:this.many(O.SOF,this.parseDefinition,O.EOF)})}parseDefinition(){if(this.peek(O.BRACE_L))return this.parseOperationDefinition();const r=this.peekDescription(),t=r?this._lexer.lookahead():this._lexer.token;if(t.kind===O.NAME){switch(t.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(r)throw je(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(t.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(t)}parseOperationDefinition(){const r=this._lexer.token;if(this.peek(O.BRACE_L))return this.node(r,{kind:v.OPERATION_DEFINITION,operation:$e.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});const t=this.parseOperationType();let a;return this.peek(O.NAME)&&(a=this.parseName()),this.node(r,{kind:v.OPERATION_DEFINITION,operation:t,name:a,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const r=this.expectToken(O.NAME);switch(r.value){case"query":return $e.QUERY;case"mutation":return $e.MUTATION;case"subscription":return $e.SUBSCRIPTION}throw this.unexpected(r)}parseVariableDefinitions(){return this.optionalMany(O.PAREN_L,this.parseVariableDefinition,O.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:v.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(O.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(O.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const r=this._lexer.token;return this.expectToken(O.DOLLAR),this.node(r,{kind:v.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:v.SELECTION_SET,selections:this.many(O.BRACE_L,this.parseSelection,O.BRACE_R)})}parseSelection(){return this.peek(O.SPREAD)?this.parseFragment():this.parseField()}parseField(){const r=this._lexer.token,t=this.parseName();let a,n;return this.expectOptionalToken(O.COLON)?(a=t,n=this.parseName()):n=t,this.node(r,{kind:v.FIELD,alias:a,name:n,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(O.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(r){const t=r?this.parseConstArgument:this.parseArgument;return this.optionalMany(O.PAREN_L,t,O.PAREN_R)}parseArgument(r=!1){const t=this._lexer.token,a=this.parseName();return this.expectToken(O.COLON),this.node(t,{kind:v.ARGUMENT,name:a,value:this.parseValueLiteral(r)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){const r=this._lexer.token;this.expectToken(O.SPREAD);const t=this.expectOptionalKeyword("on");return!t&&this.peek(O.NAME)?this.node(r,{kind:v.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(r,{kind:v.INLINE_FRAGMENT,typeCondition:t?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const r=this._lexer.token;return this.expectKeyword("fragment"),this._options.allowLegacyFragmentVariables===!0?this.node(r,{kind:v.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(r,{kind:v.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if(this._lexer.token.value==="on")throw this.unexpected();return this.parseName()}parseValueLiteral(r){const t=this._lexer.token;switch(t.kind){case O.BRACKET_L:return this.parseList(r);case O.BRACE_L:return this.parseObject(r);case O.INT:return this.advanceLexer(),this.node(t,{kind:v.INT,value:t.value});case O.FLOAT:return this.advanceLexer(),this.node(t,{kind:v.FLOAT,value:t.value});case O.STRING:case O.BLOCK_STRING:return this.parseStringLiteral();case O.NAME:switch(this.advanceLexer(),t.value){case"true":return this.node(t,{kind:v.BOOLEAN,value:!0});case"false":return this.node(t,{kind:v.BOOLEAN,value:!1});case"null":return this.node(t,{kind:v.NULL});default:return this.node(t,{kind:v.ENUM,value:t.value})}case O.DOLLAR:if(r)if(this.expectToken(O.DOLLAR),this._lexer.token.kind===O.NAME){const a=this._lexer.token.value;throw je(this._lexer.source,t.start,`Unexpected variable "$${a}" in constant value.`)}else throw this.unexpected(t);return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const r=this._lexer.token;return this.advanceLexer(),this.node(r,{kind:v.STRING,value:r.value,block:r.kind===O.BLOCK_STRING})}parseList(r){const t=()=>this.parseValueLiteral(r);return this.node(this._lexer.token,{kind:v.LIST,values:this.any(O.BRACKET_L,t,O.BRACKET_R)})}parseObject(r){const t=()=>this.parseObjectField(r);return this.node(this._lexer.token,{kind:v.OBJECT,fields:this.any(O.BRACE_L,t,O.BRACE_R)})}parseObjectField(r){const t=this._lexer.token,a=this.parseName();return this.expectToken(O.COLON),this.node(t,{kind:v.OBJECT_FIELD,name:a,value:this.parseValueLiteral(r)})}parseDirectives(r){const t=[];for(;this.peek(O.AT);)t.push(this.parseDirective(r));return t}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(r){const t=this._lexer.token;return this.expectToken(O.AT),this.node(t,{kind:v.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(r)})}parseTypeReference(){const r=this._lexer.token;let t;if(this.expectOptionalToken(O.BRACKET_L)){const a=this.parseTypeReference();this.expectToken(O.BRACKET_R),t=this.node(r,{kind:v.LIST_TYPE,type:a})}else t=this.parseNamedType();return this.expectOptionalToken(O.BANG)?this.node(r,{kind:v.NON_NULL_TYPE,type:t}):t}parseNamedType(){return this.node(this._lexer.token,{kind:v.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(O.STRING)||this.peek(O.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const r=this._lexer.token,t=this.parseDescription();this.expectKeyword("schema");const a=this.parseConstDirectives(),n=this.many(O.BRACE_L,this.parseOperationTypeDefinition,O.BRACE_R);return this.node(r,{kind:v.SCHEMA_DEFINITION,description:t,directives:a,operationTypes:n})}parseOperationTypeDefinition(){const r=this._lexer.token,t=this.parseOperationType();this.expectToken(O.COLON);const a=this.parseNamedType();return this.node(r,{kind:v.OPERATION_TYPE_DEFINITION,operation:t,type:a})}parseScalarTypeDefinition(){const r=this._lexer.token,t=this.parseDescription();this.expectKeyword("scalar");const a=this.parseName(),n=this.parseConstDirectives();return this.node(r,{kind:v.SCALAR_TYPE_DEFINITION,description:t,name:a,directives:n})}parseObjectTypeDefinition(){const r=this._lexer.token,t=this.parseDescription();this.expectKeyword("type");const a=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(r,{kind:v.OBJECT_TYPE_DEFINITION,description:t,name:a,interfaces:n,directives:i,fields:o})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(O.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(O.BRACE_L,this.parseFieldDefinition,O.BRACE_R)}parseFieldDefinition(){const r=this._lexer.token,t=this.parseDescription(),a=this.parseName(),n=this.parseArgumentDefs();this.expectToken(O.COLON);const i=this.parseTypeReference(),o=this.parseConstDirectives();return this.node(r,{kind:v.FIELD_DEFINITION,description:t,name:a,arguments:n,type:i,directives:o})}parseArgumentDefs(){return this.optionalMany(O.PAREN_L,this.parseInputValueDef,O.PAREN_R)}parseInputValueDef(){const r=this._lexer.token,t=this.parseDescription(),a=this.parseName();this.expectToken(O.COLON);const n=this.parseTypeReference();let i;this.expectOptionalToken(O.EQUALS)&&(i=this.parseConstValueLiteral());const o=this.parseConstDirectives();return this.node(r,{kind:v.INPUT_VALUE_DEFINITION,description:t,name:a,type:n,defaultValue:i,directives:o})}parseInterfaceTypeDefinition(){const r=this._lexer.token,t=this.parseDescription();this.expectKeyword("interface");const a=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(r,{kind:v.INTERFACE_TYPE_DEFINITION,description:t,name:a,interfaces:n,directives:i,fields:o})}parseUnionTypeDefinition(){const r=this._lexer.token,t=this.parseDescription();this.expectKeyword("union");const a=this.parseName(),n=this.parseConstDirectives(),i=this.parseUnionMemberTypes();return this.node(r,{kind:v.UNION_TYPE_DEFINITION,description:t,name:a,directives:n,types:i})}parseUnionMemberTypes(){return this.expectOptionalToken(O.EQUALS)?this.delimitedMany(O.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const r=this._lexer.token,t=this.parseDescription();this.expectKeyword("enum");const a=this.parseName(),n=this.parseConstDirectives(),i=this.parseEnumValuesDefinition();return this.node(r,{kind:v.ENUM_TYPE_DEFINITION,description:t,name:a,directives:n,values:i})}parseEnumValuesDefinition(){return this.optionalMany(O.BRACE_L,this.parseEnumValueDefinition,O.BRACE_R)}parseEnumValueDefinition(){const r=this._lexer.token,t=this.parseDescription(),a=this.parseEnumValueName(),n=this.parseConstDirectives();return this.node(r,{kind:v.ENUM_VALUE_DEFINITION,description:t,name:a,directives:n})}parseEnumValueName(){if(this._lexer.token.value==="true"||this._lexer.token.value==="false"||this._lexer.token.value==="null")throw je(this._lexer.source,this._lexer.token.start,`${Va(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const r=this._lexer.token,t=this.parseDescription();this.expectKeyword("input");const a=this.parseName(),n=this.parseConstDirectives(),i=this.parseInputFieldsDefinition();return this.node(r,{kind:v.INPUT_OBJECT_TYPE_DEFINITION,description:t,name:a,directives:n,fields:i})}parseInputFieldsDefinition(){return this.optionalMany(O.BRACE_L,this.parseInputValueDef,O.BRACE_R)}parseTypeSystemExtension(){const r=this._lexer.lookahead();if(r.kind===O.NAME)switch(r.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(r)}parseSchemaExtension(){const r=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const t=this.parseConstDirectives(),a=this.optionalMany(O.BRACE_L,this.parseOperationTypeDefinition,O.BRACE_R);if(t.length===0&&a.length===0)throw this.unexpected();return this.node(r,{kind:v.SCHEMA_EXTENSION,directives:t,operationTypes:a})}parseScalarTypeExtension(){const r=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const t=this.parseName(),a=this.parseConstDirectives();if(a.length===0)throw this.unexpected();return this.node(r,{kind:v.SCALAR_TYPE_EXTENSION,name:t,directives:a})}parseObjectTypeExtension(){const r=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const t=this.parseName(),a=this.parseImplementsInterfaces(),n=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(a.length===0&&n.length===0&&i.length===0)throw this.unexpected();return this.node(r,{kind:v.OBJECT_TYPE_EXTENSION,name:t,interfaces:a,directives:n,fields:i})}parseInterfaceTypeExtension(){const r=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const t=this.parseName(),a=this.parseImplementsInterfaces(),n=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(a.length===0&&n.length===0&&i.length===0)throw this.unexpected();return this.node(r,{kind:v.INTERFACE_TYPE_EXTENSION,name:t,interfaces:a,directives:n,fields:i})}parseUnionTypeExtension(){const r=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const t=this.parseName(),a=this.parseConstDirectives(),n=this.parseUnionMemberTypes();if(a.length===0&&n.length===0)throw this.unexpected();return this.node(r,{kind:v.UNION_TYPE_EXTENSION,name:t,directives:a,types:n})}parseEnumTypeExtension(){const r=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const t=this.parseName(),a=this.parseConstDirectives(),n=this.parseEnumValuesDefinition();if(a.length===0&&n.length===0)throw this.unexpected();return this.node(r,{kind:v.ENUM_TYPE_EXTENSION,name:t,directives:a,values:n})}parseInputObjectTypeExtension(){const r=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const t=this.parseName(),a=this.parseConstDirectives(),n=this.parseInputFieldsDefinition();if(a.length===0&&n.length===0)throw this.unexpected();return this.node(r,{kind:v.INPUT_OBJECT_TYPE_EXTENSION,name:t,directives:a,fields:n})}parseDirectiveDefinition(){const r=this._lexer.token,t=this.parseDescription();this.expectKeyword("directive"),this.expectToken(O.AT);const a=this.parseName(),n=this.parseArgumentDefs(),i=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const o=this.parseDirectiveLocations();return this.node(r,{kind:v.DIRECTIVE_DEFINITION,description:t,name:a,arguments:n,repeatable:i,locations:o})}parseDirectiveLocations(){return this.delimitedMany(O.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const r=this._lexer.token,t=this.parseName();if(Object.prototype.hasOwnProperty.call(oe,t.value))return t;throw this.unexpected(r)}node(r,t){return this._options.noLocation!==!0&&(t.loc=new bc(r,this._lexer.lastToken,this._lexer.source)),t}peek(r){return this._lexer.token.kind===r}expectToken(r){const t=this._lexer.token;if(t.kind===r)return this.advanceLexer(),t;throw je(this._lexer.source,t.start,`Expected ${Nc(r)}, found ${Va(t)}.`)}expectOptionalToken(r){return this._lexer.token.kind===r?(this.advanceLexer(),!0):!1}expectKeyword(r){const t=this._lexer.token;if(t.kind===O.NAME&&t.value===r)this.advanceLexer();else throw je(this._lexer.source,t.start,`Expected "${r}", found ${Va(t)}.`)}expectOptionalKeyword(r){const t=this._lexer.token;return t.kind===O.NAME&&t.value===r?(this.advanceLexer(),!0):!1}unexpected(r){const t=r??this._lexer.token;return je(this._lexer.source,t.start,`Unexpected ${Va(t)}.`)}any(r,t,a){this.expectToken(r);const n=[];for(;!this.expectOptionalToken(a);)n.push(t.call(this));return n}optionalMany(r,t,a){if(this.expectOptionalToken(r)){const n=[];do n.push(t.call(this));while(!this.expectOptionalToken(a));return n}return[]}many(r,t,a){this.expectToken(r);const n=[];do n.push(t.call(this));while(!this.expectOptionalToken(a));return n}delimitedMany(r,t){this.expectOptionalToken(r);const a=[];do a.push(t.call(this));while(this.expectOptionalToken(r));return a}advanceLexer(){const{maxTokens:r}=this._options,t=this._lexer.advance();if(r!==void 0&&t.kind!==O.EOF&&(++this._tokenCounter,this._tokenCounter>r))throw je(this._lexer.source,t.start,`Document contains more that ${r} tokens. Parsing aborted.`)}}function Va(e){const r=e.value;return Nc(e.kind)+(r!=null?` "${r}"`:"")}function Nc(e){return Ac(e)?`"${e}"`:e}const Xh=5;function Mr(e,r){const[t,a]=r?[e,r]:[void 0,e];let n=" Did you mean ";t&&(n+=t+" ");const i=a.map(s=>`"${s}"`);switch(i.length){case 0:return"";case 1:return n+i[0]+"?";case 2:return n+i[0]+" or "+i[1]+"?"}const o=i.slice(0,Xh),u=o.pop();return n+o.join(", ")+", or "+u+"?"}function Ls(e){return e}function Ir(e,r){const t=Object.create(null);for(const a of e)t[r(a)]=a;return t}function Wr(e,r,t){const a=Object.create(null);for(const n of e)a[r(n)]=t(n);return a}function Rr(e,r){const t=Object.create(null);for(const a of Object.keys(e))t[a]=r(e[a],a);return t}function Ca(e,r){let t=0,a=0;for(;t<e.length&&a<r.length;){let n=e.charCodeAt(t),i=r.charCodeAt(a);if(Ua(n)&&Ua(i)){let o=0;do++t,o=o*10+n-to,n=e.charCodeAt(t);while(Ua(n)&&o>0);let u=0;do++a,u=u*10+i-to,i=r.charCodeAt(a);while(Ua(i)&&u>0);if(o<u)return-1;if(o>u)return 1}else{if(n<i)return-1;if(n>i)return 1;++t,++a}}return e.length-r.length}const to=48,Zh=57;function Ua(e){return!isNaN(e)&&to<=e&&e<=Zh}function Yr(e,r){const t=Object.create(null),a=new ef(e),n=Math.floor(e.length*.4)+1;for(const i of r){const o=a.measure(i,n);o!==void 0&&(t[i]=o)}return Object.keys(t).sort((i,o)=>{const u=t[i]-t[o];return u!==0?u:Ca(i,o)})}class ef{constructor(r){this._input=r,this._inputLowerCase=r.toLowerCase(),this._inputArray=Ms(this._inputLowerCase),this._rows=[new Array(r.length+1).fill(0),new Array(r.length+1).fill(0),new Array(r.length+1).fill(0)]}measure(r,t){if(this._input===r)return 0;const a=r.toLowerCase();if(this._inputLowerCase===a)return 1;let n=Ms(a),i=this._inputArray;if(n.length<i.length){const c=n;n=i,i=c}const o=n.length,u=i.length;if(o-u>t)return;const s=this._rows;for(let c=0;c<=u;c++)s[0][c]=c;for(let c=1;c<=o;c++){const d=s[(c-1)%3],p=s[c%3];let h=p[0]=c;for(let g=1;g<=u;g++){const b=n[c-1]===i[g-1]?0:1;let F=Math.min(d[g]+1,p[g-1]+1,d[g-1]+b);if(c>1&&g>1&&n[c-1]===i[g-2]&&n[c-2]===i[g-1]){const D=s[(c-2)%3][g-2];F=Math.min(F,D+1)}F<h&&(h=F),p[g]=F}if(h>t)return}const l=s[o%3][u];return l<=t?l:void 0}}function Ms(e){const r=e.length,t=new Array(r);for(let a=0;a<r;++a)t[a]=e.charCodeAt(a);return t}function mr(e){if(e==null)return Object.create(null);if(Object.getPrototypeOf(e)===null)return e;const r=Object.create(null);for(const[t,a]of Object.entries(e))r[t]=a;return r}function rf(e){return`"${e.replace(tf,af)}"`}const tf=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function af(e){return nf[e.charCodeAt(0)]}const nf=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"],wt=Object.freeze({});function Pt(e,r,t=vc){const a=new Map;for(const D of Object.values(v))a.set(D,Tt(r,D));let n,i=Array.isArray(e),o=[e],u=-1,s=[],l=e,c,d;const p=[],h=[];do{u++;const D=u===o.length,N=D&&s.length!==0;if(D){if(c=h.length===0?void 0:p[p.length-1],l=d,d=h.pop(),N)if(i){l=l.slice();let E=0;for(const[R,C]of s){const j=R-E;C===null?(l.splice(j,1),E++):l[j]=C}}else{l=Object.defineProperties({},Object.getOwnPropertyDescriptors(l));for(const[E,R]of s)l[E]=R}u=n.index,o=n.keys,s=n.edits,i=n.inArray,n=n.prev}else if(d){if(c=i?u:o[u],l=d[c],l==null)continue;p.push(c)}let T;if(!Array.isArray(l)){var g,b;eo(l)||he(!1,`Invalid AST Node: ${_(l)}.`);const E=D?(g=a.get(l.kind))===null||g===void 0?void 0:g.leave:(b=a.get(l.kind))===null||b===void 0?void 0:b.enter;if(T=E?.call(r,l,c,d,p,h),T===wt)break;if(T===!1){if(!D){p.pop();continue}}else if(T!==void 0&&(s.push([c,T]),!D))if(eo(T))l=T;else{p.pop();continue}}if(T===void 0&&N&&s.push([c,l]),D)p.pop();else{var F;n={inArray:i,index:u,keys:o,edits:s,prev:n},i=Array.isArray(l),o=i?l:(F=t[l.kind])!==null&&F!==void 0?F:[],u=-1,s=[],d&&h.push(d),d=l}}while(n!==void 0);return s.length!==0?s[s.length-1][1]:e}function Ro(e){const r=new Array(e.length).fill(null),t=Object.create(null);for(const a of Object.values(v)){let n=!1;const i=new Array(e.length).fill(void 0),o=new Array(e.length).fill(void 0);for(let s=0;s<e.length;++s){const{enter:l,leave:c}=Tt(e[s],a);n||(n=l!=null||c!=null),i[s]=l,o[s]=c}if(!n)continue;const u={enter(...s){const l=s[0];for(let d=0;d<e.length;d++)if(r[d]===null){var c;const p=(c=i[d])===null||c===void 0?void 0:c.apply(e[d],s);if(p===!1)r[d]=l;else if(p===wt)r[d]=wt;else if(p!==void 0)return p}},leave(...s){const l=s[0];for(let d=0;d<e.length;d++)if(r[d]===null){var c;const p=(c=o[d])===null||c===void 0?void 0:c.apply(e[d],s);if(p===wt)r[d]=wt;else if(p!==void 0&&p!==!1)return p}else r[d]===l&&(r[d]=null)}};t[a]=u}return t}function Tt(e,r){const t=e[r];return typeof t=="object"?t:typeof t=="function"?{enter:t,leave:void 0}:{enter:e.enter,leave:e.leave}}function of(e,r,t){const{enter:a,leave:n}=Tt(e,r);return t?n:a}function Te(e){return Pt(e,sf)}const uf=80,sf={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>te(e.definitions,`

`)},OperationDefinition:{leave(e){const r=fe("(",te(e.variableDefinitions,", "),")"),t=te([e.operation,te([e.name,r]),te(e.directives," ")]," ");return(t==="query"?"":t+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:r,defaultValue:t,directives:a})=>e+": "+r+fe(" = ",t)+fe(" ",te(a," "))},SelectionSet:{leave:({selections:e})=>Fr(e)},Field:{leave({alias:e,name:r,arguments:t,directives:a,selectionSet:n}){const i=fe("",e,": ")+r;let o=i+fe("(",te(t,", "),")");return o.length>uf&&(o=i+fe(`(
`,rn(te(t,`
`)),`
)`)),te([o,te(a," "),n]," ")}},Argument:{leave:({name:e,value:r})=>e+": "+r},FragmentSpread:{leave:({name:e,directives:r})=>"..."+e+fe(" ",te(r," "))},InlineFragment:{leave:({typeCondition:e,directives:r,selectionSet:t})=>te(["...",fe("on ",e),te(r," "),t]," ")},FragmentDefinition:{leave:({name:e,typeCondition:r,variableDefinitions:t,directives:a,selectionSet:n})=>`fragment ${e}${fe("(",te(t,", "),")")} on ${r} ${fe("",te(a," ")," ")}`+n},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:r})=>r?kc(e):rf(e)},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+te(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+te(e,", ")+"}"},ObjectField:{leave:({name:e,value:r})=>e+": "+r},Directive:{leave:({name:e,arguments:r})=>"@"+e+fe("(",te(r,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:r,operationTypes:t})=>fe("",e,`
`)+te(["schema",te(r," "),Fr(t)]," ")},OperationTypeDefinition:{leave:({operation:e,type:r})=>e+": "+r},ScalarTypeDefinition:{leave:({description:e,name:r,directives:t})=>fe("",e,`
`)+te(["scalar",r,te(t," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:r,interfaces:t,directives:a,fields:n})=>fe("",e,`
`)+te(["type",r,fe("implements ",te(t," & ")),te(a," "),Fr(n)]," ")},FieldDefinition:{leave:({description:e,name:r,arguments:t,type:a,directives:n})=>fe("",e,`
`)+r+(Is(t)?fe(`(
`,rn(te(t,`
`)),`
)`):fe("(",te(t,", "),")"))+": "+a+fe(" ",te(n," "))},InputValueDefinition:{leave:({description:e,name:r,type:t,defaultValue:a,directives:n})=>fe("",e,`
`)+te([r+": "+t,fe("= ",a),te(n," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:r,interfaces:t,directives:a,fields:n})=>fe("",e,`
`)+te(["interface",r,fe("implements ",te(t," & ")),te(a," "),Fr(n)]," ")},UnionTypeDefinition:{leave:({description:e,name:r,directives:t,types:a})=>fe("",e,`
`)+te(["union",r,te(t," "),fe("= ",te(a," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:r,directives:t,values:a})=>fe("",e,`
`)+te(["enum",r,te(t," "),Fr(a)]," ")},EnumValueDefinition:{leave:({description:e,name:r,directives:t})=>fe("",e,`
`)+te([r,te(t," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:r,directives:t,fields:a})=>fe("",e,`
`)+te(["input",r,te(t," "),Fr(a)]," ")},DirectiveDefinition:{leave:({description:e,name:r,arguments:t,repeatable:a,locations:n})=>fe("",e,`
`)+"directive @"+r+(Is(t)?fe(`(
`,rn(te(t,`
`)),`
)`):fe("(",te(t,", "),")"))+(a?" repeatable":"")+" on "+te(n," | ")},SchemaExtension:{leave:({directives:e,operationTypes:r})=>te(["extend schema",te(e," "),Fr(r)]," ")},ScalarTypeExtension:{leave:({name:e,directives:r})=>te(["extend scalar",e,te(r," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:r,directives:t,fields:a})=>te(["extend type",e,fe("implements ",te(r," & ")),te(t," "),Fr(a)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:r,directives:t,fields:a})=>te(["extend interface",e,fe("implements ",te(r," & ")),te(t," "),Fr(a)]," ")},UnionTypeExtension:{leave:({name:e,directives:r,types:t})=>te(["extend union",e,te(r," "),fe("= ",te(t," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:r,values:t})=>te(["extend enum",e,te(r," "),Fr(t)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:r,fields:t})=>te(["extend input",e,te(r," "),Fr(t)]," ")}};function te(e,r=""){var t;return(t=e?.filter(a=>a).join(r))!==null&&t!==void 0?t:""}function Fr(e){return fe(`{
`,rn(te(e,`
`)),`
}`)}function fe(e,r,t=""){return r!=null&&r!==""?e+r+t:""}function rn(e){return fe("  ",e.replace(/\n/g,`
  `))}function Is(e){var r;return(r=e?.some(t=>t.includes(`
`)))!==null&&r!==void 0?r:!1}function on(e,r){switch(e.kind){case v.NULL:return null;case v.INT:return parseInt(e.value,10);case v.FLOAT:return parseFloat(e.value);case v.STRING:case v.ENUM:case v.BOOLEAN:return e.value;case v.LIST:return e.values.map(t=>on(t,r));case v.OBJECT:return Wr(e.fields,t=>t.name.value,t=>on(t.value,r));case v.VARIABLE:return r?.[e.name.value]}}function or(e){if(e!=null||he(!1,"Must provide name."),typeof e=="string"||he(!1,"Expected name to be a string."),e.length===0)throw new x("Expected name to be a non-empty string.");for(let r=1;r<e.length;++r)if(!Ec(e.charCodeAt(r)))throw new x(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!Bo(e.charCodeAt(0)))throw new x(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function Rc(e){if(e==="true"||e==="false"||e==="null")throw new x(`Enum values cannot be named: ${e}`);return or(e)}function Sa(e){return ur(e)||ge(e)||De(e)||We(e)||He(e)||Ce(e)||Be(e)||pe(e)}function lf(e){if(!Sa(e))throw new Error(`Expected ${_(e)} to be a GraphQL type.`);return e}function ur(e){return vr(e,Cr)}function cf(e){if(!ur(e))throw new Error(`Expected ${_(e)} to be a GraphQL Scalar type.`);return e}function ge(e){return vr(e,cr)}function Lc(e){if(!ge(e))throw new Error(`Expected ${_(e)} to be a GraphQL Object type.`);return e}function De(e){return vr(e,Bt)}function Mc(e){if(!De(e))throw new Error(`Expected ${_(e)} to be a GraphQL Interface type.`);return e}function We(e){return vr(e,Nt)}function df(e){if(!We(e))throw new Error(`Expected ${_(e)} to be a GraphQL Union type.`);return e}function He(e){return vr(e,Kr)}function pf(e){if(!He(e))throw new Error(`Expected ${_(e)} to be a GraphQL Enum type.`);return e}function Ce(e){return vr(e,Rt)}function mf(e){if(!Ce(e))throw new Error(`Expected ${_(e)} to be a GraphQL Input Object type.`);return e}function Be(e){return vr(e,ze)}function Ff(e){if(!Be(e))throw new Error(`Expected ${_(e)} to be a GraphQL List type.`);return e}function pe(e){return vr(e,Fe)}function hf(e){if(!pe(e))throw new Error(`Expected ${_(e)} to be a GraphQL Non-Null type.`);return e}function er(e){return ur(e)||He(e)||Ce(e)||Ta(e)&&er(e.ofType)}function ff(e){if(!er(e))throw new Error(`Expected ${_(e)} to be a GraphQL input type.`);return e}function Ur(e){return ur(e)||ge(e)||De(e)||We(e)||He(e)||Ta(e)&&Ur(e.ofType)}function yf(e){if(!Ur(e))throw new Error(`Expected ${_(e)} to be a GraphQL output type.`);return e}function Ar(e){return ur(e)||He(e)}function gf(e){if(!Ar(e))throw new Error(`Expected ${_(e)} to be a GraphQL leaf type.`);return e}function wr(e){return ge(e)||De(e)||We(e)}function bf(e){if(!wr(e))throw new Error(`Expected ${_(e)} to be a GraphQL composite type.`);return e}function kr(e){return De(e)||We(e)}function vf(e){if(!kr(e))throw new Error(`Expected ${_(e)} to be a GraphQL abstract type.`);return e}class ze{constructor(r){Sa(r)||he(!1,`Expected ${_(r)} to be a GraphQL type.`),this.ofType=r}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class Fe{constructor(r){Lo(r)||he(!1,`Expected ${_(r)} to be a GraphQL nullable type.`),this.ofType=r}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function Ta(e){return Be(e)||pe(e)}function Df(e){if(!Ta(e))throw new Error(`Expected ${_(e)} to be a GraphQL wrapping type.`);return e}function Lo(e){return Sa(e)&&!pe(e)}function Ic(e){if(!Lo(e))throw new Error(`Expected ${_(e)} to be a GraphQL nullable type.`);return e}function Mo(e){if(e)return pe(e)?e.ofType:e}function Ba(e){return ur(e)||ge(e)||De(e)||We(e)||He(e)||Ce(e)}function Ef(e){if(!Ba(e))throw new Error(`Expected ${_(e)} to be a GraphQL named type.`);return e}function Je(e){if(e){let r=e;for(;Ta(r);)r=r.ofType;return r}}function Io(e){return typeof e=="function"?e():e}function xo(e){return typeof e=="function"?e():e}class Cr{constructor(r){var t,a,n,i;const o=(t=r.parseValue)!==null&&t!==void 0?t:Ls;this.name=or(r.name),this.description=r.description,this.specifiedByURL=r.specifiedByURL,this.serialize=(a=r.serialize)!==null&&a!==void 0?a:Ls,this.parseValue=o,this.parseLiteral=(n=r.parseLiteral)!==null&&n!==void 0?n:(u,s)=>o(on(u,s)),this.extensions=mr(r.extensions),this.astNode=r.astNode,this.extensionASTNodes=(i=r.extensionASTNodes)!==null&&i!==void 0?i:[],r.specifiedByURL==null||typeof r.specifiedByURL=="string"||he(!1,`${this.name} must provide "specifiedByURL" as a string, but got: ${_(r.specifiedByURL)}.`),r.serialize==null||typeof r.serialize=="function"||he(!1,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),r.parseLiteral&&(typeof r.parseValue=="function"&&typeof r.parseLiteral=="function"||he(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class cr{constructor(r){var t;this.name=or(r.name),this.description=r.description,this.isTypeOf=r.isTypeOf,this.extensions=mr(r.extensions),this.astNode=r.astNode,this.extensionASTNodes=(t=r.extensionASTNodes)!==null&&t!==void 0?t:[],this._fields=()=>Oc(r),this._interfaces=()=>xc(r),r.isTypeOf==null||typeof r.isTypeOf=="function"||he(!1,`${this.name} must provide "isTypeOf" as a function, but got: ${_(r.isTypeOf)}.`)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Pc(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function xc(e){var r;const t=Io((r=e.interfaces)!==null&&r!==void 0?r:[]);return Array.isArray(t)||he(!1,`${e.name} interfaces must be an Array or a function which returns an Array.`),t}function Oc(e){const r=xo(e.fields);return St(r)||he(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),Rr(r,(t,a)=>{var n;St(t)||he(!1,`${e.name}.${a} field config must be an object.`),t.resolve==null||typeof t.resolve=="function"||he(!1,`${e.name}.${a} field resolver must be a function if provided, but got: ${_(t.resolve)}.`);const i=(n=t.args)!==null&&n!==void 0?n:{};return St(i)||he(!1,`${e.name}.${a} args must be an object with argument names as keys.`),{name:or(a),description:t.description,type:t.type,args:_c(i),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:mr(t.extensions),astNode:t.astNode}})}function _c(e){return Object.entries(e).map(([r,t])=>({name:or(r),description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:mr(t.extensions),astNode:t.astNode}))}function St(e){return ir(e)&&!Array.isArray(e)}function Pc(e){return Rr(e,r=>({description:r.description,type:r.type,args:Gc(r.args),resolve:r.resolve,subscribe:r.subscribe,deprecationReason:r.deprecationReason,extensions:r.extensions,astNode:r.astNode}))}function Gc(e){return Wr(e,r=>r.name,r=>({description:r.description,type:r.type,defaultValue:r.defaultValue,deprecationReason:r.deprecationReason,extensions:r.extensions,astNode:r.astNode}))}function Qr(e){return pe(e.type)&&e.defaultValue===void 0}class Bt{constructor(r){var t;this.name=or(r.name),this.description=r.description,this.resolveType=r.resolveType,this.extensions=mr(r.extensions),this.astNode=r.astNode,this.extensionASTNodes=(t=r.extensionASTNodes)!==null&&t!==void 0?t:[],this._fields=Oc.bind(void 0,r),this._interfaces=xc.bind(void 0,r),r.resolveType==null||typeof r.resolveType=="function"||he(!1,`${this.name} must provide "resolveType" as a function, but got: ${_(r.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Pc(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class Nt{constructor(r){var t;this.name=or(r.name),this.description=r.description,this.resolveType=r.resolveType,this.extensions=mr(r.extensions),this.astNode=r.astNode,this.extensionASTNodes=(t=r.extensionASTNodes)!==null&&t!==void 0?t:[],this._types=kf.bind(void 0,r),r.resolveType==null||typeof r.resolveType=="function"||he(!1,`${this.name} must provide "resolveType" as a function, but got: ${_(r.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return typeof this._types=="function"&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function kf(e){const r=Io(e.types);return Array.isArray(r)||he(!1,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),r}class Kr{constructor(r){var t;this.name=or(r.name),this.description=r.description,this.extensions=mr(r.extensions),this.astNode=r.astNode,this.extensionASTNodes=(t=r.extensionASTNodes)!==null&&t!==void 0?t:[],this._values=typeof r.values=="function"?r.values:xs(this.name,r.values),this._valueLookup=null,this._nameLookup=null}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return typeof this._values=="function"&&(this._values=xs(this.name,this._values())),this._values}getValue(r){return this._nameLookup===null&&(this._nameLookup=Ir(this.getValues(),t=>t.name)),this._nameLookup[r]}serialize(r){this._valueLookup===null&&(this._valueLookup=new Map(this.getValues().map(a=>[a.value,a])));const t=this._valueLookup.get(r);if(t===void 0)throw new x(`Enum "${this.name}" cannot represent value: ${_(r)}`);return t.name}parseValue(r){if(typeof r!="string"){const a=_(r);throw new x(`Enum "${this.name}" cannot represent non-string value: ${a}.`+za(this,a))}const t=this.getValue(r);if(t==null)throw new x(`Value "${r}" does not exist in "${this.name}" enum.`+za(this,r));return t.value}parseLiteral(r,t){if(r.kind!==v.ENUM){const n=Te(r);throw new x(`Enum "${this.name}" cannot represent non-enum value: ${n}.`+za(this,n),{nodes:r})}const a=this.getValue(r.value);if(a==null){const n=Te(r);throw new x(`Value "${n}" does not exist in "${this.name}" enum.`+za(this,n),{nodes:r})}return a.value}toConfig(){const r=Wr(this.getValues(),t=>t.name,t=>({description:t.description,value:t.value,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}));return{name:this.name,description:this.description,values:r,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function za(e,r){const t=e.getValues().map(n=>n.name),a=Yr(r,t);return Mr("the enum value",a)}function xs(e,r){return St(r)||he(!1,`${e} values must be an object with value names as keys.`),Object.entries(r).map(([t,a])=>(St(a)||he(!1,`${e}.${t} must refer to an object with a "value" key representing an internal value but got: ${_(a)}.`),{name:Rc(t),description:a.description,value:a.value!==void 0?a.value:t,deprecationReason:a.deprecationReason,extensions:mr(a.extensions),astNode:a.astNode}))}class Rt{constructor(r){var t,a;this.name=or(r.name),this.description=r.description,this.extensions=mr(r.extensions),this.astNode=r.astNode,this.extensionASTNodes=(t=r.extensionASTNodes)!==null&&t!==void 0?t:[],this.isOneOf=(a=r.isOneOf)!==null&&a!==void 0?a:!1,this._fields=Af.bind(void 0,r)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}toConfig(){const r=Rr(this.getFields(),t=>({description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}));return{name:this.name,description:this.description,fields:r,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,isOneOf:this.isOneOf}}toString(){return this.name}toJSON(){return this.toString()}}function Af(e){const r=xo(e.fields);return St(r)||he(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),Rr(r,(t,a)=>(!("resolve"in t)||he(!1,`${e.name}.${a} field has a resolve property, but Input Types cannot define resolvers.`),{name:or(a),description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:mr(t.extensions),astNode:t.astNode}))}function Nn(e){return pe(e.type)&&e.defaultValue===void 0}function un(e,r){return e===r?!0:pe(e)&&pe(r)||Be(e)&&Be(r)?un(e.ofType,r.ofType):!1}function pt(e,r,t){return r===t?!0:pe(t)?pe(r)?pt(e,r.ofType,t.ofType):!1:pe(r)?pt(e,r.ofType,t):Be(t)?Be(r)?pt(e,r.ofType,t.ofType):!1:Be(r)?!1:kr(t)&&(De(r)||ge(r))&&e.isSubType(t,r)}function ao(e,r,t){return r===t?!0:kr(r)?kr(t)?e.getPossibleTypes(r).some(a=>e.isSubType(t,a)):e.isSubType(r,t):kr(t)?e.isSubType(t,r):!1}const tn=2147483647,an=-2147483648,Hc=new Cr({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){const r=Ra(e);if(typeof r=="boolean")return r?1:0;let t=r;if(typeof r=="string"&&r!==""&&(t=Number(r)),typeof t!="number"||!Number.isInteger(t))throw new x(`Int cannot represent non-integer value: ${_(r)}`);if(t>tn||t<an)throw new x("Int cannot represent non 32-bit signed integer value: "+_(r));return t},parseValue(e){if(typeof e!="number"||!Number.isInteger(e))throw new x(`Int cannot represent non-integer value: ${_(e)}`);if(e>tn||e<an)throw new x(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==v.INT)throw new x(`Int cannot represent non-integer value: ${Te(e)}`,{nodes:e});const r=parseInt(e.value,10);if(r>tn||r<an)throw new x(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return r}}),jc=new Cr({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){const r=Ra(e);if(typeof r=="boolean")return r?1:0;let t=r;if(typeof r=="string"&&r!==""&&(t=Number(r)),typeof t!="number"||!Number.isFinite(t))throw new x(`Float cannot represent non numeric value: ${_(r)}`);return t},parseValue(e){if(typeof e!="number"||!Number.isFinite(e))throw new x(`Float cannot represent non numeric value: ${_(e)}`);return e},parseLiteral(e){if(e.kind!==v.FLOAT&&e.kind!==v.INT)throw new x(`Float cannot represent non numeric value: ${Te(e)}`,e);return parseFloat(e.value)}}),xe=new Cr({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){const r=Ra(e);if(typeof r=="string")return r;if(typeof r=="boolean")return r?"true":"false";if(typeof r=="number"&&Number.isFinite(r))return r.toString();throw new x(`String cannot represent value: ${_(e)}`)},parseValue(e){if(typeof e!="string")throw new x(`String cannot represent a non string value: ${_(e)}`);return e},parseLiteral(e){if(e.kind!==v.STRING)throw new x(`String cannot represent a non string value: ${Te(e)}`,{nodes:e});return e.value}}),rr=new Cr({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){const r=Ra(e);if(typeof r=="boolean")return r;if(Number.isFinite(r))return r!==0;throw new x(`Boolean cannot represent a non boolean value: ${_(r)}`)},parseValue(e){if(typeof e!="boolean")throw new x(`Boolean cannot represent a non boolean value: ${_(e)}`);return e},parseLiteral(e){if(e.kind!==v.BOOLEAN)throw new x(`Boolean cannot represent a non boolean value: ${Te(e)}`,{nodes:e});return e.value}}),Oo=new Cr({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){const r=Ra(e);if(typeof r=="string")return r;if(Number.isInteger(r))return String(r);throw new x(`ID cannot represent value: ${_(e)}`)},parseValue(e){if(typeof e=="string")return e;if(typeof e=="number"&&Number.isInteger(e))return e.toString();throw new x(`ID cannot represent value: ${_(e)}`)},parseLiteral(e){if(e.kind!==v.STRING&&e.kind!==v.INT)throw new x("ID cannot represent a non-string and non-integer value: "+Te(e),{nodes:e});return e.value}}),Na=Object.freeze([xe,Hc,jc,rr,Oo]);function Rn(e){return Na.some(({name:r})=>e.name===r)}function Ra(e){if(ir(e)){if(typeof e.valueOf=="function"){const r=e.valueOf();if(!ir(r))return r}if(typeof e.toJSON=="function")return e.toJSON()}return e}function Ln(e){return vr(e,br)}function wf(e){if(!Ln(e))throw new Error(`Expected ${_(e)} to be a GraphQL directive.`);return e}class br{constructor(r){var t,a;this.name=or(r.name),this.description=r.description,this.locations=r.locations,this.isRepeatable=(t=r.isRepeatable)!==null&&t!==void 0?t:!1,this.extensions=mr(r.extensions),this.astNode=r.astNode,Array.isArray(r.locations)||he(!1,`@${r.name} locations must be an Array.`);const n=(a=r.args)!==null&&a!==void 0?a:{};ir(n)&&!Array.isArray(n)||he(!1,`@${r.name} args must be an object with argument names as keys.`),this.args=_c(n)}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:Gc(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}const _o=new br({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[oe.FIELD,oe.FRAGMENT_SPREAD,oe.INLINE_FRAGMENT],args:{if:{type:new Fe(rr),description:"Included when true."}}}),Po=new br({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[oe.FIELD,oe.FRAGMENT_SPREAD,oe.INLINE_FRAGMENT],args:{if:{type:new Fe(rr),description:"Skipped when true."}}}),Go="No longer supported",Mn=new br({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[oe.FIELD_DEFINITION,oe.ARGUMENT_DEFINITION,oe.INPUT_FIELD_DEFINITION,oe.ENUM_VALUE],args:{reason:{type:xe,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:Go}}}),Ho=new br({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[oe.SCALAR],args:{url:{type:new Fe(xe),description:"The URL that specifies the behavior of this scalar."}}}),jo=new br({name:"oneOf",description:"Indicates exactly one field must be supplied and this field must not be `null`.",locations:[oe.INPUT_OBJECT],args:{}}),Xr=Object.freeze([_o,Po,Mn,Ho,jo]);function $o(e){return Xr.some(({name:r})=>r===e.name)}function Wo(e){return typeof e=="object"&&typeof e?.[Symbol.iterator]=="function"}function Vr(e,r){if(pe(r)){const t=Vr(e,r.ofType);return t?.kind===v.NULL?null:t}if(e===null)return{kind:v.NULL};if(e===void 0)return null;if(Be(r)){const t=r.ofType;if(Wo(e)){const a=[];for(const n of e){const i=Vr(n,t);i!=null&&a.push(i)}return{kind:v.LIST,values:a}}return Vr(e,t)}if(Ce(r)){if(!ir(e))return null;const t=[];for(const a of Object.values(r.getFields())){const n=Vr(e[a.name],a.type);n&&t.push({kind:v.OBJECT_FIELD,name:{kind:v.NAME,value:a.name},value:n})}return{kind:v.OBJECT,fields:t}}if(Ar(r)){const t=r.serialize(e);if(t==null)return null;if(typeof t=="boolean")return{kind:v.BOOLEAN,value:t};if(typeof t=="number"&&Number.isFinite(t)){const a=String(t);return Os.test(a)?{kind:v.INT,value:a}:{kind:v.FLOAT,value:a}}if(typeof t=="string")return He(r)?{kind:v.ENUM,value:t}:r===Oo&&Os.test(t)?{kind:v.INT,value:t}:{kind:v.STRING,value:t};throw new TypeError(`Cannot convert value to AST: ${_(t)}.`)}_e(!1,"Unexpected input type: "+_(r))}const Os=/^-?(?:0|[1-9][0-9]*)$/,In=new cr({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:xe,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new Fe(new ze(new Fe(lr))),resolve(e){return Object.values(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new Fe(lr),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:lr,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:lr,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new Fe(new ze(new Fe(Vo))),resolve:e=>e.getDirectives()}})}),Vo=new cr({name:"__Directive",description:`A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.`,fields:()=>({name:{type:new Fe(xe),resolve:e=>e.name},description:{type:xe,resolve:e=>e.description},isRepeatable:{type:new Fe(rr),resolve:e=>e.isRepeatable},locations:{type:new Fe(new ze(new Fe(Uo))),resolve:e=>e.locations},args:{type:new Fe(new ze(new Fe(La))),args:{includeDeprecated:{type:rr,defaultValue:!1}},resolve(e,{includeDeprecated:r}){return r?e.args:e.args.filter(t=>t.deprecationReason==null)}}})}),Uo=new Kr({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:oe.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:oe.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:oe.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:oe.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:oe.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:oe.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:oe.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:oe.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:oe.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:oe.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:oe.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:oe.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:oe.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:oe.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:oe.UNION,description:"Location adjacent to a union definition."},ENUM:{value:oe.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:oe.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:oe.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:oe.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),lr=new cr({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new Fe(Ko),resolve(e){if(ur(e))return ke.SCALAR;if(ge(e))return ke.OBJECT;if(De(e))return ke.INTERFACE;if(We(e))return ke.UNION;if(He(e))return ke.ENUM;if(Ce(e))return ke.INPUT_OBJECT;if(Be(e))return ke.LIST;if(pe(e))return ke.NON_NULL;_e(!1,`Unexpected type: "${_(e)}".`)}},name:{type:xe,resolve:e=>"name"in e?e.name:void 0},description:{type:xe,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:xe,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new ze(new Fe(zo)),args:{includeDeprecated:{type:rr,defaultValue:!1}},resolve(e,{includeDeprecated:r}){if(ge(e)||De(e)){const t=Object.values(e.getFields());return r?t:t.filter(a=>a.deprecationReason==null)}}},interfaces:{type:new ze(new Fe(lr)),resolve(e){if(ge(e)||De(e))return e.getInterfaces()}},possibleTypes:{type:new ze(new Fe(lr)),resolve(e,r,t,{schema:a}){if(kr(e))return a.getPossibleTypes(e)}},enumValues:{type:new ze(new Fe(qo)),args:{includeDeprecated:{type:rr,defaultValue:!1}},resolve(e,{includeDeprecated:r}){if(He(e)){const t=e.getValues();return r?t:t.filter(a=>a.deprecationReason==null)}}},inputFields:{type:new ze(new Fe(La)),args:{includeDeprecated:{type:rr,defaultValue:!1}},resolve(e,{includeDeprecated:r}){if(Ce(e)){const t=Object.values(e.getFields());return r?t:t.filter(a=>a.deprecationReason==null)}}},ofType:{type:lr,resolve:e=>"ofType"in e?e.ofType:void 0},isOneOf:{type:rr,resolve:e=>{if(Ce(e))return e.isOneOf}}})}),zo=new cr({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new Fe(xe),resolve:e=>e.name},description:{type:xe,resolve:e=>e.description},args:{type:new Fe(new ze(new Fe(La))),args:{includeDeprecated:{type:rr,defaultValue:!1}},resolve(e,{includeDeprecated:r}){return r?e.args:e.args.filter(t=>t.deprecationReason==null)}},type:{type:new Fe(lr),resolve:e=>e.type},isDeprecated:{type:new Fe(rr),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:xe,resolve:e=>e.deprecationReason}})}),La=new cr({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new Fe(xe),resolve:e=>e.name},description:{type:xe,resolve:e=>e.description},type:{type:new Fe(lr),resolve:e=>e.type},defaultValue:{type:xe,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:r,defaultValue:t}=e,a=Vr(t,r);return a?Te(a):null}},isDeprecated:{type:new Fe(rr),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:xe,resolve:e=>e.deprecationReason}})}),qo=new cr({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new Fe(xe),resolve:e=>e.name},description:{type:xe,resolve:e=>e.description},isDeprecated:{type:new Fe(rr),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:xe,resolve:e=>e.deprecationReason}})});var ke;(function(e){e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.INPUT_OBJECT="INPUT_OBJECT",e.LIST="LIST",e.NON_NULL="NON_NULL"})(ke||(ke={}));const Ko=new Kr({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:ke.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:ke.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:ke.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:ke.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:ke.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:ke.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:ke.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:ke.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),ha={name:"__schema",type:new Fe(In),description:"Access the current type schema of this server.",args:[],resolve:(e,r,t,{schema:a})=>a,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},fa={name:"__type",type:lr,description:"Request the type information of a single type.",args:[{name:"name",description:void 0,type:new Fe(xe),defaultValue:void 0,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0}],resolve:(e,{name:r},t,{schema:a})=>a.getType(r),deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},ya={name:"__typename",type:new Fe(xe),description:"The name of the current Object type at runtime.",args:[],resolve:(e,r,t,{parentType:a})=>a.name,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},Ma=Object.freeze([In,Vo,Uo,lr,zo,La,qo,Ko]);function yt(e){return Ma.some(({name:r})=>e.name===r)}function $c(e){return vr(e,Gt)}function Jo(e){if(!$c(e))throw new Error(`Expected ${_(e)} to be a GraphQL schema.`);return e}class Gt{constructor(r){var t,a;this.__validationErrors=r.assumeValid===!0?[]:void 0,ir(r)||he(!1,"Must provide configuration object."),!r.types||Array.isArray(r.types)||he(!1,`"types" must be Array if provided but got: ${_(r.types)}.`),!r.directives||Array.isArray(r.directives)||he(!1,`"directives" must be Array if provided but got: ${_(r.directives)}.`),this.description=r.description,this.extensions=mr(r.extensions),this.astNode=r.astNode,this.extensionASTNodes=(t=r.extensionASTNodes)!==null&&t!==void 0?t:[],this._queryType=r.query,this._mutationType=r.mutation,this._subscriptionType=r.subscription,this._directives=(a=r.directives)!==null&&a!==void 0?a:Xr;const n=new Set(r.types);if(r.types!=null)for(const i of r.types)n.delete(i),fr(i,n);this._queryType!=null&&fr(this._queryType,n),this._mutationType!=null&&fr(this._mutationType,n),this._subscriptionType!=null&&fr(this._subscriptionType,n);for(const i of this._directives)if(Ln(i))for(const o of i.args)fr(o.type,n);fr(In,n),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null);for(const i of n){if(i==null)continue;const o=i.name;if(o||he(!1,"One of the provided types for building the Schema is missing a name."),this._typeMap[o]!==void 0)throw new Error(`Schema must contain uniquely named types but contains multiple types named "${o}".`);if(this._typeMap[o]=i,De(i)){for(const u of i.getInterfaces())if(De(u)){let s=this._implementationsMap[u.name];s===void 0&&(s=this._implementationsMap[u.name]={objects:[],interfaces:[]}),s.interfaces.push(i)}}else if(ge(i)){for(const u of i.getInterfaces())if(De(u)){let s=this._implementationsMap[u.name];s===void 0&&(s=this._implementationsMap[u.name]={objects:[],interfaces:[]}),s.objects.push(i)}}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(r){switch(r){case $e.QUERY:return this.getQueryType();case $e.MUTATION:return this.getMutationType();case $e.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(r){return this.getTypeMap()[r]}getPossibleTypes(r){return We(r)?r.getTypes():this.getImplementations(r).objects}getImplementations(r){const t=this._implementationsMap[r.name];return t??{objects:[],interfaces:[]}}isSubType(r,t){let a=this._subTypeMap[r.name];if(a===void 0){if(a=Object.create(null),We(r))for(const n of r.getTypes())a[n.name]=!0;else{const n=this.getImplementations(r);for(const i of n.objects)a[i.name]=!0;for(const i of n.interfaces)a[i.name]=!0}this._subTypeMap[r.name]=a}return a[t.name]!==void 0}getDirectives(){return this._directives}getDirective(r){return this.getDirectives().find(t=>t.name===r)}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:this.__validationErrors!==void 0}}}function fr(e,r){const t=Je(e);if(!r.has(t)){if(r.add(t),We(t))for(const a of t.getTypes())fr(a,r);else if(ge(t)||De(t)){for(const a of t.getInterfaces())fr(a,r);for(const a of Object.values(t.getFields())){fr(a.type,r);for(const n of a.args)fr(n.type,r)}}else if(Ce(t))for(const a of Object.values(t.getFields()))fr(a.type,r)}return r}function Yo(e){if(Jo(e),e.__validationErrors)return e.__validationErrors;const r=new Cf(e);Sf(r),Tf(r),Bf(r);const t=r.getErrors();return e.__validationErrors=t,t}function Qo(e){const r=Yo(e);if(r.length!==0)throw new Error(r.map(t=>t.message).join(`

`))}class Cf{constructor(r){this._errors=[],this.schema=r}reportError(r,t){const a=Array.isArray(t)?t.filter(Boolean):t;this._errors.push(new x(r,{nodes:a}))}getErrors(){return this._errors}}function Sf(e){const r=e.schema,t=r.getQueryType();if(!t)e.reportError("Query root type must be provided.",r.astNode);else if(!ge(t)){var a;e.reportError(`Query root type must be Object type, it cannot be ${_(t)}.`,(a=Hi(r,$e.QUERY))!==null&&a!==void 0?a:t.astNode)}const n=r.getMutationType();if(n&&!ge(n)){var i;e.reportError(`Mutation root type must be Object type if provided, it cannot be ${_(n)}.`,(i=Hi(r,$e.MUTATION))!==null&&i!==void 0?i:n.astNode)}const o=r.getSubscriptionType();if(o&&!ge(o)){var u;e.reportError(`Subscription root type must be Object type if provided, it cannot be ${_(o)}.`,(u=Hi(r,$e.SUBSCRIPTION))!==null&&u!==void 0?u:o.astNode)}}function Hi(e,r){var t;return(t=[e.astNode,...e.extensionASTNodes].flatMap(a=>{var n;return(n=a?.operationTypes)!==null&&n!==void 0?n:[]}).find(a=>a.operation===r))===null||t===void 0?void 0:t.type}function Tf(e){for(const t of e.schema.getDirectives()){if(!Ln(t)){e.reportError(`Expected directive but got: ${_(t)}.`,t?.astNode);continue}ht(e,t);for(const a of t.args)if(ht(e,a),er(a.type)||e.reportError(`The type of @${t.name}(${a.name}:) must be Input Type but got: ${_(a.type)}.`,a.astNode),Qr(a)&&a.deprecationReason!=null){var r;e.reportError(`Required argument @${t.name}(${a.name}:) cannot be deprecated.`,[Xo(a.astNode),(r=a.astNode)===null||r===void 0?void 0:r.type])}}}function ht(e,r){r.name.startsWith("__")&&e.reportError(`Name "${r.name}" must not begin with "__", which is reserved by GraphQL introspection.`,r.astNode)}function Bf(e){const r=Of(e),t=e.schema.getTypeMap();for(const a of Object.values(t)){if(!Ba(a)){e.reportError(`Expected GraphQL named type but got: ${_(a)}.`,a.astNode);continue}yt(a)||ht(e,a),ge(a)||De(a)?(_s(e,a),Ps(e,a)):We(a)?Lf(e,a):He(a)?Mf(e,a):Ce(a)&&(If(e,a),r(a))}}function _s(e,r){const t=Object.values(r.getFields());t.length===0&&e.reportError(`Type ${r.name} must define one or more fields.`,[r.astNode,...r.extensionASTNodes]);for(const o of t){if(ht(e,o),!Ur(o.type)){var a;e.reportError(`The type of ${r.name}.${o.name} must be Output Type but got: ${_(o.type)}.`,(a=o.astNode)===null||a===void 0?void 0:a.type)}for(const u of o.args){const s=u.name;if(ht(e,u),!er(u.type)){var n;e.reportError(`The type of ${r.name}.${o.name}(${s}:) must be Input Type but got: ${_(u.type)}.`,(n=u.astNode)===null||n===void 0?void 0:n.type)}if(Qr(u)&&u.deprecationReason!=null){var i;e.reportError(`Required argument ${r.name}.${o.name}(${s}:) cannot be deprecated.`,[Xo(u.astNode),(i=u.astNode)===null||i===void 0?void 0:i.type])}}}}function Ps(e,r){const t=Object.create(null);for(const a of r.getInterfaces()){if(!De(a)){e.reportError(`Type ${_(r)} must only implement Interface types, it cannot implement ${_(a)}.`,pa(r,a));continue}if(r===a){e.reportError(`Type ${r.name} cannot implement itself because it would create a circular reference.`,pa(r,a));continue}if(t[a.name]){e.reportError(`Type ${r.name} can only implement ${a.name} once.`,pa(r,a));continue}t[a.name]=!0,Rf(e,r,a),Nf(e,r,a)}}function Nf(e,r,t){const a=r.getFields();for(const s of Object.values(t.getFields())){const l=s.name,c=a[l];if(!c){e.reportError(`Interface field ${t.name}.${l} expected but ${r.name} does not provide it.`,[s.astNode,r.astNode,...r.extensionASTNodes]);continue}if(!pt(e.schema,c.type,s.type)){var n,i;e.reportError(`Interface field ${t.name}.${l} expects type ${_(s.type)} but ${r.name}.${l} is type ${_(c.type)}.`,[(n=s.astNode)===null||n===void 0?void 0:n.type,(i=c.astNode)===null||i===void 0?void 0:i.type])}for(const d of s.args){const p=d.name,h=c.args.find(g=>g.name===p);if(!h){e.reportError(`Interface field argument ${t.name}.${l}(${p}:) expected but ${r.name}.${l} does not provide it.`,[d.astNode,c.astNode]);continue}if(!un(d.type,h.type)){var o,u;e.reportError(`Interface field argument ${t.name}.${l}(${p}:) expects type ${_(d.type)} but ${r.name}.${l}(${p}:) is type ${_(h.type)}.`,[(o=d.astNode)===null||o===void 0?void 0:o.type,(u=h.astNode)===null||u===void 0?void 0:u.type])}}for(const d of c.args){const p=d.name;!s.args.find(g=>g.name===p)&&Qr(d)&&e.reportError(`Object field ${r.name}.${l} includes required argument ${p} that is missing from the Interface field ${t.name}.${l}.`,[d.astNode,s.astNode])}}}function Rf(e,r,t){const a=r.getInterfaces();for(const n of t.getInterfaces())a.includes(n)||e.reportError(n===r?`Type ${r.name} cannot implement ${t.name} because it would create a circular reference.`:`Type ${r.name} must implement ${n.name} because it is implemented by ${t.name}.`,[...pa(t,n),...pa(r,t)])}function Lf(e,r){const t=r.getTypes();t.length===0&&e.reportError(`Union type ${r.name} must define one or more member types.`,[r.astNode,...r.extensionASTNodes]);const a=Object.create(null);for(const n of t){if(a[n.name]){e.reportError(`Union type ${r.name} can only include type ${n.name} once.`,Gs(r,n.name));continue}a[n.name]=!0,ge(n)||e.reportError(`Union type ${r.name} can only include Object types, it cannot include ${_(n)}.`,Gs(r,String(n)))}}function Mf(e,r){const t=r.getValues();t.length===0&&e.reportError(`Enum type ${r.name} must define one or more values.`,[r.astNode,...r.extensionASTNodes]);for(const a of t)ht(e,a)}function If(e,r){const t=Object.values(r.getFields());t.length===0&&e.reportError(`Input Object type ${r.name} must define one or more fields.`,[r.astNode,...r.extensionASTNodes]);for(const i of t){if(ht(e,i),!er(i.type)){var a;e.reportError(`The type of ${r.name}.${i.name} must be Input Type but got: ${_(i.type)}.`,(a=i.astNode)===null||a===void 0?void 0:a.type)}if(Nn(i)&&i.deprecationReason!=null){var n;e.reportError(`Required input field ${r.name}.${i.name} cannot be deprecated.`,[Xo(i.astNode),(n=i.astNode)===null||n===void 0?void 0:n.type])}r.isOneOf&&xf(r,i,e)}}function xf(e,r,t){if(pe(r.type)){var a;t.reportError(`OneOf input field ${e.name}.${r.name} must be nullable.`,(a=r.astNode)===null||a===void 0?void 0:a.type)}r.defaultValue!==void 0&&t.reportError(`OneOf input field ${e.name}.${r.name} cannot have a default value.`,r.astNode)}function Of(e){const r=Object.create(null),t=[],a=Object.create(null);return n;function n(i){if(r[i.name])return;r[i.name]=!0,a[i.name]=t.length;const o=Object.values(i.getFields());for(const u of o)if(pe(u.type)&&Ce(u.type.ofType)){const s=u.type.ofType,l=a[s.name];if(t.push(u),l===void 0)n(s);else{const c=t.slice(l),d=c.map(p=>p.name).join(".");e.reportError(`Cannot reference Input Object "${s.name}" within itself through a series of non-null fields: "${d}".`,c.map(p=>p.astNode))}t.pop()}a[i.name]=void 0}}function pa(e,r){const{astNode:t,extensionASTNodes:a}=e;return(t!=null?[t,...a]:a).flatMap(i=>{var o;return(o=i.interfaces)!==null&&o!==void 0?o:[]}).filter(i=>i.name.value===r.name)}function Gs(e,r){const{astNode:t,extensionASTNodes:a}=e;return(t!=null?[t,...a]:a).flatMap(i=>{var o;return(o=i.types)!==null&&o!==void 0?o:[]}).filter(i=>i.name.value===r)}function Xo(e){var r;return e==null||(r=e.directives)===null||r===void 0?void 0:r.find(t=>t.name.value===Mn.name)}function tr(e,r){switch(r.kind){case v.LIST_TYPE:{const t=tr(e,r.type);return t&&new ze(t)}case v.NON_NULL_TYPE:{const t=tr(e,r.type);return t&&new Fe(t)}case v.NAMED_TYPE:return e.getType(r.name.value)}}class Zo{constructor(r,t,a){this._schema=r,this._typeStack=[],this._parentTypeStack=[],this._inputTypeStack=[],this._fieldDefStack=[],this._defaultValueStack=[],this._directive=null,this._argument=null,this._enumValue=null,this._getFieldDef=a??_f,t&&(er(t)&&this._inputTypeStack.push(t),wr(t)&&this._parentTypeStack.push(t),Ur(t)&&this._typeStack.push(t))}get[Symbol.toStringTag](){return"TypeInfo"}getType(){if(this._typeStack.length>0)return this._typeStack[this._typeStack.length-1]}getParentType(){if(this._parentTypeStack.length>0)return this._parentTypeStack[this._parentTypeStack.length-1]}getInputType(){if(this._inputTypeStack.length>0)return this._inputTypeStack[this._inputTypeStack.length-1]}getParentInputType(){if(this._inputTypeStack.length>1)return this._inputTypeStack[this._inputTypeStack.length-2]}getFieldDef(){if(this._fieldDefStack.length>0)return this._fieldDefStack[this._fieldDefStack.length-1]}getDefaultValue(){if(this._defaultValueStack.length>0)return this._defaultValueStack[this._defaultValueStack.length-1]}getDirective(){return this._directive}getArgument(){return this._argument}getEnumValue(){return this._enumValue}enter(r){const t=this._schema;switch(r.kind){case v.SELECTION_SET:{const n=Je(this.getType());this._parentTypeStack.push(wr(n)?n:void 0);break}case v.FIELD:{const n=this.getParentType();let i,o;n&&(i=this._getFieldDef(t,n,r),i&&(o=i.type)),this._fieldDefStack.push(i),this._typeStack.push(Ur(o)?o:void 0);break}case v.DIRECTIVE:this._directive=t.getDirective(r.name.value);break;case v.OPERATION_DEFINITION:{const n=t.getRootType(r.operation);this._typeStack.push(ge(n)?n:void 0);break}case v.INLINE_FRAGMENT:case v.FRAGMENT_DEFINITION:{const n=r.typeCondition,i=n?tr(t,n):Je(this.getType());this._typeStack.push(Ur(i)?i:void 0);break}case v.VARIABLE_DEFINITION:{const n=tr(t,r.type);this._inputTypeStack.push(er(n)?n:void 0);break}case v.ARGUMENT:{var a;let n,i;const o=(a=this.getDirective())!==null&&a!==void 0?a:this.getFieldDef();o&&(n=o.args.find(u=>u.name===r.name.value),n&&(i=n.type)),this._argument=n,this._defaultValueStack.push(n?n.defaultValue:void 0),this._inputTypeStack.push(er(i)?i:void 0);break}case v.LIST:{const n=Mo(this.getInputType()),i=Be(n)?n.ofType:n;this._defaultValueStack.push(void 0),this._inputTypeStack.push(er(i)?i:void 0);break}case v.OBJECT_FIELD:{const n=Je(this.getInputType());let i,o;Ce(n)&&(o=n.getFields()[r.name.value],o&&(i=o.type)),this._defaultValueStack.push(o?o.defaultValue:void 0),this._inputTypeStack.push(er(i)?i:void 0);break}case v.ENUM:{const n=Je(this.getInputType());let i;He(n)&&(i=n.getValue(r.value)),this._enumValue=i;break}}}leave(r){switch(r.kind){case v.SELECTION_SET:this._parentTypeStack.pop();break;case v.FIELD:this._fieldDefStack.pop(),this._typeStack.pop();break;case v.DIRECTIVE:this._directive=null;break;case v.OPERATION_DEFINITION:case v.INLINE_FRAGMENT:case v.FRAGMENT_DEFINITION:this._typeStack.pop();break;case v.VARIABLE_DEFINITION:this._inputTypeStack.pop();break;case v.ARGUMENT:this._argument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case v.LIST:case v.OBJECT_FIELD:this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case v.ENUM:this._enumValue=null;break}}}function _f(e,r,t){const a=t.name.value;if(a===ha.name&&e.getQueryType()===r)return ha;if(a===fa.name&&e.getQueryType()===r)return fa;if(a===ya.name&&wr(r))return ya;if(ge(r)||De(r))return r.getFields()[a]}function eu(e,r){return{enter(...t){const a=t[0];e.enter(a);const n=Tt(r,a.kind).enter;if(n){const i=n.apply(r,t);return i!==void 0&&(e.leave(a),eo(i)&&e.enter(i)),i}},leave(...t){const a=t[0],n=Tt(r,a.kind).leave;let i;return n&&(i=n.apply(r,t)),e.leave(a),i}}}function Pf(e){return ru(e)||tu(e)||au(e)}function ru(e){return e.kind===v.OPERATION_DEFINITION||e.kind===v.FRAGMENT_DEFINITION}function Gf(e){return e.kind===v.FIELD||e.kind===v.FRAGMENT_SPREAD||e.kind===v.INLINE_FRAGMENT}function Wc(e){return e.kind===v.VARIABLE||e.kind===v.INT||e.kind===v.FLOAT||e.kind===v.STRING||e.kind===v.BOOLEAN||e.kind===v.NULL||e.kind===v.ENUM||e.kind===v.LIST||e.kind===v.OBJECT}function no(e){return Wc(e)&&(e.kind===v.LIST?e.values.some(no):e.kind===v.OBJECT?e.fields.some(r=>no(r.value)):e.kind!==v.VARIABLE)}function Hf(e){return e.kind===v.NAMED_TYPE||e.kind===v.LIST_TYPE||e.kind===v.NON_NULL_TYPE}function tu(e){return e.kind===v.SCHEMA_DEFINITION||Ht(e)||e.kind===v.DIRECTIVE_DEFINITION}function Ht(e){return e.kind===v.SCALAR_TYPE_DEFINITION||e.kind===v.OBJECT_TYPE_DEFINITION||e.kind===v.INTERFACE_TYPE_DEFINITION||e.kind===v.UNION_TYPE_DEFINITION||e.kind===v.ENUM_TYPE_DEFINITION||e.kind===v.INPUT_OBJECT_TYPE_DEFINITION}function au(e){return e.kind===v.SCHEMA_EXTENSION||xn(e)}function xn(e){return e.kind===v.SCALAR_TYPE_EXTENSION||e.kind===v.OBJECT_TYPE_EXTENSION||e.kind===v.INTERFACE_TYPE_EXTENSION||e.kind===v.UNION_TYPE_EXTENSION||e.kind===v.ENUM_TYPE_EXTENSION||e.kind===v.INPUT_OBJECT_TYPE_EXTENSION}function Vc(e){return{Document(r){for(const t of r.definitions)if(!ru(t)){const a=t.kind===v.SCHEMA_DEFINITION||t.kind===v.SCHEMA_EXTENSION?"schema":'"'+t.name.value+'"';e.reportError(new x(`The ${a} definition is not executable.`,{nodes:t}))}return!1}}}function Uc(e){return{Field(r){const t=e.getParentType();if(t&&!e.getFieldDef()){const n=e.getSchema(),i=r.name.value;let o=Mr("to use an inline fragment on",jf(n,t,i));o===""&&(o=Mr($f(t,i))),e.reportError(new x(`Cannot query field "${i}" on type "${t.name}".`+o,{nodes:r}))}}}}function jf(e,r,t){if(!kr(r))return[];const a=new Set,n=Object.create(null);for(const o of e.getPossibleTypes(r))if(o.getFields()[t]){a.add(o),n[o.name]=1;for(const u of o.getInterfaces()){var i;u.getFields()[t]&&(a.add(u),n[u.name]=((i=n[u.name])!==null&&i!==void 0?i:0)+1)}}return[...a].sort((o,u)=>{const s=n[u.name]-n[o.name];return s!==0?s:De(o)&&e.isSubType(o,u)?-1:De(u)&&e.isSubType(u,o)?1:Ca(o.name,u.name)}).map(o=>o.name)}function $f(e,r){if(ge(e)||De(e)){const t=Object.keys(e.getFields());return Yr(r,t)}return[]}function zc(e){return{InlineFragment(r){const t=r.typeCondition;if(t){const a=tr(e.getSchema(),t);if(a&&!wr(a)){const n=Te(t);e.reportError(new x(`Fragment cannot condition on non composite type "${n}".`,{nodes:t}))}}},FragmentDefinition(r){const t=tr(e.getSchema(),r.typeCondition);if(t&&!wr(t)){const a=Te(r.typeCondition);e.reportError(new x(`Fragment "${r.name.value}" cannot condition on non composite type "${a}".`,{nodes:r.typeCondition}))}}}}function qc(e){return{...Kc(e),Argument(r){const t=e.getArgument(),a=e.getFieldDef(),n=e.getParentType();if(!t&&a&&n){const i=r.name.value,o=a.args.map(s=>s.name),u=Yr(i,o);e.reportError(new x(`Unknown argument "${i}" on field "${n.name}.${a.name}".`+Mr(u),{nodes:r}))}}}}function Kc(e){const r=Object.create(null),t=e.getSchema(),a=t?t.getDirectives():Xr;for(const o of a)r[o.name]=o.args.map(u=>u.name);const n=e.getDocument().definitions;for(const o of n)if(o.kind===v.DIRECTIVE_DEFINITION){var i;const u=(i=o.arguments)!==null&&i!==void 0?i:[];r[o.name.value]=u.map(s=>s.name.value)}return{Directive(o){const u=o.name.value,s=r[u];if(o.arguments&&s)for(const l of o.arguments){const c=l.name.value;if(!s.includes(c)){const d=Yr(c,s);e.reportError(new x(`Unknown argument "${c}" on directive "@${u}".`+Mr(d),{nodes:l}))}}return!1}}}function nu(e){const r=Object.create(null),t=e.getSchema(),a=t?t.getDirectives():Xr;for(const i of a)r[i.name]=i.locations;const n=e.getDocument().definitions;for(const i of n)i.kind===v.DIRECTIVE_DEFINITION&&(r[i.name.value]=i.locations.map(o=>o.value));return{Directive(i,o,u,s,l){const c=i.name.value,d=r[c];if(!d){e.reportError(new x(`Unknown directive "@${c}".`,{nodes:i}));return}const p=Wf(l);p&&!d.includes(p)&&e.reportError(new x(`Directive "@${c}" may not be used on ${p}.`,{nodes:i}))}}}function Wf(e){const r=e[e.length-1];switch("kind"in r||_e(!1),r.kind){case v.OPERATION_DEFINITION:return Vf(r.operation);case v.FIELD:return oe.FIELD;case v.FRAGMENT_SPREAD:return oe.FRAGMENT_SPREAD;case v.INLINE_FRAGMENT:return oe.INLINE_FRAGMENT;case v.FRAGMENT_DEFINITION:return oe.FRAGMENT_DEFINITION;case v.VARIABLE_DEFINITION:return oe.VARIABLE_DEFINITION;case v.SCHEMA_DEFINITION:case v.SCHEMA_EXTENSION:return oe.SCHEMA;case v.SCALAR_TYPE_DEFINITION:case v.SCALAR_TYPE_EXTENSION:return oe.SCALAR;case v.OBJECT_TYPE_DEFINITION:case v.OBJECT_TYPE_EXTENSION:return oe.OBJECT;case v.FIELD_DEFINITION:return oe.FIELD_DEFINITION;case v.INTERFACE_TYPE_DEFINITION:case v.INTERFACE_TYPE_EXTENSION:return oe.INTERFACE;case v.UNION_TYPE_DEFINITION:case v.UNION_TYPE_EXTENSION:return oe.UNION;case v.ENUM_TYPE_DEFINITION:case v.ENUM_TYPE_EXTENSION:return oe.ENUM;case v.ENUM_VALUE_DEFINITION:return oe.ENUM_VALUE;case v.INPUT_OBJECT_TYPE_DEFINITION:case v.INPUT_OBJECT_TYPE_EXTENSION:return oe.INPUT_OBJECT;case v.INPUT_VALUE_DEFINITION:{const t=e[e.length-3];return"kind"in t||_e(!1),t.kind===v.INPUT_OBJECT_TYPE_DEFINITION?oe.INPUT_FIELD_DEFINITION:oe.ARGUMENT_DEFINITION}default:_e(!1,"Unexpected kind: "+_(r.kind))}}function Vf(e){switch(e){case $e.QUERY:return oe.QUERY;case $e.MUTATION:return oe.MUTATION;case $e.SUBSCRIPTION:return oe.SUBSCRIPTION}}function Jc(e){return{FragmentSpread(r){const t=r.name.value;e.getFragment(t)||e.reportError(new x(`Unknown fragment "${t}".`,{nodes:r.name}))}}}function iu(e){const r=e.getSchema(),t=r?r.getTypeMap():Object.create(null),a=Object.create(null);for(const i of e.getDocument().definitions)Ht(i)&&(a[i.name.value]=!0);const n=[...Object.keys(t),...Object.keys(a)];return{NamedType(i,o,u,s,l){const c=i.name.value;if(!t[c]&&!a[c]){var d;const p=(d=l[2])!==null&&d!==void 0?d:u,h=p!=null&&Uf(p);if(h&&Hs.includes(c))return;const g=Yr(c,h?Hs.concat(n):n);e.reportError(new x(`Unknown type "${c}".`+Mr(g),{nodes:i}))}}}}const Hs=[...Na,...Ma].map(e=>e.name);function Uf(e){return"kind"in e&&(tu(e)||au(e))}function Yc(e){let r=0;return{Document(t){r=t.definitions.filter(a=>a.kind===v.OPERATION_DEFINITION).length},OperationDefinition(t){!t.name&&r>1&&e.reportError(new x("This anonymous operation must be the only defined operation.",{nodes:t}))}}}function Qc(e){var r,t,a;const n=e.getSchema(),i=(r=(t=(a=n?.astNode)!==null&&a!==void 0?a:n?.getQueryType())!==null&&t!==void 0?t:n?.getMutationType())!==null&&r!==void 0?r:n?.getSubscriptionType();let o=0;return{SchemaDefinition(u){if(i){e.reportError(new x("Cannot define a new schema within a schema extension.",{nodes:u}));return}o>0&&e.reportError(new x("Must provide only one schema definition.",{nodes:u})),++o}}}const zf=3;function Xc(e){function r(t,a=Object.create(null),n=0){if(t.kind===v.FRAGMENT_SPREAD){const i=t.name.value;if(a[i]===!0)return!1;const o=e.getFragment(i);if(!o)return!1;try{return a[i]=!0,r(o,a,n)}finally{a[i]=void 0}}if(t.kind===v.FIELD&&(t.name.value==="fields"||t.name.value==="interfaces"||t.name.value==="possibleTypes"||t.name.value==="inputFields")&&(n++,n>=zf))return!0;if("selectionSet"in t&&t.selectionSet){for(const i of t.selectionSet.selections)if(r(i,a,n))return!0}return!1}return{Field(t){if((t.name.value==="__schema"||t.name.value==="__type")&&r(t))return e.reportError(new x("Maximum introspection depth exceeded",{nodes:[t]})),!1}}}function Zc(e){const r=Object.create(null),t=[],a=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition(i){return n(i),!1}};function n(i){if(r[i.name.value])return;const o=i.name.value;r[o]=!0;const u=e.getFragmentSpreads(i.selectionSet);if(u.length!==0){a[o]=t.length;for(const s of u){const l=s.name.value,c=a[l];if(t.push(s),c===void 0){const d=e.getFragment(l);d&&n(d)}else{const d=t.slice(c),p=d.slice(0,-1).map(h=>'"'+h.name.value+'"').join(", ");e.reportError(new x(`Cannot spread fragment "${l}" within itself`+(p!==""?` via ${p}.`:"."),{nodes:d}))}t.pop()}a[o]=void 0}}}function ed(e){let r=Object.create(null);return{OperationDefinition:{enter(){r=Object.create(null)},leave(t){const a=e.getRecursiveVariableUsages(t);for(const{node:n}of a){const i=n.name.value;r[i]!==!0&&e.reportError(new x(t.name?`Variable "$${i}" is not defined by operation "${t.name.value}".`:`Variable "$${i}" is not defined.`,{nodes:[n,t]}))}}},VariableDefinition(t){r[t.variable.name.value]=!0}}}function rd(e){const r=[],t=[];return{OperationDefinition(a){return r.push(a),!1},FragmentDefinition(a){return t.push(a),!1},Document:{leave(){const a=Object.create(null);for(const n of r)for(const i of e.getRecursivelyReferencedFragments(n))a[i.name.value]=!0;for(const n of t){const i=n.name.value;a[i]!==!0&&e.reportError(new x(`Fragment "${i}" is never used.`,{nodes:n}))}}}}}function td(e){let r=[];return{OperationDefinition:{enter(){r=[]},leave(t){const a=Object.create(null),n=e.getRecursiveVariableUsages(t);for(const{node:i}of n)a[i.name.value]=!0;for(const i of r){const o=i.variable.name.value;a[o]!==!0&&e.reportError(new x(t.name?`Variable "$${o}" is never used in operation "${t.name.value}".`:`Variable "$${o}" is never used.`,{nodes:i}))}}},VariableDefinition(t){r.push(t)}}}function On(e){switch(e.kind){case v.OBJECT:return{...e,fields:qf(e.fields)};case v.LIST:return{...e,values:e.values.map(On)};case v.INT:case v.FLOAT:case v.STRING:case v.BOOLEAN:case v.NULL:case v.ENUM:case v.VARIABLE:return e}}function qf(e){return e.map(r=>({...r,value:On(r.value)})).sort((r,t)=>Ca(r.name.value,t.name.value))}function ad(e){return Array.isArray(e)?e.map(([r,t])=>`subfields "${r}" conflict because `+ad(t)).join(" and "):e}function nd(e){const r=new Zf,t=new Map;return{SelectionSet(a){const n=Kf(e,t,r,e.getParentType(),a);for(const[[i,o],u,s]of n){const l=ad(o);e.reportError(new x(`Fields "${i}" conflict because ${l}. Use different aliases on the fields to fetch both if this was intentional.`,{nodes:u.concat(s)}))}}}}function Kf(e,r,t,a,n){const i=[],[o,u]=cn(e,r,a,n);if(Yf(e,i,r,t,o),u.length!==0)for(let s=0;s<u.length;s++){sn(e,i,r,t,!1,o,u[s]);for(let l=s+1;l<u.length;l++)ln(e,i,r,t,!1,u[s],u[l])}return i}function sn(e,r,t,a,n,i,o){const u=e.getFragment(o);if(!u)return;const[s,l]=oo(e,t,u);if(i!==s){ou(e,r,t,a,n,i,s);for(const c of l)a.has(c,o,n)||(a.add(c,o,n),sn(e,r,t,a,n,i,c))}}function ln(e,r,t,a,n,i,o){if(i===o||a.has(i,o,n))return;a.add(i,o,n);const u=e.getFragment(i),s=e.getFragment(o);if(!u||!s)return;const[l,c]=oo(e,t,u),[d,p]=oo(e,t,s);ou(e,r,t,a,n,l,d);for(const h of p)ln(e,r,t,a,n,i,h);for(const h of c)ln(e,r,t,a,n,h,o)}function Jf(e,r,t,a,n,i,o,u){const s=[],[l,c]=cn(e,r,n,i),[d,p]=cn(e,r,o,u);ou(e,s,r,t,a,l,d);for(const h of p)sn(e,s,r,t,a,l,h);for(const h of c)sn(e,s,r,t,a,d,h);for(const h of c)for(const g of p)ln(e,s,r,t,a,h,g);return s}function Yf(e,r,t,a,n){for(const[i,o]of Object.entries(n))if(o.length>1)for(let u=0;u<o.length;u++)for(let s=u+1;s<o.length;s++){const l=id(e,t,a,!1,i,o[u],o[s]);l&&r.push(l)}}function ou(e,r,t,a,n,i,o){for(const[u,s]of Object.entries(i)){const l=o[u];if(l)for(const c of s)for(const d of l){const p=id(e,t,a,n,u,c,d);p&&r.push(p)}}}function id(e,r,t,a,n,i,o){const[u,s,l]=i,[c,d,p]=o,h=a||u!==c&&ge(u)&&ge(c);if(!h){const N=s.name.value,T=d.name.value;if(N!==T)return[[n,`"${N}" and "${T}" are different fields`],[s],[d]];if(!Qf(s,d))return[[n,"they have differing arguments"],[s],[d]]}const g=l?.type,b=p?.type;if(g&&b&&io(g,b))return[[n,`they return conflicting types "${_(g)}" and "${_(b)}"`],[s],[d]];const F=s.selectionSet,D=d.selectionSet;if(F&&D){const N=Jf(e,r,t,h,Je(g),F,Je(b),D);return Xf(N,n,s,d)}}function Qf(e,r){const t=e.arguments,a=r.arguments;if(t===void 0||t.length===0)return a===void 0||a.length===0;if(a===void 0||a.length===0||t.length!==a.length)return!1;const n=new Map(a.map(({name:i,value:o})=>[i.value,o]));return t.every(i=>{const o=i.value,u=n.get(i.name.value);return u===void 0?!1:js(o)===js(u)})}function js(e){return Te(On(e))}function io(e,r){return Be(e)?Be(r)?io(e.ofType,r.ofType):!0:Be(r)?!0:pe(e)?pe(r)?io(e.ofType,r.ofType):!0:pe(r)?!0:Ar(e)||Ar(r)?e!==r:!1}function cn(e,r,t,a){const n=r.get(a);if(n)return n;const i=Object.create(null),o=Object.create(null);od(e,t,a,i,o);const u=[i,Object.keys(o)];return r.set(a,u),u}function oo(e,r,t){const a=r.get(t.selectionSet);if(a)return a;const n=tr(e.getSchema(),t.typeCondition);return cn(e,r,n,t.selectionSet)}function od(e,r,t,a,n){for(const i of t.selections)switch(i.kind){case v.FIELD:{const o=i.name.value;let u;(ge(r)||De(r))&&(u=r.getFields()[o]);const s=i.alias?i.alias.value:o;a[s]||(a[s]=[]),a[s].push([r,i,u]);break}case v.FRAGMENT_SPREAD:n[i.name.value]=!0;break;case v.INLINE_FRAGMENT:{const o=i.typeCondition,u=o?tr(e.getSchema(),o):r;od(e,u,i.selectionSet,a,n);break}}}function Xf(e,r,t,a){if(e.length>0)return[[r,e.map(([n])=>n)],[t,...e.map(([,n])=>n).flat()],[a,...e.map(([,,n])=>n).flat()]]}class Zf{constructor(){this._data=new Map}has(r,t,a){var n;const[i,o]=r<t?[r,t]:[t,r],u=(n=this._data.get(i))===null||n===void 0?void 0:n.get(o);return u===void 0?!1:a?!0:a===u}add(r,t,a){const[n,i]=r<t?[r,t]:[t,r],o=this._data.get(n);o===void 0?this._data.set(n,new Map([[i,a]])):o.set(i,a)}}function ud(e){return{InlineFragment(r){const t=e.getType(),a=e.getParentType();if(wr(t)&&wr(a)&&!ao(e.getSchema(),t,a)){const n=_(a),i=_(t);e.reportError(new x(`Fragment cannot be spread here as objects of type "${n}" can never be of type "${i}".`,{nodes:r}))}},FragmentSpread(r){const t=r.name.value,a=e1(e,t),n=e.getParentType();if(a&&n&&!ao(e.getSchema(),a,n)){const i=_(n),o=_(a);e.reportError(new x(`Fragment "${t}" cannot be spread here as objects of type "${i}" can never be of type "${o}".`,{nodes:r}))}}}}function e1(e,r){const t=e.getFragment(r);if(t){const a=tr(e.getSchema(),t.typeCondition);if(wr(a))return a}}function sd(e){const r=e.getSchema(),t=Object.create(null);for(const n of e.getDocument().definitions)Ht(n)&&(t[n.name.value]=n);return{ScalarTypeExtension:a,ObjectTypeExtension:a,InterfaceTypeExtension:a,UnionTypeExtension:a,EnumTypeExtension:a,InputObjectTypeExtension:a};function a(n){const i=n.name.value,o=t[i],u=r?.getType(i);let s;if(o?s=r1[o.kind]:u&&(s=t1(u)),s){if(s!==n.kind){const l=a1(n.kind);e.reportError(new x(`Cannot extend non-${l} type "${i}".`,{nodes:o?[o,n]:n}))}}else{const l=Object.keys({...t,...r?.getTypeMap()}),c=Yr(i,l);e.reportError(new x(`Cannot extend type "${i}" because it is not defined.`+Mr(c),{nodes:n.name}))}}}const r1={[v.SCALAR_TYPE_DEFINITION]:v.SCALAR_TYPE_EXTENSION,[v.OBJECT_TYPE_DEFINITION]:v.OBJECT_TYPE_EXTENSION,[v.INTERFACE_TYPE_DEFINITION]:v.INTERFACE_TYPE_EXTENSION,[v.UNION_TYPE_DEFINITION]:v.UNION_TYPE_EXTENSION,[v.ENUM_TYPE_DEFINITION]:v.ENUM_TYPE_EXTENSION,[v.INPUT_OBJECT_TYPE_DEFINITION]:v.INPUT_OBJECT_TYPE_EXTENSION};function t1(e){if(ur(e))return v.SCALAR_TYPE_EXTENSION;if(ge(e))return v.OBJECT_TYPE_EXTENSION;if(De(e))return v.INTERFACE_TYPE_EXTENSION;if(We(e))return v.UNION_TYPE_EXTENSION;if(He(e))return v.ENUM_TYPE_EXTENSION;if(Ce(e))return v.INPUT_OBJECT_TYPE_EXTENSION;_e(!1,"Unexpected type: "+_(e))}function a1(e){switch(e){case v.SCALAR_TYPE_EXTENSION:return"scalar";case v.OBJECT_TYPE_EXTENSION:return"object";case v.INTERFACE_TYPE_EXTENSION:return"interface";case v.UNION_TYPE_EXTENSION:return"union";case v.ENUM_TYPE_EXTENSION:return"enum";case v.INPUT_OBJECT_TYPE_EXTENSION:return"input object";default:_e(!1,"Unexpected kind: "+_(e))}}function ld(e){return{...cd(e),Field:{leave(r){var t;const a=e.getFieldDef();if(!a)return!1;const n=new Set((t=r.arguments)===null||t===void 0?void 0:t.map(i=>i.name.value));for(const i of a.args)if(!n.has(i.name)&&Qr(i)){const o=_(i.type);e.reportError(new x(`Field "${a.name}" argument "${i.name}" of type "${o}" is required, but it was not provided.`,{nodes:r}))}}}}}function cd(e){var r;const t=Object.create(null),a=e.getSchema(),n=(r=a?.getDirectives())!==null&&r!==void 0?r:Xr;for(const u of n)t[u.name]=Ir(u.args.filter(Qr),s=>s.name);const i=e.getDocument().definitions;for(const u of i)if(u.kind===v.DIRECTIVE_DEFINITION){var o;const s=(o=u.arguments)!==null&&o!==void 0?o:[];t[u.name.value]=Ir(s.filter(n1),l=>l.name.value)}return{Directive:{leave(u){const s=u.name.value,l=t[s];if(l){var c;const d=(c=u.arguments)!==null&&c!==void 0?c:[],p=new Set(d.map(h=>h.name.value));for(const[h,g]of Object.entries(l))if(!p.has(h)){const b=Sa(g.type)?_(g.type):Te(g.type);e.reportError(new x(`Directive "@${s}" argument "${h}" of type "${b}" is required, but it was not provided.`,{nodes:u}))}}}}}}function n1(e){return e.type.kind===v.NON_NULL_TYPE&&e.defaultValue==null}function dd(e){return{Field(r){const t=e.getType(),a=r.selectionSet;if(t){if(Ar(Je(t))){if(a){const n=r.name.value,i=_(t);e.reportError(new x(`Field "${n}" must not have a selection since type "${i}" has no subfields.`,{nodes:a}))}}else if(!a){const n=r.name.value,i=_(t);e.reportError(new x(`Field "${n}" of type "${i}" must have a selection of subfields. Did you mean "${n} { ... }"?`,{nodes:r}))}}}}}function pd(e){return e.map(r=>typeof r=="number"?"["+r.toString()+"]":"."+r).join("")}function Lt(e,r,t){return{prev:e,key:r,typename:t}}function Ke(e){const r=[];let t=e;for(;t;)r.push(t.key),t=t.prev;return r.reverse()}function md(e,r,t=i1){return la(e,r,t,void 0)}function i1(e,r,t){let a="Invalid value "+_(r);throw e.length>0&&(a+=` at "value${pd(e)}"`),t.message=a+": "+t.message,t}function la(e,r,t,a){if(pe(r)){if(e!=null)return la(e,r.ofType,t,a);t(Ke(a),e,new x(`Expected non-nullable type "${_(r)}" not to be null.`));return}if(e==null)return null;if(Be(r)){const n=r.ofType;return Wo(e)?Array.from(e,(i,o)=>{const u=Lt(a,o,void 0);return la(i,n,t,u)}):[la(e,n,t,a)]}if(Ce(r)){if(!ir(e)){t(Ke(a),e,new x(`Expected type "${r.name}" to be an object.`));return}const n={},i=r.getFields();for(const o of Object.values(i)){const u=e[o.name];if(u===void 0){if(o.defaultValue!==void 0)n[o.name]=o.defaultValue;else if(pe(o.type)){const s=_(o.type);t(Ke(a),e,new x(`Field "${o.name}" of required type "${s}" was not provided.`))}continue}n[o.name]=la(u,o.type,t,Lt(a,o.name,r.name))}for(const o of Object.keys(e))if(!i[o]){const u=Yr(o,Object.keys(r.getFields()));t(Ke(a),e,new x(`Field "${o}" is not defined by type "${r.name}".`+Mr(u)))}if(r.isOneOf){const o=Object.keys(n);o.length!==1&&t(Ke(a),e,new x(`Exactly one key must be specified for OneOf type "${r.name}".`));const u=o[0],s=n[u];s===null&&t(Ke(a).concat(u),s,new x(`Field "${u}" must be non-null.`))}return n}if(Ar(r)){let n;try{n=r.parseValue(e)}catch(i){i instanceof x?t(Ke(a),e,i):t(Ke(a),e,new x(`Expected type "${r.name}". `+i.message,{originalError:i}));return}return n===void 0&&t(Ke(a),e,new x(`Expected type "${r.name}".`)),n}_e(!1,"Unexpected input type: "+_(r))}function Er(e,r,t){if(e){if(e.kind===v.VARIABLE){const a=e.name.value;if(t==null||t[a]===void 0)return;const n=t[a];return n===null&&pe(r)?void 0:n}if(pe(r))return e.kind===v.NULL?void 0:Er(e,r.ofType,t);if(e.kind===v.NULL)return null;if(Be(r)){const a=r.ofType;if(e.kind===v.LIST){const i=[];for(const o of e.values)if($s(o,t)){if(pe(a))return;i.push(null)}else{const u=Er(o,a,t);if(u===void 0)return;i.push(u)}return i}const n=Er(e,a,t);return n===void 0?void 0:[n]}if(Ce(r)){if(e.kind!==v.OBJECT)return;const a=Object.create(null),n=Ir(e.fields,i=>i.name.value);for(const i of Object.values(r.getFields())){const o=n[i.name];if(!o||$s(o.value,t)){if(i.defaultValue!==void 0)a[i.name]=i.defaultValue;else if(pe(i.type))return;continue}const u=Er(o.value,i.type,t);if(u===void 0)return;a[i.name]=u}if(r.isOneOf){const i=Object.keys(a);if(i.length!==1||a[i[0]]===null)return}return a}if(Ar(r)){let a;try{a=r.parseLiteral(e,t)}catch{return}return a===void 0?void 0:a}_e(!1,"Unexpected input type: "+_(r))}}function $s(e,r){return e.kind===v.VARIABLE&&(r==null||r[e.name.value]===void 0)}function Fd(e,r,t,a){const n=[],i=a?.maxErrors;try{const o=o1(e,r,t,u=>{if(i!=null&&n.length>=i)throw new x("Too many errors processing variables, error limit reached. Execution aborted.");n.push(u)});if(n.length===0)return{coerced:o}}catch(o){n.push(o)}return{errors:n}}function o1(e,r,t,a){const n={};for(const i of r){const o=i.variable.name.value,u=tr(e,i.type);if(!er(u)){const l=Te(i.type);a(new x(`Variable "$${o}" expected value of type "${l}" which cannot be used as an input type.`,{nodes:i.type}));continue}if(!hd(t,o)){if(i.defaultValue)n[o]=Er(i.defaultValue,u);else if(pe(u)){const l=_(u);a(new x(`Variable "$${o}" of required type "${l}" was not provided.`,{nodes:i}))}continue}const s=t[o];if(s===null&&pe(u)){const l=_(u);a(new x(`Variable "$${o}" of non-null type "${l}" must not be null.`,{nodes:i}));continue}n[o]=md(s,u,(l,c,d)=>{let p=`Variable "$${o}" got invalid value `+_(c);l.length>0&&(p+=` at "${o}${pd(l)}"`),a(new x(p+"; "+d.message,{nodes:i,originalError:d}))})}return n}function _n(e,r,t){var a;const n={},i=(a=r.arguments)!==null&&a!==void 0?a:[],o=Ir(i,u=>u.name.value);for(const u of e.args){const s=u.name,l=u.type,c=o[s];if(!c){if(u.defaultValue!==void 0)n[s]=u.defaultValue;else if(pe(l))throw new x(`Argument "${s}" of required type "${_(l)}" was not provided.`,{nodes:r});continue}const d=c.value;let p=d.kind===v.NULL;if(d.kind===v.VARIABLE){const g=d.name.value;if(t==null||!hd(t,g)){if(u.defaultValue!==void 0)n[s]=u.defaultValue;else if(pe(l))throw new x(`Argument "${s}" of required type "${_(l)}" was provided the variable "$${g}" which was not provided a runtime value.`,{nodes:d});continue}p=t[g]==null}if(p&&pe(l))throw new x(`Argument "${s}" of non-null type "${_(l)}" must not be null.`,{nodes:d});const h=Er(d,l,t);if(h===void 0)throw new x(`Argument "${s}" has invalid value ${Te(d)}.`,{nodes:d});n[s]=h}return n}function Mt(e,r,t){var a;const n=(a=r.directives)===null||a===void 0?void 0:a.find(i=>i.name.value===e.name);if(n)return _n(e,n,t)}function hd(e,r){return Object.prototype.hasOwnProperty.call(e,r)}function uu(e,r,t,a,n){const i=new Map;return dn(e,r,t,a,n,i,new Set),i}function u1(e,r,t,a,n){const i=new Map,o=new Set;for(const u of n)u.selectionSet&&dn(e,r,t,a,u.selectionSet,i,o);return i}function dn(e,r,t,a,n,i,o){for(const u of n.selections)switch(u.kind){case v.FIELD:{if(!ji(t,u))continue;const s=s1(u),l=i.get(s);l!==void 0?l.push(u):i.set(s,[u]);break}case v.INLINE_FRAGMENT:{if(!ji(t,u)||!Ws(e,u,a))continue;dn(e,r,t,a,u.selectionSet,i,o);break}case v.FRAGMENT_SPREAD:{const s=u.name.value;if(o.has(s)||!ji(t,u))continue;o.add(s);const l=r[s];if(!l||!Ws(e,l,a))continue;dn(e,r,t,a,l.selectionSet,i,o);break}}}function ji(e,r){const t=Mt(Po,r,e);if(t?.if===!0)return!1;const a=Mt(_o,r,e);return a?.if!==!1}function Ws(e,r,t){const a=r.typeCondition;if(!a)return!0;const n=tr(e,a);return n===t?!0:kr(n)?e.isSubType(n,t):!1}function s1(e){return e.alias?e.alias.value:e.name.value}function fd(e){return{OperationDefinition(r){if(r.operation==="subscription"){const t=e.getSchema(),a=t.getSubscriptionType();if(a){const n=r.name?r.name.value:null,i=Object.create(null),o=e.getDocument(),u=Object.create(null);for(const l of o.definitions)l.kind===v.FRAGMENT_DEFINITION&&(u[l.name.value]=l);const s=uu(t,u,i,a,r.selectionSet);if(s.size>1){const d=[...s.values()].slice(1).flat();e.reportError(new x(n!=null?`Subscription "${n}" must select only one top level field.`:"Anonymous Subscription must select only one top level field.",{nodes:d}))}for(const l of s.values())l[0].name.value.startsWith("__")&&e.reportError(new x(n!=null?`Subscription "${n}" must not select an introspection top level field.`:"Anonymous Subscription must not select an introspection top level field.",{nodes:l}))}}}}}function su(e,r){const t=new Map;for(const a of e){const n=r(a),i=t.get(n);i===void 0?t.set(n,[a]):i.push(a)}return t}function yd(e){return{DirectiveDefinition(a){var n;const i=(n=a.arguments)!==null&&n!==void 0?n:[];return t(`@${a.name.value}`,i)},InterfaceTypeDefinition:r,InterfaceTypeExtension:r,ObjectTypeDefinition:r,ObjectTypeExtension:r};function r(a){var n;const i=a.name.value,o=(n=a.fields)!==null&&n!==void 0?n:[];for(const s of o){var u;const l=s.name.value,c=(u=s.arguments)!==null&&u!==void 0?u:[];t(`${i}.${l}`,c)}return!1}function t(a,n){const i=su(n,o=>o.name.value);for(const[o,u]of i)u.length>1&&e.reportError(new x(`Argument "${a}(${o}:)" can only be defined once.`,{nodes:u.map(s=>s.name)}));return!1}}function lu(e){return{Field:r,Directive:r};function r(t){var a;const n=(a=t.arguments)!==null&&a!==void 0?a:[],i=su(n,o=>o.name.value);for(const[o,u]of i)u.length>1&&e.reportError(new x(`There can be only one argument named "${o}".`,{nodes:u.map(s=>s.name)}))}}function gd(e){const r=Object.create(null),t=e.getSchema();return{DirectiveDefinition(a){const n=a.name.value;if(t!=null&&t.getDirective(n)){e.reportError(new x(`Directive "@${n}" already exists in the schema. It cannot be redefined.`,{nodes:a.name}));return}return r[n]?e.reportError(new x(`There can be only one directive named "@${n}".`,{nodes:[r[n],a.name]})):r[n]=a.name,!1}}}function cu(e){const r=Object.create(null),t=e.getSchema(),a=t?t.getDirectives():Xr;for(const u of a)r[u.name]=!u.isRepeatable;const n=e.getDocument().definitions;for(const u of n)u.kind===v.DIRECTIVE_DEFINITION&&(r[u.name.value]=!u.repeatable);const i=Object.create(null),o=Object.create(null);return{enter(u){if(!("directives"in u)||!u.directives)return;let s;if(u.kind===v.SCHEMA_DEFINITION||u.kind===v.SCHEMA_EXTENSION)s=i;else if(Ht(u)||xn(u)){const l=u.name.value;s=o[l],s===void 0&&(o[l]=s=Object.create(null))}else s=Object.create(null);for(const l of u.directives){const c=l.name.value;r[c]&&(s[c]?e.reportError(new x(`The directive "@${c}" can only be used once at this location.`,{nodes:[s[c],l]})):s[c]=l)}}}}function bd(e){const r=e.getSchema(),t=r?r.getTypeMap():Object.create(null),a=Object.create(null);return{EnumTypeDefinition:n,EnumTypeExtension:n};function n(i){var o;const u=i.name.value;a[u]||(a[u]=Object.create(null));const s=(o=i.values)!==null&&o!==void 0?o:[],l=a[u];for(const c of s){const d=c.name.value,p=t[u];He(p)&&p.getValue(d)?e.reportError(new x(`Enum value "${u}.${d}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:c.name})):l[d]?e.reportError(new x(`Enum value "${u}.${d}" can only be defined once.`,{nodes:[l[d],c.name]})):l[d]=c.name}return!1}}function vd(e){const r=e.getSchema(),t=r?r.getTypeMap():Object.create(null),a=Object.create(null);return{InputObjectTypeDefinition:n,InputObjectTypeExtension:n,InterfaceTypeDefinition:n,InterfaceTypeExtension:n,ObjectTypeDefinition:n,ObjectTypeExtension:n};function n(i){var o;const u=i.name.value;a[u]||(a[u]=Object.create(null));const s=(o=i.fields)!==null&&o!==void 0?o:[],l=a[u];for(const c of s){const d=c.name.value;l1(t[u],d)?e.reportError(new x(`Field "${u}.${d}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:c.name})):l[d]?e.reportError(new x(`Field "${u}.${d}" can only be defined once.`,{nodes:[l[d],c.name]})):l[d]=c.name}return!1}}function l1(e,r){return ge(e)||De(e)||Ce(e)?e.getFields()[r]!=null:!1}function Dd(e){const r=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition(t){const a=t.name.value;return r[a]?e.reportError(new x(`There can be only one fragment named "${a}".`,{nodes:[r[a],t.name]})):r[a]=t.name,!1}}}function du(e){const r=[];let t=Object.create(null);return{ObjectValue:{enter(){r.push(t),t=Object.create(null)},leave(){const a=r.pop();a||_e(!1),t=a}},ObjectField(a){const n=a.name.value;t[n]?e.reportError(new x(`There can be only one input field named "${n}".`,{nodes:[t[n],a.name]})):t[n]=a.name}}}function Ed(e){const r=Object.create(null);return{OperationDefinition(t){const a=t.name;return a&&(r[a.value]?e.reportError(new x(`There can be only one operation named "${a.value}".`,{nodes:[r[a.value],a]})):r[a.value]=a),!1},FragmentDefinition:()=>!1}}function kd(e){const r=e.getSchema(),t=Object.create(null),a=r?{query:r.getQueryType(),mutation:r.getMutationType(),subscription:r.getSubscriptionType()}:{};return{SchemaDefinition:n,SchemaExtension:n};function n(i){var o;const u=(o=i.operationTypes)!==null&&o!==void 0?o:[];for(const s of u){const l=s.operation,c=t[l];a[l]?e.reportError(new x(`Type for ${l} already defined in the schema. It cannot be redefined.`,{nodes:s})):c?e.reportError(new x(`There can be only one ${l} type in schema.`,{nodes:[c,s]})):t[l]=s}return!1}}function Ad(e){const r=Object.create(null),t=e.getSchema();return{ScalarTypeDefinition:a,ObjectTypeDefinition:a,InterfaceTypeDefinition:a,UnionTypeDefinition:a,EnumTypeDefinition:a,InputObjectTypeDefinition:a};function a(n){const i=n.name.value;if(t!=null&&t.getType(i)){e.reportError(new x(`Type "${i}" already exists in the schema. It cannot also be defined in this type definition.`,{nodes:n.name}));return}return r[i]?e.reportError(new x(`There can be only one type named "${i}".`,{nodes:[r[i],n.name]})):r[i]=n.name,!1}}function wd(e){return{OperationDefinition(r){var t;const a=(t=r.variableDefinitions)!==null&&t!==void 0?t:[],n=su(a,i=>i.variable.name.value);for(const[i,o]of n)o.length>1&&e.reportError(new x(`There can be only one variable named "$${i}".`,{nodes:o.map(u=>u.variable.name)}))}}}function Cd(e){let r={};return{OperationDefinition:{enter(){r={}}},VariableDefinition(t){r[t.variable.name.value]=t},ListValue(t){const a=Mo(e.getParentInputType());if(!Be(a))return ot(e,t),!1},ObjectValue(t){const a=Je(e.getInputType());if(!Ce(a))return ot(e,t),!1;const n=Ir(t.fields,i=>i.name.value);for(const i of Object.values(a.getFields()))if(!n[i.name]&&Nn(i)){const u=_(i.type);e.reportError(new x(`Field "${a.name}.${i.name}" of required type "${u}" was not provided.`,{nodes:t}))}a.isOneOf&&c1(e,t,a,n,r)},ObjectField(t){const a=Je(e.getParentInputType());if(!e.getInputType()&&Ce(a)){const i=Yr(t.name.value,Object.keys(a.getFields()));e.reportError(new x(`Field "${t.name.value}" is not defined by type "${a.name}".`+Mr(i),{nodes:t}))}},NullValue(t){const a=e.getInputType();pe(a)&&e.reportError(new x(`Expected value of type "${_(a)}", found ${Te(t)}.`,{nodes:t}))},EnumValue:t=>ot(e,t),IntValue:t=>ot(e,t),FloatValue:t=>ot(e,t),StringValue:t=>ot(e,t),BooleanValue:t=>ot(e,t)}}function ot(e,r){const t=e.getInputType();if(!t)return;const a=Je(t);if(!Ar(a)){const n=_(t);e.reportError(new x(`Expected value of type "${n}", found ${Te(r)}.`,{nodes:r}));return}try{if(a.parseLiteral(r,void 0)===void 0){const i=_(t);e.reportError(new x(`Expected value of type "${i}", found ${Te(r)}.`,{nodes:r}))}}catch(n){const i=_(t);n instanceof x?e.reportError(n):e.reportError(new x(`Expected value of type "${i}", found ${Te(r)}; `+n.message,{nodes:r,originalError:n}))}}function c1(e,r,t,a,n){var i;const o=Object.keys(a);if(o.length!==1){e.reportError(new x(`OneOf Input Object "${t.name}" must specify exactly one key.`,{nodes:[r]}));return}const s=(i=a[o[0]])===null||i===void 0?void 0:i.value,l=!s||s.kind===v.NULL,c=s?.kind===v.VARIABLE;if(l){e.reportError(new x(`Field "${t.name}.${o[0]}" must be non-null.`,{nodes:[r]}));return}if(c){const d=s.name.value;n[d].type.kind!==v.NON_NULL_TYPE&&e.reportError(new x(`Variable "${d}" must be non-nullable to be used for OneOf Input Object "${t.name}".`,{nodes:[r]}))}}function Sd(e){return{VariableDefinition(r){const t=tr(e.getSchema(),r.type);if(t!==void 0&&!er(t)){const a=r.variable.name.value,n=Te(r.type);e.reportError(new x(`Variable "$${a}" cannot be non-input type "${n}".`,{nodes:r.type}))}}}}function Td(e){let r=Object.create(null);return{OperationDefinition:{enter(){r=Object.create(null)},leave(t){const a=e.getRecursiveVariableUsages(t);for(const{node:n,type:i,defaultValue:o}of a){const u=n.name.value,s=r[u];if(s&&i){const l=e.getSchema(),c=tr(l,s.type);if(c&&!d1(l,c,s.defaultValue,i,o)){const d=_(c),p=_(i);e.reportError(new x(`Variable "$${u}" of type "${d}" used in position expecting type "${p}".`,{nodes:[s,n]}))}}}}},VariableDefinition(t){r[t.variable.name.value]=t}}}function d1(e,r,t,a,n){if(pe(a)&&!pe(r)){if(!(t!=null&&t.kind!==v.NULL)&&!(n!==void 0))return!1;const u=a.ofType;return pt(e,r,u)}return pt(e,r,a)}const Bd=Object.freeze([Xc]),Nd=Object.freeze([Vc,Ed,Yc,fd,iu,zc,Sd,dd,Uc,Dd,Jc,rd,ud,Zc,wd,ed,td,nu,cu,qc,lu,Cd,ld,Td,nd,du,...Bd]),p1=Object.freeze([Qc,kd,Ad,bd,vd,yd,gd,iu,nu,cu,sd,Kc,lu,du,cd]);class Rd{constructor(r,t){this._ast=r,this._fragments=void 0,this._fragmentSpreads=new Map,this._recursivelyReferencedFragments=new Map,this._onError=t}get[Symbol.toStringTag](){return"ASTValidationContext"}reportError(r){this._onError(r)}getDocument(){return this._ast}getFragment(r){let t;if(this._fragments)t=this._fragments;else{t=Object.create(null);for(const a of this.getDocument().definitions)a.kind===v.FRAGMENT_DEFINITION&&(t[a.name.value]=a);this._fragments=t}return t[r]}getFragmentSpreads(r){let t=this._fragmentSpreads.get(r);if(!t){t=[];const a=[r];let n;for(;n=a.pop();)for(const i of n.selections)i.kind===v.FRAGMENT_SPREAD?t.push(i):i.selectionSet&&a.push(i.selectionSet);this._fragmentSpreads.set(r,t)}return t}getRecursivelyReferencedFragments(r){let t=this._recursivelyReferencedFragments.get(r);if(!t){t=[];const a=Object.create(null),n=[r.selectionSet];let i;for(;i=n.pop();)for(const o of this.getFragmentSpreads(i)){const u=o.name.value;if(a[u]!==!0){a[u]=!0;const s=this.getFragment(u);s&&(t.push(s),n.push(s.selectionSet))}}this._recursivelyReferencedFragments.set(r,t)}return t}}class m1 extends Rd{constructor(r,t,a){super(r,a),this._schema=t}get[Symbol.toStringTag](){return"SDLValidationContext"}getSchema(){return this._schema}}class Ld extends Rd{constructor(r,t,a,n){super(t,n),this._schema=r,this._typeInfo=a,this._variableUsages=new Map,this._recursiveVariableUsages=new Map}get[Symbol.toStringTag](){return"ValidationContext"}getSchema(){return this._schema}getVariableUsages(r){let t=this._variableUsages.get(r);if(!t){const a=[],n=new Zo(this._schema);Pt(r,eu(n,{VariableDefinition:()=>!1,Variable(i){a.push({node:i,type:n.getInputType(),defaultValue:n.getDefaultValue()})}})),t=a,this._variableUsages.set(r,t)}return t}getRecursiveVariableUsages(r){let t=this._recursiveVariableUsages.get(r);if(!t){t=this.getVariableUsages(r);for(const a of this.getRecursivelyReferencedFragments(r))t=t.concat(this.getVariableUsages(a));this._recursiveVariableUsages.set(r,t)}return t}getType(){return this._typeInfo.getType()}getParentType(){return this._typeInfo.getParentType()}getInputType(){return this._typeInfo.getInputType()}getParentInputType(){return this._typeInfo.getParentInputType()}getFieldDef(){return this._typeInfo.getFieldDef()}getDirective(){return this._typeInfo.getDirective()}getArgument(){return this._typeInfo.getArgument()}getEnumValue(){return this._typeInfo.getEnumValue()}}function Md(e,r,t=Nd,a,n=new Zo(e)){var i;const o=(i=a?.maxErrors)!==null&&i!==void 0?i:100;r||he(!1,"Must provide document."),Qo(e);const u=Object.freeze({}),s=[],l=new Ld(e,r,n,d=>{if(s.length>=o)throw s.push(new x("Too many validation errors, error limit reached. Validation aborted.")),u;s.push(d)}),c=Ro(t.map(d=>d(l)));try{Pt(r,eu(n,c))}catch(d){if(d!==u)throw d}return s}function Id(e,r,t=p1){const a=[],n=new m1(e,r,o=>{a.push(o)}),i=t.map(o=>o(n));return Pt(e,Ro(i)),a}function F1(e){const r=Id(e);if(r.length!==0)throw new Error(r.map(t=>t.message).join(`

`))}function h1(e,r){const t=Id(e,r);if(t.length!==0)throw new Error(t.map(a=>a.message).join(`

`))}function f1(e){let r;return function(a,n,i){r===void 0&&(r=new WeakMap);let o=r.get(a);o===void 0&&(o=new WeakMap,r.set(a,o));let u=o.get(n);u===void 0&&(u=new WeakMap,o.set(n,u));let s=u.get(i);return s===void 0&&(s=e(a,n,i),u.set(i,s)),s}}function Vs(e){return Promise.all(Object.values(e)).then(r=>{const t=Object.create(null);for(const[a,n]of Object.keys(e).entries())t[n]=r[a];return t})}function y1(e,r,t){let a=t;for(const n of e)a=nr(a)?a.then(i=>r(i,n)):r(a,n);return a}function g1(e){return e instanceof Error?e:new b1(e)}class b1 extends Error{constructor(r){super("Unexpected error value: "+_(r)),this.name="NonErrorThrown",this.thrownValue=r}}function It(e,r,t){var a;const n=g1(e);return v1(n)?n:new x(n.message,{nodes:(a=n.nodes)!==null&&a!==void 0?a:r,source:n.source,positions:n.positions,path:t,originalError:n})}function v1(e){return Array.isArray(e.path)}const D1=f1((e,r,t)=>u1(e.schema,e.fragments,e.variableValues,r,t));function Pn(e){arguments.length<2||he(!1,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const{schema:r,document:t,variableValues:a,rootValue:n}=e;Od(r,t,a);const i=_d(e);if(!("schema"in i))return{errors:i};try{const{operation:o}=i,u=E1(i,o,n);return nr(u)?u.then(s=>qa(s,i.errors),s=>(i.errors.push(s),qa(null,i.errors))):qa(u,i.errors)}catch(o){return i.errors.push(o),qa(null,i.errors)}}function xd(e){const r=Pn(e);if(nr(r))throw new Error("GraphQL execution failed to complete synchronously.");return r}function qa(e,r){return r.length===0?{data:e}:{errors:r,data:e}}function Od(e,r,t){r||he(!1,"Must provide document."),Qo(e),t==null||ir(t)||he(!1,"Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.")}function _d(e){var r,t;const{schema:a,document:n,rootValue:i,contextValue:o,variableValues:u,operationName:s,fieldResolver:l,typeResolver:c,subscribeFieldResolver:d}=e;let p;const h=Object.create(null);for(const F of n.definitions)switch(F.kind){case v.OPERATION_DEFINITION:if(s==null){if(p!==void 0)return[new x("Must provide operation name if query contains multiple operations.")];p=F}else((r=F.name)===null||r===void 0?void 0:r.value)===s&&(p=F);break;case v.FRAGMENT_DEFINITION:h[F.name.value]=F;break}if(!p)return s!=null?[new x(`Unknown operation named "${s}".`)]:[new x("Must provide an operation.")];const g=(t=p.variableDefinitions)!==null&&t!==void 0?t:[],b=Fd(a,g,u??{},{maxErrors:50});return b.errors?b.errors:{schema:a,fragments:h,rootValue:i,contextValue:o,operation:p,variableValues:b.coerced,fieldResolver:l??so,typeResolver:c??Hd,subscribeFieldResolver:d??so,errors:[]}}function E1(e,r,t){const a=e.schema.getRootType(r.operation);if(a==null)throw new x(`Schema is not configured to execute ${r.operation} operation.`,{nodes:r});const n=uu(e.schema,e.fragments,e.variableValues,a,r.selectionSet),i=void 0;switch(r.operation){case $e.QUERY:return pn(e,a,t,i,n);case $e.MUTATION:return k1(e,a,t,i,n);case $e.SUBSCRIPTION:return pn(e,a,t,i,n)}}function k1(e,r,t,a,n){return y1(n.entries(),(i,[o,u])=>{const s=Lt(a,o,r.name),l=Pd(e,r,t,u,s);return l===void 0?i:nr(l)?l.then(c=>(i[o]=c,i)):(i[o]=l,i)},Object.create(null))}function pn(e,r,t,a,n){const i=Object.create(null);let o=!1;try{for(const[u,s]of n.entries()){const l=Lt(a,u,r.name),c=Pd(e,r,t,s,l);c!==void 0&&(i[u]=c,nr(c)&&(o=!0))}}catch(u){if(o)return Vs(i).finally(()=>{throw u});throw u}return o?Vs(i):i}function Pd(e,r,t,a,n){var i;const o=jd(e.schema,r,a[0]);if(!o)return;const u=o.type,s=(i=o.resolve)!==null&&i!==void 0?i:e.fieldResolver,l=Gd(e,o,a,r,n);try{const c=_n(o,a[0],e.variableValues),d=e.contextValue,p=s(t,c,d,l);let h;return nr(p)?h=p.then(g=>ga(e,u,a,l,n,g)):h=ga(e,u,a,l,n,p),nr(h)?h.then(void 0,g=>{const b=It(g,a,Ke(n));return mn(b,u,e)}):h}catch(c){const d=It(c,a,Ke(n));return mn(d,u,e)}}function Gd(e,r,t,a,n){return{fieldName:r.name,fieldNodes:t,returnType:r.type,parentType:a,path:n,schema:e.schema,fragments:e.fragments,rootValue:e.rootValue,operation:e.operation,variableValues:e.variableValues}}function mn(e,r,t){if(pe(r))throw e;return t.errors.push(e),null}function ga(e,r,t,a,n,i){if(i instanceof Error)throw i;if(pe(r)){const o=ga(e,r.ofType,t,a,n,i);if(o===null)throw new Error(`Cannot return null for non-nullable field ${a.parentType.name}.${a.fieldName}.`);return o}if(i==null)return null;if(Be(r))return A1(e,r,t,a,n,i);if(Ar(r))return w1(r,i);if(kr(r))return C1(e,r,t,a,n,i);if(ge(r))return uo(e,r,t,a,n,i);_e(!1,"Cannot complete value of unexpected output type: "+_(r))}function A1(e,r,t,a,n,i){if(!Wo(i))throw new x(`Expected Iterable, but did not find one for field "${a.parentType.name}.${a.fieldName}".`);const o=r.ofType;let u=!1;const s=Array.from(i,(l,c)=>{const d=Lt(n,c,void 0);try{let p;return nr(l)?p=l.then(h=>ga(e,o,t,a,d,h)):p=ga(e,o,t,a,d,l),nr(p)?(u=!0,p.then(void 0,h=>{const g=It(h,t,Ke(d));return mn(g,o,e)})):p}catch(p){const h=It(p,t,Ke(d));return mn(h,o,e)}});return u?Promise.all(s):s}function w1(e,r){const t=e.serialize(r);if(t==null)throw new Error(`Expected \`${_(e)}.serialize(${_(r)})\` to return non-nullable value, returned: ${_(t)}`);return t}function C1(e,r,t,a,n,i){var o;const u=(o=r.resolveType)!==null&&o!==void 0?o:e.typeResolver,s=e.contextValue,l=u(i,s,a,r);return nr(l)?l.then(c=>uo(e,Us(c,e,r,t,a,i),t,a,n,i)):uo(e,Us(l,e,r,t,a,i),t,a,n,i)}function Us(e,r,t,a,n,i){if(e==null)throw new x(`Abstract type "${t.name}" must resolve to an Object type at runtime for field "${n.parentType.name}.${n.fieldName}". Either the "${t.name}" type should provide a "resolveType" function or each possible type should provide an "isTypeOf" function.`,a);if(ge(e))throw new x("Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.");if(typeof e!="string")throw new x(`Abstract type "${t.name}" must resolve to an Object type at runtime for field "${n.parentType.name}.${n.fieldName}" with value ${_(i)}, received "${_(e)}".`);const o=r.schema.getType(e);if(o==null)throw new x(`Abstract type "${t.name}" was resolved to a type "${e}" that does not exist inside the schema.`,{nodes:a});if(!ge(o))throw new x(`Abstract type "${t.name}" was resolved to a non-object type "${e}".`,{nodes:a});if(!r.schema.isSubType(t,o))throw new x(`Runtime Object type "${o.name}" is not a possible type for "${t.name}".`,{nodes:a});return o}function uo(e,r,t,a,n,i){const o=D1(e,r,t);if(r.isTypeOf){const u=r.isTypeOf(i,e.contextValue,a);if(nr(u))return u.then(s=>{if(!s)throw zs(r,i,t);return pn(e,r,i,n,o)});if(!u)throw zs(r,i,t)}return pn(e,r,i,n,o)}function zs(e,r,t){return new x(`Expected value of type "${e.name}" but got: ${_(r)}.`,{nodes:t})}const Hd=function(e,r,t,a){if(ir(e)&&typeof e.__typename=="string")return e.__typename;const n=t.schema.getPossibleTypes(a),i=[];for(let o=0;o<n.length;o++){const u=n[o];if(u.isTypeOf){const s=u.isTypeOf(e,r,t);if(nr(s))i[o]=s;else if(s)return u.name}}if(i.length)return Promise.all(i).then(o=>{for(let u=0;u<o.length;u++)if(o[u])return n[u].name})},so=function(e,r,t,a){if(ir(e)||typeof e=="function"){const n=e[a.fieldName];return typeof n=="function"?e[a.fieldName](r,t,a):n}};function jd(e,r,t){const a=t.name.value;return a===ha.name&&e.getQueryType()===r?ha:a===fa.name&&e.getQueryType()===r?fa:a===ya.name?ya:r.getFields()[a]}function S1(e){return new Promise(r=>r($d(e)))}function T1(e){const r=$d(e);if(nr(r))throw new Error("GraphQL execution failed to complete synchronously.");return r}function $d(e){arguments.length<2||he(!1,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const{schema:r,source:t,rootValue:a,contextValue:n,variableValues:i,operationName:o,fieldResolver:u,typeResolver:s}=e,l=Yo(r);if(l.length>0)return{errors:l};let c;try{c=Tn(t)}catch(p){return{errors:[p]}}const d=Md(r,c);return d.length>0?{errors:d}:Pn({schema:r,document:c,rootValue:a,contextValue:n,variableValues:i,operationName:o,fieldResolver:u,typeResolver:s})}function Wd(e){return typeof e?.[Symbol.asyncIterator]=="function"}function B1(e,r){const t=e[Symbol.asyncIterator]();async function a(n){if(n.done)return n;try{return{value:await r(n.value),done:!1}}catch(i){if(typeof t.return=="function")try{await t.return()}catch{}throw i}}return{async next(){return a(await t.next())},async return(){return typeof t.return=="function"?a(await t.return()):{value:void 0,done:!0}},async throw(n){if(typeof t.throw=="function")return a(await t.throw(n));throw n},[Symbol.asyncIterator](){return this}}}async function N1(e){arguments.length<2||he(!1,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const r=await Vd(e);return Wd(r)?B1(r,a=>Pn({...e,rootValue:a})):r}function R1(e){const r=e[0];return r&&"document"in r?r:{schema:r,document:e[1],rootValue:e[2],contextValue:e[3],variableValues:e[4],operationName:e[5],subscribeFieldResolver:e[6]}}async function Vd(...e){const r=R1(e),{schema:t,document:a,variableValues:n}=r;Od(t,a,n);const i=_d(r);if(!("schema"in i))return{errors:i};try{const o=await L1(i);if(!Wd(o))throw new Error(`Subscription field must return Async Iterable. Received: ${_(o)}.`);return o}catch(o){if(o instanceof x)return{errors:[o]};throw o}}async function L1(e){const{schema:r,fragments:t,operation:a,variableValues:n,rootValue:i}=e,o=r.getSubscriptionType();if(o==null)throw new x("Schema is not configured to execute subscription operation.",{nodes:a});const u=uu(r,t,n,o,a.selectionSet),[s,l]=[...u.entries()][0],c=jd(r,o,l[0]);if(!c){const g=l[0].name.value;throw new x(`The subscription field "${g}" is not defined.`,{nodes:l})}const d=Lt(void 0,s,o.name),p=Gd(e,c,l,o,d);try{var h;const g=_n(c,l[0],n),b=e.contextValue,D=await((h=c.subscribe)!==null&&h!==void 0?h:e.subscribeFieldResolver)(i,g,b,p);if(D instanceof Error)throw D;return D}catch(g){throw It(g,l,Ke(d))}}function M1(e){return{Field(r){const t=e.getFieldDef(),a=t?.deprecationReason;if(t&&a!=null){const n=e.getParentType();n!=null||_e(!1),e.reportError(new x(`The field ${n.name}.${t.name} is deprecated. ${a}`,{nodes:r}))}},Argument(r){const t=e.getArgument(),a=t?.deprecationReason;if(t&&a!=null){const n=e.getDirective();if(n!=null)e.reportError(new x(`Directive "@${n.name}" argument "${t.name}" is deprecated. ${a}`,{nodes:r}));else{const i=e.getParentType(),o=e.getFieldDef();i!=null&&o!=null||_e(!1),e.reportError(new x(`Field "${i.name}.${o.name}" argument "${t.name}" is deprecated. ${a}`,{nodes:r}))}}},ObjectField(r){const t=Je(e.getParentInputType());if(Ce(t)){const a=t.getFields()[r.name.value],n=a?.deprecationReason;n!=null&&e.reportError(new x(`The input field ${t.name}.${a.name} is deprecated. ${n}`,{nodes:r}))}},EnumValue(r){const t=e.getEnumValue(),a=t?.deprecationReason;if(t&&a!=null){const n=Je(e.getInputType());n!=null||_e(!1),e.reportError(new x(`The enum value "${n.name}.${t.name}" is deprecated. ${a}`,{nodes:r}))}}}}function I1(e){return{Field(r){const t=Je(e.getType());t&&yt(t)&&e.reportError(new x(`GraphQL introspection has been disabled, but the requested query contained the field "${r.name.value}".`,{nodes:r}))}}}function Ud(e){const r={descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1,oneOf:!1,...e},t=r.descriptions?"description":"",a=r.specifiedByUrl?"specifiedByURL":"",n=r.directiveIsRepeatable?"isRepeatable":"",i=r.schemaDescription?t:"";function o(s){return r.inputValueDeprecation?s:""}const u=r.oneOf?"isOneOf":"";return`
    query IntrospectionQuery {
      __schema {
        ${i}
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          ${t}
          ${n}
          locations
          args${o("(includeDeprecated: true)")} {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      ${t}
      ${a}
      ${u}
      fields(includeDeprecated: true) {
        name
        ${t}
        args${o("(includeDeprecated: true)")} {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields${o("(includeDeprecated: true)")} {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        ${t}
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      ${t}
      type { ...TypeRef }
      defaultValue
      ${o("isDeprecated")}
      ${o("deprecationReason")}
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                    ofType {
                      kind
                      name
                      ofType {
                        kind
                        name
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  `}function x1(e,r){let t=null;for(const n of e.definitions)if(n.kind===v.OPERATION_DEFINITION){var a;if(r==null){if(t)return null;t=n}else if(((a=n.name)===null||a===void 0?void 0:a.value)===r)return n}return t}function O1(e,r){if(r.operation==="query"){const t=e.getQueryType();if(!t)throw new x("Schema does not define the required query root type.",{nodes:r});return t}if(r.operation==="mutation"){const t=e.getMutationType();if(!t)throw new x("Schema is not configured for mutations.",{nodes:r});return t}if(r.operation==="subscription"){const t=e.getSubscriptionType();if(!t)throw new x("Schema is not configured for subscriptions.",{nodes:r});return t}throw new x("Can only have query, mutation and subscription operations.",{nodes:r})}function _1(e,r){const t={specifiedByUrl:!0,directiveIsRepeatable:!0,schemaDescription:!0,inputValueDeprecation:!0,oneOf:!0,...r},a=Tn(Ud(t)),n=xd({schema:e,document:a});return!n.errors&&n.data||_e(!1),n.data}function P1(e,r){ir(e)&&ir(e.__schema)||he(!1,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${_(e)}.`);const t=e.__schema,a=Wr(t.types,y=>y.name,y=>p(y));for(const y of[...Na,...Ma])a[y.name]&&(a[y.name]=y);const n=t.queryType?c(t.queryType):null,i=t.mutationType?c(t.mutationType):null,o=t.subscriptionType?c(t.subscriptionType):null,u=t.directives?t.directives.map(L):[];return new Gt({description:t.description,query:n,mutation:i,subscription:o,types:Object.values(a),directives:u,assumeValid:r?.assumeValid});function s(y){if(y.kind===ke.LIST){const B=y.ofType;if(!B)throw new Error("Decorated type deeper than introspection query.");return new ze(s(B))}if(y.kind===ke.NON_NULL){const B=y.ofType;if(!B)throw new Error("Decorated type deeper than introspection query.");const H=s(B);return new Fe(Ic(H))}return l(y)}function l(y){const B=y.name;if(!B)throw new Error(`Unknown type reference: ${_(y)}.`);const H=a[B];if(!H)throw new Error(`Invalid or incomplete schema, unknown type: ${B}. Ensure that a full introspection query is used in order to build a client schema.`);return H}function c(y){return Lc(l(y))}function d(y){return Mc(l(y))}function p(y){if(y!=null&&y.name!=null&&y.kind!=null)switch(y.kind){case ke.SCALAR:return h(y);case ke.OBJECT:return b(y);case ke.INTERFACE:return F(y);case ke.UNION:return D(y);case ke.ENUM:return N(y);case ke.INPUT_OBJECT:return T(y)}const B=_(y);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${B}.`)}function h(y){return new Cr({name:y.name,description:y.description,specifiedByURL:y.specifiedByURL})}function g(y){if(y.interfaces===null&&y.kind===ke.INTERFACE)return[];if(!y.interfaces){const B=_(y);throw new Error(`Introspection result missing interfaces: ${B}.`)}return y.interfaces.map(d)}function b(y){return new cr({name:y.name,description:y.description,interfaces:()=>g(y),fields:()=>E(y)})}function F(y){return new Bt({name:y.name,description:y.description,interfaces:()=>g(y),fields:()=>E(y)})}function D(y){if(!y.possibleTypes){const B=_(y);throw new Error(`Introspection result missing possibleTypes: ${B}.`)}return new Nt({name:y.name,description:y.description,types:()=>y.possibleTypes.map(c)})}function N(y){if(!y.enumValues){const B=_(y);throw new Error(`Introspection result missing enumValues: ${B}.`)}return new Kr({name:y.name,description:y.description,values:Wr(y.enumValues,B=>B.name,B=>({description:B.description,deprecationReason:B.deprecationReason}))})}function T(y){if(!y.inputFields){const B=_(y);throw new Error(`Introspection result missing inputFields: ${B}.`)}return new Rt({name:y.name,description:y.description,fields:()=>C(y.inputFields),isOneOf:y.isOneOf})}function E(y){if(!y.fields)throw new Error(`Introspection result missing fields: ${_(y)}.`);return Wr(y.fields,B=>B.name,R)}function R(y){const B=s(y.type);if(!Ur(B)){const H=_(B);throw new Error(`Introspection must provide output type for fields, but received: ${H}.`)}if(!y.args){const H=_(y);throw new Error(`Introspection result missing field args: ${H}.`)}return{description:y.description,deprecationReason:y.deprecationReason,type:B,args:C(y.args)}}function C(y){return Wr(y,B=>B.name,j)}function j(y){const B=s(y.type);if(!er(B)){const P=_(B);throw new Error(`Introspection must provide input type for arguments, but received: ${P}.`)}const H=y.defaultValue!=null?Er(Bc(y.defaultValue),B):void 0;return{description:y.description,type:B,defaultValue:H,deprecationReason:y.deprecationReason}}function L(y){if(!y.args){const B=_(y);throw new Error(`Introspection result missing directive args: ${B}.`)}if(!y.locations){const B=_(y);throw new Error(`Introspection result missing directive locations: ${B}.`)}return new br({name:y.name,description:y.description,isRepeatable:y.isRepeatable,locations:y.locations.slice(),args:C(y.args)})}}function G1(e,r,t){Jo(e),r!=null&&r.kind===v.DOCUMENT||he(!1,"Must provide valid Document AST."),t?.assumeValid!==!0&&t?.assumeValidSDL!==!0&&h1(r,e);const a=e.toConfig(),n=zd(a,r,t);return a===n?e:new Gt(n)}function zd(e,r,t){var a,n,i,o;const u=[],s=Object.create(null),l=[];let c;const d=[];for(const M of r.definitions)if(M.kind===v.SCHEMA_DEFINITION)c=M;else if(M.kind===v.SCHEMA_EXTENSION)d.push(M);else if(Ht(M))u.push(M);else if(xn(M)){const A=M.name.value,w=s[A];s[A]=w?w.concat([M]):[M]}else M.kind===v.DIRECTIVE_DEFINITION&&l.push(M);if(Object.keys(s).length===0&&u.length===0&&l.length===0&&d.length===0&&c==null)return e;const p=Object.create(null);for(const M of e.types)p[M.name]=N(M);for(const M of u){var h;const A=M.name.value;p[A]=(h=qs[A])!==null&&h!==void 0?h:U(M)}const g={query:e.query&&F(e.query),mutation:e.mutation&&F(e.mutation),subscription:e.subscription&&F(e.subscription),...c&&H([c]),...H(d)};return{description:(a=c)===null||a===void 0||(n=a.description)===null||n===void 0?void 0:n.value,...g,types:Object.values(p),directives:[...e.directives.map(D),...l.map(X)],extensions:Object.create(null),astNode:(i=c)!==null&&i!==void 0?i:e.astNode,extensionASTNodes:e.extensionASTNodes.concat(d),assumeValid:(o=t?.assumeValid)!==null&&o!==void 0?o:!1};function b(M){return Be(M)?new ze(b(M.ofType)):pe(M)?new Fe(b(M.ofType)):F(M)}function F(M){return p[M.name]}function D(M){const A=M.toConfig();return new br({...A,args:Rr(A.args,B)})}function N(M){if(yt(M)||Rn(M))return M;if(ur(M))return R(M);if(ge(M))return C(M);if(De(M))return j(M);if(We(M))return L(M);if(He(M))return E(M);if(Ce(M))return T(M);_e(!1,"Unexpected type: "+_(M))}function T(M){var A;const w=M.toConfig(),S=(A=s[w.name])!==null&&A!==void 0?A:[];return new Rt({...w,fields:()=>({...Rr(w.fields,J=>({...J,type:b(J.type)})),...Q(S)}),extensionASTNodes:w.extensionASTNodes.concat(S)})}function E(M){var A;const w=M.toConfig(),S=(A=s[M.name])!==null&&A!==void 0?A:[];return new Kr({...w,values:{...w.values,...W(S)},extensionASTNodes:w.extensionASTNodes.concat(S)})}function R(M){var A;const w=M.toConfig(),S=(A=s[w.name])!==null&&A!==void 0?A:[];let J=w.specifiedByURL;for(const q of S){var ne;J=(ne=Ks(q))!==null&&ne!==void 0?ne:J}return new Cr({...w,specifiedByURL:J,extensionASTNodes:w.extensionASTNodes.concat(S)})}function C(M){var A;const w=M.toConfig(),S=(A=s[w.name])!==null&&A!==void 0?A:[];return new cr({...w,interfaces:()=>[...M.getInterfaces().map(F),...K(S)],fields:()=>({...Rr(w.fields,y),...ie(S)}),extensionASTNodes:w.extensionASTNodes.concat(S)})}function j(M){var A;const w=M.toConfig(),S=(A=s[w.name])!==null&&A!==void 0?A:[];return new Bt({...w,interfaces:()=>[...M.getInterfaces().map(F),...K(S)],fields:()=>({...Rr(w.fields,y),...ie(S)}),extensionASTNodes:w.extensionASTNodes.concat(S)})}function L(M){var A;const w=M.toConfig(),S=(A=s[w.name])!==null&&A!==void 0?A:[];return new Nt({...w,types:()=>[...M.getTypes().map(F),...re(S)],extensionASTNodes:w.extensionASTNodes.concat(S)})}function y(M){return{...M,type:b(M.type),args:M.args&&Rr(M.args,B)}}function B(M){return{...M,type:b(M.type)}}function H(M){const A={};for(const S of M){var w;const J=(w=S.operationTypes)!==null&&w!==void 0?w:[];for(const ne of J)A[ne.operation]=P(ne.type)}return A}function P(M){var A;const w=M.name.value,S=(A=qs[w])!==null&&A!==void 0?A:p[w];if(S===void 0)throw new Error(`Unknown type: "${w}".`);return S}function $(M){return M.kind===v.LIST_TYPE?new ze($(M.type)):M.kind===v.NON_NULL_TYPE?new Fe($(M.type)):P(M)}function X(M){var A;return new br({name:M.name.value,description:(A=M.description)===null||A===void 0?void 0:A.value,locations:M.locations.map(({value:w})=>w),isRepeatable:M.repeatable,args:ee(M.arguments),astNode:M})}function ie(M){const A=Object.create(null);for(const J of M){var w;const ne=(w=J.fields)!==null&&w!==void 0?w:[];for(const q of ne){var S;A[q.name.value]={type:$(q.type),description:(S=q.description)===null||S===void 0?void 0:S.value,args:ee(q.arguments),deprecationReason:Ka(q),astNode:q}}}return A}function ee(M){const A=M??[],w=Object.create(null);for(const J of A){var S;const ne=$(J.type);w[J.name.value]={type:ne,description:(S=J.description)===null||S===void 0?void 0:S.value,defaultValue:Er(J.defaultValue,ne),deprecationReason:Ka(J),astNode:J}}return w}function Q(M){const A=Object.create(null);for(const J of M){var w;const ne=(w=J.fields)!==null&&w!==void 0?w:[];for(const q of ne){var S;const Z=$(q.type);A[q.name.value]={type:Z,description:(S=q.description)===null||S===void 0?void 0:S.value,defaultValue:Er(q.defaultValue,Z),deprecationReason:Ka(q),astNode:q}}}return A}function W(M){const A=Object.create(null);for(const J of M){var w;const ne=(w=J.values)!==null&&w!==void 0?w:[];for(const q of ne){var S;A[q.name.value]={description:(S=q.description)===null||S===void 0?void 0:S.value,deprecationReason:Ka(q),astNode:q}}}return A}function K(M){return M.flatMap(A=>{var w,S;return(w=(S=A.interfaces)===null||S===void 0?void 0:S.map(P))!==null&&w!==void 0?w:[]})}function re(M){return M.flatMap(A=>{var w,S;return(w=(S=A.types)===null||S===void 0?void 0:S.map(P))!==null&&w!==void 0?w:[]})}function U(M){var A;const w=M.name.value,S=(A=s[w])!==null&&A!==void 0?A:[];switch(M.kind){case v.OBJECT_TYPE_DEFINITION:{var J;const de=[M,...S];return new cr({name:w,description:(J=M.description)===null||J===void 0?void 0:J.value,interfaces:()=>K(de),fields:()=>ie(de),astNode:M,extensionASTNodes:S})}case v.INTERFACE_TYPE_DEFINITION:{var ne;const de=[M,...S];return new Bt({name:w,description:(ne=M.description)===null||ne===void 0?void 0:ne.value,interfaces:()=>K(de),fields:()=>ie(de),astNode:M,extensionASTNodes:S})}case v.ENUM_TYPE_DEFINITION:{var q;const de=[M,...S];return new Kr({name:w,description:(q=M.description)===null||q===void 0?void 0:q.value,values:W(de),astNode:M,extensionASTNodes:S})}case v.UNION_TYPE_DEFINITION:{var Z;const de=[M,...S];return new Nt({name:w,description:(Z=M.description)===null||Z===void 0?void 0:Z.value,types:()=>re(de),astNode:M,extensionASTNodes:S})}case v.SCALAR_TYPE_DEFINITION:{var le;return new Cr({name:w,description:(le=M.description)===null||le===void 0?void 0:le.value,specifiedByURL:Ks(M),astNode:M,extensionASTNodes:S})}case v.INPUT_OBJECT_TYPE_DEFINITION:{var se;const de=[M,...S];return new Rt({name:w,description:(se=M.description)===null||se===void 0?void 0:se.value,fields:()=>Q(de),astNode:M,extensionASTNodes:S,isOneOf:H1(M)})}}}}const qs=Ir([...Na,...Ma],e=>e.name);function Ka(e){const r=Mt(Mn,e);return r?.reason}function Ks(e){const r=Mt(Ho,e);return r?.url}function H1(e){return!!Mt(jo,e)}function qd(e,r){e!=null&&e.kind===v.DOCUMENT||he(!1,"Must provide valid Document AST."),r?.assumeValid!==!0&&r?.assumeValidSDL!==!0&&F1(e);const a=zd({description:void 0,types:[],directives:[],extensions:Object.create(null),extensionASTNodes:[],assumeValid:!1},e,r);if(a.astNode==null)for(const i of a.types)switch(i.name){case"Query":a.query=i;break;case"Mutation":a.mutation=i;break;case"Subscription":a.subscription=i;break}const n=[...a.directives,...Xr.filter(i=>a.directives.every(o=>o.name!==i.name))];return new Gt({...a,directives:n})}function j1(e,r){const t=Tn(e,{noLocation:r?.noLocation,allowLegacyFragmentVariables:r?.allowLegacyFragmentVariables});return qd(t,{assumeValidSDL:r?.assumeValidSDL,assumeValid:r?.assumeValid})}function $1(e){const r=e.toConfig(),t=Wr($i(r.types),p=>p.name,d);return new Gt({...r,types:Object.values(t),directives:$i(r.directives).map(o),query:i(r.query),mutation:i(r.mutation),subscription:i(r.subscription)});function a(p){return Be(p)?new ze(a(p.ofType)):pe(p)?new Fe(a(p.ofType)):n(p)}function n(p){return t[p.name]}function i(p){return p&&n(p)}function o(p){const h=p.toConfig();return new br({...h,locations:Kd(h.locations,g=>g),args:u(h.args)})}function u(p){return Ja(p,h=>({...h,type:a(h.type)}))}function s(p){return Ja(p,h=>({...h,type:a(h.type),args:h.args&&u(h.args)}))}function l(p){return Ja(p,h=>({...h,type:a(h.type)}))}function c(p){return $i(p).map(n)}function d(p){if(ur(p)||yt(p))return p;if(ge(p)){const h=p.toConfig();return new cr({...h,interfaces:()=>c(h.interfaces),fields:()=>s(h.fields)})}if(De(p)){const h=p.toConfig();return new Bt({...h,interfaces:()=>c(h.interfaces),fields:()=>s(h.fields)})}if(We(p)){const h=p.toConfig();return new Nt({...h,types:()=>c(h.types)})}if(He(p)){const h=p.toConfig();return new Kr({...h,values:Ja(h.values,g=>g)})}if(Ce(p)){const h=p.toConfig();return new Rt({...h,fields:()=>l(h.fields)})}_e(!1,"Unexpected type: "+_(p))}}function Ja(e,r){const t=Object.create(null);for(const a of Object.keys(e).sort(Ca))t[a]=r(e[a]);return t}function $i(e){return Kd(e,r=>r.name)}function Kd(e,r){return e.slice().sort((t,a)=>{const n=r(t),i=r(a);return Ca(n,i)})}function W1(e){return Jd(e,r=>!$o(r),U1)}function V1(e){return Jd(e,$o,yt)}function U1(e){return!Rn(e)&&!yt(e)}function Jd(e,r,t){const a=e.getDirectives().filter(r),n=Object.values(e.getTypeMap()).filter(t);return[z1(e),...a.map(i=>e0(i)),...n.map(i=>Yd(i))].filter(Boolean).join(`

`)}function z1(e){if(e.description==null&&q1(e))return;const r=[],t=e.getQueryType();t&&r.push(`  query: ${t.name}`);const a=e.getMutationType();a&&r.push(`  mutation: ${a.name}`);const n=e.getSubscriptionType();return n&&r.push(`  subscription: ${n.name}`),dr(e)+`schema {
${r.join(`
`)}
}`}function q1(e){const r=e.getQueryType();if(r&&r.name!=="Query")return!1;const t=e.getMutationType();if(t&&t.name!=="Mutation")return!1;const a=e.getSubscriptionType();return!(a&&a.name!=="Subscription")}function Yd(e){if(ur(e))return K1(e);if(ge(e))return J1(e);if(De(e))return Y1(e);if(We(e))return Q1(e);if(He(e))return X1(e);if(Ce(e))return Z1(e);_e(!1,"Unexpected type: "+_(e))}function K1(e){return dr(e)+`scalar ${e.name}`+r0(e)}function Qd(e){const r=e.getInterfaces();return r.length?" implements "+r.map(t=>t.name).join(" & "):""}function J1(e){return dr(e)+`type ${e.name}`+Qd(e)+Xd(e)}function Y1(e){return dr(e)+`interface ${e.name}`+Qd(e)+Xd(e)}function Q1(e){const r=e.getTypes(),t=r.length?" = "+r.join(" | "):"";return dr(e)+"union "+e.name+t}function X1(e){const r=e.getValues().map((t,a)=>dr(t,"  ",!a)+"  "+t.name+mu(t.deprecationReason));return dr(e)+`enum ${e.name}`+pu(r)}function Z1(e){const r=Object.values(e.getFields()).map((t,a)=>dr(t,"  ",!a)+"  "+lo(t));return dr(e)+`input ${e.name}`+(e.isOneOf?" @oneOf":"")+pu(r)}function Xd(e){const r=Object.values(e.getFields()).map((t,a)=>dr(t,"  ",!a)+"  "+t.name+Zd(t.args,"  ")+": "+String(t.type)+mu(t.deprecationReason));return pu(r)}function pu(e){return e.length!==0?` {
`+e.join(`
`)+`
}`:""}function Zd(e,r=""){return e.length===0?"":e.every(t=>!t.description)?"("+e.map(lo).join(", ")+")":`(
`+e.map((t,a)=>dr(t,"  "+r,!a)+"  "+r+lo(t)).join(`
`)+`
`+r+")"}function lo(e){const r=Vr(e.defaultValue,e.type);let t=e.name+": "+String(e.type);return r&&(t+=` = ${Te(r)}`),t+mu(e.deprecationReason)}function e0(e){return dr(e)+"directive @"+e.name+Zd(e.args)+(e.isRepeatable?" repeatable":"")+" on "+e.locations.join(" | ")}function mu(e){return e==null?"":e!==Go?` @deprecated(reason: ${Te({kind:v.STRING,value:e})})`:" @deprecated"}function r0(e){return e.specifiedByURL==null?"":` @specifiedBy(url: ${Te({kind:v.STRING,value:e.specifiedByURL})})`}function dr(e,r="",t=!0){const{description:a}=e;if(a==null)return"";const n=Te({kind:v.STRING,value:a,block:Mh(a)});return(r&&!t?`
`+r:r)+n.replace(/\n/g,`
`+r)+`
`}function t0(e){const r=[];for(const t of e)r.push(...t.definitions);return{kind:v.DOCUMENT,definitions:r}}function a0(e){const r=[],t=Object.create(null);for(const n of e.definitions)switch(n.kind){case v.OPERATION_DEFINITION:r.push(n);break;case v.FRAGMENT_DEFINITION:t[n.name.value]=Js(n.selectionSet);break}const a=Object.create(null);for(const n of r){const i=new Set;for(const u of Js(n.selectionSet))ep(i,t,u);const o=n.name?n.name.value:"";a[o]={kind:v.DOCUMENT,definitions:e.definitions.filter(u=>u===n||u.kind===v.FRAGMENT_DEFINITION&&i.has(u.name.value))}}return a}function ep(e,r,t){if(!e.has(t)){e.add(t);const a=r[t];if(a!==void 0)for(const n of a)ep(e,r,n)}}function Js(e){const r=[];return Pt(e,{FragmentSpread(t){r.push(t.name.value)}}),r}function n0(e){const r=Tc(e)?e:new Sn(e),t=r.body,a=new No(r);let n="",i=!1;for(;a.advance().kind!==O.EOF;){const o=a.token,u=o.kind,s=!Ac(o.kind);i&&(s||o.kind===O.SPREAD)&&(n+=" ");const l=t.slice(o.start,o.end);u===O.BLOCK_STRING?n+=kc(o.value,{minimize:!0}):n+=l,i=s}return n}function i0(e){const r=rp(e);if(r)throw r;return e}function rp(e){if(typeof e=="string"||he(!1,"Expected name to be a string."),e.startsWith("__"))return new x(`Name "${e}" must not begin with "__", which is reserved by GraphQL introspection.`);try{or(e)}catch(r){return r}}var Ie;(function(e){e.TYPE_REMOVED="TYPE_REMOVED",e.TYPE_CHANGED_KIND="TYPE_CHANGED_KIND",e.TYPE_REMOVED_FROM_UNION="TYPE_REMOVED_FROM_UNION",e.VALUE_REMOVED_FROM_ENUM="VALUE_REMOVED_FROM_ENUM",e.REQUIRED_INPUT_FIELD_ADDED="REQUIRED_INPUT_FIELD_ADDED",e.IMPLEMENTED_INTERFACE_REMOVED="IMPLEMENTED_INTERFACE_REMOVED",e.FIELD_REMOVED="FIELD_REMOVED",e.FIELD_CHANGED_KIND="FIELD_CHANGED_KIND",e.REQUIRED_ARG_ADDED="REQUIRED_ARG_ADDED",e.ARG_REMOVED="ARG_REMOVED",e.ARG_CHANGED_KIND="ARG_CHANGED_KIND",e.DIRECTIVE_REMOVED="DIRECTIVE_REMOVED",e.DIRECTIVE_ARG_REMOVED="DIRECTIVE_ARG_REMOVED",e.REQUIRED_DIRECTIVE_ARG_ADDED="REQUIRED_DIRECTIVE_ARG_ADDED",e.DIRECTIVE_REPEATABLE_REMOVED="DIRECTIVE_REPEATABLE_REMOVED",e.DIRECTIVE_LOCATION_REMOVED="DIRECTIVE_LOCATION_REMOVED"})(Ie||(Ie={}));var gr;(function(e){e.VALUE_ADDED_TO_ENUM="VALUE_ADDED_TO_ENUM",e.TYPE_ADDED_TO_UNION="TYPE_ADDED_TO_UNION",e.OPTIONAL_INPUT_FIELD_ADDED="OPTIONAL_INPUT_FIELD_ADDED",e.OPTIONAL_ARG_ADDED="OPTIONAL_ARG_ADDED",e.IMPLEMENTED_INTERFACE_ADDED="IMPLEMENTED_INTERFACE_ADDED",e.ARG_DEFAULT_VALUE_CHANGE="ARG_DEFAULT_VALUE_CHANGE"})(gr||(gr={}));function o0(e,r){return tp(e,r).filter(t=>t.type in Ie)}function u0(e,r){return tp(e,r).filter(t=>t.type in gr)}function tp(e,r){return[...l0(e,r),...s0(e,r)]}function s0(e,r){const t=[],a=xr(e.getDirectives(),r.getDirectives());for(const n of a.removed)t.push({type:Ie.DIRECTIVE_REMOVED,description:`${n.name} was removed.`});for(const[n,i]of a.persisted){const o=xr(n.args,i.args);for(const u of o.added)Qr(u)&&t.push({type:Ie.REQUIRED_DIRECTIVE_ARG_ADDED,description:`A required arg ${u.name} on directive ${n.name} was added.`});for(const u of o.removed)t.push({type:Ie.DIRECTIVE_ARG_REMOVED,description:`${u.name} was removed from ${n.name}.`});n.isRepeatable&&!i.isRepeatable&&t.push({type:Ie.DIRECTIVE_REPEATABLE_REMOVED,description:`Repeatable flag was removed from ${n.name}.`});for(const u of n.locations)i.locations.includes(u)||t.push({type:Ie.DIRECTIVE_LOCATION_REMOVED,description:`${u} was removed from ${n.name}.`})}return t}function l0(e,r){const t=[],a=xr(Object.values(e.getTypeMap()),Object.values(r.getTypeMap()));for(const n of a.removed)t.push({type:Ie.TYPE_REMOVED,description:Rn(n)?`Standard scalar ${n.name} was removed because it is not referenced anymore.`:`${n.name} was removed.`});for(const[n,i]of a.persisted)He(n)&&He(i)?t.push(...p0(n,i)):We(n)&&We(i)?t.push(...d0(n,i)):Ce(n)&&Ce(i)?t.push(...c0(n,i)):ge(n)&&ge(i)?t.push(...Qs(n,i),...Ys(n,i)):De(n)&&De(i)?t.push(...Qs(n,i),...Ys(n,i)):n.constructor!==i.constructor&&t.push({type:Ie.TYPE_CHANGED_KIND,description:`${n.name} changed from ${Xs(n)} to ${Xs(i)}.`});return t}function c0(e,r){const t=[],a=xr(Object.values(e.getFields()),Object.values(r.getFields()));for(const n of a.added)Nn(n)?t.push({type:Ie.REQUIRED_INPUT_FIELD_ADDED,description:`A required field ${n.name} on input type ${e.name} was added.`}):t.push({type:gr.OPTIONAL_INPUT_FIELD_ADDED,description:`An optional field ${n.name} on input type ${e.name} was added.`});for(const n of a.removed)t.push({type:Ie.FIELD_REMOVED,description:`${e.name}.${n.name} was removed.`});for(const[n,i]of a.persisted)ma(n.type,i.type)||t.push({type:Ie.FIELD_CHANGED_KIND,description:`${e.name}.${n.name} changed type from ${String(n.type)} to ${String(i.type)}.`});return t}function d0(e,r){const t=[],a=xr(e.getTypes(),r.getTypes());for(const n of a.added)t.push({type:gr.TYPE_ADDED_TO_UNION,description:`${n.name} was added to union type ${e.name}.`});for(const n of a.removed)t.push({type:Ie.TYPE_REMOVED_FROM_UNION,description:`${n.name} was removed from union type ${e.name}.`});return t}function p0(e,r){const t=[],a=xr(e.getValues(),r.getValues());for(const n of a.added)t.push({type:gr.VALUE_ADDED_TO_ENUM,description:`${n.name} was added to enum type ${e.name}.`});for(const n of a.removed)t.push({type:Ie.VALUE_REMOVED_FROM_ENUM,description:`${n.name} was removed from enum type ${e.name}.`});return t}function Ys(e,r){const t=[],a=xr(e.getInterfaces(),r.getInterfaces());for(const n of a.added)t.push({type:gr.IMPLEMENTED_INTERFACE_ADDED,description:`${n.name} added to interfaces implemented by ${e.name}.`});for(const n of a.removed)t.push({type:Ie.IMPLEMENTED_INTERFACE_REMOVED,description:`${e.name} no longer implements interface ${n.name}.`});return t}function Qs(e,r){const t=[],a=xr(Object.values(e.getFields()),Object.values(r.getFields()));for(const n of a.removed)t.push({type:Ie.FIELD_REMOVED,description:`${e.name}.${n.name} was removed.`});for(const[n,i]of a.persisted)t.push(...m0(e,n,i)),ca(n.type,i.type)||t.push({type:Ie.FIELD_CHANGED_KIND,description:`${e.name}.${n.name} changed type from ${String(n.type)} to ${String(i.type)}.`});return t}function m0(e,r,t){const a=[],n=xr(r.args,t.args);for(const i of n.removed)a.push({type:Ie.ARG_REMOVED,description:`${e.name}.${r.name} arg ${i.name} was removed.`});for(const[i,o]of n.persisted)if(!ma(i.type,o.type))a.push({type:Ie.ARG_CHANGED_KIND,description:`${e.name}.${r.name} arg ${i.name} has changed type from ${String(i.type)} to ${String(o.type)}.`});else if(i.defaultValue!==void 0)if(o.defaultValue===void 0)a.push({type:gr.ARG_DEFAULT_VALUE_CHANGE,description:`${e.name}.${r.name} arg ${i.name} defaultValue was removed.`});else{const s=Zs(i.defaultValue,i.type),l=Zs(o.defaultValue,o.type);s!==l&&a.push({type:gr.ARG_DEFAULT_VALUE_CHANGE,description:`${e.name}.${r.name} arg ${i.name} has changed defaultValue from ${s} to ${l}.`})}for(const i of n.added)Qr(i)?a.push({type:Ie.REQUIRED_ARG_ADDED,description:`A required arg ${i.name} on ${e.name}.${r.name} was added.`}):a.push({type:gr.OPTIONAL_ARG_ADDED,description:`An optional arg ${i.name} on ${e.name}.${r.name} was added.`});return a}function ca(e,r){return Be(e)?Be(r)&&ca(e.ofType,r.ofType)||pe(r)&&ca(e,r.ofType):pe(e)?pe(r)&&ca(e.ofType,r.ofType):Ba(r)&&e.name===r.name||pe(r)&&ca(e,r.ofType)}function ma(e,r){return Be(e)?Be(r)&&ma(e.ofType,r.ofType):pe(e)?pe(r)&&ma(e.ofType,r.ofType)||!pe(r)&&ma(e.ofType,r):Ba(r)&&e.name===r.name}function Xs(e){if(ur(e))return"a Scalar type";if(ge(e))return"an Object type";if(De(e))return"an Interface type";if(We(e))return"a Union type";if(He(e))return"an Enum type";if(Ce(e))return"an Input type";_e(!1,"Unexpected type: "+_(e))}function Zs(e,r){const t=Vr(e,r);return t!=null||_e(!1),Te(On(t))}function xr(e,r){const t=[],a=[],n=[],i=Ir(e,({name:u})=>u),o=Ir(r,({name:u})=>u);for(const u of e){const s=o[u.name];s===void 0?a.push(u):n.push([u,s])}for(const u of r)i[u.name]===void 0&&t.push(u);return{added:t,persisted:n,removed:a}}const F0=Object.freeze(Object.defineProperty({__proto__:null,BREAK:wt,get BreakingChangeType(){return Ie},DEFAULT_DEPRECATION_REASON:Go,get DangerousChangeType(){return gr},get DirectiveLocation(){return oe},ExecutableDefinitionsRule:Vc,FieldsOnCorrectTypeRule:Uc,FragmentsOnCompositeTypesRule:zc,GRAPHQL_MAX_INT:tn,GRAPHQL_MIN_INT:an,GraphQLBoolean:rr,GraphQLDeprecatedDirective:Mn,GraphQLDirective:br,GraphQLEnumType:Kr,GraphQLError:x,GraphQLFloat:jc,GraphQLID:Oo,GraphQLIncludeDirective:_o,GraphQLInputObjectType:Rt,GraphQLInt:Hc,GraphQLInterfaceType:Bt,GraphQLList:ze,GraphQLNonNull:Fe,GraphQLObjectType:cr,GraphQLOneOfDirective:jo,GraphQLScalarType:Cr,GraphQLSchema:Gt,GraphQLSkipDirective:Po,GraphQLSpecifiedByDirective:Ho,GraphQLString:xe,GraphQLUnionType:Nt,get Kind(){return v},KnownArgumentNamesRule:qc,KnownDirectivesRule:nu,KnownFragmentNamesRule:Jc,KnownTypeNamesRule:iu,Lexer:No,Location:bc,LoneAnonymousOperationRule:Yc,LoneSchemaDefinitionRule:Qc,MaxIntrospectionDepthRule:Xc,NoDeprecatedCustomRule:M1,NoFragmentCyclesRule:Zc,NoSchemaIntrospectionCustomRule:I1,NoUndefinedVariablesRule:ed,NoUnusedFragmentsRule:rd,NoUnusedVariablesRule:td,get OperationTypeNode(){return $e},OverlappingFieldsCanBeMergedRule:nd,PossibleFragmentSpreadsRule:ud,PossibleTypeExtensionsRule:sd,ProvidedRequiredArgumentsRule:ld,ScalarLeafsRule:dd,SchemaMetaFieldDef:ha,SingleFieldSubscriptionsRule:fd,Source:Sn,Token:To,get TokenKind(){return O},TypeInfo:Zo,get TypeKind(){return ke},TypeMetaFieldDef:fa,TypeNameMetaFieldDef:ya,UniqueArgumentDefinitionNamesRule:yd,UniqueArgumentNamesRule:lu,UniqueDirectiveNamesRule:gd,UniqueDirectivesPerLocationRule:cu,UniqueEnumValueNamesRule:bd,UniqueFieldDefinitionNamesRule:vd,UniqueFragmentNamesRule:Dd,UniqueInputFieldNamesRule:du,UniqueOperationNamesRule:Ed,UniqueOperationTypesRule:kd,UniqueTypeNamesRule:Ad,UniqueVariableNamesRule:wd,ValidationContext:Ld,ValuesOfCorrectTypeRule:Cd,VariablesAreInputTypesRule:Sd,VariablesInAllowedPositionRule:Td,__Directive:Vo,__DirectiveLocation:Uo,__EnumValue:qo,__Field:zo,__InputValue:La,__Schema:In,__Type:lr,__TypeKind:Ko,assertAbstractType:vf,assertCompositeType:bf,assertDirective:wf,assertEnumType:pf,assertEnumValueName:Rc,assertInputObjectType:mf,assertInputType:ff,assertInterfaceType:Mc,assertLeafType:gf,assertListType:Ff,assertName:or,assertNamedType:Ef,assertNonNullType:hf,assertNullableType:Ic,assertObjectType:Lc,assertOutputType:yf,assertScalarType:cf,assertSchema:Jo,assertType:lf,assertUnionType:df,assertValidName:i0,assertValidSchema:Qo,assertWrappingType:Df,astFromValue:Vr,buildASTSchema:qd,buildClientSchema:P1,buildSchema:j1,coerceInputValue:md,concatAST:t0,createSourceEventStream:Vd,defaultFieldResolver:so,defaultTypeResolver:Hd,doTypesOverlap:ao,execute:Pn,executeSync:xd,extendSchema:G1,findBreakingChanges:o0,findDangerousChanges:u0,formatError:Bh,getArgumentValues:_n,getDirectiveValues:Mt,getEnterLeaveForKind:Tt,getIntrospectionQuery:Ud,getLocation:nn,getNamedType:Je,getNullableType:Mo,getOperationAST:x1,getOperationRootType:O1,getVariableValues:Fd,getVisitFn:of,graphql:S1,graphqlSync:T1,introspectionFromSchema:_1,introspectionTypes:Ma,isAbstractType:kr,isCompositeType:wr,isConstValueNode:no,isDefinitionNode:Pf,isDirective:Ln,isEnumType:He,isEqualType:un,isExecutableDefinitionNode:ru,isInputObjectType:Ce,isInputType:er,isInterfaceType:De,isIntrospectionType:yt,isLeafType:Ar,isListType:Be,isNamedType:Ba,isNonNullType:pe,isNullableType:Lo,isObjectType:ge,isOutputType:Ur,isRequiredArgument:Qr,isRequiredInputField:Nn,isScalarType:ur,isSchema:$c,isSelectionNode:Gf,isSpecifiedDirective:$o,isSpecifiedScalarType:Rn,isType:Sa,isTypeDefinitionNode:Ht,isTypeExtensionNode:xn,isTypeNode:Hf,isTypeSubTypeOf:pt,isTypeSystemDefinitionNode:tu,isTypeSystemExtensionNode:au,isUnionType:We,isValidNameError:rp,isValueNode:Wc,isWrappingType:Ta,lexicographicSortSchema:$1,locatedError:It,parse:Tn,parseConstValue:Yh,parseType:Qh,parseValue:Bc,print:Te,printError:Th,printIntrospectionSchema:V1,printLocation:gc,printSchema:W1,printSourceLocation:So,printType:Yd,recommendedRules:Bd,resolveObjMapThunk:xo,resolveReadonlyArrayThunk:Io,responsePathAsArray:Ke,separateOperations:a0,specifiedDirectives:Xr,specifiedRules:Nd,specifiedScalarTypes:Na,stripIgnoredCharacters:n0,subscribe:N1,syntaxError:je,typeFromAST:tr,validate:Md,validateSchema:Yo,valueFromAST:Er,valueFromASTUntyped:on,version:Ah,versionInfo:wh,visit:Pt,visitInParallel:Ro,visitWithTypeInfo:eu},Symbol.toStringTag,{value:"Module"})),h0=Hl(F0);function f0(e){for(var r=[],t=0;t<e.length;){var a=e[t];if(a==="*"||a==="+"||a==="?"){r.push({type:"MODIFIER",index:t,value:e[t++]});continue}if(a==="\\"){r.push({type:"ESCAPED_CHAR",index:t++,value:e[t++]});continue}if(a==="{"){r.push({type:"OPEN",index:t,value:e[t++]});continue}if(a==="}"){r.push({type:"CLOSE",index:t,value:e[t++]});continue}if(a===":"){for(var n="",i=t+1;i<e.length;){var o=e.charCodeAt(i);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){n+=e[i++];continue}break}if(!n)throw new TypeError("Missing parameter name at ".concat(t));r.push({type:"NAME",index:t,value:n}),t=i;continue}if(a==="("){var u=1,s="",i=t+1;if(e[i]==="?")throw new TypeError('Pattern cannot start with "?" at '.concat(i));for(;i<e.length;){if(e[i]==="\\"){s+=e[i++]+e[i++];continue}if(e[i]===")"){if(u--,u===0){i++;break}}else if(e[i]==="("&&(u++,e[i+1]!=="?"))throw new TypeError("Capturing groups are not allowed at ".concat(i));s+=e[i++]}if(u)throw new TypeError("Unbalanced pattern at ".concat(t));if(!s)throw new TypeError("Missing pattern at ".concat(t));r.push({type:"PATTERN",index:t,value:s}),t=i;continue}r.push({type:"CHAR",index:t,value:e[t++]})}return r.push({type:"END",index:t,value:""}),r}function Fu(e,r){r===void 0&&(r={});for(var t=f0(e),a=r.prefixes,n=a===void 0?"./":a,i="[^".concat(kt(r.delimiter||"/#?"),"]+?"),o=[],u=0,s=0,l="",c=function(C){if(s<t.length&&t[s].type===C)return t[s++].value},d=function(C){var j=c(C);if(j!==void 0)return j;var L=t[s],y=L.type,B=L.index;throw new TypeError("Unexpected ".concat(y," at ").concat(B,", expected ").concat(C))},p=function(){for(var C="",j;j=c("CHAR")||c("ESCAPED_CHAR");)C+=j;return C};s<t.length;){var h=c("CHAR"),g=c("NAME"),b=c("PATTERN");if(g||b){var F=h||"";n.indexOf(F)===-1&&(l+=F,F=""),l&&(o.push(l),l=""),o.push({name:g||u++,prefix:F,suffix:"",pattern:b||i,modifier:c("MODIFIER")||""});continue}var D=h||c("ESCAPED_CHAR");if(D){l+=D;continue}l&&(o.push(l),l="");var N=c("OPEN");if(N){var F=p(),T=c("NAME")||"",E=c("PATTERN")||"",R=p();d("CLOSE"),o.push({name:T||(E?u++:""),pattern:T&&!E?i:E,prefix:F,suffix:R,modifier:c("MODIFIER")||""});continue}d("END")}return o}function y0(e,r){return ap(Fu(e,r),r)}function ap(e,r){r===void 0&&(r={});var t=hu(r),a=r.encode,n=a===void 0?function(s){return s}:a,i=r.validate,o=i===void 0?!0:i,u=e.map(function(s){if(typeof s=="object")return new RegExp("^(?:".concat(s.pattern,")$"),t)});return function(s){for(var l="",c=0;c<e.length;c++){var d=e[c];if(typeof d=="string"){l+=d;continue}var p=s?s[d.name]:void 0,h=d.modifier==="?"||d.modifier==="*",g=d.modifier==="*"||d.modifier==="+";if(Array.isArray(p)){if(!g)throw new TypeError('Expected "'.concat(d.name,'" to not repeat, but got an array'));if(p.length===0){if(h)continue;throw new TypeError('Expected "'.concat(d.name,'" to not be empty'))}for(var b=0;b<p.length;b++){var F=n(p[b],d);if(o&&!u[c].test(F))throw new TypeError('Expected all "'.concat(d.name,'" to match "').concat(d.pattern,'", but got "').concat(F,'"'));l+=d.prefix+F+d.suffix}continue}if(typeof p=="string"||typeof p=="number"){var F=n(String(p),d);if(o&&!u[c].test(F))throw new TypeError('Expected "'.concat(d.name,'" to match "').concat(d.pattern,'", but got "').concat(F,'"'));l+=d.prefix+F+d.suffix;continue}if(!h){var D=g?"an array":"a string";throw new TypeError('Expected "'.concat(d.name,'" to be ').concat(D))}}return l}}function g0(e,r){var t=[],a=fu(e,t,r);return np(a,t,r)}function np(e,r,t){t===void 0&&(t={});var a=t.decode,n=a===void 0?function(i){return i}:a;return function(i){var o=e.exec(i);if(!o)return!1;for(var u=o[0],s=o.index,l=Object.create(null),c=function(p){if(o[p]===void 0)return"continue";var h=r[p-1];h.modifier==="*"||h.modifier==="+"?l[h.name]=o[p].split(h.prefix+h.suffix).map(function(g){return n(g,h)}):l[h.name]=n(o[p],h)},d=1;d<o.length;d++)c(d);return{path:u,index:s,params:l}}}function kt(e){return e.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1")}function hu(e){return e&&e.sensitive?"":"i"}function b0(e,r){if(!r)return e;for(var t=/\((?:\?<(.*?)>)?(?!\?)/g,a=0,n=t.exec(e.source);n;)r.push({name:n[1]||a++,prefix:"",suffix:"",modifier:"",pattern:""}),n=t.exec(e.source);return e}function v0(e,r,t){var a=e.map(function(n){return fu(n,r,t).source});return new RegExp("(?:".concat(a.join("|"),")"),hu(t))}function D0(e,r,t){return ip(Fu(e,t),r,t)}function ip(e,r,t){t===void 0&&(t={});for(var a=t.strict,n=a===void 0?!1:a,i=t.start,o=i===void 0?!0:i,u=t.end,s=u===void 0?!0:u,l=t.encode,c=l===void 0?function(B){return B}:l,d=t.delimiter,p=d===void 0?"/#?":d,h=t.endsWith,g=h===void 0?"":h,b="[".concat(kt(g),"]|$"),F="[".concat(kt(p),"]"),D=o?"^":"",N=0,T=e;N<T.length;N++){var E=T[N];if(typeof E=="string")D+=kt(c(E));else{var R=kt(c(E.prefix)),C=kt(c(E.suffix));if(E.pattern)if(r&&r.push(E),R||C)if(E.modifier==="+"||E.modifier==="*"){var j=E.modifier==="*"?"?":"";D+="(?:".concat(R,"((?:").concat(E.pattern,")(?:").concat(C).concat(R,"(?:").concat(E.pattern,"))*)").concat(C,")").concat(j)}else D+="(?:".concat(R,"(").concat(E.pattern,")").concat(C,")").concat(E.modifier);else E.modifier==="+"||E.modifier==="*"?D+="((?:".concat(E.pattern,")").concat(E.modifier,")"):D+="(".concat(E.pattern,")").concat(E.modifier);else D+="(?:".concat(R).concat(C,")").concat(E.modifier)}}if(s)n||(D+="".concat(F,"?")),D+=t.endsWith?"(?=".concat(b,")"):"$";else{var L=e[e.length-1],y=typeof L=="string"?F.indexOf(L[L.length-1])>-1:L===void 0;n||(D+="(?:".concat(F,"(?=").concat(b,"))?")),y||(D+="(?=".concat(F,"|").concat(b,")"))}return new RegExp(D,hu(t))}function fu(e,r,t){return e instanceof RegExp?b0(e,r):Array.isArray(e)?v0(e,r,t):D0(e,r,t)}const E0=Object.freeze(Object.defineProperty({__proto__:null,compile:y0,match:g0,parse:Fu,pathToRegexp:fu,regexpToFunction:np,tokensToFunction:ap,tokensToRegexp:ip},Symbol.toStringTag,{value:"Module"})),k0=Hl(E0);var qt={},Kt={},el;function op(){if(el)return Kt;el=1,Object.defineProperty(Kt,"__esModule",{value:!0}),Kt.toIsoResponse=void 0;var e=pr;function r(t){var a;return{status:(a=t.status)!==null&&a!==void 0?a:200,statusText:t.statusText||"OK",headers:e.objectToHeaders(t.headers||{}),body:t.body}}return Kt.toIsoResponse=r,Kt}var rl;function A0(){if(rl)return qt;rl=1;var e=Y&&Y.__extends||function(){var b=function(F,D){return b=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(N,T){N.__proto__=T}||function(N,T){for(var E in T)Object.prototype.hasOwnProperty.call(T,E)&&(N[E]=T[E])},b(F,D)};return function(F,D){if(typeof D!="function"&&D!==null)throw new TypeError("Class extends value "+String(D)+" is not a constructor or null");b(F,D);function N(){this.constructor=F}F.prototype=D===null?Object.create(D):(N.prototype=D.prototype,new N)}}(),r=Y&&Y.__assign||function(){return r=Object.assign||function(b){for(var F,D=1,N=arguments.length;D<N;D++){F=arguments[D];for(var T in F)Object.prototype.hasOwnProperty.call(F,T)&&(b[T]=F[T])}return b},r.apply(this,arguments)},t=Y&&Y.__awaiter||function(b,F,D,N){function T(E){return E instanceof D?E:new D(function(R){R(E)})}return new(D||(D=Promise))(function(E,R){function C(y){try{L(N.next(y))}catch(B){R(B)}}function j(y){try{L(N.throw(y))}catch(B){R(B)}}function L(y){y.done?E(y.value):T(y.value).then(C,j)}L((N=N.apply(b,F||[])).next())})},a=Y&&Y.__generator||function(b,F){var D={label:0,sent:function(){if(E[0]&1)throw E[1];return E[1]},trys:[],ops:[]},N,T,E,R;return R={next:C(0),throw:C(1),return:C(2)},typeof Symbol=="function"&&(R[Symbol.iterator]=function(){return this}),R;function C(L){return function(y){return j([L,y])}}function j(L){if(N)throw new TypeError("Generator is already executing.");for(;D;)try{if(N=1,T&&(E=L[0]&2?T.return:L[0]?T.throw||((E=T.return)&&E.call(T),0):T.next)&&!(E=E.call(T,L[1])).done)return E;switch(T=0,E&&(L=[L[0]&2,E.value]),L[0]){case 0:case 1:E=L;break;case 4:return D.label++,{value:L[1],done:!1};case 5:D.label++,T=L[1],L=[0];continue;case 7:L=D.ops.pop(),D.trys.pop();continue;default:if(E=D.trys,!(E=E.length>0&&E[E.length-1])&&(L[0]===6||L[0]===2)){D=0;continue}if(L[0]===3&&(!E||L[1]>E[0]&&L[1]<E[3])){D.label=L[1];break}if(L[0]===6&&D.label<E[1]){D.label=E[1],E=L;break}if(E&&D.label<E[2]){D.label=E[2],D.ops.push(L);break}E[2]&&D.ops.pop(),D.trys.pop();continue}L=F.call(b,D)}catch(y){L=[6,y],T=0}finally{N=E=0}if(L[0]&5)throw L[1];return{value:L[0]?L[1]:void 0,done:!0}}},n=Y&&Y.__read||function(b,F){var D=typeof Symbol=="function"&&b[Symbol.iterator];if(!D)return b;var N=D.call(b),T,E=[],R;try{for(;(F===void 0||F-- >0)&&!(T=N.next()).done;)E.push(T.value)}catch(C){R={error:C}}finally{try{T&&!T.done&&(D=N.return)&&D.call(N)}finally{if(R)throw R.error}}return E};Object.defineProperty(qt,"__esModule",{value:!0}),qt.FetchInterceptor=void 0;var i=pr,o=Or,u=Jr,s=ft,l=xt,c=Ea,d=op(),p=Ot,h=function(b){e(F,b);function F(){return b.call(this,F.symbol)||this}return F.prototype.checkEnvironment=function(){return typeof globalThis<"u"&&typeof globalThis.fetch<"u"},F.prototype.setup=function(){var D=this,N=globalThis.fetch;o.invariant(!N[l.IS_PATCHED_MODULE],'Failed to patch the "fetch" module: already patched.'),globalThis.fetch=function(T,E){return t(D,void 0,void 0,function(){var R,C,j,L,y,B,H,P,$,X,ie,ee,Q,W=this;return a(this,function(K){switch(K.label){case 0:return R=new Request(T,E),C=typeof T=="string"?T:T.url,j=R.method,this.log("[%s] %s",j,C),[4,R.clone().arrayBuffer()];case 1:return L=K.sent(),y=new URL(C,typeof location<"u"?location.origin:void 0),B=new s.IsomorphicRequest(y,{body:L,method:j,headers:new i.Headers(R.headers),credentials:R.credentials}),H=new p.InteractiveIsomorphicRequest(B),this.log("isomorphic request",H),this.log('emitting the "request" event for %d listener(s)...',this.emitter.listenerCount("request")),this.emitter.emit("request",H),this.log("awaiting for the mocked response..."),[4,u.until(function(){return t(W,void 0,void 0,function(){var re,U;return a(this,function(M){switch(M.label){case 0:return[4,this.emitter.untilIdle("request",function(A){var w=n(A.args,1),S=w[0];return S.id===H.id})];case 1:return M.sent(),this.log("all request listeners have been resolved!"),[4,H.respondWith.invoked()];case 2:return re=n.apply(void 0,[M.sent(),1]),U=re[0],this.log("event.respondWith called with:",U),[2,U]}})})})];case 2:return P=n.apply(void 0,[K.sent(),2]),$=P[0],X=P[1],$?(console.error(R.method+" "+R.url+" net::ERR_FAILED"),ie=Object.assign(new TypeError("Failed to fetch"),{cause:$}),[2,Promise.reject(ie)]):X?(this.log("received mocked response:",X),ee=d.toIsoResponse(X),this.log("derived isomorphic response:",ee),this.emitter.emit("response",H,ee),Q=new Response(X.body,r(r({},ee),{headers:i.flattenHeadersObject(X.headers||{})})),Object.defineProperty(Q,"url",{writable:!1,enumerable:!0,configurable:!1,value:H.url.href}),[2,Q]):(this.log("no mocked response received!"),[2,N(R).then(function(re){return t(W,void 0,void 0,function(){var U,M,A,w;return a(this,function(S){switch(S.label){case 0:return U=re.clone(),this.log("original fetch performed",U),A=(M=this.emitter).emit,w=["response",H],[4,g(U)];case 1:return A.apply(M,w.concat([S.sent()])),[2,re]}})})})])}})})},Object.defineProperty(globalThis.fetch,l.IS_PATCHED_MODULE,{enumerable:!0,configurable:!0,value:!0}),this.subscriptions.push(function(){Object.defineProperty(globalThis.fetch,l.IS_PATCHED_MODULE,{value:void 0}),globalThis.fetch=N,D.log('restored native "globalThis.fetch"!',globalThis.fetch.name)})},F.symbol=Symbol("fetch"),F}(c.Interceptor);qt.FetchInterceptor=h;function g(b){return t(this,void 0,void 0,function(){var F;return a(this,function(D){switch(D.label){case 0:return F={status:b.status,statusText:b.statusText,headers:i.objectToHeaders(i.headersToObject(b.headers))},[4,b.text()];case 1:return[2,(F.body=D.sent(),F)]}})})}return qt}var Jt={},Yt={},Qt={},Br={},ut={},tl;function Gn(){if(tl)return ut;tl=1;function e(i,o,u){if(u===void 0&&(u=Array.prototype),i&&typeof u.find=="function")return u.find.call(i,o);for(var s=0;s<i.length;s++)if(Object.prototype.hasOwnProperty.call(i,s)){var l=i[s];if(o.call(void 0,l,s,i))return l}}function r(i,o){return o===void 0&&(o=Object),o&&typeof o.freeze=="function"?o.freeze(i):i}function t(i,o){if(i===null||typeof i!="object")throw new TypeError("target is not an object");for(var u in o)Object.prototype.hasOwnProperty.call(o,u)&&(i[u]=o[u]);return i}var a=r({HTML:"text/html",isHTML:function(i){return i===a.HTML},XML_APPLICATION:"application/xml",XML_TEXT:"text/xml",XML_XHTML_APPLICATION:"application/xhtml+xml",XML_SVG_IMAGE:"image/svg+xml"}),n=r({HTML:"http://www.w3.org/1999/xhtml",isHTML:function(i){return i===n.HTML},SVG:"http://www.w3.org/2000/svg",XML:"http://www.w3.org/XML/1998/namespace",XMLNS:"http://www.w3.org/2000/xmlns/"});return ut.assign=t,ut.find=e,ut.freeze=r,ut.MIME_TYPE=a,ut.NAMESPACE=n,ut}var al;function up(){if(al)return Br;al=1;var e=Gn(),r=e.find,t=e.NAMESPACE;function a(m){return m!==""}function n(m){return m?m.split(/[\t\n\f\r ]+/).filter(a):[]}function i(m,f){return m.hasOwnProperty(f)||(m[f]=!0),m}function o(m){if(!m)return[];var f=n(m);return Object.keys(f.reduce(i,{}))}function u(m){return function(f){return m&&m.indexOf(f)!==-1}}function s(m,f){for(var k in m)Object.prototype.hasOwnProperty.call(m,k)&&(f[k]=m[k])}function l(m,f){var k=m.prototype;if(!(k instanceof f)){let I=function(){};I.prototype=f.prototype,I=new I,s(k,I),m.prototype=k=I}k.constructor!=m&&(typeof m!="function"&&console.error("unknown Class:"+m),k.constructor=m)}var c={},d=c.ELEMENT_NODE=1,p=c.ATTRIBUTE_NODE=2,h=c.TEXT_NODE=3,g=c.CDATA_SECTION_NODE=4,b=c.ENTITY_REFERENCE_NODE=5,F=c.ENTITY_NODE=6,D=c.PROCESSING_INSTRUCTION_NODE=7,N=c.COMMENT_NODE=8,T=c.DOCUMENT_NODE=9,E=c.DOCUMENT_TYPE_NODE=10,R=c.DOCUMENT_FRAGMENT_NODE=11,C=c.NOTATION_NODE=12,j={},L={};j.INDEX_SIZE_ERR=(L[1]="Index size error",1),j.DOMSTRING_SIZE_ERR=(L[2]="DOMString size error",2);var y=j.HIERARCHY_REQUEST_ERR=(L[3]="Hierarchy request error",3);j.WRONG_DOCUMENT_ERR=(L[4]="Wrong document",4),j.INVALID_CHARACTER_ERR=(L[5]="Invalid character",5),j.NO_DATA_ALLOWED_ERR=(L[6]="No data allowed",6),j.NO_MODIFICATION_ALLOWED_ERR=(L[7]="No modification allowed",7);var B=j.NOT_FOUND_ERR=(L[8]="Not found",8);j.NOT_SUPPORTED_ERR=(L[9]="Not supported",9);var H=j.INUSE_ATTRIBUTE_ERR=(L[10]="Attribute in use",10);j.INVALID_STATE_ERR=(L[11]="Invalid state",11),j.SYNTAX_ERR=(L[12]="Syntax error",12),j.INVALID_MODIFICATION_ERR=(L[13]="Invalid modification",13),j.NAMESPACE_ERR=(L[14]="Invalid namespace",14),j.INVALID_ACCESS_ERR=(L[15]="Invalid access",15);function P(m,f){if(f instanceof Error)var k=f;else k=this,Error.call(this,L[m]),this.message=L[m],Error.captureStackTrace&&Error.captureStackTrace(this,P);return k.code=m,f&&(this.message=this.message+": "+f),k}P.prototype=Error.prototype,s(j,P);function $(){}$.prototype={length:0,item:function(m){return m>=0&&m<this.length?this[m]:null},toString:function(m,f){for(var k=[],I=0;I<this.length;I++)Dt(this[I],k,m,f);return k.join("")},filter:function(m){return Array.prototype.filter.call(this,m)},indexOf:function(m){return Array.prototype.indexOf.call(this,m)}};function X(m,f){this._node=m,this._refresh=f,ie(this)}function ie(m){var f=m._node._inc||m._node.ownerDocument._inc;if(m._inc!==f){var k=m._refresh(m._node);if(Lu(m,"length",k.length),!m.$$length||k.length<m.$$length)for(var I=k.length;I in m;I++)Object.prototype.hasOwnProperty.call(m,I)&&delete m[I];s(k,m),m._inc=f}}X.prototype.item=function(m){return ie(this),this[m]||null},l(X,$);function ee(){}function Q(m,f){for(var k=m.length;k--;)if(m[k]===f)return k}function W(m,f,k,I){if(I?f[Q(f,I)]=k:f[f.length++]=k,m){k.ownerElement=m;var z=m.ownerDocument;z&&(I&&J(z,m,I),S(z,m,k))}}function K(m,f,k){var I=Q(f,k);if(I>=0){for(var z=f.length-1;I<z;)f[I]=f[++I];if(f.length=z,m){var ce=m.ownerDocument;ce&&(J(ce,m,k),k.ownerElement=null)}}else throw new P(B,new Error(m.tagName+"@"+k))}ee.prototype={length:0,item:$.prototype.item,getNamedItem:function(m){for(var f=this.length;f--;){var k=this[f];if(k.nodeName==m)return k}},setNamedItem:function(m){var f=m.ownerElement;if(f&&f!=this._ownerElement)throw new P(H);var k=this.getNamedItem(m.nodeName);return W(this._ownerElement,this,m,k),k},setNamedItemNS:function(m){var f=m.ownerElement,k;if(f&&f!=this._ownerElement)throw new P(H);return k=this.getNamedItemNS(m.namespaceURI,m.localName),W(this._ownerElement,this,m,k),k},removeNamedItem:function(m){var f=this.getNamedItem(m);return K(this._ownerElement,this,f),f},removeNamedItemNS:function(m,f){var k=this.getNamedItemNS(m,f);return K(this._ownerElement,this,k),k},getNamedItemNS:function(m,f){for(var k=this.length;k--;){var I=this[k];if(I.localName==f&&I.namespaceURI==m)return I}return null}};function re(){}re.prototype={hasFeature:function(m,f){return!0},createDocument:function(m,f,k){var I=new w;if(I.implementation=this,I.childNodes=new $,I.doctype=k||null,k&&I.appendChild(k),f){var z=I.createElementNS(m,f);I.appendChild(z)}return I},createDocumentType:function(m,f,k){var I=new Pa;return I.name=m,I.nodeName=m,I.publicId=f||"",I.systemId=k||"",I}};function U(){}U.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(m,f){return G(this,m,f)},replaceChild:function(m,f){G(this,m,f,bt),f&&this.removeChild(f)},removeChild:function(m){return q(this,m)},appendChild:function(m){return this.insertBefore(m,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(m){return Qn(this.ownerDocument||this,this,m)},normalize:function(){for(var m=this.firstChild;m;){var f=m.nextSibling;f&&f.nodeType==h&&m.nodeType==h?(this.removeChild(f),m.appendData(f.data)):(m.normalize(),m=f)}},isSupported:function(m,f){return this.ownerDocument.implementation.hasFeature(m,f)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(m){for(var f=this;f;){var k=f._nsMap;if(k){for(var I in k)if(Object.prototype.hasOwnProperty.call(k,I)&&k[I]===m)return I}f=f.nodeType==p?f.ownerDocument:f.parentNode}return null},lookupNamespaceURI:function(m){for(var f=this;f;){var k=f._nsMap;if(k&&Object.prototype.hasOwnProperty.call(k,m))return k[m];f=f.nodeType==p?f.ownerDocument:f.parentNode}return null},isDefaultNamespace:function(m){var f=this.lookupPrefix(m);return f==null}};function M(m){return m=="<"&&"&lt;"||m==">"&&"&gt;"||m=="&"&&"&amp;"||m=='"'&&"&quot;"||"&#"+m.charCodeAt()+";"}s(c,U),s(c,U.prototype);function A(m,f){if(f(m))return!0;if(m=m.firstChild)do if(A(m,f))return!0;while(m=m.nextSibling)}function w(){this.ownerDocument=this}function S(m,f,k){m&&m._inc++;var I=k.namespaceURI;I===t.XMLNS&&(f._nsMap[k.prefix?k.localName:""]=k.value)}function J(m,f,k,I){m&&m._inc++;var z=k.namespaceURI;z===t.XMLNS&&delete f._nsMap[k.prefix?k.localName:""]}function ne(m,f,k){if(m&&m._inc){m._inc++;var I=f.childNodes;if(k)I[I.length++]=k;else{for(var z=f.firstChild,ce=0;z;)I[ce++]=z,z=z.nextSibling;I.length=ce,delete I[I.length]}}}function q(m,f){var k=f.previousSibling,I=f.nextSibling;return k?k.nextSibling=I:m.firstChild=I,I?I.previousSibling=k:m.lastChild=k,f.parentNode=null,f.previousSibling=null,f.nextSibling=null,ne(m.ownerDocument,m),f}function Z(m){return m&&(m.nodeType===U.DOCUMENT_NODE||m.nodeType===U.DOCUMENT_FRAGMENT_NODE||m.nodeType===U.ELEMENT_NODE)}function le(m){return m&&(de(m)||Ye(m)||se(m)||m.nodeType===U.DOCUMENT_FRAGMENT_NODE||m.nodeType===U.COMMENT_NODE||m.nodeType===U.PROCESSING_INSTRUCTION_NODE)}function se(m){return m&&m.nodeType===U.DOCUMENT_TYPE_NODE}function de(m){return m&&m.nodeType===U.ELEMENT_NODE}function Ye(m){return m&&m.nodeType===U.TEXT_NODE}function Oe(m,f){var k=m.childNodes||[];if(r(k,de)||se(f))return!1;var I=r(k,se);return!(f&&I&&k.indexOf(I)>k.indexOf(f))}function ar(m,f){var k=m.childNodes||[];function I(ce){return de(ce)&&ce!==f}if(r(k,I))return!1;var z=r(k,se);return!(f&&z&&k.indexOf(z)>k.indexOf(f))}function Le(m,f,k){if(!Z(m))throw new P(y,"Unexpected parent node type "+m.nodeType);if(k&&k.parentNode!==m)throw new P(B,"child not in parent");if(!le(f)||se(f)&&m.nodeType!==U.DOCUMENT_NODE)throw new P(y,"Unexpected node type "+f.nodeType+" for parent node type "+m.nodeType)}function gt(m,f,k){var I=m.childNodes||[],z=f.childNodes||[];if(f.nodeType===U.DOCUMENT_FRAGMENT_NODE){var ce=z.filter(de);if(ce.length>1||r(z,Ye))throw new P(y,"More than one element or text in fragment");if(ce.length===1&&!Oe(m,k))throw new P(y,"Element in fragment can not be inserted before doctype")}if(de(f)&&!Oe(m,k))throw new P(y,"Only one element can be added and only after doctype");if(se(f)){if(r(I,se))throw new P(y,"Only one doctype is allowed");var Se=r(I,de);if(k&&I.indexOf(Se)<I.indexOf(k))throw new P(y,"Doctype can only be inserted before an element");if(!k&&Se)throw new P(y,"Doctype can not be appended since element is present")}}function bt(m,f,k){var I=m.childNodes||[],z=f.childNodes||[];if(f.nodeType===U.DOCUMENT_FRAGMENT_NODE){var ce=z.filter(de);if(ce.length>1||r(z,Ye))throw new P(y,"More than one element or text in fragment");if(ce.length===1&&!ar(m,k))throw new P(y,"Element in fragment can not be inserted before doctype")}if(de(f)&&!ar(m,k))throw new P(y,"Only one element can be added and only after doctype");if(se(f)){if(r(I,function(Sr){return se(Sr)&&Sr!==k}))throw new P(y,"Only one doctype is allowed");var Se=r(I,de);if(k&&I.indexOf(Se)<I.indexOf(k))throw new P(y,"Doctype can only be inserted before an element")}}function G(m,f,k,I){Le(m,f,k),m.nodeType===U.DOCUMENT_NODE&&(I||gt)(m,f,k);var z=f.parentNode;if(z&&z.removeChild(f),f.nodeType===R){var ce=f.firstChild;if(ce==null)return f;var Se=f.lastChild}else ce=Se=f;var Qe=k?k.previousSibling:m.lastChild;ce.previousSibling=Qe,Se.nextSibling=k,Qe?Qe.nextSibling=ce:m.firstChild=ce,k==null?m.lastChild=Se:k.previousSibling=Se;do ce.parentNode=m;while(ce!==Se&&(ce=ce.nextSibling));return ne(m.ownerDocument||m,m),f.nodeType==R&&(f.firstChild=f.lastChild=null),f}function vt(m,f){return f.parentNode&&f.parentNode.removeChild(f),f.parentNode=m,f.previousSibling=m.lastChild,f.nextSibling=null,f.previousSibling?f.previousSibling.nextSibling=f:m.firstChild=f,m.lastChild=f,ne(m.ownerDocument,m,f),f}w.prototype={nodeName:"#document",nodeType:T,doctype:null,documentElement:null,_inc:1,insertBefore:function(m,f){if(m.nodeType==R){for(var k=m.firstChild;k;){var I=k.nextSibling;this.insertBefore(k,f),k=I}return m}return G(this,m,f),m.ownerDocument=this,this.documentElement===null&&m.nodeType===d&&(this.documentElement=m),m},removeChild:function(m){return this.documentElement==m&&(this.documentElement=null),q(this,m)},replaceChild:function(m,f){G(this,m,f,bt),m.ownerDocument=this,f&&this.removeChild(f),de(m)&&(this.documentElement=m)},importNode:function(m,f){return Ru(this,m,f)},getElementById:function(m){var f=null;return A(this.documentElement,function(k){if(k.nodeType==d&&k.getAttribute("id")==m)return f=k,!0}),f},getElementsByClassName:function(m){var f=o(m);return new X(this,function(k){var I=[];return f.length>0&&A(k.documentElement,function(z){if(z!==k&&z.nodeType===d){var ce=z.getAttribute("class");if(ce){var Se=m===ce;if(!Se){var Qe=o(ce);Se=f.every(u(Qe))}Se&&I.push(z)}}}),I})},createElement:function(m){var f=new be;f.ownerDocument=this,f.nodeName=m,f.tagName=m,f.localName=m,f.childNodes=new $;var k=f.attributes=new ee;return k._ownerElement=f,f},createDocumentFragment:function(){var m=new Ga;return m.ownerDocument=this,m.childNodes=new $,m},createTextNode:function(m){var f=new Un;return f.ownerDocument=this,f.appendData(m),f},createComment:function(m){var f=new zn;return f.ownerDocument=this,f.appendData(m),f},createCDATASection:function(m){var f=new qn;return f.ownerDocument=this,f.appendData(m),f},createProcessingInstruction:function(m,f){var k=new Jn;return k.ownerDocument=this,k.tagName=k.nodeName=k.target=m,k.nodeValue=k.data=f,k},createAttribute:function(m){var f=new Ve;return f.ownerDocument=this,f.name=m,f.nodeName=m,f.localName=m,f.specified=!0,f},createEntityReference:function(m){var f=new Kn;return f.ownerDocument=this,f.nodeName=m,f},createElementNS:function(m,f){var k=new be,I=f.split(":"),z=k.attributes=new ee;return k.childNodes=new $,k.ownerDocument=this,k.nodeName=f,k.tagName=f,k.namespaceURI=m,I.length==2?(k.prefix=I[0],k.localName=I[1]):k.localName=f,z._ownerElement=k,k},createAttributeNS:function(m,f){var k=new Ve,I=f.split(":");return k.ownerDocument=this,k.nodeName=f,k.name=f,k.namespaceURI=m,k.specified=!0,I.length==2?(k.prefix=I[0],k.localName=I[1]):k.localName=f,k}},l(w,U);function be(){this._nsMap={}}be.prototype={nodeType:d,hasAttribute:function(m){return this.getAttributeNode(m)!=null},getAttribute:function(m){var f=this.getAttributeNode(m);return f&&f.value||""},getAttributeNode:function(m){return this.attributes.getNamedItem(m)},setAttribute:function(m,f){var k=this.ownerDocument.createAttribute(m);k.value=k.nodeValue=""+f,this.setAttributeNode(k)},removeAttribute:function(m){var f=this.getAttributeNode(m);f&&this.removeAttributeNode(f)},appendChild:function(m){return m.nodeType===R?this.insertBefore(m,null):vt(this,m)},setAttributeNode:function(m){return this.attributes.setNamedItem(m)},setAttributeNodeNS:function(m){return this.attributes.setNamedItemNS(m)},removeAttributeNode:function(m){return this.attributes.removeNamedItem(m.nodeName)},removeAttributeNS:function(m,f){var k=this.getAttributeNodeNS(m,f);k&&this.removeAttributeNode(k)},hasAttributeNS:function(m,f){return this.getAttributeNodeNS(m,f)!=null},getAttributeNS:function(m,f){var k=this.getAttributeNodeNS(m,f);return k&&k.value||""},setAttributeNS:function(m,f,k){var I=this.ownerDocument.createAttributeNS(m,f);I.value=I.nodeValue=""+k,this.setAttributeNode(I)},getAttributeNodeNS:function(m,f){return this.attributes.getNamedItemNS(m,f)},getElementsByTagName:function(m){return new X(this,function(f){var k=[];return A(f,function(I){I!==f&&I.nodeType==d&&(m==="*"||I.tagName==m)&&k.push(I)}),k})},getElementsByTagNameNS:function(m,f){return new X(this,function(k){var I=[];return A(k,function(z){z!==k&&z.nodeType===d&&(m==="*"||z.namespaceURI===m)&&(f==="*"||z.localName==f)&&I.push(z)}),I})}},w.prototype.getElementsByTagName=be.prototype.getElementsByTagName,w.prototype.getElementsByTagNameNS=be.prototype.getElementsByTagNameNS,l(be,U);function Ve(){}Ve.prototype.nodeType=p,l(Ve,U);function Zr(){}Zr.prototype={data:"",substringData:function(m,f){return this.data.substring(m,m+f)},appendData:function(m){m=this.data+m,this.nodeValue=this.data=m,this.length=m.length},insertData:function(m,f){this.replaceData(m,0,f)},appendChild:function(m){throw new Error(L[y])},deleteData:function(m,f){this.replaceData(m,f,"")},replaceData:function(m,f,k){var I=this.data.substring(0,m),z=this.data.substring(m+f);k=I+k+z,this.nodeValue=this.data=k,this.length=k.length}},l(Zr,U);function Un(){}Un.prototype={nodeName:"#text",nodeType:h,splitText:function(m){var f=this.data,k=f.substring(m);f=f.substring(0,m),this.data=this.nodeValue=f,this.length=f.length;var I=this.ownerDocument.createTextNode(k);return this.parentNode&&this.parentNode.insertBefore(I,this.nextSibling),I}},l(Un,Zr);function zn(){}zn.prototype={nodeName:"#comment",nodeType:N},l(zn,Zr);function qn(){}qn.prototype={nodeName:"#cdata-section",nodeType:g},l(qn,Zr);function Pa(){}Pa.prototype.nodeType=E,l(Pa,U);function Cu(){}Cu.prototype.nodeType=C,l(Cu,U);function Su(){}Su.prototype.nodeType=F,l(Su,U);function Kn(){}Kn.prototype.nodeType=b,l(Kn,U);function Ga(){}Ga.prototype.nodeName="#document-fragment",Ga.prototype.nodeType=R,l(Ga,U);function Jn(){}Jn.prototype.nodeType=D,l(Jn,U);function Tu(){}Tu.prototype.serializeToString=function(m,f,k){return Bu.call(m,f,k)},U.prototype.toString=Bu;function Bu(m,f){var k=[],I=this.nodeType==9&&this.documentElement||this,z=I.prefix,ce=I.namespaceURI;if(ce&&z==null){var z=I.lookupPrefix(ce);if(z==null)var Se=[{namespace:ce,prefix:null}]}return Dt(this,k,m,f,Se),k.join("")}function Nu(m,f,k){var I=m.prefix||"",z=m.namespaceURI;if(!z||I==="xml"&&z===t.XML||z===t.XMLNS)return!1;for(var ce=k.length;ce--;){var Se=k[ce];if(Se.prefix===I)return Se.namespace!==z}return!0}function Yn(m,f,k){m.push(" ",f,'="',k.replace(/[<>&"\t\n\r]/g,M),'"')}function Dt(m,f,k,I,z){if(z||(z=[]),I)if(m=I(m),m){if(typeof m=="string"){f.push(m);return}}else return;switch(m.nodeType){case d:var ce=m.attributes,Se=ce.length,qe=m.firstChild,Qe=m.tagName;k=t.isHTML(m.namespaceURI)||k;var Sr=Qe;if(!k&&!m.prefix&&m.namespaceURI){for(var _r,Tr=0;Tr<ce.length;Tr++)if(ce.item(Tr).name==="xmlns"){_r=ce.item(Tr).value;break}if(!_r)for(var et=z.length-1;et>=0;et--){var rt=z[et];if(rt.prefix===""&&rt.namespace===m.namespaceURI){_r=rt.namespace;break}}if(_r!==m.namespaceURI)for(var et=z.length-1;et>=0;et--){var rt=z[et];if(rt.namespace===m.namespaceURI){rt.prefix&&(Sr=rt.prefix+":"+Qe);break}}}f.push("<",Sr);for(var tt=0;tt<Se;tt++){var Dr=ce.item(tt);Dr.prefix=="xmlns"?z.push({prefix:Dr.localName,namespace:Dr.value}):Dr.nodeName=="xmlns"&&z.push({prefix:"",namespace:Dr.value})}for(var tt=0;tt<Se;tt++){var Dr=ce.item(tt);if(Nu(Dr,k,z)){var at=Dr.prefix||"",Vt=Dr.namespaceURI;Yn(f,at?"xmlns:"+at:"xmlns",Vt),z.push({prefix:at,namespace:Vt})}Dt(Dr,f,k,I,z)}if(Qe===Sr&&Nu(m,k,z)){var at=m.prefix||"",Vt=m.namespaceURI;Yn(f,at?"xmlns:"+at:"xmlns",Vt),z.push({prefix:at,namespace:Vt})}if(qe||k&&!/^(?:meta|link|img|br|hr|input)$/i.test(Qe)){if(f.push(">"),k&&/^script$/i.test(Qe))for(;qe;)qe.data?f.push(qe.data):Dt(qe,f,k,I,z.slice()),qe=qe.nextSibling;else for(;qe;)Dt(qe,f,k,I,z.slice()),qe=qe.nextSibling;f.push("</",Sr,">")}else f.push("/>");return;case T:case R:for(var qe=m.firstChild;qe;)Dt(qe,f,k,I,z.slice()),qe=qe.nextSibling;return;case p:return Yn(f,m.name,m.value);case h:return f.push(m.data.replace(/[<&>]/g,M));case g:return f.push("<![CDATA[",m.data,"]]>");case N:return f.push("<!--",m.data,"-->");case E:var Mu=m.publicId,Et=m.systemId;if(f.push("<!DOCTYPE ",m.name),Mu)f.push(" PUBLIC ",Mu),Et&&Et!="."&&f.push(" ",Et),f.push(">");else if(Et&&Et!=".")f.push(" SYSTEM ",Et,">");else{var Iu=m.internalSubset;Iu&&f.push(" [",Iu,"]"),f.push(">")}return;case D:return f.push("<?",m.target," ",m.data,"?>");case b:return f.push("&",m.nodeName,";");default:f.push("??",m.nodeName)}}function Ru(m,f,k){var I;switch(f.nodeType){case d:I=f.cloneNode(!1),I.ownerDocument=m;case R:break;case p:k=!0;break}if(I||(I=f.cloneNode(!1)),I.ownerDocument=m,I.parentNode=null,k)for(var z=f.firstChild;z;)I.appendChild(Ru(m,z,k)),z=z.nextSibling;return I}function Qn(m,f,k){var I=new f.constructor;for(var z in f)if(Object.prototype.hasOwnProperty.call(f,z)){var ce=f[z];typeof ce!="object"&&ce!=I[z]&&(I[z]=ce)}switch(f.childNodes&&(I.childNodes=new $),I.ownerDocument=m,I.nodeType){case d:var Se=f.attributes,Qe=I.attributes=new ee,Sr=Se.length;Qe._ownerElement=I;for(var _r=0;_r<Sr;_r++)I.setAttributeNode(Qn(m,Se.item(_r),!0));break;case p:k=!0}if(k)for(var Tr=f.firstChild;Tr;)I.appendChild(Qn(m,Tr,k)),Tr=Tr.nextSibling;return I}function Lu(m,f,k){m[f]=k}try{if(Object.defineProperty){let m=function(f){switch(f.nodeType){case d:case R:var k=[];for(f=f.firstChild;f;)f.nodeType!==7&&f.nodeType!==8&&k.push(m(f)),f=f.nextSibling;return k.join("");default:return f.nodeValue}};Object.defineProperty(X.prototype,"length",{get:function(){return ie(this),this.$$length}}),Object.defineProperty(U.prototype,"textContent",{get:function(){return m(this)},set:function(f){switch(this.nodeType){case d:case R:for(;this.firstChild;)this.removeChild(this.firstChild);(f||String(f))&&this.appendChild(this.ownerDocument.createTextNode(f));break;default:this.data=f,this.value=f,this.nodeValue=f}}}),Lu=function(f,k,I){f["$$"+k]=I}}}catch{}return Br.DocumentType=Pa,Br.DOMException=P,Br.DOMImplementation=re,Br.Element=be,Br.Node=U,Br.NodeList=$,Br.XMLSerializer=Tu,Br}var Xt={},Wi={},nl;function w0(){return nl||(nl=1,function(e){var r=Gn().freeze;e.XML_ENTITIES=r({amp:"&",apos:"'",gt:">",lt:"<",quot:'"'}),e.HTML_ENTITIES=r({Aacute:"Á",aacute:"á",Abreve:"Ă",abreve:"ă",ac:"∾",acd:"∿",acE:"∾̳",Acirc:"Â",acirc:"â",acute:"´",Acy:"А",acy:"а",AElig:"Æ",aelig:"æ",af:"⁡",Afr:"𝔄",afr:"𝔞",Agrave:"À",agrave:"à",alefsym:"ℵ",aleph:"ℵ",Alpha:"Α",alpha:"α",Amacr:"Ā",amacr:"ā",amalg:"⨿",AMP:"&",amp:"&",And:"⩓",and:"∧",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",Aogon:"Ą",aogon:"ą",Aopf:"𝔸",aopf:"𝕒",ap:"≈",apacir:"⩯",apE:"⩰",ape:"≊",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",Aring:"Å",aring:"å",Ascr:"𝒜",ascr:"𝒶",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",Barwed:"⌆",barwed:"⌅",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",Bcy:"Б",bcy:"б",bdquo:"„",becaus:"∵",Because:"∵",because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",Beta:"Β",beta:"β",beth:"ℶ",between:"≬",Bfr:"𝔅",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bNot:"⫭",bnot:"⌐",Bopf:"𝔹",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxDL:"╗",boxDl:"╖",boxdL:"╕",boxdl:"┐",boxDR:"╔",boxDr:"╓",boxdR:"╒",boxdr:"┌",boxH:"═",boxh:"─",boxHD:"╦",boxHd:"╤",boxhD:"╥",boxhd:"┬",boxHU:"╩",boxHu:"╧",boxhU:"╨",boxhu:"┴",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxUL:"╝",boxUl:"╜",boxuL:"╛",boxul:"┘",boxUR:"╚",boxUr:"╙",boxuR:"╘",boxur:"└",boxV:"║",boxv:"│",boxVH:"╬",boxVh:"╫",boxvH:"╪",boxvh:"┼",boxVL:"╣",boxVl:"╢",boxvL:"╡",boxvl:"┤",boxVR:"╠",boxVr:"╟",boxvR:"╞",boxvr:"├",bprime:"‵",Breve:"˘",breve:"˘",brvbar:"¦",Bscr:"ℬ",bscr:"𝒷",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",Bumpeq:"≎",bumpeq:"≏",Cacute:"Ć",cacute:"ć",Cap:"⋒",cap:"∩",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",Ccaron:"Č",ccaron:"č",Ccedil:"Ç",ccedil:"ç",Ccirc:"Ĉ",ccirc:"ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",Cdot:"Ċ",cdot:"ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",CenterDot:"·",centerdot:"·",Cfr:"ℭ",cfr:"𝔠",CHcy:"Ч",chcy:"ч",check:"✓",checkmark:"✓",Chi:"Χ",chi:"χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cirE:"⧃",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",Colon:"∷",colon:":",Colone:"⩴",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",Conint:"∯",conint:"∮",ContourIntegral:"∮",Copf:"ℂ",copf:"𝕔",coprod:"∐",Coproduct:"∐",COPY:"©",copy:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",Cross:"⨯",cross:"✗",Cscr:"𝒞",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",Cup:"⋓",cup:"∪",cupbrcap:"⩈",CupCap:"≍",cupcap:"⩆",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",Dagger:"‡",dagger:"†",daleth:"ℸ",Darr:"↡",dArr:"⇓",darr:"↓",dash:"‐",Dashv:"⫤",dashv:"⊣",dbkarow:"⤏",dblac:"˝",Dcaron:"Ď",dcaron:"ď",Dcy:"Д",dcy:"д",DD:"ⅅ",dd:"ⅆ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",Delta:"Δ",delta:"δ",demptyv:"⦱",dfisht:"⥿",Dfr:"𝔇",dfr:"𝔡",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",Diamond:"⋄",diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",DJcy:"Ђ",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",Dopf:"𝔻",dopf:"𝕕",Dot:"¨",dot:"˙",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrow:"↓",Downarrow:"⇓",downarrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",Dscr:"𝒟",dscr:"𝒹",DScy:"Ѕ",dscy:"ѕ",dsol:"⧶",Dstrok:"Đ",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",DZcy:"Џ",dzcy:"џ",dzigrarr:"⟿",Eacute:"É",eacute:"é",easter:"⩮",Ecaron:"Ě",ecaron:"ě",ecir:"≖",Ecirc:"Ê",ecirc:"ê",ecolon:"≕",Ecy:"Э",ecy:"э",eDDot:"⩷",Edot:"Ė",eDot:"≑",edot:"ė",ee:"ⅇ",efDot:"≒",Efr:"𝔈",efr:"𝔢",eg:"⪚",Egrave:"È",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",Emacr:"Ē",emacr:"ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",ENG:"Ŋ",eng:"ŋ",ensp:" ",Eogon:"Ę",eogon:"ę",Eopf:"𝔼",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",Epsilon:"Ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",Escr:"ℰ",escr:"ℯ",esdot:"≐",Esim:"⩳",esim:"≂",Eta:"Η",eta:"η",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",ExponentialE:"ⅇ",exponentiale:"ⅇ",fallingdotseq:"≒",Fcy:"Ф",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",Ffr:"𝔉",ffr:"𝔣",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",Fopf:"𝔽",fopf:"𝕗",ForAll:"∀",forall:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",Fscr:"ℱ",fscr:"𝒻",gacute:"ǵ",Gamma:"Γ",gamma:"γ",Gammad:"Ϝ",gammad:"ϝ",gap:"⪆",Gbreve:"Ğ",gbreve:"ğ",Gcedil:"Ģ",Gcirc:"Ĝ",gcirc:"ĝ",Gcy:"Г",gcy:"г",Gdot:"Ġ",gdot:"ġ",gE:"≧",ge:"≥",gEl:"⪌",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",Gfr:"𝔊",gfr:"𝔤",Gg:"⋙",gg:"≫",ggg:"⋙",gimel:"ℷ",GJcy:"Ѓ",gjcy:"ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gnE:"≩",gne:"⪈",gneq:"⪈",gneqq:"≩",gnsim:"⋧",Gopf:"𝔾",gopf:"𝕘",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",Gt:"≫",GT:">",gt:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",HARDcy:"Ъ",hardcy:"ъ",hArr:"⇔",harr:"↔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",Hcirc:"Ĥ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",Hfr:"ℌ",hfr:"𝔥",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",Hopf:"ℍ",hopf:"𝕙",horbar:"―",HorizontalLine:"─",Hscr:"ℋ",hscr:"𝒽",hslash:"ℏ",Hstrok:"Ħ",hstrok:"ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",Iacute:"Í",iacute:"í",ic:"⁣",Icirc:"Î",icirc:"î",Icy:"И",icy:"и",Idot:"İ",IEcy:"Е",iecy:"е",iexcl:"¡",iff:"⇔",Ifr:"ℑ",ifr:"𝔦",Igrave:"Ì",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",IJlig:"Ĳ",ijlig:"ĳ",Im:"ℑ",Imacr:"Ī",imacr:"ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",Int:"∬",int:"∫",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",IOcy:"Ё",iocy:"ё",Iogon:"Į",iogon:"į",Iopf:"𝕀",iopf:"𝕚",Iota:"Ι",iota:"ι",iprod:"⨼",iquest:"¿",Iscr:"ℐ",iscr:"𝒾",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",Itilde:"Ĩ",itilde:"ĩ",Iukcy:"І",iukcy:"і",Iuml:"Ï",iuml:"ï",Jcirc:"Ĵ",jcirc:"ĵ",Jcy:"Й",jcy:"й",Jfr:"𝔍",jfr:"𝔧",jmath:"ȷ",Jopf:"𝕁",jopf:"𝕛",Jscr:"𝒥",jscr:"𝒿",Jsercy:"Ј",jsercy:"ј",Jukcy:"Є",jukcy:"є",Kappa:"Κ",kappa:"κ",kappav:"ϰ",Kcedil:"Ķ",kcedil:"ķ",Kcy:"К",kcy:"к",Kfr:"𝔎",kfr:"𝔨",kgreen:"ĸ",KHcy:"Х",khcy:"х",KJcy:"Ќ",kjcy:"ќ",Kopf:"𝕂",kopf:"𝕜",Kscr:"𝒦",kscr:"𝓀",lAarr:"⇚",Lacute:"Ĺ",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",Lambda:"Λ",lambda:"λ",Lang:"⟪",lang:"⟨",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",Larr:"↞",lArr:"⇐",larr:"←",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",lAtail:"⤛",latail:"⤙",late:"⪭",lates:"⪭︀",lBarr:"⤎",lbarr:"⤌",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",Lcaron:"Ľ",lcaron:"ľ",Lcedil:"Ļ",lcedil:"ļ",lceil:"⌈",lcub:"{",Lcy:"Л",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",lE:"≦",le:"≤",LeftAngleBracket:"⟨",LeftArrow:"←",Leftarrow:"⇐",leftarrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",LeftRightArrow:"↔",Leftrightarrow:"⇔",leftrightarrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",lEg:"⪋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",Lfr:"𝔏",lfr:"𝔩",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",LJcy:"Љ",ljcy:"љ",Ll:"⋘",ll:"≪",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",Lmidot:"Ŀ",lmidot:"ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lnE:"≨",lne:"⪇",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",LongLeftArrow:"⟵",Longleftarrow:"⟸",longleftarrow:"⟵",LongLeftRightArrow:"⟷",Longleftrightarrow:"⟺",longleftrightarrow:"⟷",longmapsto:"⟼",LongRightArrow:"⟶",Longrightarrow:"⟹",longrightarrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",Lopf:"𝕃",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",Lscr:"ℒ",lscr:"𝓁",Lsh:"↰",lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",Lstrok:"Ł",lstrok:"ł",Lt:"≪",LT:"<",lt:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",Map:"⤅",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",Mcy:"М",mcy:"м",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",mfr:"𝔪",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",Mopf:"𝕄",mopf:"𝕞",mp:"∓",Mscr:"ℳ",mscr:"𝓂",mstpos:"∾",Mu:"Μ",mu:"μ",multimap:"⊸",mumap:"⊸",nabla:"∇",Nacute:"Ń",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",Ncaron:"Ň",ncaron:"ň",Ncedil:"Ņ",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",Ncy:"Н",ncy:"н",ndash:"–",ne:"≠",nearhk:"⤤",neArr:"⇗",nearr:"↗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:`
`,nexist:"∄",nexists:"∄",Nfr:"𝔑",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",nGt:"≫⃒",ngt:"≯",ngtr:"≯",nGtv:"≫̸",nhArr:"⇎",nharr:"↮",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",NJcy:"Њ",njcy:"њ",nlArr:"⇍",nlarr:"↚",nldr:"‥",nlE:"≦̸",nle:"≰",nLeftarrow:"⇍",nleftarrow:"↚",nLeftrightarrow:"⇎",nleftrightarrow:"↮",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nLt:"≪⃒",nlt:"≮",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",Nopf:"ℕ",nopf:"𝕟",Not:"⫬",not:"¬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrArr:"⇏",nrarr:"↛",nrarrc:"⤳̸",nrarrw:"↝̸",nRightarrow:"⇏",nrightarrow:"↛",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",Nscr:"𝒩",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",Ntilde:"Ñ",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",Nu:"Ν",nu:"ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nVDash:"⊯",nVdash:"⊮",nvDash:"⊭",nvdash:"⊬",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwArr:"⇖",nwarr:"↖",nwarrow:"↖",nwnear:"⤧",Oacute:"Ó",oacute:"ó",oast:"⊛",ocir:"⊚",Ocirc:"Ô",ocirc:"ô",Ocy:"О",ocy:"о",odash:"⊝",Odblac:"Ő",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",OElig:"Œ",oelig:"œ",ofcir:"⦿",Ofr:"𝔒",ofr:"𝔬",ogon:"˛",Ograve:"Ò",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",Omacr:"Ō",omacr:"ō",Omega:"Ω",omega:"ω",Omicron:"Ο",omicron:"ο",omid:"⦶",ominus:"⊖",Oopf:"𝕆",oopf:"𝕠",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",Or:"⩔",or:"∨",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",Oscr:"𝒪",oscr:"ℴ",Oslash:"Ø",oslash:"ø",osol:"⊘",Otilde:"Õ",otilde:"õ",Otimes:"⨷",otimes:"⊗",otimesas:"⨶",Ouml:"Ö",ouml:"ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",Pcy:"П",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",Pfr:"𝔓",pfr:"𝔭",Phi:"Φ",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",Pi:"Π",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",Popf:"ℙ",popf:"𝕡",pound:"£",Pr:"⪻",pr:"≺",prap:"⪷",prcue:"≼",prE:"⪳",pre:"⪯",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",Prime:"″",prime:"′",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",Pscr:"𝒫",pscr:"𝓅",Psi:"Ψ",psi:"ψ",puncsp:" ",Qfr:"𝔔",qfr:"𝔮",qint:"⨌",Qopf:"ℚ",qopf:"𝕢",qprime:"⁗",Qscr:"𝒬",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",QUOT:'"',quot:'"',rAarr:"⇛",race:"∽̱",Racute:"Ŕ",racute:"ŕ",radic:"√",raemptyv:"⦳",Rang:"⟫",rang:"⟩",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",Rarr:"↠",rArr:"⇒",rarr:"→",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",Rarrtl:"⤖",rarrtl:"↣",rarrw:"↝",rAtail:"⤜",ratail:"⤚",ratio:"∶",rationals:"ℚ",RBarr:"⤐",rBarr:"⤏",rbarr:"⤍",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",Rcaron:"Ř",rcaron:"ř",Rcedil:"Ŗ",rcedil:"ŗ",rceil:"⌉",rcub:"}",Rcy:"Р",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",REG:"®",reg:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",Rfr:"ℜ",rfr:"𝔯",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",Rho:"Ρ",rho:"ρ",rhov:"ϱ",RightAngleBracket:"⟩",RightArrow:"→",Rightarrow:"⇒",rightarrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",Ropf:"ℝ",ropf:"𝕣",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",Rscr:"ℛ",rscr:"𝓇",Rsh:"↱",rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",Sacute:"Ś",sacute:"ś",sbquo:"‚",Sc:"⪼",sc:"≻",scap:"⪸",Scaron:"Š",scaron:"š",sccue:"≽",scE:"⪴",sce:"⪰",Scedil:"Ş",scedil:"ş",Scirc:"Ŝ",scirc:"ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",Scy:"С",scy:"с",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",seArr:"⇘",searr:"↘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",Sfr:"𝔖",sfr:"𝔰",sfrown:"⌢",sharp:"♯",SHCHcy:"Щ",shchcy:"щ",SHcy:"Ш",shcy:"ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",Sigma:"Σ",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",SOFTcy:"Ь",softcy:"ь",sol:"/",solb:"⧄",solbar:"⌿",Sopf:"𝕊",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",Square:"□",square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",Sscr:"𝒮",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",Star:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",Sub:"⋐",sub:"⊂",subdot:"⪽",subE:"⫅",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",Subset:"⋐",subset:"⊂",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",Sum:"∑",sum:"∑",sung:"♪",Sup:"⋑",sup:"⊃",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supE:"⫆",supe:"⊇",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",Supset:"⋑",supset:"⊃",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swArr:"⇙",swarr:"↙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"	",target:"⌖",Tau:"Τ",tau:"τ",tbrk:"⎴",Tcaron:"Ť",tcaron:"ť",Tcedil:"Ţ",tcedil:"ţ",Tcy:"Т",tcy:"т",tdot:"⃛",telrec:"⌕",Tfr:"𝔗",tfr:"𝔱",there4:"∴",Therefore:"∴",therefore:"∴",Theta:"Θ",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",THORN:"Þ",thorn:"þ",Tilde:"∼",tilde:"˜",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",Topf:"𝕋",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",TRADE:"™",trade:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",Tscr:"𝒯",tscr:"𝓉",TScy:"Ц",tscy:"ц",TSHcy:"Ћ",tshcy:"ћ",Tstrok:"Ŧ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",Uacute:"Ú",uacute:"ú",Uarr:"↟",uArr:"⇑",uarr:"↑",Uarrocir:"⥉",Ubrcy:"Ў",ubrcy:"ў",Ubreve:"Ŭ",ubreve:"ŭ",Ucirc:"Û",ucirc:"û",Ucy:"У",ucy:"у",udarr:"⇅",Udblac:"Ű",udblac:"ű",udhar:"⥮",ufisht:"⥾",Ufr:"𝔘",ufr:"𝔲",Ugrave:"Ù",ugrave:"ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",Umacr:"Ū",umacr:"ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",uogon:"ų",Uopf:"𝕌",uopf:"𝕦",UpArrow:"↑",Uparrow:"⇑",uparrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",UpDownArrow:"↕",Updownarrow:"⇕",updownarrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",Upsi:"ϒ",upsi:"υ",upsih:"ϒ",Upsilon:"Υ",upsilon:"υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",Uring:"Ů",uring:"ů",urtri:"◹",Uscr:"𝒰",uscr:"𝓊",utdot:"⋰",Utilde:"Ũ",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",Uuml:"Ü",uuml:"ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",vArr:"⇕",varr:"↕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",Vbar:"⫫",vBar:"⫨",vBarv:"⫩",Vcy:"В",vcy:"в",VDash:"⊫",Vdash:"⊩",vDash:"⊨",vdash:"⊢",Vdashl:"⫦",Vee:"⋁",vee:"∨",veebar:"⊻",veeeq:"≚",vellip:"⋮",Verbar:"‖",verbar:"|",Vert:"‖",vert:"|",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",Vopf:"𝕍",vopf:"𝕧",vprop:"∝",vrtri:"⊳",Vscr:"𝒱",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",Vvdash:"⊪",vzigzag:"⦚",Wcirc:"Ŵ",wcirc:"ŵ",wedbar:"⩟",Wedge:"⋀",wedge:"∧",wedgeq:"≙",weierp:"℘",Wfr:"𝔚",wfr:"𝔴",Wopf:"𝕎",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",Wscr:"𝒲",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",Xfr:"𝔛",xfr:"𝔵",xhArr:"⟺",xharr:"⟷",Xi:"Ξ",xi:"ξ",xlArr:"⟸",xlarr:"⟵",xmap:"⟼",xnis:"⋻",xodot:"⨀",Xopf:"𝕏",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrArr:"⟹",xrarr:"⟶",Xscr:"𝒳",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",Yacute:"Ý",yacute:"ý",YAcy:"Я",yacy:"я",Ycirc:"Ŷ",ycirc:"ŷ",Ycy:"Ы",ycy:"ы",yen:"¥",Yfr:"𝔜",yfr:"𝔶",YIcy:"Ї",yicy:"ї",Yopf:"𝕐",yopf:"𝕪",Yscr:"𝒴",yscr:"𝓎",YUcy:"Ю",yucy:"ю",Yuml:"Ÿ",yuml:"ÿ",Zacute:"Ź",zacute:"ź",Zcaron:"Ž",zcaron:"ž",Zcy:"З",zcy:"з",Zdot:"Ż",zdot:"ż",zeetrf:"ℨ",ZeroWidthSpace:"​",Zeta:"Ζ",zeta:"ζ",Zfr:"ℨ",zfr:"𝔷",ZHcy:"Ж",zhcy:"ж",zigrarr:"⇝",Zopf:"ℤ",zopf:"𝕫",Zscr:"𝒵",zscr:"𝓏",zwj:"‍",zwnj:"‌"}),e.entityMap=e.HTML_ENTITIES}(Wi)),Wi}var Ya={},il;function C0(){if(il)return Ya;il=1;var e=Gn().NAMESPACE,r=/[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,t=new RegExp("[\\-\\.0-9"+r.source.slice(1,-1)+"\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"),a=new RegExp("^"+r.source+t.source+"*(?::"+r.source+t.source+"*)?$"),n=0,i=1,o=2,u=3,s=4,l=5,c=6,d=7;function p(y,B){this.message=y,this.locator=B,Error.captureStackTrace&&Error.captureStackTrace(this,p)}p.prototype=new Error,p.prototype.name=p.name;function h(){}h.prototype={parse:function(y,B,H){var P=this.domBuilder;P.startDocument(),E(B,B={}),g(y,B,H,P,this.errorHandler),P.endDocument()}};function g(y,B,H,P,$){function X(be){if(be>65535){be-=65536;var Ve=55296+(be>>10),Zr=56320+(be&1023);return String.fromCharCode(Ve,Zr)}else return String.fromCharCode(be)}function ie(be){var Ve=be.slice(1,-1);return Object.hasOwnProperty.call(H,Ve)?H[Ve]:Ve.charAt(0)==="#"?X(parseInt(Ve.substr(1).replace("x","0x"))):($.error("entity not found:"+be),be)}function ee(be){if(be>w){var Ve=y.substring(w,be).replace(/&#?\w+;/g,ie);U&&Q(w),P.characters(Ve,0,be-w),w=be}}function Q(be,Ve){for(;be>=K&&(Ve=re.exec(y));)W=Ve.index,K=W+Ve[0].length,U.lineNumber++;U.columnNumber=be-W+1}for(var W=0,K=0,re=/.*(?:\r\n?|\n)|.*$/g,U=P.locator,M=[{currentNSMap:B}],A={},w=0;;){try{var S=y.indexOf("<",w);if(S<0){if(!y.substr(w).match(/^\s*$/)){var J=P.doc,ne=J.createTextNode(y.substr(w));J.appendChild(ne),P.currentElement=ne}return}switch(S>w&&ee(S),y.charAt(S+1)){case"/":var Le=y.indexOf(">",S+3),q=y.substring(S+2,Le).replace(/[ \t\n\r]+$/g,""),Z=M.pop();Le<0?(q=y.substring(S+2).replace(/[\s<].*/,""),$.error("end tag name: "+q+" is not complete:"+Z.tagName),Le=S+1+q.length):q.match(/\s</)&&(q=q.replace(/[\s<].*/,""),$.error("end tag name: "+q+" maybe not complete"),Le=S+1+q.length);var le=Z.localNSMap,se=Z.tagName==q,de=se||Z.tagName&&Z.tagName.toLowerCase()==q.toLowerCase();if(de){if(P.endElement(Z.uri,Z.localName,q),le)for(var Ye in le)Object.prototype.hasOwnProperty.call(le,Ye)&&P.endPrefixMapping(Ye);se||$.fatalError("end tag name: "+q+" is not match the current start tagName:"+Z.tagName)}else M.push(Z);Le++;break;case"?":U&&Q(S),Le=C(y,S,P);break;case"!":U&&Q(S),Le=R(y,S,P,$);break;default:U&&Q(S);var Oe=new j,ar=M[M.length-1].currentNSMap,Le=F(y,S,Oe,ar,ie,$),gt=Oe.length;if(!Oe.closed&&T(y,Le,Oe.tagName,A)&&(Oe.closed=!0,H.nbsp||$.warning("unclosed xml attribute")),U&&gt){for(var bt=b(U,{}),G=0;G<gt;G++){var vt=Oe[G];Q(vt.offset),vt.locator=b(U,{})}P.locator=bt,D(Oe,P,ar)&&M.push(Oe),P.locator=U}else D(Oe,P,ar)&&M.push(Oe);e.isHTML(Oe.uri)&&!Oe.closed?Le=N(y,Le,Oe.tagName,ie,P):Le++}}catch(be){if(be instanceof p)throw be;$.error("element parse error: "+be),Le=-1}Le>w?w=Le:ee(Math.max(S,w)+1)}}function b(y,B){return B.lineNumber=y.lineNumber,B.columnNumber=y.columnNumber,B}function F(y,B,H,P,$,X){function ie(U,M,A){H.attributeNames.hasOwnProperty(U)&&X.fatalError("Attribute "+U+" redefined"),H.addValue(U,M.replace(/[\t\n\r]/g," ").replace(/&#?\w+;/g,$),A)}for(var ee,Q,W=++B,K=n;;){var re=y.charAt(W);switch(re){case"=":if(K===i)ee=y.slice(B,W),K=u;else if(K===o)K=u;else throw new Error("attribute equal must after attrName");break;case"'":case'"':if(K===u||K===i)if(K===i&&(X.warning('attribute value must after "="'),ee=y.slice(B,W)),B=W+1,W=y.indexOf(re,B),W>0)Q=y.slice(B,W),ie(ee,Q,B-1),K=l;else throw new Error("attribute value no end '"+re+"' match");else if(K==s)Q=y.slice(B,W),ie(ee,Q,B),X.warning('attribute "'+ee+'" missed start quot('+re+")!!"),B=W+1,K=l;else throw new Error('attribute value must after "="');break;case"/":switch(K){case n:H.setTagName(y.slice(B,W));case l:case c:case d:K=d,H.closed=!0;case s:case i:break;case o:H.closed=!0;break;default:throw new Error("attribute invalid close char('/')")}break;case"":return X.error("unexpected end of input"),K==n&&H.setTagName(y.slice(B,W)),W;case">":switch(K){case n:H.setTagName(y.slice(B,W));case l:case c:case d:break;case s:case i:Q=y.slice(B,W),Q.slice(-1)==="/"&&(H.closed=!0,Q=Q.slice(0,-1));case o:K===o&&(Q=ee),K==s?(X.warning('attribute "'+Q+'" missed quot(")!'),ie(ee,Q,B)):((!e.isHTML(P[""])||!Q.match(/^(?:disabled|checked|selected)$/i))&&X.warning('attribute "'+Q+'" missed value!! "'+Q+'" instead!!'),ie(Q,Q,B));break;case u:throw new Error("attribute value missed!!")}return W;case"":re=" ";default:if(re<=" ")switch(K){case n:H.setTagName(y.slice(B,W)),K=c;break;case i:ee=y.slice(B,W),K=o;break;case s:var Q=y.slice(B,W);X.warning('attribute "'+Q+'" missed quot(")!!'),ie(ee,Q,B);case l:K=c;break}else switch(K){case o:H.tagName,(!e.isHTML(P[""])||!ee.match(/^(?:disabled|checked|selected)$/i))&&X.warning('attribute "'+ee+'" missed value!! "'+ee+'" instead2!!'),ie(ee,ee,B),B=W,K=i;break;case l:X.warning('attribute space is required"'+ee+'"!!');case c:K=i,B=W;break;case u:K=s,B=W;break;case d:throw new Error("elements closed character '/' and '>' must be connected to")}}W++}}function D(y,B,H){for(var P=y.tagName,$=null,re=y.length;re--;){var X=y[re],ie=X.qName,ee=X.value,U=ie.indexOf(":");if(U>0)var Q=X.prefix=ie.slice(0,U),W=ie.slice(U+1),K=Q==="xmlns"&&W;else W=ie,Q=null,K=ie==="xmlns"&&"";X.localName=W,K!==!1&&($==null&&($={},E(H,H={})),H[K]=$[K]=ee,X.uri=e.XMLNS,B.startPrefixMapping(K,ee))}for(var re=y.length;re--;){X=y[re];var Q=X.prefix;Q&&(Q==="xml"&&(X.uri=e.XML),Q!=="xmlns"&&(X.uri=H[Q||""]))}var U=P.indexOf(":");U>0?(Q=y.prefix=P.slice(0,U),W=y.localName=P.slice(U+1)):(Q=null,W=y.localName=P);var M=y.uri=H[Q||""];if(B.startElement(M,W,P,y),y.closed){if(B.endElement(M,W,P),$)for(Q in $)Object.prototype.hasOwnProperty.call($,Q)&&B.endPrefixMapping(Q)}else return y.currentNSMap=H,y.localNSMap=$,!0}function N(y,B,H,P,$){if(/^(?:script|textarea)$/i.test(H)){var X=y.indexOf("</"+H+">",B),ie=y.substring(B+1,X);if(/[&<]/.test(ie))return/^script$/i.test(H)?($.characters(ie,0,ie.length),X):(ie=ie.replace(/&#?\w+;/g,P),$.characters(ie,0,ie.length),X)}return B+1}function T(y,B,H,P){var $=P[H];return $==null&&($=y.lastIndexOf("</"+H+">"),$<B&&($=y.lastIndexOf("</"+H)),P[H]=$),$<B}function E(y,B){for(var H in y)Object.prototype.hasOwnProperty.call(y,H)&&(B[H]=y[H])}function R(y,B,H,P){var $=y.charAt(B+2);switch($){case"-":if(y.charAt(B+3)==="-"){var X=y.indexOf("-->",B+4);return X>B?(H.comment(y,B+4,X-B-4),X+3):(P.error("Unclosed comment"),-1)}else return-1;default:if(y.substr(B+3,6)=="CDATA["){var X=y.indexOf("]]>",B+9);return H.startCDATA(),H.characters(y,B+9,X-B-9),H.endCDATA(),X+3}var ie=L(y,B),ee=ie.length;if(ee>1&&/!doctype/i.test(ie[0][0])){var Q=ie[1][0],W=!1,K=!1;ee>3&&(/^public$/i.test(ie[2][0])?(W=ie[3][0],K=ee>4&&ie[4][0]):/^system$/i.test(ie[2][0])&&(K=ie[3][0]));var re=ie[ee-1];return H.startDTD(Q,W,K),H.endDTD(),re.index+re[0].length}}return-1}function C(y,B,H){var P=y.indexOf("?>",B);if(P){var $=y.substring(B,P).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);return $?($[0].length,H.processingInstruction($[1],$[2]),P+2):-1}return-1}function j(){this.attributeNames={}}j.prototype={setTagName:function(y){if(!a.test(y))throw new Error("invalid tagName:"+y);this.tagName=y},addValue:function(y,B,H){if(!a.test(y))throw new Error("invalid attribute:"+y);this.attributeNames[y]=this.length,this[this.length++]={qName:y,value:B,offset:H}},length:0,getLocalName:function(y){return this[y].localName},getLocator:function(y){return this[y].locator},getQName:function(y){return this[y].qName},getURI:function(y){return this[y].uri},getValue:function(y){return this[y].value}};function L(y,B){var H,P=[],$=/'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;for($.lastIndex=B,$.exec(y);H=$.exec(y);)if(P.push(H),H[1])return P}return Ya.XMLReader=h,Ya.ParseError=p,Ya}var ol;function S0(){if(ol)return Xt;ol=1;var e=Gn(),r=up(),t=w0(),a=C0(),n=r.DOMImplementation,i=e.NAMESPACE,o=a.ParseError,u=a.XMLReader;function s(F){return F.replace(/\r[\n\u0085]/g,`
`).replace(/[\r\u0085\u2028]/g,`
`)}function l(F){this.options=F||{locator:{}}}l.prototype.parseFromString=function(F,D){var N=this.options,T=new u,E=N.domBuilder||new d,R=N.errorHandler,C=N.locator,j=N.xmlns||{},L=/\/x?html?$/.test(D),y=L?t.HTML_ENTITIES:t.XML_ENTITIES;C&&E.setDocumentLocator(C),T.errorHandler=c(R,E,C),T.domBuilder=N.domBuilder||E,L&&(j[""]=i.HTML),j.xml=j.xml||i.XML;var B=N.normalizeLineEndings||s;return F&&typeof F=="string"?T.parse(B(F),j,y):T.errorHandler.error("invalid doc source"),E.doc};function c(F,D,N){if(!F){if(D instanceof d)return D;F=D}var T={},E=F instanceof Function;N=N||{};function R(C){var j=F[C];!j&&E&&(j=F.length==2?function(L){F(C,L)}:F),T[C]=j&&function(L){j("[xmldom "+C+"]	"+L+h(N))}||function(){}}return R("warning"),R("error"),R("fatalError"),T}function d(){this.cdata=!1}function p(F,D){D.lineNumber=F.lineNumber,D.columnNumber=F.columnNumber}d.prototype={startDocument:function(){this.doc=new n().createDocument(null,null,null),this.locator&&(this.doc.documentURI=this.locator.systemId)},startElement:function(F,D,N,T){var E=this.doc,R=E.createElementNS(F,N||D),C=T.length;b(this,R),this.currentElement=R,this.locator&&p(this.locator,R);for(var j=0;j<C;j++){var F=T.getURI(j),L=T.getValue(j),N=T.getQName(j),y=E.createAttributeNS(F,N);this.locator&&p(T.getLocator(j),y),y.value=y.nodeValue=L,R.setAttributeNode(y)}},endElement:function(F,D,N){var T=this.currentElement;T.tagName,this.currentElement=T.parentNode},startPrefixMapping:function(F,D){},endPrefixMapping:function(F){},processingInstruction:function(F,D){var N=this.doc.createProcessingInstruction(F,D);this.locator&&p(this.locator,N),b(this,N)},ignorableWhitespace:function(F,D,N){},characters:function(F,D,N){if(F=g.apply(this,arguments),F){if(this.cdata)var T=this.doc.createCDATASection(F);else var T=this.doc.createTextNode(F);this.currentElement?this.currentElement.appendChild(T):/^\s*$/.test(F)&&this.doc.appendChild(T),this.locator&&p(this.locator,T)}},skippedEntity:function(F){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(F){(this.locator=F)&&(F.lineNumber=0)},comment:function(F,D,N){F=g.apply(this,arguments);var T=this.doc.createComment(F);this.locator&&p(this.locator,T),b(this,T)},startCDATA:function(){this.cdata=!0},endCDATA:function(){this.cdata=!1},startDTD:function(F,D,N){var T=this.doc.implementation;if(T&&T.createDocumentType){var E=T.createDocumentType(F,D,N);this.locator&&p(this.locator,E),b(this,E),this.doc.doctype=E}},warning:function(F){console.warn("[xmldom warning]	"+F,h(this.locator))},error:function(F){console.error("[xmldom error]	"+F,h(this.locator))},fatalError:function(F){throw new o(F,this.locator)}};function h(F){if(F)return`
@`+(F.systemId||"")+"#[line:"+F.lineNumber+",col:"+F.columnNumber+"]"}function g(F,D,N){return typeof F=="string"?F.substr(D,N):F.length>=D+N||D?new java.lang.String(F,D,N)+"":F}"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,function(F){d.prototype[F]=function(){return null}});function b(F,D){F.currentElement?F.currentElement.appendChild(D):F.doc.appendChild(D)}return Xt.__DOMHandler=d,Xt.normalizeLineEndings=s,Xt.DOMParser=l,Xt}var ul;function T0(){if(ul)return Qt;ul=1;var e=up();return Qt.DOMImplementation=e.DOMImplementation,Qt.XMLSerializer=e.XMLSerializer,Qt.DOMParser=S0().DOMParser,Qt}var Zt={},sl;function B0(){if(sl)return Zt;sl=1,Object.defineProperty(Zt,"__esModule",{value:!0}),Zt.parseJson=void 0;function e(r){try{var t=JSON.parse(r);return t}catch{return null}}return Zt.parseJson=e,Zt}var ea={},ll;function N0(){if(ll)return ea;ll=1,Object.defineProperty(ea,"__esModule",{value:!0}),ea.bufferFrom=void 0;function e(r){var t=encodeURIComponent(r),a=t.replace(/%([0-9A-F]{2})/g,function(i,o){return String.fromCharCode("0x"+o)}),n=new Uint8Array(a.length);return Array.prototype.forEach.call(a,function(i,o){n[o]=i.charCodeAt(0)}),n}return ea.bufferFrom=e,ea}var ra={},ta={},cl;function sp(){if(cl)return ta;cl=1,Object.defineProperty(ta,"__esModule",{value:!0}),ta.EventPolyfill=void 0;var e=function(){function r(t,a){this.AT_TARGET=0,this.BUBBLING_PHASE=0,this.CAPTURING_PHASE=0,this.NONE=0,this.type="",this.srcElement=null,this.currentTarget=null,this.eventPhase=0,this.isTrusted=!0,this.composed=!1,this.cancelable=!0,this.defaultPrevented=!1,this.bubbles=!0,this.lengthComputable=!0,this.loaded=0,this.total=0,this.cancelBubble=!1,this.returnValue=!0,this.type=t,this.target=a?.target||null,this.currentTarget=a?.currentTarget||null,this.timeStamp=Date.now()}return r.prototype.composedPath=function(){return[]},r.prototype.initEvent=function(t,a,n){this.type=t,this.bubbles=!!a,this.cancelable=!!n},r.prototype.preventDefault=function(){this.defaultPrevented=!0},r.prototype.stopPropagation=function(){},r.prototype.stopImmediatePropagation=function(){},r}();return ta.EventPolyfill=e,ta}var aa={},dl;function R0(){if(dl)return aa;dl=1;var e=Y&&Y.__extends||function(){var a=function(n,i){return a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,u){o.__proto__=u}||function(o,u){for(var s in u)Object.prototype.hasOwnProperty.call(u,s)&&(o[s]=u[s])},a(n,i)};return function(n,i){if(typeof i!="function"&&i!==null)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");a(n,i);function o(){this.constructor=n}n.prototype=i===null?Object.create(i):(o.prototype=i.prototype,new o)}}();Object.defineProperty(aa,"__esModule",{value:!0}),aa.ProgressEventPolyfill=void 0;var r=sp(),t=function(a){e(n,a);function n(i,o){var u=a.call(this,i)||this;return u.lengthComputable=o?.lengthComputable||!1,u.composed=o?.composed||!1,u.loaded=o?.loaded||0,u.total=o?.total||0,u}return n}(r.EventPolyfill);return aa.ProgressEventPolyfill=t,aa}var pl;function L0(){if(pl)return ra;pl=1,Object.defineProperty(ra,"__esModule",{value:!0}),ra.createEvent=void 0;var e=sp(),r=R0(),t=typeof ProgressEvent<"u";function a(n,i,o){var u=["error","progress","loadstart","loadend","load","timeout","abort"],s=t?ProgressEvent:r.ProgressEventPolyfill,l=u.includes(i)?new s(i,{lengthComputable:!0,loaded:o?.loaded||0,total:o?.total||0}):new e.EventPolyfill(i,{target:n,currentTarget:n});return l}return ra.createEvent=a,ra}var ml;function M0(){if(ml)return Yt;ml=1;var e=Y&&Y.__awaiter||function(b,F,D,N){function T(E){return E instanceof D?E:new D(function(R){R(E)})}return new(D||(D=Promise))(function(E,R){function C(y){try{L(N.next(y))}catch(B){R(B)}}function j(y){try{L(N.throw(y))}catch(B){R(B)}}function L(y){y.done?E(y.value):T(y.value).then(C,j)}L((N=N.apply(b,F||[])).next())})},r=Y&&Y.__generator||function(b,F){var D={label:0,sent:function(){if(E[0]&1)throw E[1];return E[1]},trys:[],ops:[]},N,T,E,R;return R={next:C(0),throw:C(1),return:C(2)},typeof Symbol=="function"&&(R[Symbol.iterator]=function(){return this}),R;function C(L){return function(y){return j([L,y])}}function j(L){if(N)throw new TypeError("Generator is already executing.");for(;D;)try{if(N=1,T&&(E=L[0]&2?T.return:L[0]?T.throw||((E=T.return)&&E.call(T),0):T.next)&&!(E=E.call(T,L[1])).done)return E;switch(T=0,E&&(L=[L[0]&2,E.value]),L[0]){case 0:case 1:E=L;break;case 4:return D.label++,{value:L[1],done:!1};case 5:D.label++,T=L[1],L=[0];continue;case 7:L=D.ops.pop(),D.trys.pop();continue;default:if(E=D.trys,!(E=E.length>0&&E[E.length-1])&&(L[0]===6||L[0]===2)){D=0;continue}if(L[0]===3&&(!E||L[1]>E[0]&&L[1]<E[3])){D.label=L[1];break}if(L[0]===6&&D.label<E[1]){D.label=E[1],E=L;break}if(E&&D.label<E[2]){D.label=E[2],D.ops.push(L);break}E[2]&&D.ops.pop(),D.trys.pop();continue}L=F.call(b,D)}catch(y){L=[6,y],T=0}finally{N=E=0}if(L[0]&5)throw L[1];return{value:L[0]?L[1]:void 0,done:!0}}},t=Y&&Y.__values||function(b){var F=typeof Symbol=="function"&&Symbol.iterator,D=F&&b[F],N=0;if(D)return D.call(b);if(b&&typeof b.length=="number")return{next:function(){return b&&N>=b.length&&(b=void 0),{value:b&&b[N++],done:!b}}};throw new TypeError(F?"Object is not iterable.":"Symbol.iterator is not defined.")},a=Y&&Y.__read||function(b,F){var D=typeof Symbol=="function"&&b[Symbol.iterator];if(!D)return b;var N=D.call(b),T,E=[],R;try{for(;(F===void 0||F-- >0)&&!(T=N.next()).done;)E.push(T.value)}catch(C){R={error:C}}finally{try{T&&!T.done&&(D=N.return)&&D.call(N)}finally{if(R)throw R.error}}return E};Object.defineProperty(Yt,"__esModule",{value:!0}),Yt.createXMLHttpRequestOverride=void 0;var n=Jr,i=pr,o=T0(),u=B0(),s=op(),l=N0(),c=L0(),d=ft,p=yr,h=Ot,g=function(b){var F,D=b.XMLHttpRequest,N=b.emitter,T=b.log;return F=function(){function E(){this._events=[],this.log=T,this.UNSENT=0,this.OPENED=1,this.HEADERS_RECEIVED=2,this.LOADING=3,this.DONE=4,this.onreadystatechange=null,this.onabort=null,this.onerror=null,this.onload=null,this.onloadend=null,this.onloadstart=null,this.onprogress=null,this.ontimeout=null,this.url="",this.method="GET",this.readyState=this.UNSENT,this.withCredentials=!1,this.status=200,this.statusText="OK",this.response="",this.responseType="text",this.responseText="",this.responseXML=null,this.responseURL="",this.upload={},this.timeout=0,this._requestHeaders=new i.Headers,this._responseHeaders=new i.Headers}return E.prototype.setReadyState=function(R){R!==this.readyState&&(this.log("readyState change %d -> %d",this.readyState,R),this.readyState=R,R!==this.UNSENT&&(this.log("triggering readystate change..."),this.trigger("readystatechange")))},E.prototype.trigger=function(R,C){var j,L;this.log('trigger "%s" (%d)',R,this.readyState),this.log('resolve listener for event "%s"',R);var y=this["on"+R];y?.call(this,c.createEvent(this,R,C));try{for(var B=t(this._events),H=B.next();!H.done;H=B.next()){var P=H.value;P.name===R&&(T('calling mock event listener "%s" (%d)',R,this.readyState),P.listener.call(this,c.createEvent(this,R,C)))}}catch($){j={error:$}}finally{try{H&&!H.done&&(L=B.return)&&L.call(B)}finally{if(j)throw j.error}}return this},E.prototype.reset=function(){this.log("reset"),this.setReadyState(this.UNSENT),this.status=200,this.statusText="OK",this.response=null,this.responseText=null,this.responseXML=null,this._requestHeaders=new i.Headers,this._responseHeaders=new i.Headers},E.prototype.open=function(R,C,j,L,y){return j===void 0&&(j=!0),e(this,void 0,void 0,function(){return r(this,function(B){return this.log=this.log.extend("request "+R+" "+C),this.log("open",{method:R,url:C,async:j,user:L,password:y}),this.reset(),this.setReadyState(this.OPENED),typeof C>"u"?(this.url=R,this.method="GET"):(this.url=C,this.method=R,this.async=j,this.user=L,this.password=y),[2]})})},E.prototype.send=function(R){var C=this;this.log("send %s %s",this.method,this.url);var j;typeof R=="string"?j=p.encodeBuffer(R):j=R||new ArrayBuffer(0);var L;try{L=new URL(this.url)}catch{L=new URL(this.url,window.location.href)}this.log("request headers",this._requestHeaders);var y=new d.IsomorphicRequest(L,{body:j,method:this.method,headers:this._requestHeaders,credentials:this.withCredentials?"include":"omit"}),B=new h.InteractiveIsomorphicRequest(y);this.log('emitting the "request" event for %d listener(s)...',N.listenerCount("request")),N.emit("request",B),this.log("awaiting mocked response..."),Promise.resolve(n.until(function(){return e(C,void 0,void 0,function(){var H,P;return r(this,function($){switch($.label){case 0:return[4,N.untilIdle("request",function(X){var ie=a(X.args,1),ee=ie[0];return ee.id===B.id})];case 1:return $.sent(),this.log("all request listeners have been resolved!"),[4,B.respondWith.invoked()];case 2:return H=a.apply(void 0,[$.sent(),1]),P=H[0],this.log("event.respondWith called with:",P),[2,P]}})})})).then(function(H){var P,$,X=a(H,2),ie=X[0],ee=X[1];if(ie){C.log("middleware function threw an exception!",ie),C.trigger("error"),C.abort();return}if(ee){if(C.log("received mocked response",ee),C.trigger("loadstart"),C.status=(P=ee.status)!==null&&P!==void 0?P:200,C.statusText=ee.statusText||"OK",C._responseHeaders=ee.headers?i.objectToHeaders(ee.headers):new i.Headers,C.log("set response status",C.status,C.statusText),C.log("set response headers",C._responseHeaders),C.setReadyState(C.HEADERS_RECEIVED),C.log("response type",C.responseType),C.response=C.getResponseBody(ee.body),C.responseURL=C.url,C.responseText=ee.body||"",C.responseXML=C.getResponseXML(),C.log("set response body",C.response),ee.body&&C.response){C.setReadyState(C.LOADING);var Q=l.bufferFrom(ee.body);C.trigger("progress",{loaded:Q.length,total:Q.length})}C.setReadyState(C.DONE),C.trigger("load"),C.trigger("loadend"),N.emit("response",y,s.toIsoResponse(ee))}else{C.log("no mocked response received!");var W=new D;C.log("opening an original request %s %s",C.method,C.url),W.open(C.method,C.url,($=C.async)!==null&&$!==void 0?$:!0,C.user,C.password),W.addEventListener("load",function(){C.log('original "onload"'),C.status=W.status,C.statusText=W.statusText,C.responseURL=W.responseURL,C.responseType=W.responseType,C.response=W.response,C.responseText=W.responseText,C.responseXML=W.responseXML,C.log("set mock request readyState to DONE"),C.setReadyState(C.DONE),C.log("received original response",C.status,C.statusText),C.log("original response body:",C.response);var K=W.getAllResponseHeaders();C.log(`original response headers:
`,K),C._responseHeaders=i.stringToHeaders(K),C.log("original response headers (normalized)",C._responseHeaders),C.log("original response finished"),N.emit("response",y,{status:W.status,statusText:W.statusText,headers:C._responseHeaders,body:W.response})}),C.propagateCallbacks(W),C.propagateListeners(W),C.propagateHeaders(W,C._requestHeaders),C.async&&(W.timeout=C.timeout),C.log("send",R),W.send(R)}})},E.prototype.abort=function(){this.log("abort"),this.readyState>this.UNSENT&&this.readyState<this.DONE&&(this.setReadyState(this.UNSENT),this.trigger("abort"))},E.prototype.dispatchEvent=function(){return!1},E.prototype.setRequestHeader=function(R,C){this.log('set request header "%s" to "%s"',R,C),this._requestHeaders.append(R,C)},E.prototype.getResponseHeader=function(R){if(this.log('get response header "%s"',R),this.readyState<this.HEADERS_RECEIVED)return this.log("cannot return a header: headers not received (state: %s)",this.readyState),null;var C=this._responseHeaders.get(R);return this.log('resolved response header "%s" to "%s"',R,C,this._responseHeaders),C},E.prototype.getAllResponseHeaders=function(){return this.log("get all response headers"),this.readyState<this.HEADERS_RECEIVED?(this.log("cannot return headers: headers not received (state: %s)",this.readyState),""):i.headersToString(this._responseHeaders)},E.prototype.addEventListener=function(R,C){this.log("addEventListener",R,C),this._events.push({name:R,listener:C})},E.prototype.removeEventListener=function(R,C){this.log("removeEventListener",R,C),this._events=this._events.filter(function(j){return j.name!==R&&j.listener!==C})},E.prototype.overrideMimeType=function(){},E.prototype.getResponseBody=function(R){var C=R??"";switch(this.log("coerced response body to",C),this.responseType){case"json":return this.log("resolving response body as JSON"),u.parseJson(C);case"blob":{var j=this.getResponseHeader("content-type")||"text/plain";return this.log("resolving response body as Blob",{type:j}),new Blob([C],{type:j})}case"arraybuffer":{this.log("resolving response body as ArrayBuffer");var L=l.bufferFrom(C);return L}default:return C}},E.prototype.getResponseXML=function(){var R=this.getResponseHeader("Content-Type");return R==="application/xml"||R==="text/xml"?new o.DOMParser().parseFromString(this.responseText,R):null},E.prototype.propagateCallbacks=function(R){var C,j;this.log("propagating request callbacks to the original request");var L=["abort","onerror","ontimeout","onload","onloadstart","onloadend","onprogress","onreadystatechange"];try{for(var y=t(L),B=y.next();!B.done;B=y.next()){var H=B.value,P=this[H];P&&(R[H]=this[H],this.log('propagated the "%s" callback',H,P))}}catch($){C={error:$}}finally{try{B&&!B.done&&(j=y.return)&&j.call(y)}finally{if(C)throw C.error}}R.onabort=this.abort,R.onerror=this.onerror,R.ontimeout=this.ontimeout,R.onload=this.onload,R.onloadstart=this.onloadstart,R.onloadend=this.onloadend,R.onprogress=this.onprogress,R.onreadystatechange=this.onreadystatechange},E.prototype.propagateListeners=function(R){this.log("propagating request listeners (%d) to the original request",this._events.length,this._events),this._events.forEach(function(C){var j=C.name,L=C.listener;R.addEventListener(j,L)})},E.prototype.propagateHeaders=function(R,C){var j=this;this.log("propagating request headers to the original request",C),Object.entries(C.raw()).forEach(function(L){var y=a(L,2),B=y[0],H=y[1];j.log('setting "%s" (%s) header on the original request',B,H),R.setRequestHeader(B,H)})},E}(),F.UNSENT=0,F.OPENED=1,F.HEADERS_RECEIVED=2,F.LOADING=3,F.DONE=4,F};return Yt.createXMLHttpRequestOverride=g,Yt}var Fl;function I0(){if(Fl)return Jt;Fl=1;var e=Y&&Y.__extends||function(){var o=function(u,s){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(l,c){l.__proto__=c}||function(l,c){for(var d in c)Object.prototype.hasOwnProperty.call(c,d)&&(l[d]=c[d])},o(u,s)};return function(u,s){if(typeof s!="function"&&s!==null)throw new TypeError("Class extends value "+String(s)+" is not a constructor or null");o(u,s);function l(){this.constructor=u}u.prototype=s===null?Object.create(s):(l.prototype=s.prototype,new l)}}();Object.defineProperty(Jt,"__esModule",{value:!0}),Jt.XMLHttpRequestInterceptor=void 0;var r=Or,t=xt,a=Ea,n=M0(),i=function(o){e(u,o);function u(){return o.call(this,u.symbol)||this}return u.prototype.checkEnvironment=function(){return typeof window<"u"&&typeof window.XMLHttpRequest<"u"},u.prototype.setup=function(){var s=this.log.extend("setup");s('patching "XMLHttpRequest" module...');var l=window.XMLHttpRequest;r.invariant(!l[t.IS_PATCHED_MODULE],'Failed to patch the "XMLHttpRequest" module: already patched.'),window.XMLHttpRequest=n.createXMLHttpRequestOverride({XMLHttpRequest:l,emitter:this.emitter,log:this.log}),s('native "XMLHttpRequest" module patched!',window.XMLHttpRequest.name),Object.defineProperty(window.XMLHttpRequest,t.IS_PATCHED_MODULE,{enumerable:!0,configurable:!0,value:!0}),this.subscriptions.push(function(){Object.defineProperty(window.XMLHttpRequest,t.IS_PATCHED_MODULE,{value:void 0}),window.XMLHttpRequest=l,s('native "XMLHttpRequest" module restored!',window.XMLHttpRequest.name)})},u.symbol=Symbol("xhr"),u}(a.Interceptor);return Jt.XMLHttpRequestInterceptor=i,Jt}var Vi={},na={},ia={},hl;function lp(){if(hl)return ia;hl=1,Object.defineProperty(ia,"__esModule",{value:!0}),ia.MemoryLeakError=void 0;let e=class extends Error{constructor(t,a,n){super(`Possible EventEmitter memory leak detected. ${n} ${a.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`),this.emitter=t,this.type=a,this.count=n,this.name="MaxListenersExceededWarning"}};return ia.MemoryLeakError=e,ia}var fl;function x0(){if(fl)return na;fl=1,Object.defineProperty(na,"__esModule",{value:!0}),na.Emitter=void 0;const e=lp();let r=class cp{constructor(){this.events=new Map,this.maxListeners=cp.defaultMaxListeners,this.hasWarnedAboutPotentialMemoryLeak=!1}static listenerCount(a,n){return a.listenerCount(n)}_emitInternalEvent(a,n,i){this.emit(a,n,i)}_getListeners(a){return this.events.get(a)||[]}_removeListener(a,n){const i=a.indexOf(n);return i>-1&&a.splice(i,1),[]}_wrapOnceListener(a,n){const i=(...o)=>{this.removeListener(a,i),n.apply(this,o)};return i}setMaxListeners(a){return this.maxListeners=a,this}getMaxListeners(){return this.maxListeners}eventNames(){return Array.from(this.events.keys())}emit(a,...n){const i=this._getListeners(a);return i.forEach(o=>{o.apply(this,n)}),i.length>0}addListener(a,n){this._emitInternalEvent("newListener",a,n);const i=this._getListeners(a).concat(n);if(this.events.set(a,i),this.maxListeners>0&&this.listenerCount(a)>this.maxListeners&&!this.hasWarnedAboutPotentialMemoryLeak){this.hasWarnedAboutPotentialMemoryLeak=!0;const o=new e.MemoryLeakError(this,a,this.listenerCount(a));console.warn(o)}return this}on(a,n){return this.addListener(a,n)}once(a,n){return this.addListener(a,this._wrapOnceListener(a,n))}prependListener(a,n){const i=this._getListeners(a);if(i.length>0){const o=[n].concat(i);this.events.set(a,o)}else this.events.set(a,i.concat(n));return this}prependOnceListener(a,n){return this.prependListener(a,this._wrapOnceListener(a,n))}removeListener(a,n){const i=this._getListeners(a);return i.length>0&&(this._removeListener(i,n),this.events.set(a,i),this._emitInternalEvent("removeListener",a,n)),this}off(a,n){return this.removeListener(a,n)}removeAllListeners(a){return a?this.events.delete(a):this.events.clear(),this}listeners(a){return Array.from(this._getListeners(a))}listenerCount(a){return this._getListeners(a).length}rawListeners(a){return this.listeners(a)}};return na.Emitter=r,r.defaultMaxListeners=10,na}var yl;function O0(){return yl||(yl=1,function(e){var r=Y&&Y.__createBinding||(Object.create?function(a,n,i,o){o===void 0&&(o=i);var u=Object.getOwnPropertyDescriptor(n,i);(!u||("get"in u?!n.__esModule:u.writable||u.configurable))&&(u={enumerable:!0,get:function(){return n[i]}}),Object.defineProperty(a,o,u)}:function(a,n,i,o){o===void 0&&(o=i),a[o]=n[i]}),t=Y&&Y.__exportStar||function(a,n){for(var i in a)i!=="default"&&!Object.prototype.hasOwnProperty.call(n,i)&&r(n,a,i)};Object.defineProperty(e,"__esModule",{value:!0}),t(x0(),e),t(lp(),e)}(Vi)),Vi}var _0=Object.create,Hn=Object.defineProperty,P0=Object.getOwnPropertyDescriptor,G0=Object.getOwnPropertyNames,H0=Object.getPrototypeOf,j0=Object.prototype.hasOwnProperty,dp=(e,r)=>{for(var t in r)Hn(e,t,{get:r[t],enumerable:!0})},pp=(e,r,t,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of G0(r))!j0.call(e,n)&&n!==t&&Hn(e,n,{get:()=>r[n],enumerable:!(a=P0(r,n))||a.enumerable});return e},Ia=(e,r,t)=>(t=e!=null?_0(H0(e)):{},pp(!e||!e.__esModule?Hn(t,"default",{value:e,enumerable:!0}):t,e)),$0=e=>pp(Hn({},"__esModule",{value:!0}),e),mp={};dp(mp,{GraphQLHandler:()=>$n,MockedRequest:()=>xa,RESTMethods:()=>Pp,RequestHandler:()=>Eu,RestHandler:()=>ku,SetupApi:()=>Up,SetupWorkerApi:()=>zp,cleanUrl:()=>vu,compose:()=>xp,context:()=>Fp,createResponseComposition:()=>co,defaultContext:()=>jn,defaultResponse:()=>Op,graphql:()=>Sg,graphqlContext:()=>jp,handleRequest:()=>Au,matchRequestUrl:()=>Du,response:()=>_p,rest:()=>Ag,restContext:()=>Gp,setupWorker:()=>kg});var Re=$0(mp),Fp={};dp(Fp,{body:()=>yp,cookie:()=>yu,data:()=>gp,delay:()=>vp,errors:()=>Dp,extensions:()=>bp,fetch:()=>Ep,json:()=>$t,set:()=>fp,status:()=>hp,text:()=>kp,xml:()=>Ap});var W0={100:"Continue",101:"Switching Protocols",102:"Processing",103:"Early Hints",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",208:"Already Reported",226:"IM Used",300:"Multiple Choices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",308:"Permanent Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"I'm a Teapot",421:"Misdirected Request",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Too Early",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"},hp=(e,r)=>t=>(t.status=e,t.statusText=r||W0[String(e)],t),V0=pr;function fp(...e){return r=>{const[t,a]=e;return typeof t=="string"?r.headers.append(t,a):(0,V0.objectToHeaders)(t).forEach((i,o)=>{r.headers.append(o,i)}),r}}var U0=Ia(Da),yu=(e,r,t)=>a=>{const n=U0.serialize(e,r,t);return a.headers.append("Set-Cookie",n),typeof document<"u"&&(document.cookie=n),a},yp=e=>r=>(r.body=e,r);function zr(e){try{return JSON.parse(e)}catch{return}}function gl(e){return e!=null&&typeof e=="object"&&!Array.isArray(e)}function jt(e,r){return Object.entries(r).reduce((t,[a,n])=>{const i=t[a];return Array.isArray(i)&&Array.isArray(n)?(t[a]=i.concat(n),t):gl(i)&&gl(n)?(t[a]=jt(i,n),t):(t[a]=n,t)},Object.assign({},e))}var $t=e=>r=>(r.headers.set("Content-Type","application/json"),r.body=JSON.stringify(e),r),gp=e=>r=>{const t=zr(r.body)||{},a=jt(t,{data:e});return $t(a)(r)},bp=e=>r=>{const t=zr(r.body)||{},a=jt(t,{extensions:e});return $t(a)(r)},z0=fo,Ui=2147483647,bl=100,q0=400,K0=5,vl=()=>(0,z0.isNodeProcess)()?K0:Math.floor(Math.random()*(q0-bl)+bl),vp=e=>r=>{let t;if(typeof e=="string")switch(e){case"infinite":{t=Ui;break}case"real":{t=vl();break}default:throw new Error(`Failed to delay a response: unknown delay mode "${e}". Please make sure you provide one of the supported modes ("real", "infinite") or a number to "ctx.delay".`)}else if(typeof e>"u")t=vl();else{if(e>Ui)throw new Error(`Failed to delay a response: provided delay duration (${e}) exceeds the maximum allowed duration for "setTimeout" (${Ui}). This will cause the response to be returned immediately. Please use a number within the allowed range to delay the response by exact duration, or consider the "infinite" delay mode to delay the response indefinitely.`);t=e}return r.delay=t,r},Dp=e=>r=>{if(e==null)return r;const t=zr(r.body)||{},a=jt(t,{errors:e});return $t(a)(r)},J0=fo,Y0=pr,Dl=(0,J0.isNodeProcess)()?(e,r)=>Promise.resolve().then(()=>Ia(iF())).then(({default:t})=>t(e,r)):globalThis.fetch,El=e=>{const r=new Y0.Headers(e.headers);return r.set("x-msw-bypass","true"),{...e,headers:r.all()}},Q0=e=>{const{body:r,method:t}=e,a={...e,body:void 0};return["GET","HEAD"].includes(t)||(typeof r=="object"||typeof r=="number"||typeof r=="boolean"?a.body=JSON.stringify(r):a.body=r),a},Ep=(e,r={})=>{if(typeof e=="string")return Dl(e,El(r));const t=Q0(e),a=El(t);return Dl(e.url.href,a)},kp=e=>r=>(r.headers.set("Content-Type","text/plain"),r.body=e,r),Ap=e=>r=>(r.headers.set("Content-Type","text/xml"),r.body=e,r),X0=Or,Z0=Or,ey="[MSW]";function gu(e,...r){const t=(0,Z0.format)(e,...r);return`${ey} ${t}`}function ry(e,...r){console.warn(gu(e,...r))}function ty(e,...r){console.error(gu(e,...r))}var Ee={formatMessage:gu,warn:ry,error:ty};function ay(){(0,X0.invariant)(typeof URL<"u",Ee.formatMessage(`Global "URL" class is not defined. This likely means that you're running MSW in an environment that doesn't support all Node.js standard API (e.g. React Native). If that's the case, please use an appropriate polyfill for the "URL" class, like "react-native-url-polyfill".`))}var ny=Or,iy=fo,oy=Jr,uy=Jr;function zi(e,r,t){return[e.active,e.installing,e.waiting].filter(o=>o!=null).find(o=>t(o.scriptURL,r))||null}function sy(e){return new URL(e,location.href).href}var ly=async(e,r={},t)=>{const a=sy(e),n=await navigator.serviceWorker.getRegistrations().then(s=>s.filter(l=>zi(l,a,t)));!navigator.serviceWorker.controller&&n.length>0&&location.reload();const[i]=n;if(i)return i.update().then(()=>[zi(i,a,t),i]);const[o,u]=await(0,uy.until)(async()=>{const s=await navigator.serviceWorker.register(e,r);return[zi(s,a,t),s]});if(o){if(o.message.includes("(404)")){const l=new URL(r?.scope||"/",location.href);throw new Error(Ee.formatMessage(`Failed to register a Service Worker for scope ('${l.href}') with script ('${a}'): Service Worker script does not exist at the given path.

Did you forget to run "npx msw init <PUBLIC_DIR>"?

Learn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`))}throw new Error(Ee.formatMessage(`Failed to register the Service Worker:

%s`,o.message))}return u};function wp(e={}){if(e.quiet)return;const r=e.message||"Mocking enabled.";console.groupCollapsed(`%c${Ee.formatMessage(r)}`,"color:orangered;font-weight:bold;"),console.log("%cDocumentation: %chttps://mswjs.io/docs","font-weight:bold","font-weight:normal"),console.log("Found an issue? https://github.com/mswjs/msw/issues"),e.workerUrl&&console.log("Worker script URL:",e.workerUrl),e.workerScope&&console.log("Worker scope:",e.workerScope),console.groupEnd()}async function cy(e,r){var t,a;if(e.workerChannel.send("MOCK_ACTIVATE"),await e.events.once("MOCKING_ENABLED"),e.isMockingEnabled){Ee.warn('Found a redundant "worker.start()" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this "worker.start()" call.');return}e.isMockingEnabled=!0,wp({quiet:r.quiet,workerScope:(t=e.registration)==null?void 0:t.scope,workerUrl:(a=e.worker)==null?void 0:a.scriptURL})}var dy=class{constructor(e){this.port=e}postMessage(e,...r){const[t,a]=r;this.port.postMessage({type:e,data:t},{transfer:a})}},Cp=class extends Error{constructor(e){super(e),this.name="NetworkError"}},py=gn,my=pr,Fy=Ia(Da),kl=Co,hy=gn,fy=yr,yy=pr,gy=Ia(Da);function Al(){return gy.parse(document.cookie)}function by(e){if(typeof document>"u"||typeof location>"u")return{};switch(e.credentials){case"same-origin":return location.origin===e.url.origin?Al():{};case"include":return Al();default:return{}}}var vy=pr;function Dy(e){var r,t;const a=(0,vy.stringToHeaders)(e),n=a.get("content-type")||"text/plain",i=a.get("content-disposition");if(!i)throw new Error('"Content-Disposition" header is required.');const o=i.split(";").reduce((l,c)=>{const[d,...p]=c.trim().split("=");return l[d]=p.join("="),l},{}),u=(r=o.name)==null?void 0:r.slice(1,-1),s=(t=o.filename)==null?void 0:t.slice(1,-1);return{name:u,filename:s,contentType:n}}function Ey(e,r){const t=r?.get("content-type");if(!t)return;const[,...a]=t.split(/; */),n=a.filter(s=>s.startsWith("boundary=")).map(s=>s.replace(/^boundary=/,""))[0];if(!n)return;const i=new RegExp(`--+${n}`),o=e.split(i).filter(s=>s.startsWith(`\r
`)&&s.endsWith(`\r
`)).map(s=>s.trimStart().replace(/\r\n$/,""));if(!o.length)return;const u={};try{for(const s of o){const[l,...c]=s.split(`\r
\r
`),d=c.join(`\r
\r
`),{contentType:p,filename:h,name:g}=Dy(l),b=h===void 0?d:new File([d],h,{type:p}),F=u[g];F===void 0?u[g]=b:Array.isArray(F)?u[g]=[...F,b]:u[g]=[F,b]}return u}catch{return}}function Sp(e,r){var t;if(!e)return e;const a=((t=r?.get("content-type"))==null?void 0:t.toLowerCase())||"";return a.startsWith("multipart/form-data")&&typeof e!="object"?Ey(e.toString(),r)||e:a.includes("json")&&typeof e!="object"&&zr(e.toString())||e}function bu(e,r){return e.toLowerCase()===r.toLowerCase()}var xa=class extends hy.IsomorphicRequest{constructor(e,r={}){super(e,r),r.id&&(this.id=r.id),this.cache=r.cache||"default",this.destination=r.destination||"",this.integrity=r.integrity||"",this.keepalive=r.keepalive||!1,this.mode=r.mode||"cors",this.priority=r.priority||"auto",this.redirect=r.redirect||"follow",this.referrer=r.referrer||"",this.referrerPolicy=r.referrerPolicy||"no-referrer",this.cookies=r.cookies||this.getCookies()}get body(){const e=(0,fy.decodeBuffer)(this._body),r=Sp(e,this.headers);if(!(bu(this.method,"GET")&&r===""))return r}passthrough(){return{status:101,statusText:"Continue",headers:new yy.Headers,body:null,passthrough:!0,once:!1}}getCookies(){var e;const r=this.headers.get("cookie"),t=r?Fy.parse(r):{};kl.store.hydrate();const a=Array.from((e=kl.store.get({...this,url:this.url.href}))==null?void 0:e.entries()).reduce((o,[u,{value:s}])=>Object.assign(o,{[u.trim()]:s}),{}),i={...by(this),...a};for(const[o,u]of Object.entries(i))this.headers.append("cookie",`${o}=${u}`);return{...i,...t}}};function ky(e){const r=new URL(e.url),t=new my.Headers(e.headers);return new xa(r,{...e,body:(0,py.encodeBuffer)(e.body||""),headers:t})}var Ay=Jr,wy=async(e,r,t)=>{const a=r.filter(i=>i.test(e,t));if(a.length===0)return{handler:void 0,response:void 0};const n=await a.reduce(async(i,o)=>{const u=await i;if(u?.response)return i;const s=await o.run(e,t);return s===null||s.handler.shouldSkip?null:s.response?(s.response.once&&o.markAsSkipped(!0),s):{request:s.request,handler:s.handler,response:void 0,parsedResult:s.parsedResult}},Promise.resolve(null));return n?{handler:n.handler,publicRequest:n.request,parsedRequest:n.parsedResult,response:n.response}:{handler:void 0,response:void 0}},Tp=Ia(kh()),Cy=h0,Oa=e=>e.referrer.startsWith(e.url.origin)?e.url.pathname:new URL(e.url.pathname,`${e.url.protocol}//${e.url.host}`).href;function Bp(e){var r;const t=e.definitions.find(a=>a.kind==="OperationDefinition");return{operationType:t?.operation,operationName:(r=t?.name)==null?void 0:r.value}}function Sy(e){try{const r=(0,Cy.parse)(e);return Bp(r)}catch(r){return r}}function Ty(e,r,t){const a={variables:e};for(const[n,i]of Object.entries(r)){if(!(n in t))throw new Error(`Given files do not have a key '${n}' .`);for(const o of i){const[u,...s]=o.split(".").reverse(),l=s.reverse();let c=a;for(const d of l){if(!(d in c))throw new Error(`Property '${l}' is not in operations.`);c=c[d]}c[u]=t[n]}}return a.variables}function By(e){var r,t;switch(e.method){case"GET":{const a=e.url.searchParams.get("query"),n=e.url.searchParams.get("variables")||"";return{query:a,variables:zr(n)}}case"POST":{if((r=e.body)!=null&&r.query){const{query:a,variables:n}=e.body;return{query:a,variables:n}}if((t=e.body)!=null&&t.operations){const{operations:a,map:n,...i}=e.body,o=zr(a)||{};if(!o.query)return null;const u=zr(n||"")||{},s=o.variables?Ty(o.variables,u,i):{};return{query:o.query,variables:s}}}default:return null}}function Np(e){const r=By(e);if(!r||!r.query)return;const{query:t,variables:a}=r,n=Sy(t);if(n instanceof Error){const i=Oa(e);throw new Error(Ee.formatMessage(`Failed to intercept a GraphQL request to "%s %s": cannot parse query. See the error message from the parser below.

%s`,e.method,i,n.message))}return{operationType:n.operationType,operationName:n.operationName,variables:a}}function Rp(e){return e<300?"#69AB32":e<400?"#F0BB4B":"#E95F5D"}function Lp(){const e=new Date;return[e.getHours(),e.getMinutes(),e.getSeconds()].map(String).map(r=>r.slice(0,2)).map(r=>r.padStart(2,"0")).join(":")}function Mp(e){return{...e,body:e.body,headers:e.headers.all()}}var Ny=pr;function Ip(e){const r=(0,Ny.objectToHeaders)(e.headers),t=Sp(e.body,r);return{...e,body:t}}var Ry=k0,Ly=Aa,My=/[\?|#].*$/g;function Iy(e){return new URL(`/${e}`,"http://localhost").searchParams}function vu(e){return e.replace(My,"")}function xy(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}function Oy(e,r){if(xy(e)||e.startsWith("*"))return e;const t=r||typeof document<"u"&&document.baseURI;return t?decodeURI(new URL(encodeURI(e),t).href):e}function _y(e,r){if(e instanceof RegExp)return e;const t=Oy(e,r);return vu(t)}function Py(e){return e.replace(/([:a-zA-Z_-]*)(\*{1,2})+/g,(r,t,a)=>{const n="(.*)";return t?t.startsWith(":")?`${t}${a}`:`${t}${n}`:n}).replace(/([^\/])(:)(?=\d+)/,"$1\\$2").replace(/^([^\/]+)(:)(?=\/\/)/,"$1\\$2")}function Du(e,r,t){const a=_y(r,t),n=typeof a=="string"?Py(a):a,i=(0,Ly.getCleanUrl)(e),o=(0,Ry.match)(n,{decode:decodeURIComponent})(i),u=o&&o.params||{};return{matches:o!==!1,params:u}}var Gy=pr;function xp(...e){return(...r)=>e.reduceRight((t,a)=>t instanceof Promise?Promise.resolve(t).then(a):a(t),r[0])}var Op={status:200,statusText:"OK",body:null,delay:0,once:!1,passthrough:!1},Hy=[];function co(e,r=Hy){return async(...t)=>{const a=Object.assign({},Op,{headers:new Gy.Headers({"x-powered-by":"msw"})},e),n=[...r,...t].filter(Boolean);return n.length>0?xp(...n)(a):a}}var _p=Object.assign(co(),{once:co({once:!0}),networkError(e){throw new Cp(e)}}),jy=/[\/\\]msw[\/\\]src[\/\\](.+)/,$y=/(node_modules)?[\/\\]lib[\/\\](umd|esm|iief|cjs)[\/\\]|^[^\/\\]*$/;function Wy(e){const r=e.stack;if(!r)return;const a=r.split(`
`).slice(1).find(i=>!(jy.test(i)||$y.test(i)));return a?a.replace(/\s*at [^()]*\(([^)]+)\)/,"$1").replace(/^@/,""):void 0}function Vy(e){return e?typeof e[Symbol.iterator]=="function":!1}var jn={status:hp,set:fp,delay:vp,fetch:Ep},Eu=class{constructor(e){this.shouldSkip=!1,this.ctx=e.ctx||jn,this.resolver=e.resolver;const r=Wy(new Error);this.info={...e.info,callFrame:r}}parse(e,r){return null}test(e,r){return this.predicate(e,this.parse(e,r),r)}getPublicRequest(e,r){return e}markAsSkipped(e=!0){this.shouldSkip=e}async run(e,r){if(this.shouldSkip)return null;const t=this.parse(e,r);if(!this.predicate(e,t,r))return null;const n=this.getPublicRequest(e,t),o=await this.wrapResolver(this.resolver)(n,_p,this.ctx);return this.createExecutionResult(t,n,o)}wrapResolver(e){return async(r,t,a)=>{const n=this.resolverGenerator||await e(r,t,a);if(Vy(n)){const{value:i,done:o}=n[Symbol.iterator]().next(),u=await i;return!u&&o?this.resolverGeneratorResult:(this.resolverGenerator||(this.resolverGenerator=n),this.resolverGeneratorResult=u,u)}return n}}createExecutionResult(e,r,t){return{handler:this,parsedResult:e||null,request:r,response:t||null}}},Pp=(e=>(e.HEAD="HEAD",e.GET="GET",e.POST="POST",e.PUT="PUT",e.PATCH="PATCH",e.OPTIONS="OPTIONS",e.DELETE="DELETE",e))(Pp||{}),Gp={...jn,cookie:yu,body:yp,text:kp,json:$t,xml:Ap},Uy=class extends xa{constructor(e,r){super(e.url,{...e,body:e._body}),this.params=r,this.id=e.id}},ku=class extends Eu{constructor(e,r,t){super({info:{header:`${e} ${r}`,path:r,method:e},ctx:Gp,resolver:t}),this.checkRedundantQueryParameters()}checkRedundantQueryParameters(){const{method:e,path:r}=this.info;if(r instanceof RegExp||vu(r)===r)return;Iy(r).forEach((n,i)=>{}),Ee.warn(`Found a redundant usage of query parameters in the request handler URL for "${e} ${r}". Please match against a path instead and access query parameters in the response resolver function using "req.url.searchParams".`)}parse(e,r){return Du(e.url,this.info.path,r?.baseUrl)}getPublicRequest(e,r){return new Uy(e,r.params||{})}predicate(e,r){return(this.info.method instanceof RegExp?this.info.method.test(e.method):bu(this.info.method,e.method))&&r.matches}log(e,r){const t=Oa(e),a=Mp(e),n=Ip(r),i=Rp(r.status);console.groupCollapsed(Ee.formatMessage("%s %s %s (%c%s%c)"),Lp(),e.method,t,`color:${i}`,`${r.status} ${r.statusText}`,"color:inherit"),console.log("Request",a),console.log("Handler:",this),console.log("Response",n),console.groupEnd()}},Qa=Or,zy=(e,r)=>t=>{qy(e);const a=zr(t.body)||{},n=jt(a,{[e]:r});return $t(n)(t)};function qy(e){(0,Qa.invariant)(e.trim()!=="",Ee.formatMessage("Failed to set a custom field on a GraphQL response: field name cannot be empty.")),(0,Qa.invariant)(e!=="data",Ee.formatMessage('Failed to set a custom "%s" field on a mocked GraphQL response: forbidden field name. Did you mean to call "ctx.data()" instead?',e)),(0,Qa.invariant)(e!=="errors",Ee.formatMessage('Failed to set a custom "%s" field on a mocked GraphQL response: forbidden field name. Did you mean to call "ctx.errors()" instead?',e)),(0,Qa.invariant)(e!=="extensions",Ee.formatMessage('Failed to set a custom "%s" field on a mocked GraphQL response: forbidden field name. Did you mean to call "ctx.extensions()" instead?',e))}function Hp(e,r){try{return e()}catch(t){r?.(t)}}var jp={...jn,data:gp,extensions:bp,errors:Dp,cookie:yu,field:zy};function Ky(e){return e==null?!1:typeof e=="object"&&"kind"in e&&"definitions"in e}var Jy=class extends xa{constructor(e,r,t){super(e.url,{...e,body:e._body}),this.variables=r,this.operationName=t}},$n=class extends Eu{constructor(e,r,t,a){let n=r;if(Ky(r)){const o=Bp(r);if(o.operationType!==e)throw new Error(`Failed to create a GraphQL handler: provided a DocumentNode with a mismatched operation type (expected "${e}", but got "${o.operationType}").`);if(!o.operationName)throw new Error("Failed to create a GraphQL handler: provided a DocumentNode with no operation name.");n=o.operationName}const i=e==="all"?`${e} (origin: ${t.toString()})`:`${e} ${n} (origin: ${t.toString()})`;super({info:{header:i,operationType:e,operationName:n},ctx:jp,resolver:a}),this.endpoint=t}parse(e){return Hp(()=>Np(e),r=>console.error(r.message))}getPublicRequest(e,r){var t,a;return new Jy(e,(t=r?.variables)!=null?t:{},(a=r?.operationName)!=null?a:"")}predicate(e,r){if(!r)return!1;if(!r.operationName&&this.info.operationType!=="all"){const i=Oa(e);return Ee.warn(`Failed to intercept a GraphQL request at "${e.method} ${i}": anonymous GraphQL operations are not supported.

Consider naming this operation or using "graphql.operation()" request handler to intercept GraphQL requests regardless of their operation name/type. Read more: https://mswjs.io/docs/api/graphql/operation      `),!1}const t=Du(e.url,this.endpoint),a=this.info.operationType==="all"||r.operationType===this.info.operationType,n=this.info.operationName instanceof RegExp?this.info.operationName.test(r.operationName||""):r.operationName===this.info.operationName;return t.matches&&a&&n}log(e,r,t){const a=Mp(e),n=Ip(r),i=Rp(r.status),o=t?.operationName?`${t?.operationType} ${t?.operationName}`:`anonymous ${t?.operationType}`;console.groupCollapsed(Ee.formatMessage("%s %s (%c%s%c)"),Lp(),`${o}`,`color:${i}`,`${r.status} ${r.statusText}`,"color:inherit"),console.log("Request:",a),console.log("Handler:",this),console.log("Response:",n),console.groupEnd()}},Yy=3,Qy=4,$p=.5;function Xy(e){return e.reduce((r,t)=>(t instanceof ku&&r.rest.push(t),t instanceof $n&&r.graphql.push(t),r),{rest:[],graphql:[]})}function Zy(){return(e,r)=>{const{path:t,method:a}=r.info;if(t instanceof RegExp||a instanceof RegExp)return 1/0;const i=bu(e.method,a)?$p:0,o=Oa(e);return(0,Tp.default)(o,t)-i}}function eg(e){return(r,t)=>{if(typeof e.operationName>"u")return 1/0;const{operationType:a,operationName:n}=t.info;if(typeof n!="string")return 1/0;const o=e.operationType===a?$p:0;return(0,Tp.default)(e.operationName,n)-o}}function rg(e,r,t){return r.reduce((n,i)=>{const o=t(e,i);return n.concat([[o,i]])},[]).sort(([n],[i])=>n-i).filter(([n])=>n<=Yy).slice(0,Qy).map(([,n])=>n)}function tg(e){return e.length>1?`Did you mean to request one of the following resources instead?

${e.map(r=>`  • ${r.info.header}`).join(`
`)}`:`Did you mean to request "${e[0].info.header}" instead?`}function ag(e,r,t="warn"){const a=Hp(()=>Np(e));function n(){const u=Xy(r),s=a?u.graphql:u.rest,l=rg(e,s,a?eg(a):Zy());return l.length>0?tg(l):""}function i(){const u=Oa(e),s=a?`${a.operationType} ${a.operationName} (${e.method} ${u})`:`${e.method} ${u}`,l=n();return["captured a request without a matching request handler:",`  • ${s}`,l,`If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/getting-started/mocks`].filter(Boolean).join(`

`)}function o(u){const s=i();switch(u){case"error":throw Ee.error("Error: %s",s),new Error(Ee.formatMessage('Cannot bypass a request when using the "error" strategy for the "onUnhandledRequest" option.'));case"warn":{Ee.warn("Warning: %s",s);break}case"bypass":break;default:throw new Error(Ee.formatMessage('Failed to react to an unhandled request: unknown strategy "%s". Please provide one of the supported strategies ("bypass", "warn", "error") or a custom callback function as the value of the "onUnhandledRequest" option.',u))}}if(typeof t=="function"){t(e,{warning:o.bind(null,"warn"),error:o.bind(null,"error")});return}o(t)}var wl=Co;function ng(e,r){wl.store.add({...e,url:e.url.toString()},r),wl.store.persist()}async function Au(e,r,t,a,n){var i,o,u,s,l,c;if(a.emit("request:start",e),e.headers.get("x-msw-bypass")==="true"){a.emit("request:end",e),(i=n?.onPassthroughResponse)==null||i.call(n,e);return}const[d,p]=await(0,Ay.until)(()=>wy(e,r,n?.resolutionContext));if(d)throw a.emit("unhandledException",d,e),d;const{handler:h,response:g}=p;if(!h){ag(e,r,t.onUnhandledRequest),a.emit("request:unhandled",e),a.emit("request:end",e),(o=n?.onPassthroughResponse)==null||o.call(n,e);return}if(!g){Ee.warn(`Expected response resolver to return a mocked response Object, but got %s. The original response is going to be used instead.

  • %s
    %s`,g,h.info.header,h.info.callFrame),a.emit("request:end",e),(u=n?.onPassthroughResponse)==null||u.call(n,e);return}if(g.passthrough){a.emit("request:end",e),(s=n?.onPassthroughResponse)==null||s.call(n,e);return}ng(e,g),a.emit("request:match",e);const b=p,F=((l=n?.transformResponse)==null?void 0:l.call(n,g))||g;return(c=n?.onMockedResponse)==null||c.call(n,F,b),a.emit("request:end",e),F}var Cl=pr;async function Wp(e){return{status:e.status,statusText:e.statusText,headers:(0,Cl.flattenHeadersObject)((0,Cl.headersToObject)(e.headers)),body:await e.clone().text()}}var ig=(e,r)=>async(t,a)=>{var n;const i=new dy(t.ports[0]),o=ky(a.payload);try{await Au(o,e.requestHandlers,r,e.emitter,{transformResponse:og,onPassthroughResponse(){i.postMessage("NOT_FOUND")},async onMockedResponse(u,{handler:s,publicRequest:l,parsedRequest:c}){if(u.body instanceof ReadableStream)throw new Error(Ee.formatMessage('Failed to construct a mocked response with a "ReadableStream" body: mocked streams are not supported. Follow https://github.com/mswjs/msw/issues/1336 for more details.'));const d=new Response(u.body,u),p=d.clone(),h=await d.arrayBuffer(),g=u.body==null?null:h;i.postMessage("MOCK_RESPONSE",{...u,body:g},[h]),r.quiet||e.emitter.once("response:mocked",async()=>{s.log(l,await Wp(p),c)})}})}catch(u){if(u instanceof Cp){i.postMessage("NETWORK_ERROR",{name:u.name,message:u.message});return}u instanceof Error&&(Ee.error(`Uncaught exception in the request handler for "%s %s":

%s

This exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses`,o.method,o.url,(n=u.stack)!=null?n:u),i.postMessage("MOCK_RESPONSE",{status:500,statusText:"Request Handler Error",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:u.name,message:u.message,stack:u.stack})}))}};function og(e){return{status:e.status,statusText:e.statusText,headers:e.headers.all(),body:e.body,delay:e.delay}}async function ug(e,r){e.workerChannel.send("INTEGRITY_CHECK_REQUEST");const{payload:t}=await e.events.once("INTEGRITY_CHECK_RESPONSE");if(t!=="3d6b9f06410d179a7f7404d4bf4c3c70")throw new Error(`Currently active Service Worker (${t}) is behind the latest published one (3d6b9f06410d179a7f7404d4bf4c3c70).`);return r}var Sl=Jr;function sg(e){const r=window.XMLHttpRequest.prototype.send;window.XMLHttpRequest.prototype.send=function(...a){(0,Sl.until)(()=>e).then(()=>{window.XMLHttpRequest.prototype.send=r,this.send(...a)})};const t=window.fetch;window.fetch=async(...a)=>(await(0,Sl.until)(()=>e),window.fetch=t,window.fetch(...a))}function lg(e){return(r,t)=>{var a;const{payload:n}=t;if((a=n.type)!=null&&a.includes("opaque"))return;const i=new Response(n.body||null,n);i.headers.get("x-powered-by")==="msw"?e.emitter.emit("response:mocked",i,n.requestId):e.emitter.emit("response:bypass",i,n.requestId)}}function cg(e,r){!r?.quiet&&!location.href.startsWith(e.scope)&&Ee.warn(`Cannot intercept requests on this page because it's outside of the worker's scope ("${e.scope}"). If you wish to mock API requests on this page, you must resolve this scope issue.

- (Recommended) Register the worker at the root level ("/") of your application.
- Set the "Service-Worker-Allowed" response header to allow out-of-scope workers.`)}var dg=e=>function(t,a){const i=(async()=>{e.events.removeAllListeners(),e.workerChannel.on("REQUEST",ig(e,t)),e.workerChannel.on("RESPONSE",lg(e));const o=await ly(t.serviceWorker.url,t.serviceWorker.options,t.findWorker),[u,s]=o;if(!u){const c=a?.findWorker?Ee.formatMessage(`Failed to locate the Service Worker registration using a custom "findWorker" predicate.

Please ensure that the custom predicate properly locates the Service Worker registration at "%s".
More details: https://mswjs.io/docs/api/setup-worker/start#findworker
`,t.serviceWorker.url):Ee.formatMessage(`Failed to locate the Service Worker registration.

This most likely means that the worker script URL "%s" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.

Please consider using a custom "serviceWorker.url" option to point to the actual worker script location, or a custom "findWorker" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,t.serviceWorker.url,location.host);throw new Error(c)}e.worker=u,e.registration=s,e.events.addListener(window,"beforeunload",()=>{u.state!=="redundant"&&e.workerChannel.send("CLIENT_CLOSED"),window.clearInterval(e.keepAliveInterval)});const[l]=await(0,oy.until)(()=>ug(e,u));return l&&Ee.error(`Detected outdated Service Worker: ${l.message}

The mocking is still enabled, but it's highly recommended that you update your Service Worker by running:

$ npx msw init <PUBLIC_DIR>

This is necessary to ensure that the Service Worker is in sync with the library to guarantee its stability.
If this message still persists after updating, please report an issue: https://github.com/open-draft/msw/issues      `),e.keepAliveInterval=window.setInterval(()=>e.workerChannel.send("KEEPALIVE_REQUEST"),5e3),cg(s,e.startOptions),s})().then(async o=>{const u=o.installing||o.waiting;return u&&await new Promise(s=>{u.addEventListener("statechange",()=>{if(u.state==="activated")return s()})}),await cy(e,t).catch(s=>{throw new Error(`Failed to enable mocking: ${s?.message}`)}),o});return t.waitUntilReady&&sg(i),i};function Vp(e={}){e.quiet||console.log(`%c${Ee.formatMessage("Mocking disabled.")}`,"color:orangered;font-weight:bold;")}var pg=e=>function(){var t;if(!e.isMockingEnabled){Ee.warn('Found a redundant "worker.stop()" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this "worker.stop()" call.');return}e.workerChannel.send("MOCK_DEACTIVATE"),e.isMockingEnabled=!1,window.clearInterval(e.keepAliveInterval),Vp({quiet:(t=e.startOptions)==null?void 0:t.quiet})},mg={serviceWorker:{url:"/mockServiceWorker.js",options:null},quiet:!1,waitUntilReady:!0,onUnhandledRequest:"warn",findWorker(e,r){return e===r}},Fg=gn,hg=A0(),fg=I0();function yg(e){return new Response(e.body,{status:e.status,statusText:e.statusText,headers:e.headers})}function gg(e,r){const t=new Fg.BatchInterceptor({name:"fallback",interceptors:[new hg.FetchInterceptor,new fg.XMLHttpRequestInterceptor]});return t.on("request",async a=>{const n=new xa(a.url,{...a,body:await a.arrayBuffer()}),i=await Au(n,e.requestHandlers,r,e.emitter,{transformResponse(o){return{status:o.status,statusText:o.statusText,headers:o.headers.all(),body:o.body,delay:o.delay}},onMockedResponse(o,{handler:u,publicRequest:s,parsedRequest:l}){r.quiet||e.emitter.once("response:mocked",async c=>{u.log(s,await Wp(c),l)})}});i&&a.respondWith(i)}),t.on("response",(a,n)=>{if(!a.id)return;const i=yg(n);n.headers.get("x-powered-by")==="msw"?e.emitter.emit("response:mocked",i,a.id):e.emitter.emit("response:bypass",i,a.id)}),t.apply(),t}function bg(e){return async function(t){e.fallbackInterceptor=gg(e,t),wp({message:"Mocking enabled (fallback mode).",quiet:t.quiet})}}function vg(e){return function(){var t,a;(t=e.fallbackInterceptor)==null||t.dispose(),Vp({quiet:(a=e.startOptions)==null?void 0:a.quiet})}}var Dg=Or,Tl=O0();function Eg(e,r){const t=e.emit;t._isPiped||(e.emit=function(a,...n){return r.emit(a,...n),t.call(this,a,...n)},e.emit._isPiped=!0)}function Bl(e){const r=[...e];return Object.freeze(r),r}var Up=class{constructor(...e){this.validateHandlers(...e),this.initialHandlers=Bl(e),this.currentHandlers=[...e],this.emitter=new Tl.Emitter,this.publicEmitter=new Tl.Emitter,Eg(this.emitter,this.publicEmitter),this.events=this.createLifeCycleEvents()}validateHandlers(...e){for(const r of e)(0,Dg.invariant)(!Array.isArray(r),Ee.formatMessage('Failed to construct "%s" given an Array of request handlers. Make sure you spread the request handlers when calling the respective setup function.'),this.constructor.name)}dispose(){this.emitter.removeAllListeners(),this.publicEmitter.removeAllListeners()}use(...e){this.currentHandlers.unshift(...e)}restoreHandlers(){this.currentHandlers.forEach(e=>{e.markAsSkipped(!1)})}resetHandlers(...e){this.currentHandlers=e.length>0?[...e]:[...this.initialHandlers]}listHandlers(){return Bl(this.currentHandlers)}createLifeCycleEvents(){return{on:(...e)=>this.publicEmitter.on(...e),removeListener:(...e)=>this.publicEmitter.removeListener(...e),removeAllListeners:(...e)=>this.publicEmitter.removeAllListeners(...e)}}},zp=class extends Up{constructor(...e){super(...e),this.startHandler=null,this.stopHandler=null,(0,ny.invariant)(!(0,iy.isNodeProcess)(),Ee.formatMessage("Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.")),this.listeners=[],this.context=this.createWorkerContext()}createWorkerContext(){const e={isMockingEnabled:!1,startOptions:null,worker:null,registration:null,requestHandlers:this.currentHandlers,emitter:this.emitter,workerChannel:{on:(r,t)=>{this.context.events.addListener(navigator.serviceWorker,"message",a=>{if(a.source!==this.context.worker)return;const n=a.data;n&&n.type===r&&t(a,n)})},send:r=>{var t;(t=this.context.worker)==null||t.postMessage(r)}},events:{addListener:(r,t,a)=>(r.addEventListener(t,a),this.listeners.push({eventType:t,target:r,callback:a}),()=>{r.removeEventListener(t,a)}),removeAllListeners:()=>{for(const{target:r,eventType:t,callback:a}of this.listeners)r.removeEventListener(t,a);this.listeners=[]},once:r=>{const t=[];return new Promise((a,n)=>{const i=o=>{try{const u=o.data;u.type===r&&a(u)}catch(u){n(u)}};t.push(this.context.events.addListener(navigator.serviceWorker,"message",i),this.context.events.addListener(navigator.serviceWorker,"messageerror",n))}).finally(()=>{t.forEach(a=>a())})}},useFallbackMode:!("serviceWorker"in navigator)||location.protocol==="file:"};return Object.defineProperties(e,{requestHandlers:{get:()=>this.currentHandlers}}),this.startHandler=e.useFallbackMode?bg(e):dg(e),this.stopHandler=e.useFallbackMode?vg(e):pg(e),e}async start(e={}){return this.context.startOptions=jt(mg,e),await this.startHandler(this.context.startOptions,e)}printHandlers(){this.listHandlers().forEach(r=>{const{header:t,callFrame:a}=r.info,n=r.info.hasOwnProperty("operationType")?"[graphql]":"[rest]";console.groupCollapsed(`${n} ${t}`),a&&console.log(`Declaration: ${a}`),console.log("Handler:",r),console.groupEnd()})}stop(){super.dispose(),this.context.events.removeAllListeners(),this.context.emitter.removeAllListeners(),this.stopHandler()}};function kg(...e){return new zp(...e)}function Pr(e){return(r,t)=>new ku(e,r,t)}var Ag={all:Pr(/.+/),head:Pr("HEAD"),get:Pr("GET"),post:Pr("POST"),put:Pr("PUT"),delete:Pr("DELETE"),patch:Pr("PATCH"),options:Pr("OPTIONS")};function Fn(e,r){return(t,a)=>new $n(e,t,r,a)}function qp(e){return r=>new $n("all",new RegExp(".*"),e,r)}var wg={operation:qp("*"),query:Fn("query","*"),mutation:Fn("mutation","*")};function Cg(e){return{operation:qp(e),query:Fn("query",e),mutation:Fn("mutation",e)}}var Sg={...wg,link:Cg};ay();const Tg=(e,r)=>{};var da=(e=>(e.MOCK="mock",e.LOCAL="local",e.DEV="dev",e.PULL_REQUEST="PULL_REQUEST",e))(da||{});const Bg="mock",Ng=()=>"http://localhost:58080",Rg=()=>"http://localhost:8080";function Lg(){return Tg()||Bg}function Mg(){return""}function Ig(){return""}const Kp=(e,r)=>(e=e.endsWith("/")?e.substring(0,e.length-1):e,r=r.startsWith("/")?r.substring(1):r,`${e}/${r}`);Mg().split(";").forEach(e=>document.cookie=e.trim()+"; path=/");const xg=[Re.rest.all(Ne("/amt-tiltaksarrangor-bff/*"),async(e,r,t)=>Og(Ng(),e,r,t))],Og=async(e,r,t,a)=>{const n=`${Kp(e,r.url.pathname)}${r.url.search}`;try{const i=await a.fetch(n,{credentials:"include",method:r.method,body:r.body?JSON.stringify(r.body):null,headers:r.headers}),o=await i.text();return t(a.status(i.status),a.body(o))}catch(i){return console.error("Request to proxy failed",i),t(a.status(500))}},Jp=async(e,r,t,a)=>{try{const n=await a.fetch(e,{credentials:"include",method:r.method,body:r.body?JSON.stringify(r.body):null,headers:r.headers}),i=await n.text();return t(a.status(n.status),a.body(i))}catch(n){return console.error("Request to proxy failed",n),t(a.status(500))}},_g=[Re.rest.all(Ne("/amt-tiltaksarrangor-bff/*"),async(e,r,t)=>Gg(Rg(),e,r,t))],Pg=(e,r)=>e.startsWith(r)?e.substring(r.length,e.length):e,Gg=async(e,r,t,a)=>{const n=Pg(r.url.pathname,`${jl.baseUrl}amt-tiltaksarrangor-bff`),i=`${Kp(e,n)}${r.url.search}`;return r.headers.append("Authorization",Ig()),Jp(i,r,t,a)};var Hg=[{name:"Aegean Airlines",iataCode:"A3"},{name:"Aeroflot",iataCode:"SU"},{name:"Aerolineas Argentinas",iataCode:"AR"},{name:"Aeromexico",iataCode:"AM"},{name:"Air Algerie",iataCode:"AH"},{name:"Air Arabia",iataCode:"G9"},{name:"Air Canada",iataCode:"AC"},{name:"Air China",iataCode:"CA"},{name:"Air Europa",iataCode:"UX"},{name:"Air France-KLM",iataCode:"AF"},{name:"Air India",iataCode:"AI"},{name:"Air Mauritius",iataCode:"MK"},{name:"Air New Zealand",iataCode:"NZ"},{name:"Air Niugini",iataCode:"PX"},{name:"Air Tahiti",iataCode:"VT"},{name:"Air Tahiti Nui",iataCode:"TN"},{name:"Air Transat",iataCode:"TS"},{name:"AirAsia X",iataCode:"D7"},{name:"AirAsia",iataCode:"AK"},{name:"Aircalin",iataCode:"SB"},{name:"Alaska Airlines",iataCode:"AS"},{name:"Alitalia",iataCode:"AZ"},{name:"All Nippon Airways",iataCode:"NH"},{name:"Allegiant Air",iataCode:"G4"},{name:"American Airlines",iataCode:"AA"},{name:"Asiana Airlines",iataCode:"OZ"},{name:"Avianca",iataCode:"AV"},{name:"Azul Linhas Aereas Brasileiras",iataCode:"AD"},{name:"Azur Air",iataCode:"ZF"},{name:"Beijing Capital Airlines",iataCode:"JD"},{name:"Boliviana de Aviacion",iataCode:"OB"},{name:"British Airways",iataCode:"BA"},{name:"Cathay Pacific",iataCode:"CX"},{name:"Cebu Pacific Air",iataCode:"5J"},{name:"China Airlines",iataCode:"CI"},{name:"China Eastern Airlines",iataCode:"MU"},{name:"China Southern Airlines",iataCode:"CZ"},{name:"Condor",iataCode:"DE"},{name:"Copa Airlines",iataCode:"CM"},{name:"Delta Air Lines",iataCode:"DL"},{name:"Easyfly",iataCode:"VE"},{name:"EasyJet",iataCode:"U2"},{name:"EcoJet",iataCode:"8J"},{name:"Egyptair",iataCode:"MS"},{name:"El Al",iataCode:"LY"},{name:"Emirates Airlines",iataCode:"EK"},{name:"Ethiopian Airlines",iataCode:"ET"},{name:"Etihad Airways",iataCode:"EY"},{name:"EVA Air",iataCode:"BR"},{name:"Fiji Airways",iataCode:"FJ"},{name:"Finnair",iataCode:"AY"},{name:"Flybondi",iataCode:"FO"},{name:"Flydubai",iataCode:"FZ"},{name:"FlySafair",iataCode:"FA"},{name:"Frontier Airlines",iataCode:"F9"},{name:"Garuda Indonesia",iataCode:"GA"},{name:"Go First",iataCode:"G8"},{name:"Gol Linhas Aereas Inteligentes",iataCode:"G3"},{name:"Hainan Airlines",iataCode:"HU"},{name:"Hawaiian Airlines",iataCode:"HA"},{name:"IndiGo Airlines",iataCode:"6E"},{name:"Japan Airlines",iataCode:"JL"},{name:"Jeju Air",iataCode:"7C"},{name:"Jet2",iataCode:"LS"},{name:"JetBlue Airways",iataCode:"B6"},{name:"JetSMART",iataCode:"JA"},{name:"Juneyao Airlines",iataCode:"HO"},{name:"Kenya Airways",iataCode:"KQ"},{name:"Korean Air",iataCode:"KE"},{name:"Kulula.com",iataCode:"MN"},{name:"LATAM Airlines",iataCode:"LA"},{name:"Lion Air",iataCode:"JT"},{name:"LOT Polish Airlines",iataCode:"LO"},{name:"Lufthansa",iataCode:"LH"},{name:"Libyan Airlines",iataCode:"LN"},{name:"Linea Aerea Amaszonas",iataCode:"Z8"},{name:"Malaysia Airlines",iataCode:"MH"},{name:"Nordwind Airlines",iataCode:"N4"},{name:"Norwegian Air Shuttle",iataCode:"DY"},{name:"Oman Air",iataCode:"WY"},{name:"Pakistan International Airlines",iataCode:"PK"},{name:"Pegasus Airlines",iataCode:"PC"},{name:"Philippine Airlines",iataCode:"PR"},{name:"Qantas Group",iataCode:"QF"},{name:"Qatar Airways",iataCode:"QR"},{name:"Republic Airways",iataCode:"YX"},{name:"Royal Air Maroc",iataCode:"AT"},{name:"Ryanair",iataCode:"FR"},{name:"S7 Airlines",iataCode:"S7"},{name:"SAS",iataCode:"SK"},{name:"Satena",iataCode:"9R"},{name:"Saudia",iataCode:"SV"},{name:"Shandong Airlines",iataCode:"SC"},{name:"Sichuan Airlines",iataCode:"3U"},{name:"Singapore Airlines",iataCode:"SQ"},{name:"Sky Airline",iataCode:"H2"},{name:"SkyWest Airlines",iataCode:"OO"},{name:"South African Airways",iataCode:"SA"},{name:"Southwest Airlines",iataCode:"WN"},{name:"SpiceJet",iataCode:"SG"},{name:"Spirit Airlines",iataCode:"NK"},{name:"Spring Airlines",iataCode:"9S"},{name:"SriLankan Airlines",iataCode:"UL"},{name:"Star Peru",iataCode:"2I"},{name:"Sun Country Airlines",iataCode:"SY"},{name:"SunExpress",iataCode:"XQ"},{name:"TAP Air Portugal",iataCode:"TP"},{name:"Thai AirAsia",iataCode:"FD"},{name:"Thai Airways",iataCode:"TG"},{name:"TUI Airways",iataCode:"BY"},{name:"Tunisair",iataCode:"TU"},{name:"Turkish Airlines",iataCode:"TK"},{name:"Ukraine International",iataCode:"PS"},{name:"United Airlines",iataCode:"UA"},{name:"Ural Airlines",iataCode:"U6"},{name:"VietJet Air",iataCode:"VJ"},{name:"Vietnam Airlines",iataCode:"VN"},{name:"Virgin Atlantic Airways",iataCode:"VS"},{name:"Virgin Australia",iataCode:"VA"},{name:"VivaAerobus",iataCode:"VB"},{name:"VOEPASS Linhas Aereas",iataCode:"2Z"},{name:"Volaris",iataCode:"Y4"},{name:"WestJet",iataCode:"WS"},{name:"Wingo",iataCode:"P5"},{name:"Wizz Air",iataCode:"W6"}],jg=[{name:"Aerospatiale/BAC Concorde",iataTypeCode:"SSC"},{name:"Airbus A300",iataTypeCode:"AB3"},{name:"Airbus A310",iataTypeCode:"310"},{name:"Airbus A310-200",iataTypeCode:"312"},{name:"Airbus A310-300",iataTypeCode:"313"},{name:"Airbus A318",iataTypeCode:"318"},{name:"Airbus A319",iataTypeCode:"319"},{name:"Airbus A319neo",iataTypeCode:"31N"},{name:"Airbus A320",iataTypeCode:"320"},{name:"Airbus A320neo",iataTypeCode:"32N"},{name:"Airbus A321",iataTypeCode:"321"},{name:"Airbus A321neo",iataTypeCode:"32Q"},{name:"Airbus A330",iataTypeCode:"330"},{name:"Airbus A330-200",iataTypeCode:"332"},{name:"Airbus A330-300",iataTypeCode:"333"},{name:"Airbus A330-800neo",iataTypeCode:"338"},{name:"Airbus A330-900neo",iataTypeCode:"339"},{name:"Airbus A340",iataTypeCode:"340"},{name:"Airbus A340-200",iataTypeCode:"342"},{name:"Airbus A340-300",iataTypeCode:"343"},{name:"Airbus A340-500",iataTypeCode:"345"},{name:"Airbus A340-600",iataTypeCode:"346"},{name:"Airbus A350",iataTypeCode:"350"},{name:"Airbus A350-900",iataTypeCode:"359"},{name:"Airbus A350-1000",iataTypeCode:"351"},{name:"Airbus A380",iataTypeCode:"380"},{name:"Airbus A380-800",iataTypeCode:"388"},{name:"Antonov An-12",iataTypeCode:"ANF"},{name:"Antonov An-24",iataTypeCode:"AN4"},{name:"Antonov An-26",iataTypeCode:"A26"},{name:"Antonov An-28",iataTypeCode:"A28"},{name:"Antonov An-30",iataTypeCode:"A30"},{name:"Antonov An-32",iataTypeCode:"A32"},{name:"Antonov An-72",iataTypeCode:"AN7"},{name:"Antonov An-124 Ruslan",iataTypeCode:"A4F"},{name:"Antonov An-140",iataTypeCode:"A40"},{name:"Antonov An-148",iataTypeCode:"A81"},{name:"Antonov An-158",iataTypeCode:"A58"},{name:"Antonov An-225 Mriya",iataTypeCode:"A5F"},{name:"Boeing 707",iataTypeCode:"703"},{name:"Boeing 717",iataTypeCode:"717"},{name:"Boeing 720B",iataTypeCode:"B72"},{name:"Boeing 727",iataTypeCode:"727"},{name:"Boeing 727-100",iataTypeCode:"721"},{name:"Boeing 727-200",iataTypeCode:"722"},{name:"Boeing 737 MAX 7",iataTypeCode:"7M7"},{name:"Boeing 737 MAX 8",iataTypeCode:"7M8"},{name:"Boeing 737 MAX 9",iataTypeCode:"7M9"},{name:"Boeing 737 MAX 10",iataTypeCode:"7MJ"},{name:"Boeing 737",iataTypeCode:"737"},{name:"Boeing 737-100",iataTypeCode:"731"},{name:"Boeing 737-200",iataTypeCode:"732"},{name:"Boeing 737-300",iataTypeCode:"733"},{name:"Boeing 737-400",iataTypeCode:"734"},{name:"Boeing 737-500",iataTypeCode:"735"},{name:"Boeing 737-600",iataTypeCode:"736"},{name:"Boeing 737-700",iataTypeCode:"73G"},{name:"Boeing 737-800",iataTypeCode:"738"},{name:"Boeing 737-900",iataTypeCode:"739"},{name:"Boeing 747",iataTypeCode:"747"},{name:"Boeing 747-100",iataTypeCode:"741"},{name:"Boeing 747-200",iataTypeCode:"742"},{name:"Boeing 747-300",iataTypeCode:"743"},{name:"Boeing 747-400",iataTypeCode:"744"},{name:"Boeing 747-400D",iataTypeCode:"74J"},{name:"Boeing 747-8",iataTypeCode:"748"},{name:"Boeing 747SP",iataTypeCode:"74L"},{name:"Boeing 747SR",iataTypeCode:"74R"},{name:"Boeing 757",iataTypeCode:"757"},{name:"Boeing 757-200",iataTypeCode:"752"},{name:"Boeing 757-300",iataTypeCode:"753"},{name:"Boeing 767",iataTypeCode:"767"},{name:"Boeing 767-200",iataTypeCode:"762"},{name:"Boeing 767-300",iataTypeCode:"763"},{name:"Boeing 767-400",iataTypeCode:"764"},{name:"Boeing 777",iataTypeCode:"777"},{name:"Boeing 777-200",iataTypeCode:"772"},{name:"Boeing 777-200LR",iataTypeCode:"77L"},{name:"Boeing 777-300",iataTypeCode:"773"},{name:"Boeing 777-300ER",iataTypeCode:"77W"},{name:"Boeing 787",iataTypeCode:"787"},{name:"Boeing 787-8",iataTypeCode:"788"},{name:"Boeing 787-9",iataTypeCode:"789"},{name:"Boeing 787-10",iataTypeCode:"781"},{name:"Canadair Challenger",iataTypeCode:"CCJ"},{name:"Canadair CL-44",iataTypeCode:"CL4"},{name:"Canadair Regional Jet 100",iataTypeCode:"CR1"},{name:"Canadair Regional Jet 200",iataTypeCode:"CR2"},{name:"Canadair Regional Jet 700",iataTypeCode:"CR7"},{name:"Canadair Regional Jet 705",iataTypeCode:"CRA"},{name:"Canadair Regional Jet 900",iataTypeCode:"CR9"},{name:"Canadair Regional Jet 1000",iataTypeCode:"CRK"},{name:"De Havilland Canada DHC-2 Beaver",iataTypeCode:"DHP"},{name:"De Havilland Canada DHC-2 Turbo-Beaver",iataTypeCode:"DHR"},{name:"De Havilland Canada DHC-3 Otter",iataTypeCode:"DHL"},{name:"De Havilland Canada DHC-4 Caribou",iataTypeCode:"DHC"},{name:"De Havilland Canada DHC-6 Twin Otter",iataTypeCode:"DHT"},{name:"De Havilland Canada DHC-7 Dash 7",iataTypeCode:"DH7"},{name:"De Havilland Canada DHC-8-100 Dash 8 / 8Q",iataTypeCode:"DH1"},{name:"De Havilland Canada DHC-8-200 Dash 8 / 8Q",iataTypeCode:"DH2"},{name:"De Havilland Canada DHC-8-300 Dash 8 / 8Q",iataTypeCode:"DH3"},{name:"De Havilland Canada DHC-8-400 Dash 8Q",iataTypeCode:"DH4"},{name:"De Havilland DH.104 Dove",iataTypeCode:"DHD"},{name:"De Havilland DH.114 Heron",iataTypeCode:"DHH"},{name:"Douglas DC-3",iataTypeCode:"D3F"},{name:"Douglas DC-6",iataTypeCode:"D6F"},{name:"Douglas DC-8-50",iataTypeCode:"D8T"},{name:"Douglas DC-8-62",iataTypeCode:"D8L"},{name:"Douglas DC-8-72",iataTypeCode:"D8Q"},{name:"Douglas DC-9-10",iataTypeCode:"D91"},{name:"Douglas DC-9-20",iataTypeCode:"D92"},{name:"Douglas DC-9-30",iataTypeCode:"D93"},{name:"Douglas DC-9-40",iataTypeCode:"D94"},{name:"Douglas DC-9-50",iataTypeCode:"D95"},{name:"Douglas DC-10",iataTypeCode:"D10"},{name:"Douglas DC-10-10",iataTypeCode:"D1X"},{name:"Douglas DC-10-30",iataTypeCode:"D1Y"},{name:"Embraer 170",iataTypeCode:"E70"},{name:"Embraer 175",iataTypeCode:"E75"},{name:"Embraer 190",iataTypeCode:"E90"},{name:"Embraer 195",iataTypeCode:"E95"},{name:"Embraer E190-E2",iataTypeCode:"290"},{name:"Embraer E195-E2",iataTypeCode:"295"},{name:"Embraer EMB.110 Bandeirante",iataTypeCode:"EMB"},{name:"Embraer EMB.120 Brasilia",iataTypeCode:"EM2"},{name:"Embraer Legacy 600",iataTypeCode:"ER3"},{name:"Embraer Phenom 100",iataTypeCode:"EP1"},{name:"Embraer Phenom 300",iataTypeCode:"EP3"},{name:"Embraer RJ135",iataTypeCode:"ER3"},{name:"Embraer RJ140",iataTypeCode:"ERD"},{name:"Embraer RJ145 Amazon",iataTypeCode:"ER4"},{name:"Ilyushin IL18",iataTypeCode:"IL8"},{name:"Ilyushin IL62",iataTypeCode:"IL6"},{name:"Ilyushin IL76",iataTypeCode:"IL7"},{name:"Ilyushin IL86",iataTypeCode:"ILW"},{name:"Ilyushin IL96-300",iataTypeCode:"I93"},{name:"Ilyushin IL114",iataTypeCode:"I14"},{name:"Lockheed L-182 / 282 / 382 (L-100) Hercules",iataTypeCode:"LOH"},{name:"Lockheed L-188 Electra",iataTypeCode:"LOE"},{name:"Lockheed L-1011 Tristar",iataTypeCode:"L10"},{name:"Lockheed L-1049 Super Constellation",iataTypeCode:"L49"},{name:"McDonnell Douglas MD11",iataTypeCode:"M11"},{name:"McDonnell Douglas MD80",iataTypeCode:"M80"},{name:"McDonnell Douglas MD81",iataTypeCode:"M81"},{name:"McDonnell Douglas MD82",iataTypeCode:"M82"},{name:"McDonnell Douglas MD83",iataTypeCode:"M83"},{name:"McDonnell Douglas MD87",iataTypeCode:"M87"},{name:"McDonnell Douglas MD88",iataTypeCode:"M88"},{name:"McDonnell Douglas MD90",iataTypeCode:"M90"},{name:"Sukhoi Superjet 100-95",iataTypeCode:"SU9"},{name:"Tupolev Tu-134",iataTypeCode:"TU3"},{name:"Tupolev Tu-154",iataTypeCode:"TU5"},{name:"Tupolev Tu-204",iataTypeCode:"T20"},{name:"Yakovlev Yak-40",iataTypeCode:"YK4"},{name:"Yakovlev Yak-42",iataTypeCode:"YK2"}],$g=[{name:"Adelaide International Airport",iataCode:"ADL"},{name:"Adolfo Suarez Madrid-Barajas Airport",iataCode:"MAD"},{name:"Aeroparque Jorge Newbery Airport",iataCode:"AEP"},{name:"Afonso Pena International Airport",iataCode:"CWB"},{name:"Alfonso Bonilla Aragon International Airport",iataCode:"CLO"},{name:"Amsterdam Airport Schiphol",iataCode:"AMS"},{name:"Arturo Merino Benitez International Airport",iataCode:"SCL"},{name:"Auckland International Airport",iataCode:"AKL"},{name:"Beijing Capital International Airport",iataCode:"PEK"},{name:"Belem Val de Cans International Airport",iataCode:"BEL"},{name:"Belo Horizonte Tancredo Neves International Airport",iataCode:"CNF"},{name:"Berlin-Tegel Airport",iataCode:"TXL"},{name:"Bole International Airport",iataCode:"ADD"},{name:"Brasilia-Presidente Juscelino Kubitschek International Airport",iataCode:"BSB"},{name:"Brisbane International Airport",iataCode:"BNE"},{name:"Brussels Airport",iataCode:"BRU"},{name:"Cairns Airport",iataCode:"CNS"},{name:"Cairo International Airport",iataCode:"CAI"},{name:"Canberra Airport",iataCode:"CBR"},{name:"Capetown International Airport",iataCode:"CPT"},{name:"Charles de Gaulle International Airport",iataCode:"CDG"},{name:"Charlotte Douglas International Airport",iataCode:"CLT"},{name:"Chengdu Shuangliu International Airport",iataCode:"CTU"},{name:"Chhatrapati Shivaji International Airport",iataCode:"BOM"},{name:"Chicago O'Hare International Airport",iataCode:"ORD"},{name:"Chongqing Jiangbei International Airport",iataCode:"CKG"},{name:"Christchurch International Airport",iataCode:"CHC"},{name:"Copenhagen Kastrup Airport",iataCode:"CPH"},{name:"Dallas Fort Worth International Airport",iataCode:"DFW"},{name:"Daniel K. Inouye International Airport",iataCode:"HNL"},{name:"Denver International Airport",iataCode:"DEN"},{name:"Don Mueang International Airport",iataCode:"DMK"},{name:"Dubai International Airport",iataCode:"DXB"},{name:"Dublin Airport",iataCode:"DUB"},{name:"Dusseldorf Airport",iataCode:"DUS"},{name:"El Dorado International Airport",iataCode:"BOG"},{name:"Eleftherios Venizelos International Airport",iataCode:"ATH"},{name:"Faa'a International Airport",iataCode:"PPT"},{name:"Fort Lauderdale Hollywood International Airport",iataCode:"FLL"},{name:"Fortaleza Pinto Martins International Airport",iataCode:"FOR"},{name:"Frankfurt am Main Airport",iataCode:"FRA"},{name:"George Bush Intercontinental Houston Airport",iataCode:"IAH"},{name:"Gold Coast Airport",iataCode:"OOL"},{name:"Guarulhos - Governador Andre Franco Montoro International Airport",iataCode:"GRU"},{name:"Hartsfield-Jackson Atlanta International Airport",iataCode:"ATL"},{name:"Helsinki Vantaa Airport",iataCode:"HEL"},{name:"Hobart International Airport",iataCode:"HBA"},{name:"Hong Kong International Airport",iataCode:"HKG"},{name:"Houari Boumediene Airport",iataCode:"ALG"},{name:"Hurgada International Airport",iataCode:"HRG"},{name:"Incheon International Airport",iataCode:"ICN"},{name:"Indira Gandhi International Airport",iataCode:"DEL"},{name:"Istanbul Airport",iataCode:"IST"},{name:"Jacksons International Airport",iataCode:"POM"},{name:"Jeju International Airport",iataCode:"CJU"},{name:"John F Kennedy International Airport",iataCode:"JFK"},{name:"Jorge Chavez International Airport",iataCode:"LIM"},{name:"Jose Maria Cordova International Airport",iataCode:"MDE"},{name:"Josep Tarradellas Barcelona-El Prat Airport",iataCode:"BCN"},{name:"Kahului Airport",iataCode:"OGG"},{name:"King Abdulaziz International Airport",iataCode:"JED"},{name:"Kuala Lumpur International Airport",iataCode:"KUL"},{name:"Kunming Changshui International Airport",iataCode:"KMG"},{name:"La Tontouta International Airport",iataCode:"NOU"},{name:"Leonardo da Vinci-Fiumicino Airport",iataCode:"FCO"},{name:"London Heathrow Airport",iataCode:"LHR"},{name:"Los Angeles International Airport",iataCode:"LAX"},{name:"McCarran International Airport",iataCode:"LAS"},{name:"Melbourne International Airport",iataCode:"MEL"},{name:"Mexico City International Airport",iataCode:"MEX"},{name:"Miami International Airport",iataCode:"MIA"},{name:"Ministro Pistarini International Airport",iataCode:"EZE"},{name:"Minneapolis-St Paul International/Wold-Chamberlain Airport",iataCode:"MSP"},{name:"Mohammed V International Airport",iataCode:"CMN"},{name:"Moscow Domodedovo Airport",iataCode:"DME"},{name:"Munich Airport",iataCode:"MUC"},{name:"Murtala Muhammed International Airport",iataCode:"LOS"},{name:"Nadi International Airport",iataCode:"NAN"},{name:"Nairobi Jomo Kenyatta International Airport",iataCode:"NBO"},{name:"Narita International Airport",iataCode:"NRT"},{name:"Newark Liberty International Airport",iataCode:"EWR"},{name:"Ninoy Aquino International Airport",iataCode:"MNL"},{name:"Noumea Magenta Airport",iataCode:"GEA"},{name:"O. R. Tambo International Airport",iataCode:"JNB"},{name:"Orlando International Airport",iataCode:"MCO"},{name:"Oslo Lufthavn",iataCode:"OSL"},{name:"Perth Airport",iataCode:"PER"},{name:"Phoenix Sky Harbor International Airport",iataCode:"PHX"},{name:"Recife Guararapes-Gilberto Freyre International Airport",iataCode:"REC"},{name:"Rio de Janeiro Galeao International Airport",iataCode:"GIG"},{name:"Salgado Filho International Airport",iataCode:"POA"},{name:"Salvador Deputado Luis Eduardo Magalhaes International Airport",iataCode:"SSA"},{name:"San Francisco International Airport",iataCode:"SFO"},{name:"Santos Dumont Airport",iataCode:"SDU"},{name:"Sao Paulo-Congonhas Airport",iataCode:"CGH"},{name:"Seattle Tacoma International Airport",iataCode:"SEA"},{name:"Shanghai Hongqiao International Airport",iataCode:"SHA"},{name:"Shanghai Pudong International Airport",iataCode:"PVG"},{name:"Shenzhen Bao'an International Airport",iataCode:"SZX"},{name:"Sheremetyevo International Airport",iataCode:"SVO"},{name:"Singapore Changi Airport",iataCode:"SIN"},{name:"Soekarno-Hatta International Airport",iataCode:"CGK"},{name:'Stockholm-Arlanda Airport"',iataCode:"ARN"},{name:"Suvarnabhumi Airport",iataCode:"BKK"},{name:"Sydney Kingsford Smith International Airport",iataCode:"SYD"},{name:"Taiwan Taoyuan International Airport",iataCode:"TPE"},{name:"Tan Son Nhat International Airport",iataCode:"SGN"},{name:"Tokyo Haneda International Airport",iataCode:"HND"},{name:"Toronto Pearson International Airport",iataCode:"YYZ"},{name:"Tunis Carthage International Airport",iataCode:"TUN"},{name:"Vancouver International Airport",iataCode:"YVR"},{name:"Vienna International Airport",iataCode:"VIE"},{name:"Viracopos International Airport",iataCode:"VCP"},{name:"Vnukovo International Airport",iataCode:"VKO"},{name:"Wellington International Airport",iataCode:"WLG"},{name:"Xi'an Xianyang International Airport",iataCode:"XIY"},{name:"Zhukovsky International Airport",iataCode:"ZIA"},{name:"Zurich Airport",iataCode:"ZRH"}],Wg={airline:Hg,airplane:jg,airport:$g},Vg=Wg,Ug=["Giant panda","Spectacled bear","Sun bear","Sloth bear","American black bear","Asian black bear","Brown bear","Polar bear"],zg=["Red-throated Loon","Arctic Loon","Pacific Loon","Common Loon","Yellow-billed Loon","Least Grebe","Pied-billed Grebe","Horned Grebe","Red-necked Grebe","Eared Grebe","Western Grebe","Clark's Grebe","Yellow-nosed Albatross","Shy Albatross","Black-browed Albatross","Wandering Albatross","Laysan Albatross","Black-footed Albatross","Short-tailed Albatross","Northern Fulmar","Herald Petrel","Murphy's Petrel","Mottled Petrel","Black-capped Petrel","Cook's Petrel","Stejneger's Petrel","White-chinned Petrel","Streaked Shearwater","Cory's Shearwater","Pink-footed Shearwater","Flesh-footed Shearwater","Greater Shearwater","Wedge-tailed Shearwater","Buller's Shearwater","Sooty Shearwater","Short-tailed Shearwater","Manx Shearwater","Black-vented Shearwater","Audubon's Shearwater","Little Shearwater","Wilson's Storm-Petrel","White-faced Storm-Petrel","European Storm-Petrel","Fork-tailed Storm-Petrel","Leach's Storm-Petrel","Ashy Storm-Petrel","Band-rumped Storm-Petrel","Wedge-rumped Storm-Petrel","Black Storm-Petrel","Least Storm-Petrel","White-tailed Tropicbird","Red-billed Tropicbird","Red-tailed Tropicbird","Masked Booby","Blue-footed Booby","Brown Booby","Red-footed Booby","Northern Gannet","American White Pelican","Brown Pelican","Brandt's Cormorant","Neotropic Cormorant","Double-crested Cormorant","Great Cormorant","Red-faced Cormorant","Pelagic Cormorant","Anhinga","Magnificent Frigatebird","Great Frigatebird","Lesser Frigatebird","American Bittern","Yellow Bittern","Least Bittern","Great Blue Heron","Great Egret","Chinese Egret","Little Egret","Western Reef-Heron","Snowy Egret","Little Blue Heron","Tricolored Heron","Reddish Egret","Cattle Egret","Green Heron","Black-crowned Night-Heron","Yellow-crowned Night-Heron","White Ibis","Scarlet Ibis","Glossy Ibis","White-faced Ibis","Roseate Spoonbill","Jabiru","Wood Stork","Black Vulture","Turkey Vulture","California Condor","Greater Flamingo","Black-bellied Whistling-Duck","Fulvous Whistling-Duck","Bean Goose","Pink-footed Goose","Greater White-fronted Goose","Lesser White-fronted Goose","Emperor Goose","Snow Goose","Ross's Goose","Canada Goose","Brant","Barnacle Goose","Mute Swan","Trumpeter Swan","Tundra Swan","Whooper Swan","Muscovy Duck","Wood Duck","Gadwall","Falcated Duck","Eurasian Wigeon","American Wigeon","American Black Duck","Mallard","Mottled Duck","Spot-billed Duck","Blue-winged Teal","Cinnamon Teal","Northern Shoveler","White-cheeked Pintail","Northern Pintail","Garganey","Baikal Teal","Green-winged Teal","Canvasback","Redhead","Common Pochard","Ring-necked Duck","Tufted Duck","Greater Scaup","Lesser Scaup","Steller's Eider","Spectacled Eider","King Eider","Common Eider","Harlequin Duck","Labrador Duck","Surf Scoter","White-winged Scoter","Black Scoter","Oldsquaw","Bufflehead","Common Goldeneye","Barrow's Goldeneye","Smew","Hooded Merganser","Common Merganser","Red-breasted Merganser","Masked Duck","Ruddy Duck","Osprey","Hook-billed Kite","Swallow-tailed Kite","White-tailed Kite","Snail Kite","Mississippi Kite","Bald Eagle","White-tailed Eagle","Steller's Sea-Eagle","Northern Harrier","Sharp-shinned Hawk","Cooper's Hawk","Northern Goshawk","Crane Hawk","Gray Hawk","Common Black-Hawk","Harris's Hawk","Roadside Hawk","Red-shouldered Hawk","Broad-winged Hawk","Short-tailed Hawk","Swainson's Hawk","White-tailed Hawk","Zone-tailed Hawk","Red-tailed Hawk","Ferruginous Hawk","Rough-legged Hawk","Golden Eagle","Collared Forest-Falcon","Crested Caracara","Eurasian Kestrel","American Kestrel","Merlin","Eurasian Hobby","Aplomado Falcon","Gyrfalcon","Peregrine Falcon","Prairie Falcon","Plain Chachalaca","Chukar","Himalayan Snowcock","Gray Partridge","Ring-necked Pheasant","Ruffed Grouse","Sage Grouse","Spruce Grouse","Willow Ptarmigan","Rock Ptarmigan","White-tailed Ptarmigan","Blue Grouse","Sharp-tailed Grouse","Greater Prairie-chicken","Lesser Prairie-chicken","Wild Turkey","Mountain Quail","Scaled Quail","California Quail","Gambel's Quail","Northern Bobwhite","Montezuma Quail","Yellow Rail","Black Rail","Corn Crake","Clapper Rail","King Rail","Virginia Rail","Sora","Paint-billed Crake","Spotted Rail","Purple Gallinule","Azure Gallinule","Common Moorhen","Eurasian Coot","American Coot","Limpkin","Sandhill Crane","Common Crane","Whooping Crane","Double-striped Thick-knee","Northern Lapwing","Black-bellied Plover","European Golden-Plover","American Golden-Plover","Pacific Golden-Plover","Mongolian Plover","Collared Plover","Snowy Plover","Wilson's Plover","Common Ringed Plover","Semipalmated Plover","Piping Plover","Little Ringed Plover","Killdeer","Mountain Plover","Eurasian Dotterel","Eurasian Oystercatcher","American Oystercatcher","Black Oystercatcher","Black-winged Stilt","Black-necked Stilt","American Avocet","Northern Jacana","Common Greenshank","Greater Yellowlegs","Lesser Yellowlegs","Marsh Sandpiper","Spotted Redshank","Wood Sandpiper","Green Sandpiper","Solitary Sandpiper","Willet","Wandering Tattler","Gray-tailed Tattler","Common Sandpiper","Spotted Sandpiper","Terek Sandpiper","Upland Sandpiper","Little Curlew","Eskimo Curlew","Whimbrel","Bristle-thighed Curlew","Far Eastern Curlew","Slender-billed Curlew","Eurasian Curlew","Long-billed Curlew","Black-tailed Godwit","Hudsonian Godwit","Bar-tailed Godwit","Marbled Godwit","Ruddy Turnstone","Black Turnstone","Surfbird","Great Knot","Red Knot","Sanderling","Semipalmated Sandpiper","Western Sandpiper","Red-necked Stint","Little Stint","Temminck's Stint","Long-toed Stint","Least Sandpiper","White-rumped Sandpiper","Baird's Sandpiper","Pectoral Sandpiper","Sharp-tailed Sandpiper","Purple Sandpiper","Rock Sandpiper","Dunlin","Curlew Sandpiper","Stilt Sandpiper","Spoonbill Sandpiper","Broad-billed Sandpiper","Buff-breasted Sandpiper","Ruff","Short-billed Dowitcher","Long-billed Dowitcher","Jack Snipe","Common Snipe","Pin-tailed Snipe","Eurasian Woodcock","American Woodcock","Wilson's Phalarope","Red-necked Phalarope","Red Phalarope","Oriental Pratincole","Great Skua","South Polar Skua","Pomarine Jaeger","Parasitic Jaeger","Long-tailed Jaeger","Laughing Gull","Franklin's Gull","Little Gull","Black-headed Gull","Bonaparte's Gull","Heermann's Gull","Band-tailed Gull","Black-tailed Gull","Mew Gull","Ring-billed Gull","California Gull","Herring Gull","Yellow-legged Gull","Thayer's Gull","Iceland Gull","Lesser Black-backed Gull","Slaty-backed Gull","Yellow-footed Gull","Western Gull","Glaucous-winged Gull","Glaucous Gull","Great Black-backed Gull","Sabine's Gull","Black-legged Kittiwake","Red-legged Kittiwake","Ross's Gull","Ivory Gull","Gull-billed Tern","Caspian Tern","Royal Tern","Elegant Tern","Sandwich Tern","Roseate Tern","Common Tern","Arctic Tern","Forster's Tern","Least Tern","Aleutian Tern","Bridled Tern","Sooty Tern","Large-billed Tern","White-winged Tern","Whiskered Tern","Black Tern","Brown Noddy","Black Noddy","Black Skimmer","Dovekie","Common Murre","Thick-billed Murre","Razorbill","Great Auk","Black Guillemot","Pigeon Guillemot","Long-billed Murrelet","Marbled Murrelet","Kittlitz's Murrelet","Xantus's Murrelet","Craveri's Murrelet","Ancient Murrelet","Cassin's Auklet","Parakeet Auklet","Least Auklet","Whiskered Auklet","Crested Auklet","Rhinoceros Auklet","Atlantic Puffin","Horned Puffin","Tufted Puffin","Rock Dove","Scaly-naped Pigeon","White-crowned Pigeon","Red-billed Pigeon","Band-tailed Pigeon","Oriental Turtle-Dove","European Turtle-Dove","Eurasian Collared-Dove","Spotted Dove","White-winged Dove","Zenaida Dove","Mourning Dove","Passenger Pigeon","Inca Dove","Common Ground-Dove","Ruddy Ground-Dove","White-tipped Dove","Key West Quail-Dove","Ruddy Quail-Dove","Budgerigar","Monk Parakeet","Carolina Parakeet","Thick-billed Parrot","White-winged Parakeet","Red-crowned Parrot","Common Cuckoo","Oriental Cuckoo","Black-billed Cuckoo","Yellow-billed Cuckoo","Mangrove Cuckoo","Greater Roadrunner","Smooth-billed Ani","Groove-billed Ani","Barn Owl","Flammulated Owl","Oriental Scops-Owl","Western Screech-Owl","Eastern Screech-Owl","Whiskered Screech-Owl","Great Horned Owl","Snowy Owl","Northern Hawk Owl","Northern Pygmy-Owl","Ferruginous Pygmy-Owl","Elf Owl","Burrowing Owl","Mottled Owl","Spotted Owl","Barred Owl","Great Gray Owl","Long-eared Owl","Short-eared Owl","Boreal Owl","Northern Saw-whet Owl","Lesser Nighthawk","Common Nighthawk","Antillean Nighthawk","Common Pauraque","Common Poorwill","Chuck-will's-widow","Buff-collared Nightjar","Whip-poor-will","Jungle Nightjar","Black Swift","White-collared Swift","Chimney Swift","Vaux's Swift","White-throated Needletail","Common Swift","Fork-tailed Swift","White-throated Swift","Antillean Palm Swift","Green Violet-ear","Green-breasted Mango","Broad-billed Hummingbird","White-eared Hummingbird","Xantus's Hummingbird","Berylline Hummingbird","Buff-bellied Hummingbird","Cinnamon Hummingbird","Violet-crowned Hummingbird","Blue-throated Hummingbird","Magnificent Hummingbird","Plain-capped Starthroat","Bahama Woodstar","Lucifer Hummingbird","Ruby-throated Hummingbird","Black-chinned Hummingbird","Anna's Hummingbird","Costa's Hummingbird","Calliope Hummingbird","Bumblebee Hummingbird","Broad-tailed Hummingbird","Rufous Hummingbird","Allen's Hummingbird","Elegant Trogon","Eared Trogon","Hoopoe","Ringed Kingfisher","Belted Kingfisher","Green Kingfisher","Eurasian Wryneck","Lewis's Woodpecker","Red-headed Woodpecker","Acorn Woodpecker","Gila Woodpecker","Golden-fronted Woodpecker","Red-bellied Woodpecker","Williamson's Sapsucker","Yellow-bellied Sapsucker","Red-naped Sapsucker","Red-breasted Sapsucker","Great Spotted Woodpecker","Ladder-backed Woodpecker","Nuttall's Woodpecker","Downy Woodpecker","Hairy Woodpecker","Strickland's Woodpecker","Red-cockaded Woodpecker","White-headed Woodpecker","Three-toed Woodpecker","Black-backed Woodpecker","Northern Flicker","Gilded Flicker","Pileated Woodpecker","Ivory-billed Woodpecker","Northern Beardless-Tyrannulet","Greenish Elaenia","Caribbean Elaenia","Tufted Flycatcher","Olive-sided Flycatcher","Greater Pewee","Western Wood-Pewee","Eastern Wood-Pewee","Yellow-bellied Flycatcher","Acadian Flycatcher","Alder Flycatcher","Willow Flycatcher","Least Flycatcher","Hammond's Flycatcher","Dusky Flycatcher","Gray Flycatcher","Pacific-slope Flycatcher","Cordilleran Flycatcher","Buff-breasted Flycatcher","Black Phoebe","Eastern Phoebe","Say's Phoebe","Vermilion Flycatcher","Dusky-capped Flycatcher","Ash-throated Flycatcher","Nutting's Flycatcher","Great Crested Flycatcher","Brown-crested Flycatcher","La Sagra's Flycatcher","Great Kiskadee","Sulphur-bellied Flycatcher","Variegated Flycatcher","Tropical Kingbird","Couch's Kingbird","Cassin's Kingbird","Thick-billed Kingbird","Western Kingbird","Eastern Kingbird","Gray Kingbird","Loggerhead Kingbird","Scissor-tailed Flycatcher","Fork-tailed Flycatcher","Rose-throated Becard","Masked Tityra","Brown Shrike","Loggerhead Shrike","Northern Shrike","White-eyed Vireo","Thick-billed Vireo","Bell's Vireo","Black-capped Vireo","Gray Vireo","Yellow-throated Vireo","Plumbeous Vireo","Cassin's Vireo","Blue-headed Vireo","Hutton's Vireo","Warbling Vireo","Philadelphia Vireo","Red-eyed Vireo","Yellow-green Vireo","Black-whiskered Vireo","Yucatan Vireo","Gray Jay","Steller's Jay","Blue Jay","Green Jay","Brown Jay","Florida Scrub-Jay","Island Scrub-Jay","Western Scrub-Jay","Mexican Jay","Pinyon Jay","Clark's Nutcracker","Black-billed Magpie","Yellow-billed Magpie","Eurasian Jackdaw","American Crow","Northwestern Crow","Tamaulipas Crow","Fish Crow","Chihuahuan Raven","Common Raven","Sky Lark","Horned Lark","Purple Martin","Cuban Martin","Gray-breasted Martin","Southern Martin","Brown-chested Martin","Tree Swallow","Violet-green Swallow","Bahama Swallow","Northern Rough-winged Swallow","Bank Swallow","Cliff Swallow","Cave Swallow","Barn Swallow","Common House-Martin","Carolina Chickadee","Black-capped Chickadee","Mountain Chickadee","Mexican Chickadee","Chestnut-backed Chickadee","Boreal Chickadee","Gray-headed Chickadee","Bridled Titmouse","Oak Titmouse","Juniper Titmouse","Tufted Titmouse","Verdin","Bushtit","Red-breasted Nuthatch","White-breasted Nuthatch","Pygmy Nuthatch","Brown-headed Nuthatch","Brown Creeper","Cactus Wren","Rock Wren","Canyon Wren","Carolina Wren","Bewick's Wren","House Wren","Winter Wren","Sedge Wren","Marsh Wren","American Dipper","Red-whiskered Bulbul","Golden-crowned Kinglet","Ruby-crowned Kinglet","Middendorff's Grasshopper-Warbler","Lanceolated Warbler","Wood Warbler","Dusky Warbler","Arctic Warbler","Blue-gray Gnatcatcher","California Gnatcatcher","Black-tailed Gnatcatcher","Black-capped Gnatcatcher","Narcissus Flycatcher","Mugimaki Flycatcher","Red-breasted Flycatcher","Siberian Flycatcher","Gray-spotted Flycatcher","Asian Brown Flycatcher","Siberian Rubythroat","Bluethroat","Siberian Blue Robin","Red-flanked Bluetail","Northern Wheatear","Stonechat","Eastern Bluebird","Western Bluebird","Mountain Bluebird","Townsend's Solitaire","Veery","Gray-cheeked Thrush","Bicknell's Thrush","Swainson's Thrush","Hermit Thrush","Wood Thrush","Eurasian Blackbird","Eyebrowed Thrush","Dusky Thrush","Fieldfare","Redwing","Clay-colored Robin","White-throated Robin","Rufous-backed Robin","American Robin","Varied Thrush","Aztec Thrush","Wrentit","Gray Catbird","Black Catbird","Northern Mockingbird","Bahama Mockingbird","Sage Thrasher","Brown Thrasher","Long-billed Thrasher","Bendire's Thrasher","Curve-billed Thrasher","California Thrasher","Crissal Thrasher","Le Conte's Thrasher","Blue Mockingbird","European Starling","Crested Myna","Siberian Accentor","Yellow Wagtail","Citrine Wagtail","Gray Wagtail","White Wagtail","Black-backed Wagtail","Tree Pipit","Olive-backed Pipit","Pechora Pipit","Red-throated Pipit","American Pipit","Sprague's Pipit","Bohemian Waxwing","Cedar Waxwing","Gray Silky-flycatcher","Phainopepla","Olive Warbler","Bachman's Warbler","Blue-winged Warbler","Golden-winged Warbler","Tennessee Warbler","Orange-crowned Warbler","Nashville Warbler","Virginia's Warbler","Colima Warbler","Lucy's Warbler","Crescent-chested Warbler","Northern Parula","Tropical Parula","Yellow Warbler","Chestnut-sided Warbler","Magnolia Warbler","Cape May Warbler","Black-throated Blue Warbler","Yellow-rumped Warbler","Black-throated Gray Warbler","Golden-cheeked Warbler","Black-throated Green Warbler","Townsend's Warbler","Hermit Warbler","Blackburnian Warbler","Yellow-throated Warbler","Grace's Warbler","Pine Warbler","Kirtland's Warbler","Prairie Warbler","Palm Warbler","Bay-breasted Warbler","Blackpoll Warbler","Cerulean Warbler","Black-and-white Warbler","American Redstart","Prothonotary Warbler","Worm-eating Warbler","Swainson's Warbler","Ovenbird","Northern Waterthrush","Louisiana Waterthrush","Kentucky Warbler","Connecticut Warbler","Mourning Warbler","MacGillivray's Warbler","Common Yellowthroat","Gray-crowned Yellowthroat","Hooded Warbler","Wilson's Warbler","Canada Warbler","Red-faced Warbler","Painted Redstart","Slate-throated Redstart","Fan-tailed Warbler","Golden-crowned Warbler","Rufous-capped Warbler","Yellow-breasted Chat","Bananaquit","Hepatic Tanager","Summer Tanager","Scarlet Tanager","Western Tanager","Flame-colored Tanager","Stripe-headed Tanager","White-collared Seedeater","Yellow-faced Grassquit","Black-faced Grassquit","Olive Sparrow","Green-tailed Towhee","Spotted Towhee","Eastern Towhee","Canyon Towhee","California Towhee","Abert's Towhee","Rufous-winged Sparrow","Cassin's Sparrow","Bachman's Sparrow","Botteri's Sparrow","Rufous-crowned Sparrow","Five-striped Sparrow","American Tree Sparrow","Chipping Sparrow","Clay-colored Sparrow","Brewer's Sparrow","Field Sparrow","Worthen's Sparrow","Black-chinned Sparrow","Vesper Sparrow","Lark Sparrow","Black-throated Sparrow","Sage Sparrow","Lark Bunting","Savannah Sparrow","Grasshopper Sparrow","Baird's Sparrow","Henslow's Sparrow","Le Conte's Sparrow","Nelson's Sharp-tailed Sparrow","Saltmarsh Sharp-tailed Sparrow","Seaside Sparrow","Fox Sparrow","Song Sparrow","Lincoln's Sparrow","Swamp Sparrow","White-throated Sparrow","Harris's Sparrow","White-crowned Sparrow","Golden-crowned Sparrow","Dark-eyed Junco","Yellow-eyed Junco","McCown's Longspur","Lapland Longspur","Smith's Longspur","Chestnut-collared Longspur","Pine Bunting","Little Bunting","Rustic Bunting","Yellow-breasted Bunting","Gray Bunting","Pallas's Bunting","Reed Bunting","Snow Bunting","McKay's Bunting","Crimson-collared Grosbeak","Northern Cardinal","Pyrrhuloxia","Yellow Grosbeak","Rose-breasted Grosbeak","Black-headed Grosbeak","Blue Bunting","Blue Grosbeak","Lazuli Bunting","Indigo Bunting","Varied Bunting","Painted Bunting","Dickcissel","Bobolink","Red-winged Blackbird","Tricolored Blackbird","Tawny-shouldered Blackbird","Eastern Meadowlark","Western Meadowlark","Yellow-headed Blackbird","Rusty Blackbird","Brewer's Blackbird","Common Grackle","Boat-tailed Grackle","Great-tailed Grackle","Shiny Cowbird","Bronzed Cowbird","Brown-headed Cowbird","Black-vented Oriole","Orchard Oriole","Hooded Oriole","Streak-backed Oriole","Spot-breasted Oriole","Altamira Oriole","Audubon's Oriole","Baltimore Oriole","Bullock's Oriole","Scott's Oriole","Common Chaffinch","Brambling","Gray-crowned Rosy-Finch","Black Rosy-Finch","Brown-capped Rosy-Finch","Pine Grosbeak","Common Rosefinch","Purple Finch","Cassin's Finch","House Finch","Red Crossbill","White-winged Crossbill","Common Redpoll","Hoary Redpoll","Eurasian Siskin","Pine Siskin","Lesser Goldfinch","Lawrence's Goldfinch","American Goldfinch","Oriental Greenfinch","Eurasian Bullfinch","Evening Grosbeak","Hawfinch","House Sparrow","Eurasian Tree Sparrow"],qg=["Abyssinian","American Bobtail","American Curl","American Shorthair","American Wirehair","Balinese","Bengal","Birman","Bombay","British Shorthair","Burmese","Chartreux","Chausie","Cornish Rex","Devon Rex","Donskoy","Egyptian Mau","Exotic Shorthair","Havana","Highlander","Himalayan","Japanese Bobtail","Korat","Kurilian Bobtail","LaPerm","Maine Coon","Manx","Minskin","Munchkin","Nebelung","Norwegian Forest Cat","Ocicat","Ojos Azules","Oriental","Persian","Peterbald","Pixiebob","Ragdoll","Russian Blue","Savannah","Scottish Fold","Selkirk Rex","Serengeti","Siberian","Siamese","Singapura","Snowshoe","Sokoke","Somali","Sphynx","Thai","Tonkinese","Toyger","Turkish Angora","Turkish Van"],Kg=["Blue Whale","Fin Whale","Sei Whale","Sperm Whale","Bryde’s whale","Omura’s whale","Humpback whale","Long-Beaked Common Dolphin","Short-Beaked Common Dolphin","Bottlenose Dolphin","Indo-Pacific Bottlenose Dolphin","Northern Rightwhale Dolphin","Southern Rightwhale Dolphin","Tucuxi","Costero","Indo-Pacific Hump-backed Dolphin","Chinese White Dolphin","Atlantic Humpbacked Dolphin","Atlantic Spotted Dolphin","Clymene Dolphin","Pantropical Spotted Dolphin","Spinner Dolphin","Striped Dolphin","Rough-Toothed Dolphin","Chilean Dolphin","Commerson’s Dolphin","Heaviside’s Dolphin","Hector’s Dolphin","Risso’s Dolphin","Fraser’s Dolphin","Atlantic White-Sided Dolphin","Dusky Dolphin","Hourglass Dolphin","Pacific White-Sided Dolphin","Peale’s Dolphin","White-Beaked Dolphin","Australian Snubfin Dolphin","Irrawaddy Dolphin","Melon-headed Whale","Killer Whale (Orca)","Pygmy Killer Whale","False Killer Whale","Long-finned Pilot Whale","Short-finned Pilot Whale","Guiana Dolphin","Burrunan Dolphin","Australian humpback Dolphin","Amazon River Dolphin","Chinese River Dolphin","Ganges River Dolphin","La Plata Dolphin","Southern Bottlenose Whale","Longman's Beaked Whale","Arnoux's Beaked Whale"],Jg=["Aberdeen Angus","Abergele","Abigar","Abondance","Abyssinian Shorthorned Zebu","Aceh","Achham","Adamawa","Adaptaur","Afar","Africangus","Afrikaner","Agerolese","Alambadi","Alatau","Albanian","Albera","Alderney","Alentejana","Aleutian wild cattle","Aliad Dinka","Alistana-Sanabresa","Allmogekor","Alur","American","American Angus","American Beef Friesian","American Brown Swiss","American Milking Devon","American White Park","Amerifax","Amrit Mahal","Amsterdam Island cattle","Anatolian Black","Andalusian Black","Andalusian Blond","Andalusian Grey","Angeln","Angoni","Ankina","Ankole","Ankole-Watusi","Aracena","Arado","Argentine Criollo","Argentine Friesian","Armorican","Arouquesa","Arsi","Asturian Mountain","Asturian Valley","Aubrac","Aulie-Ata","Aure et Saint-Girons","Australian Braford","Australian Brangus","Australian Charbray","Australian Friesian Sahiwal","Australian Lowline","Australian Milking Zebu","Australian Shorthorn","Austrian Simmental","Austrian Yellow","Avétonou","Avileña-Negra Ibérica","Aweil Dinka","Ayrshire","Azaouak","Azebuado","Azerbaijan Zebu","Azores","Bedit","Breed","Bachaur cattle","Baherie cattle","Bakosi cattle","Balancer","Baoule","Bargur cattle","Barrosã","Barzona","Bazadaise","Beef Freisian","Beefalo","Beefmaker","Beefmaster","Begayt","Belgian Blue","Belgian Red","Belgian Red Pied","Belgian White-and-Red","Belmont Red","Belted Galloway","Bernese","Berrenda cattle","Betizu","Bianca Modenese","Blaarkop","Black Angus","Black Baldy","Black Hereford","Blanca Cacereña","Blanco Orejinegro BON","Blonde d'Aquitaine","Blue Albion","Blue Grey","Bohuskulla","Bonsmara","Boran","Boškarin","Braford","Brahman","Brahmousin","Brangus","Braunvieh","Brava","British White","British Friesian","Brown Carpathian","Brown Caucasian","Brown Swiss","Bue Lingo","Burlina","Buša cattle","Butana cattle","Bushuyev","Cedit","Cachena","Caldelana","Camargue","Campbell Island cattle","Canadian Speckle Park","Canadienne","Canaria","Canchim","Caracu","Cárdena Andaluza","Carinthian Blondvieh","Carora","Charbray","Charolais","Chateaubriand","Chiangus","Chianina","Chillingham cattle","Chinese Black Pied","Cholistani","Coloursided White Back","Commercial","Corriente","Corsican cattle","Costeño con Cuernos","Crioulo Lageano","Dedit","Dajal","Dangi cattle","Danish Black-Pied","Danish Jersey","Danish Red","Deep Red cattle","Deoni","Devon","Dexter cattle","Dhanni","Doayo cattle","Doela","Drakensberger","Dølafe","Droughtmaster","Dulong'","Dutch Belted","Dutch Friesian","Dwarf Lulu","Eedit","East Anatolian Red","Eastern Finncattle","Eastern Red Polled","Enderby Island cattle","English Longhorn","Ennstaler Bergscheck","Estonian Holstein","Estonian Native","Estonian Red cattle","Évolène cattle","Fedit","Fēng Cattle","Finnish Ayrshire","Finncattle","Finnish Holstein-Friesian","Fjäll","Fleckvieh","Florida Cracker cattle","Fogera","French Simmental","Fribourgeoise","Friesian Red and White","Fulani Sudanese","Gedit","Galician Blond","Galloway cattle","Gangatiri","Gaolao","Garvonesa","Gascon cattle","Gelbvieh","Georgian Mountain cattle","German Angus","German Black Pied cattle","German Black Pied Dairy","German Red Pied","Gir","Glan cattle","Gloucester","Gobra","Greek Shorthorn","Greek Steppe","Greyman cattle","Gudali","Guernsey cattle","Guzerá","Hedit","Hallikar4","Hanwoo","Hariana cattle","Hartón del Valle","Harzer Rotvieh","Hays Converter","Heck cattle","Hereford","Herens","Hybridmaster","Highland cattle","Hinterwald","Holando-Argentino","Holstein Friesian cattle","Horro","Huáng Cattle","Hungarian Grey","Iedit","Iberian cattle","Icelandic","Illawarra cattle","Improved Red and White","Indo-Brazilian","Irish Moiled","Israeli Holstein","Israeli Red","Istoben cattle","Istrian cattle","Jedit","Jamaica Black","Jamaica Hope","Jamaica Red","Japanese Brown","Jarmelista","Javari cattle","Jersey cattle","Jutland cattle","Kedit","Kabin Buri cattle","Kalmyk cattle","Kangayam","Kankrej","Kamphaeng Saen cattle","Karan Swiss","Kasaragod Dwarf cattle","Kathiawadi","Kazakh Whiteheaded","Kenana cattle","Kenkatha cattle","Kerry cattle","Kherigarh","Khillari cattle","Kholomogory","Korat Wagyu","Kostroma cattle","Krishna Valley cattle","Kuri","Kurgan cattle","Ledit","La Reina cattle","Lakenvelder cattle","Lampurger","Latvian Blue","Latvian Brown","Latvian Danish Red","Lebedyn","Levantina","Limia cattle","Limousin","Limpurger","Lincoln Red","Lineback","Lithuanian Black-and-White","Lithuanian Light Grey","Lithuanian Red","Lithuanian White-Backed","Lohani cattle","Lourdais","Lucerna cattle","Luing","Medit","Madagascar Zebu","Madura","Maine-Anjou","Malnad Gidda","Malvi","Mandalong Special","Mantequera Leonesa","Maramureş Brown","Marchigiana","Maremmana","Marinhoa","Maronesa","Masai","Mashona","Menorquina","Mertolenga","Meuse-Rhine-Issel","Mewati","Milking Shorthorn","Minhota","Mirandesa","Mirkadim","Mocăniţă","Mollie","Monchina","Mongolian","Montbéliarde","Morucha","Muturu","Murboden","Murnau-Werdenfels","Murray Grey","Nedit","Nagori","N'Dama","Negra Andaluza","Nelore","Nguni","Nimari","Normande","North Bengal Grey","Northern Finncattle","Northern Shorthorn","Norwegian Red","Oedit]","Ongole","Original Simmental","Pedit","Pajuna","Palmera","Pantaneiro","Parda Alpina","Parthenaise","Pasiega","Pembroke","Philippine Native","Pie Rouge des Plaines","Piedmontese cattle","Pineywoods","Pinzgauer","Pirenaica","Podolac","Podolica","Polish Black-and-White","Polish Red","Polled Hereford","Poll Shorthorn","Polled Shorthorn","Ponwar","Preta","Punganur","Pulikulam","Pustertaler Sprinzen","Qedit","Qinchaun","Queensland Miniature Boran","Redit","Ramo Grande","Randall","Raramuri Criollo","Rathi","Rätisches Grauvieh","Raya","Red Angus","Red Brangus","Red Chittagong","Red Fulani","Red Gorbatov","Red Holstein","Red Kandhari","Red Mingrelian","Red Poll","Red Polled Østland","Red Sindhi","Retinta","Riggit Galloway","Ringamåla","Rohjan","Romagnola","Romanian Bălţata","Romanian Steppe Gray","Romosinuano","Russian Black Pied","RX3","Sedit","Sahiwal","Salers","Salorn","Sanga","Sanhe","Santa Cruz","Santa Gertrudis","Sayaguesa","Schwyz","Selembu","Senepol","Serbian Pied","Serbian Steppe","Sheko","Shetland","Shorthorn","Siboney de Cuba","Simbrah","Simford","Simmental","Siri","South Devon","Spanish Fighting Bull","Speckle Park","Square Meater","Sussex","Swedish Friesian","Swedish Polled","Swedish Red Pied","Swedish Red Polled","Swedish Red-and-White","Tedit","Tabapuã","Tarentaise","Tasmanian Grey","Tauros","Telemark","Texas Longhorn","Texon","Thai Black","Thai Fighting Bull","Thai Friesian","Thai Milking Zebu","Tharparkar","Tswana","Tudanca","Tuli","Tulim","Turkish Grey Steppe","Tux-Zillertal","Tyrol Grey","Uedit","Umblachery","Ukrainian Grey","Vedit","Valdostana Castana","Valdostana Pezzata Nera","Valdostana Pezzata Rossa","Väneko","Vaynol","Vechur8","Vestland Fjord","Vestland Red Polled","Vianesa","Volinian Beef","Vorderwald","Vosgienne","Wedit","Wagyu","Waguli","Wangus","Welsh Black","Western Finncattle","White Cáceres","White Fulani","White Lamphun","White Park","Whitebred Shorthorn","Xedit","Xingjiang Brown","Yedit","Yakutian","Yanbian","Yanhuang","Yurino","Zedit","Żubroń","Zebu"],Yg=["Alligator mississippiensis","Chinese Alligator","Black Caiman","Broad-snouted Caiman","Spectacled Caiman","Yacare Caiman","Cuvier’s Dwarf Caiman","Schneider’s Smooth-fronted Caiman","African Slender-snouted Crocodile","American Crocodile","Australian Freshwater Crocodile","Cuban Crocodile","Dwarf Crocodile","Morelet’s Crocodile","Mugger Crocodile","New Guinea Freshwater Crocodile","Nile Crocodile","West African Crocodile","Orinoco Crocodile","Philippine Crocodile","Saltwater Crocodile","Siamese Crocodile","Gharial","Tomistoma"],Qg=["Affenpinscher","Afghan Hound","Aidi","Airedale Terrier","Akbash","Akita","Alano Español","Alapaha Blue Blood Bulldog","Alaskan Husky","Alaskan Klee Kai","Alaskan Malamute","Alopekis","Alpine Dachsbracke","American Bulldog","American Bully","American Cocker Spaniel","American English Coonhound","American Foxhound","American Hairless Terrier","American Pit Bull Terrier","American Staffordshire Terrier","American Water Spaniel","Andalusian Hound","Anglo-Français de Petite Vénerie","Appenzeller Sennenhund","Ariegeois","Armant","Armenian Gampr dog","Artois Hound","Australian Cattle Dog","Australian Kelpie","Australian Shepherd","Australian Stumpy Tail Cattle Dog","Australian Terrier","Austrian Black and Tan Hound","Austrian Pinscher","Azawakh","Bakharwal dog","Banjara Hound","Barbado da Terceira","Barbet","Basenji","Basque Shepherd Dog","Basset Artésien Normand","Basset Bleu de Gascogne","Basset Fauve de Bretagne","Basset Hound","Bavarian Mountain Hound","Beagle","Beagle-Harrier","Belgian Shepherd","Bearded Collie","Beauceron","Bedlington Terrier","Bergamasco Shepherd","Berger Picard","Bernese Mountain Dog","Bhotia","Bichon Frisé","Billy","Black and Tan Coonhound","Black Norwegian Elkhound","Black Russian Terrier","Black Mouth Cur","Bloodhound","Blue Lacy","Blue Picardy Spaniel","Bluetick Coonhound","Boerboel","Bohemian Shepherd","Bolognese","Border Collie","Border Terrier","Borzoi","Bosnian Coarse-haired Hound","Boston Terrier","Bouvier des Ardennes","Bouvier des Flandres","Boxer","Boykin Spaniel","Bracco Italiano","Braque d'Auvergne","Braque de l'Ariège","Braque du Bourbonnais","Braque Francais","Braque Saint-Germain","Briard","Briquet Griffon Vendéen","Brittany","Broholmer","Bruno Jura Hound","Brussels Griffon","Bucovina Shepherd Dog","Bull Arab","Bull Terrier","Bulldog","Bullmastiff","Bully Kutta","Burgos Pointer","Cairn Terrier","Campeiro Bulldog","Canaan Dog","Canadian Eskimo Dog","Cane Corso","Cane di Oropa","Cane Paratore","Cantabrian Water Dog","Can de Chira","Cão da Serra de Aires","Cão de Castro Laboreiro","Cão de Gado Transmontano","Cão Fila de São Miguel","Cardigan Welsh Corgi","Carea Castellano Manchego","Carolina Dog","Carpathian Shepherd Dog","Catahoula Leopard Dog","Catalan Sheepdog","Caucasian Shepherd Dog","Cavalier King Charles Spaniel","Central Asian Shepherd Dog","Cesky Fousek","Cesky Terrier","Chesapeake Bay Retriever","Chien Français Blanc et Noir","Chien Français Blanc et Orange","Chien Français Tricolore","Chihuahua","Chilean Terrier","Chinese Chongqing Dog","Chinese Crested Dog","Chinook","Chippiparai","Chongqing dog","Chortai","Chow Chow","Cimarrón Uruguayo","Cirneco dell'Etna","Clumber Spaniel","Colombian fino hound","Coton de Tulear","Cretan Hound","Croatian Sheepdog","Curly-Coated Retriever","Cursinu","Czechoslovakian Wolfdog","Dachshund","Dalmatian","Dandie Dinmont Terrier","Danish-Swedish Farmdog","Denmark Feist","Dingo","Doberman Pinscher","Dogo Argentino","Dogo Guatemalteco","Dogo Sardesco","Dogue Brasileiro","Dogue de Bordeaux","Drentse Patrijshond","Drever","Dunker","Dutch Shepherd","Dutch Smoushond","East Siberian Laika","East European Shepherd","English Cocker Spaniel","English Foxhound","English Mastiff","English Setter","English Shepherd","English Springer Spaniel","English Toy Terrier","Entlebucher Mountain Dog","Estonian Hound","Estrela Mountain Dog","Eurasier","Field Spaniel","Fila Brasileiro","Finnish Hound","Finnish Lapphund","Finnish Spitz","Flat-Coated Retriever","French Bulldog","French Spaniel","Galgo Español","Galician Shepherd Dog","Garafian Shepherd","Gascon Saintongeois","Georgian Shepherd","German Hound","German Longhaired Pointer","German Pinscher","German Roughhaired Pointer","German Shepherd Dog","German Shorthaired Pointer","German Spaniel","German Spitz","German Wirehaired Pointer","Giant Schnauzer","Glen of Imaal Terrier","Golden Retriever","Gończy Polski","Gordon Setter","Grand Anglo-Français Blanc et Noir","Grand Anglo-Français Blanc et Orange","Grand Anglo-Français Tricolore","Grand Basset Griffon Vendéen","Grand Bleu de Gascogne","Grand Griffon Vendéen","Great Dane","Greater Swiss Mountain Dog","Greek Harehound","Greek Shepherd","Greenland Dog","Greyhound","Griffon Bleu de Gascogne","Griffon Fauve de Bretagne","Griffon Nivernais","Gull Dong","Gull Terrier","Hällefors Elkhound","Hamiltonstövare","Hanover Hound","Harrier","Havanese","Hierran Wolfdog","Hokkaido","Hovawart","Huntaway","Hygen Hound","Ibizan Hound","Icelandic Sheepdog","Indian pariah dog","Indian Spitz","Irish Red and White Setter","Irish Setter","Irish Terrier","Irish Water Spaniel","Irish Wolfhound","Istrian Coarse-haired Hound","Istrian Shorthaired Hound","Italian Greyhound","Jack Russell Terrier","Jagdterrier","Japanese Chin","Japanese Spitz","Japanese Terrier","Jindo","Jonangi","Kai Ken","Kaikadi","Kangal Shepherd Dog","Kanni","Karakachan dog","Karelian Bear Dog","Kars","Karst Shepherd","Keeshond","Kerry Beagle","Kerry Blue Terrier","King Charles Spaniel","King Shepherd","Kintamani","Kishu","Kokoni","Kombai","Komondor","Kooikerhondje","Koolie","Koyun dog","Kromfohrländer","Kuchi","Kuvasz","Labrador Retriever","Lagotto Romagnolo","Lakeland Terrier","Lancashire Heeler","Landseer","Lapponian Herder","Large Münsterländer","Leonberger","Levriero Sardo","Lhasa Apso","Lithuanian Hound","Löwchen","Lupo Italiano","Mackenzie River Husky","Magyar agár","Mahratta Greyhound","Maltese","Manchester Terrier","Maremmano-Abruzzese Sheepdog","McNab dog","Miniature American Shepherd","Miniature Bull Terrier","Miniature Fox Terrier","Miniature Pinscher","Miniature Schnauzer","Molossus of Epirus","Montenegrin Mountain Hound","Mountain Cur","Mountain Feist","Mucuchies","Mudhol Hound","Mudi","Neapolitan Mastiff","New Guinea Singing Dog","New Zealand Heading Dog","Newfoundland","Norfolk Terrier","Norrbottenspets","Northern Inuit Dog","Norwegian Buhund","Norwegian Elkhound","Norwegian Lundehund","Norwich Terrier","Nova Scotia Duck Tolling Retriever","Old Croatian Sighthound","Old Danish Pointer","Old English Sheepdog","Old English Terrier","Olde English Bulldogge","Otterhound","Pachon Navarro","Pampas Deerhound","Paisley Terrier","Papillon","Parson Russell Terrier","Pastore della Lessinia e del Lagorai","Patagonian Sheepdog","Patterdale Terrier","Pekingese","Pembroke Welsh Corgi","Perro Majorero","Perro de Pastor Mallorquin","Perro de Presa Canario","Perro de Presa Mallorquin","Peruvian Inca Orchid","Petit Basset Griffon Vendéen","Petit Bleu de Gascogne","Phalène","Pharaoh Hound","Phu Quoc Ridgeback","Picardy Spaniel","Plummer Terrier","Plott Hound","Podenco Canario","Podenco Valenciano","Pointer","Poitevin","Polish Greyhound","Polish Hound","Polish Lowland Sheepdog","Polish Tatra Sheepdog","Pomeranian","Pont-Audemer Spaniel","Poodle","Porcelaine","Portuguese Podengo","Portuguese Pointer","Portuguese Water Dog","Posavac Hound","Pražský Krysařík","Pshdar Dog","Pudelpointer","Pug","Puli","Pumi","Pungsan Dog","Pyrenean Mastiff","Pyrenean Mountain Dog","Pyrenean Sheepdog","Rafeiro do Alentejo","Rajapalayam","Rampur Greyhound","Rat Terrier","Ratonero Bodeguero Andaluz","Ratonero Mallorquin","Ratonero Murciano de Huerta","Ratonero Valenciano","Redbone Coonhound","Rhodesian Ridgeback","Romanian Mioritic Shepherd Dog","Romanian Raven Shepherd Dog","Rottweiler","Rough Collie","Russian Spaniel","Russian Toy","Russo-European Laika","Saarloos Wolfdog","Sabueso Español","Saint Bernard","Saint Hubert Jura Hound","Saint-Usuge Spaniel","Saluki","Samoyed","Sapsali","Sarabi dog","Šarplaninac","Schapendoes","Schillerstövare","Schipperke","Schweizer Laufhund","Schweizerischer Niederlaufhund","Scottish Deerhound","Scottish Terrier","Sealyham Terrier","Segugio dell'Appennino","Segugio Italiano","Segugio Maremmano","Seppala Siberian Sleddog","Serbian Hound","Serbian Tricolour Hound","Serrano Bulldog","Shar Pei","Shetland Sheepdog","Shiba Inu","Shih Tzu","Shikoku","Shiloh Shepherd","Siberian Husky","Silken Windhound","Silky Terrier","Sinhala Hound","Skye Terrier","Sloughi","Slovakian Wirehaired Pointer","Slovenský Cuvac","Slovenský Kopov","Smalandstövare","Small Greek domestic dog","Small Münsterländer","Smooth Collie","Smooth Fox Terrier","Soft-Coated Wheaten Terrier","South Russian Ovcharka","Spanish Mastiff","Spanish Water Dog","Spinone Italiano","Sporting Lucas Terrier","Sardinian Shepherd Dog","Stabyhoun","Staffordshire Bull Terrier","Standard Schnauzer","Stephens Stock","Styrian Coarse-haired Hound","Sussex Spaniel","Swedish Elkhound","Swedish Lapphund","Swedish Vallhund","Swedish White Elkhound","Taigan","Taiwan Dog","Tamaskan Dog","Teddy Roosevelt Terrier","Telomian","Tenterfield Terrier","Terrier Brasileiro","Thai Bangkaew Dog","Thai Ridgeback","Tibetan Mastiff","Tibetan Spaniel","Tibetan Terrier","Tornjak","Tosa","Toy Fox Terrier","Toy Manchester Terrier","Transylvanian Hound","Treeing Cur","Treeing Feist","Treeing Tennessee Brindle","Treeing Walker Coonhound","Trigg Hound","Tyrolean Hound","Vikhan","Villano de Las Encartaciones","Villanuco de Las Encartaciones","Vizsla","Volpino Italiano","Weimaraner","Welsh Sheepdog","Welsh Springer Spaniel","Welsh Terrier","West Highland White Terrier","West Siberian Laika","Westphalian Dachsbracke","Wetterhoun","Whippet","White Shepherd","White Swiss Shepherd Dog","Wire Fox Terrier","Wirehaired Pointing Griffon","Wirehaired Vizsla","Xiasi Dog","Xoloitzcuintli","Yakutian Laika","Yorkshire Terrier"],Xg=["Grass carp","Peruvian anchoveta","Silver carp","Common carp","Asari","Japanese littleneck","Filipino Venus","Japanese cockle","Alaska pollock","Nile tilapia","Whiteleg shrimp","Bighead carp","Skipjack tuna","Catla","Crucian carp","Atlantic salmon","Atlantic herring","Chub mackerel","Rohu","Yellowfin tuna","Japanese anchovy","Largehead hairtail","Atlantic cod","European pilchard","Capelin","Jumbo flying squid","Milkfish","Atlantic mackerel","Rainbow trout","Araucanian herring","Wuchang bream","Gulf menhaden","Indian oil sardine","Black carp","European anchovy","Northern snakehead","Pacific cod","Pacific saury","Pacific herring","Bigeye tuna","Chilean jack mackerel","Yellow croaker","Haddock","Gazami crab","Amur catfish","Japanese common catfish","European sprat","Pink salmon","Mrigal carp","Channel catfish","Blood cockle","Blue whiting","Hilsa shad","Daggertooth pike conger","California pilchard","Cape horse mackerel","Pacific anchoveta","Japanese flying squid","Pollock","Chinese softshell turtle","Kawakawa","Indian mackerel","Asian swamp eel","Argentine hake","Short mackerel","Southern rough shrimp","Southern African anchovy","Pond loach","Iridescent shark","Mandarin fish","Chinese perch","Nile perch","Round sardinella","Japanese pilchard","Bombay-duck","Yellowhead catfish","Korean bullhead","Narrow-barred Spanish mackerel","Albacore","Madeiran sardinella","Bonga shad","Silver cyprinid","Longtail tuna","Atlantic menhaden","North Pacific hake","Atlantic horse mackerel","Japanese jack mackerel","Pacific thread herring","Bigeye scad","Yellowstripe scad","Chum salmon","Blue swimming crab","Pacific sand lance","Pacific sandlance","Goldstripe sardinella"],Zg=["American Albino","Abaco Barb","Abtenauer","Abyssinian","Aegidienberger","Akhal-Teke","Albanian Horse","Altai Horse","Altèr Real","American Cream Draft","American Indian Horse","American Paint Horse","American Quarter Horse","American Saddlebred","American Warmblood","Andalusian Horse","Andravida Horse","Anglo-Arabian","Anglo-Arabo-Sardo","Anglo-Kabarda","Appaloosa","AraAppaloosa","Arabian Horse","Ardennes Horse","Arenberg-Nordkirchen","Argentine Criollo","Asian wild Horse","Assateague Horse","Asturcón","Augeron","Australian Brumby","Australian Draught Horse","Australian Stock Horse","Austrian Warmblood","Auvergne Horse","Auxois","Azerbaijan Horse","Azteca Horse","Baise Horse","Bale","Balearic Horse","Balikun Horse","Baluchi Horse","Banker Horse","Barb Horse","Bardigiano","Bashkir Curly","Basque Mountain Horse","Bavarian Warmblood","Belgian Half-blood","Belgian Horse","Belgian Warmblood ","Bhutia Horse","Black Forest Horse","Blazer Horse","Boerperd","Borana","Boulonnais Horse","Brabant","Brandenburger","Brazilian Sport Horse","Breton Horse","Brumby","Budyonny Horse","Burguete Horse","Burmese Horse","Byelorussian Harness Horse","Calabrese Horse","Camargue Horse","Camarillo White Horse","Campeiro","Campolina","Canadian Horse","Canadian Pacer","Carolina Marsh Tacky","Carthusian Horse","Caspian Horse","Castilian Horse","Castillonnais","Catria Horse","Cavallo Romano della Maremma Laziale","Cerbat Mustang","Chickasaw Horse","Chilean Corralero","Choctaw Horse","Cleveland Bay","Clydesdale Horse","Cob","Coldblood Trotter","Colonial Spanish Horse","Colorado Ranger","Comtois Horse","Corsican Horse","Costa Rican Saddle Horse","Cretan Horse","Criollo Horse","Croatian Coldblood","Cuban Criollo","Cumberland Island Horse","Curly Horse","Czech Warmblood","Daliboz","Danish Warmblood","Danube Delta Horse","Dole Gudbrandsdal","Don","Dongola Horse","Draft Trotter","Dutch Harness Horse","Dutch Heavy Draft","Dutch Warmblood","Dzungarian Horse","East Bulgarian","East Friesian Horse","Estonian Draft","Estonian Horse","Falabella","Faroese","Finnhorse","Fjord Horse","Fleuve","Florida Cracker Horse","Foutanké","Frederiksborg Horse","Freiberger","French Trotter","Friesian Cross","Friesian Horse","Friesian Sporthorse","Furioso-North Star","Galiceño","Galician Pony","Gelderland Horse","Georgian Grande Horse","German Warmblood","Giara Horse","Gidran","Groningen Horse","Gypsy Horse","Hackney Horse","Haflinger","Hanoverian Horse","Heck Horse","Heihe Horse","Henson Horse","Hequ Horse","Hirzai","Hispano-Bretón","Holsteiner Horse","Horro","Hungarian Warmblood","Icelandic Horse","Iomud","Irish Draught","Irish Sport Horse sometimes called Irish Hunter","Italian Heavy Draft","Italian Trotter","Jaca Navarra","Jeju Horse","Jutland Horse","Kabarda Horse","Kafa","Kaimanawa Horses","Kalmyk Horse","Karabair","Karabakh Horse","Karachai Horse","Karossier","Kathiawari","Kazakh Horse","Kentucky Mountain Saddle Horse","Kiger Mustang","Kinsky Horse","Kisber Felver","Kiso Horse","Kladruber","Knabstrupper","Konik","Kundudo","Kustanair","Kyrgyz Horse","Latvian Horse","Lipizzan","Lithuanian Heavy Draught","Lokai","Losino Horse","Lusitano","Lyngshest","M'Bayar","M'Par","Mallorquín","Malopolski","Mangalarga","Mangalarga Marchador","Maremmano","Marismeño Horse","Marsh Tacky","Marwari Horse","Mecklenburger","Međimurje Horse","Menorquín","Mérens Horse","Messara Horse","Metis Trotter","Mezőhegyesi Sport Horse","Miniature Horse","Misaki Horse","Missouri Fox Trotter","Monchina","Mongolian Horse","Mongolian Wild Horse","Monterufolino","Morab","Morgan Horse","Mountain Pleasure Horse","Moyle Horse","Murakoz Horse","Murgese","Mustang Horse","Namib Desert Horse","Nangchen Horse","National Show Horse","Nez Perce Horse","Nivernais Horse","Nokota Horse","Noma","Nonius Horse","Nooitgedachter","Nordlandshest","Noriker Horse","Norman Cob","North American Single-Footer Horse","North Swedish Horse","Norwegian Coldblood Trotter","Norwegian Fjord","Novokirghiz","Oberlander Horse","Ogaden","Oldenburg Horse","Orlov trotter","Ostfriesen","Paint","Pampa Horse","Paso Fino","Pentro Horse","Percheron","Persano Horse","Peruvian Paso","Pintabian","Pleven Horse","Poitevin Horse","Posavac Horse","Pottok","Pryor Mountain Mustang","Przewalski's Horse","Pura Raza Española","Purosangue Orientale","Qatgani","Quarab","Quarter Horse","Racking Horse","Retuerta Horse","Rhenish German Coldblood","Rhinelander Horse","Riwoche Horse","Rocky Mountain Horse","Romanian Sporthorse","Rottaler","Russian Don","Russian Heavy Draft","Russian Trotter","Saddlebred","Salerno Horse","Samolaco Horse","San Fratello Horse","Sarcidano Horse","Sardinian Anglo-Arab","Schleswig Coldblood","Schwarzwälder Kaltblut","Selale","Sella Italiano","Selle Français","Shagya Arabian","Shan Horse","Shire Horse","Siciliano Indigeno","Silesian Horse","Sokolsky Horse","Sorraia","South German Coldblood","Soviet Heavy Draft","Spanish Anglo-Arab","Spanish Barb","Spanish Jennet Horse","Spanish Mustang","Spanish Tarpan","Spanish-Norman Horse","Spiti Horse","Spotted Saddle Horse","Standardbred Horse","Suffolk Punch","Swedish Ardennes","Swedish coldblood trotter","Swedish Warmblood","Swiss Warmblood","Taishū Horse","Takhi","Tawleed","Tchernomor","Tennessee Walking Horse","Tersk Horse","Thoroughbred","Tiger Horse","Tinker Horse","Tolfetano","Tori Horse","Trait Du Nord","Trakehner","Tsushima","Tuigpaard","Ukrainian Riding Horse","Unmol Horse","Uzunyayla","Ventasso Horse","Virginia Highlander","Vlaamperd","Vladimir Heavy Draft","Vyatka","Waler","Waler Horse","Walkaloosa","Warlander","Warmblood","Welsh Cob","Westphalian Horse","Wielkopolski","Württemberger","Xilingol Horse","Yakutian Horse","Yili Horse","Yonaguni Horse","Zaniskari","Žemaitukas","Zhemaichu","Zweibrücker"],eb=["Acacia-ants","Acorn-plum gall","Aerial yellowjacket","Africanized honey bee","Allegheny mound ant","Almond stone wasp","Ant","Arboreal ant","Argentine ant","Asian paper wasp","Baldfaced hornet","Bee","Bigheaded ant","Black and yellow mud dauber","Black carpenter ant","Black imported fire ant","Blue horntail woodwasp","Blue orchard bee","Braconid wasp","Bumble bee","Carpenter ant","Carpenter wasp","Chalcid wasp","Cicada killer","Citrus blackfly parasitoid","Common paper wasp","Crazy ant","Cuckoo wasp","Cynipid gall wasp","Eastern Carpenter bee","Eastern yellowjacket","Elm sawfly","Encyrtid wasp","Erythrina gall wasp","Eulophid wasp","European hornet","European imported fire ant","False honey ant","Fire ant","Forest bachac","Forest yellowjacket","German yellowjacket","Ghost ant","Giant ichneumon wasp","Giant resin bee","Giant wood wasp","Golden northern bumble bee","Golden paper wasp","Gouty oak gall","Grass Carrying Wasp","Great black wasp","Great golden digger wasp","Hackberry nipple gall parasitoid","Honey bee","Horned oak gall","Horse guard wasp","Hunting wasp","Ichneumonid wasp","Keyhole wasp","Knopper gall","Large garden bumble bee","Large oak-apple gall","Leafcutting bee","Little fire ant","Little yellow ant","Long-horned bees","Long-legged ant","Macao paper wasp","Mallow bee","Marble gall","Mossyrose gall wasp","Mud-daubers","Multiflora rose seed chalcid","Oak apple gall wasp","Oak rough bulletgall wasp","Oak saucer gall","Oak shoot sawfly","Odorous house ant","Orange-tailed bumble bee","Orangetailed potter wasp","Oriental chestnut gall wasp","Paper wasp","Pavement ant","Pigeon tremex","Pip gall wasp","Prairie yellowjacket","Pteromalid wasp","Pyramid ant","Raspberry Horntail","Red ant","Red carpenter ant","Red harvester ant","Red imported fire ant","Red wasp","Red wood ant","Red-tailed wasp","Reddish carpenter ant","Rough harvester ant","Sawfly parasitic wasp","Scale parasitoid","Silky ant","Sirex woodwasp","Siricid woodwasp","Smaller yellow ant","Southeastern blueberry bee","Southern fire ant","Southern yellowjacket","Sphecid wasp","Stony gall","Sweat bee","Texas leafcutting ant","Tiphiid wasp","Torymid wasp","Tramp ant","Valentine ant","Velvet ant","Vespid wasp","Weevil parasitoid","Western harvester ant","Western paper wasp","Western thatching ant","Western yellowjacket","White-horned horntail","Willow shoot sawfly","Woodwasp","Wool sower gall maker","Yellow and black potter wasp","Yellow Crazy Ant","Yellow-horned horntail"],rb=["Asiatic Lion","Barbary Lion","West African Lion","Northeast Congo Lion","Masai Lion","Transvaal lion","Cape lion"],tb=["American","American Chinchilla","American Fuzzy Lop","American Sable","Argente Brun","Belgian Hare","Beveren","Blanc de Hotot","Britannia Petite","Californian","Champagne D’Argent","Checkered Giant","Cinnamon","Crème D’Argent","Dutch","Dwarf Hotot","English Angora","English Lop","English Spot","Flemish Giant","Florida White","French Angora","French Lop","Giant Angora","Giant Chinchilla","Harlequin","Havana","Himalayan","Holland Lop","Jersey Wooly","Lilac","Lionhead","Mini Lop","Mini Rex","Mini Satin","Netherland Dwarf","New Zealand","Palomino","Polish","Rex","Rhinelander","Satin","Satin Angora","Silver","Silver Fox","Silver Marten","Standard Chinchilla","Tan","Thrianta"],ab=["Abrocoma","Abrocoma schistacea","Aconaemys","Aconaemys porteri","African brush-tailed porcupine","Andean mountain cavy","Argentine tuco-tuco","Ashy chinchilla rat","Asiatic brush-tailed porcupine","Atherurus","Azara's agouti","Azara's tuco-tuco","Bahia porcupine","Bathyergus","Bathyergus janetta","Bathyergus suillus","Bennett's chinchilla rat","Bicolored-spined porcupine","Black agouti","Black dwarf porcupine","Black-rumped agouti","Black-tailed hairy dwarf porcupine","Bolivian chinchilla rat","Bolivian tuco-tuco","Bonetto's tuco-tuco","Brandt's yellow-toothed cavy","Brazilian guinea pig","Brazilian porcupine","Brazilian tuco-tuco","Bridge's degu","Brown hairy dwarf porcupine","Budin's chinchilla rat, A. budini","Cape porcupine","Catamarca tuco-tuco","Cavia","Central American agouti","Chacoan tuco-tuco","Chilean rock rat","Chinchilla","Coendou","Coiban agouti","Colburn's tuco-tuco","Collared tuco-tuco","Common degu","Common yellow-toothed cavy","Conover's tuco-tuco","Coruro","Crested agouti","Crested porcupine","Cryptomys","Cryptomys bocagei","Cryptomys damarensis","Cryptomys foxi","Cryptomys hottentotus","Cryptomys mechowi","Cryptomys ochraceocinereus","Cryptomys zechi","Ctenomys","Cuniculus","Cuscomys","Cuscomys ashanika","Dactylomys","Dactylomys boliviensis","Dactylomys dactylinus","Dactylomys peruanus","Dasyprocta","Domestic guinea pig","Emily's tuco-tuco","Erethizon","Famatina chinchilla rat","Frosted hairy dwarf porcupine","Fukomys","Fukomys amatus","Fukomys anselli","Fukomys bocagei","Fukomys damarensis","Fukomys darlingi","Fukomys foxi","Fukomys ilariae","Fukomys kafuensis","Fukomys mechowii","Fukomys micklemi","Fukomys occlusus","Fukomys ochraceocinereus","Fukomys whytei","Fukomys zechi","Furtive tuco-tuco","Galea","Georychus","Georychus capensis","Golden viscacha-rat","Goya tuco-tuco","Greater guinea pig","Green acouchi","Haig's tuco-tuco","Heliophobius","Heliophobius argenteocinereus","Heterocephalus","Heterocephalus glaber","Highland tuco-tuco","Hystrix","Indian porcupine","Isla Mocha degu","Kalinowski agouti","Kannabateomys","Kannabateomys amblyonyx","Lagidium","Lagostomus","Lewis' tuco-tuco","Long-tailed chinchilla","Long-tailed porcupine","Los Chalchaleros' viscacha-rat","Lowland paca","Magellanic tuco-tuco","Malayan porcupine","Maule tuco-tuco","Mendoza tuco-tuco","Mexican agouti","Mexican hairy dwarf porcupine","Microcavia","Montane guinea pig","Moon-toothed degu","Mottled tuco-tuco","Mountain degu","Mountain paca","Mountain viscacha-rat","Myoprocta","Natterer's tuco-tuco","North American porcupine","Northern viscacha","Octodon","Octodontomys","Octomys","Olallamys","Olallamys albicauda","Olallamys edax","Orinoco agouti","Paraguaian hairy dwarf porcupine","Pearson's tuco-tuco","Peruvian tuco-tuco","Philippine porcupine","Pipanacoctomys","Plains viscacha","Plains viscacha-rat","Porteous' tuco-tuco","Punta de Vacas chinchilla rat","Red acouchi","Red-rumped agouti","Reddish tuco-tuco","Rio Negro tuco-tuco","Robust tuco-tuco","Roosmalen's dwarf porcupine","Rothschild's porcupine","Ruatan Island agouti","Sage's rock rat","Salinoctomys","Salta tuco-tuco","San Luis tuco-tuco","Santa Catarina's guinea pig","Shiny guinea pig","Shipton's mountain cavy","Short-tailed chinchilla","Silky tuco-tuco","Social tuco-tuco","Southern mountain cavy","Southern tuco-tuco","Southern viscacha","Spalacopus","Spix's yellow-toothed cavy","Steinbach's tuco-tuco","Streaked dwarf porcupine","Strong tuco-tuco","Stump-tailed porcupine","Sumatran porcupine","Sunda porcupine","Talas tuco-tuco","Tawny tuco-tuco","Thick-spined porcupine","Tiny tuco-tuco","Trichys","Tucuman tuco-tuco","Tympanoctomys","Uspallata chinchilla rat","White-toothed tuco-tuco","Wolffsohn's viscacha"],nb=["Viper Adder","Common adder","Death Adder","Desert death adder","Horned adder","Long-nosed adder","Many-horned adder","Mountain adder","Mud adder","Namaqua dwarf adder","Nightingale adder","Peringuey's adder","Puff adder","African puff adder","Rhombic night adder","Sand adder","Dwarf sand adder","Namib dwarf sand adder","Water adder","Aesculapian snake","Anaconda","Bolivian anaconda","De Schauensee's anaconda","Green anaconda","Yellow anaconda","Arafura file snake","Asp","European asp","Egyptian asp","African beaked snake","Ball Python","Bird snake","Black-headed snake","Mexican black kingsnake","Black rat snake","Black snake","Red-bellied black snake","Blind snake","Brahminy blind snake","Texas blind snake","Western blind snake","Boa","Abaco Island boa","Amazon tree boa","Boa constrictor","Cuban boa","Dumeril's boa","Dwarf boa","Emerald tree boa","Hogg Island boa","Jamaican boa","Madagascar ground boa","Madagascar tree boa","Puerto Rican boa","Rainbow boa","Red-tailed boa","Rosy boa","Rubber boa","Sand boa","Tree boa","Boiga","Boomslang","Brown snake","Eastern brown snake","Bull snake","Bushmaster","Dwarf beaked snake","Rufous beaked snake","Canebrake","Cantil","Cascabel","Cat-eyed snake","Banded cat-eyed snake","Green cat-eyed snake","Cat snake","Andaman cat snake","Beddome's cat snake","Dog-toothed cat snake","Forsten's cat snake","Gold-ringed cat snake","Gray cat snake","Many-spotted cat snake","Tawny cat snake","Chicken snake","Coachwhip snake","Cobra","Andaman cobra","Arabian cobra","Asian cobra","Banded water cobra","Black-necked cobra","Black-necked spitting cobra","Black tree cobra","Burrowing cobra","Cape cobra","Caspian cobra","Congo water cobra","Common cobra","Eastern water cobra","Egyptian cobra","Equatorial spitting cobra","False cobra","False water cobra","Forest cobra","Gold tree cobra","Indian cobra","Indochinese spitting cobra","Javan spitting cobra","King cobra","Mandalay cobra","Mozambique spitting cobra","North Philippine cobra","Nubian spitting cobra","Philippine cobra","Red spitting cobra","Rinkhals cobra","Shield-nosed cobra","Sinai desert cobra","Southern Indonesian spitting cobra","Southern Philippine cobra","Southwestern black spitting cobra","Snouted cobra","Spectacled cobra","Spitting cobra","Storm water cobra","Thai cobra","Taiwan cobra","Zebra spitting cobra","Collett's snake","Congo snake","Copperhead","American copperhead","Australian copperhead","Coral snake","Arizona coral snake","Beddome's coral snake","Brazilian coral snake","Cape coral snake","Harlequin coral snake","High Woods coral snake","Malayan long-glanded coral snake","Texas Coral Snake","Western coral snake","Corn snake","South eastern corn snake","Cottonmouth","Crowned snake","Cuban wood snake","Eastern hognose snake","Egg-eater","Eastern coral snake","Fer-de-lance","Fierce snake","Fishing snake","Flying snake","Golden tree snake","Indian flying snake","Moluccan flying snake","Ornate flying snake","Paradise flying snake","Twin-Barred tree snake","Banded Flying Snake","Fox snake, three species of Pantherophis","Forest flame snake","Garter snake","Checkered garter snake","Common garter snake","San Francisco garter snake","Texas garter snake","Cape gopher snake","Grass snake","Green snake","Rough green snake","Smooth green snake","Ground snake","Common ground snake","Three-lined ground snake","Western ground snake","Habu","Hognose snake","Blonde hognose snake","Dusty hognose snake","Jan's hognose snake","Giant Malagasy hognose snake","Mexican hognose snake","South American hognose snake","Hundred pacer","Ikaheka snake","Indigo snake","Jamaican Tree Snake","Keelback","Asian keelback","Assam keelback","Black-striped keelback","Buff striped keelback","Burmese keelback","Checkered keelback","Common keelback","Hill keelback","Himalayan keelback","Khasi Hills keelback","Modest keelback","Nicobar Island keelback","Nilgiri keelback","Orange-collared keelback","Red-necked keelback","Sikkim keelback","Speckle-bellied keelback","White-lipped keelback","Wynaad keelback","Yunnan keelback","King brown","King snake","California kingsnake","Desert kingsnake","Grey-banded kingsnake","North eastern king snake","Prairie kingsnake","Scarlet kingsnake","Speckled kingsnake","Krait","Banded krait","Blue krait","Black krait","Burmese krait","Ceylon krait","Indian krait","Lesser black krait","Malayan krait","Many-banded krait","Northeastern hill krait","Red-headed krait","Sind krait","Large shield snake","Lancehead","Common lancehead","Lora","Grey Lora","Lyre snake","Baja California lyresnake","Central American lyre snake","Texas lyre snake","Eastern lyre snake","Machete savane","Mamba","Black mamba","Green mamba","Eastern green mamba","Western green mamba","Mamushi","Mangrove snake","Milk snake","Moccasin snake","Montpellier snake","Mud snake","Eastern mud snake","Western mud snake","Mussurana","Night snake","Cat-eyed night snake","Texas night snake","Nichell snake","Narrowhead Garter Snake","Nose-horned viper","Rhinoceros viper","Vipera ammodytes","Parrot snake","Mexican parrot snake","Patchnose snake","Perrotet's shieldtail snake","Pine snake","Pipe snake","Asian pipe snake","Dwarf pipe snake","Red-tailed pipe snake","Python","African rock python","Amethystine python","Angolan python","Australian scrub python","Ball python","Bismarck ringed python","Black headed python","Blood python","Boelen python","Borneo short-tailed python","Bredl's python","Brown water python","Burmese python","Calabar python","Western carpet python","Centralian carpet python","Coastal carpet python","Inland carpet python","Jungle carpet python","New Guinea carpet python","Northwestern carpet python","Southwestern carpet python","Children's python","Dauan Island water python","Desert woma python","Diamond python","Flinders python","Green tree python","Halmahera python","Indian python","Indonesian water python","Macklot's python","Mollucan python","Oenpelli python","Olive python","Papuan python","Pygmy python","Red blood python","Reticulated python","Kayaudi dwarf reticulated python","Selayer reticulated python","Rough-scaled python","Royal python","Savu python","Spotted python","Stimson's python","Sumatran short-tailed python","Tanimbar python","Timor python","Wetar Island python","White-lipped python","Brown white-lipped python","Northern white-lipped python","Southern white-lipped python","Woma python","Western woma python","Queen snake","Racer","Bimini racer","Buttermilk racer","Eastern racer","Eastern yellowbelly sad racer","Mexican racer","Southern black racer","Tan racer","West Indian racer","Raddysnake","Southwestern blackhead snake","Rat snake","Baird's rat snake","Beauty rat snake","Great Plains rat snake","Green rat snake","Japanese forest rat snake","Japanese rat snake","King rat snake","Mandarin rat snake","Persian rat snake","Red-backed rat snake","Twin-spotted rat snake","Yellow-striped rat snake","Manchurian Black Water Snake","Rattlesnake","Arizona black rattlesnake","Aruba rattlesnake","Chihuahuan ridge-nosed rattlesnake","Coronado Island rattlesnake","Durango rock rattlesnake","Dusky pigmy rattlesnake","Eastern diamondback rattlesnake","Grand Canyon rattlesnake","Great Basin rattlesnake","Hopi rattlesnake","Lance-headed rattlesnake","Long-tailed rattlesnake","Massasauga rattlesnake","Mexican green rattlesnake","Mexican west coast rattlesnake","Midget faded rattlesnake","Mojave rattlesnake","Northern black-tailed rattlesnake","Oaxacan small-headed rattlesnake","Rattler","Red diamond rattlesnake","Southern Pacific rattlesnake","Southwestern speckled rattlesnake","Tancitaran dusky rattlesnake","Tiger rattlesnake","Timber rattlesnake","Tropical rattlesnake","Twin-spotted rattlesnake","Uracoan rattlesnake","Western diamondback rattlesnake","Ribbon snake","Rinkhals","River jack","Sea snake","Annulated sea snake","Beaked sea snake","Dubois's sea snake","Hardwicke's sea snake","Hook Nosed Sea Snake","Olive sea snake","Pelagic sea snake","Stoke's sea snake","Yellow-banded sea snake","Yellow-bellied sea snake","Yellow-lipped sea snake","Shield-tailed snake","Sidewinder","Colorado desert sidewinder","Mojave desert sidewinder","Sonoran sidewinder","Small-eyed snake","Smooth snake","Brazilian smooth snake","European smooth snake","Stiletto snake","Striped snake","Japanese striped snake","Sunbeam snake","Taipan","Central ranges taipan","Coastal taipan","Inland taipan","Paupan taipan","Tentacled snake","Tic polonga","Tiger snake","Chappell Island tiger snake","Common tiger snake","Down's tiger snake","Eastern tiger snake","King Island tiger snake","Krefft's tiger snake","Peninsula tiger snake","Tasmanian tiger snake","Western tiger snake","Tigre snake","Tree snake","Blanding's tree snake","Blunt-headed tree snake","Brown tree snake","Long-nosed tree snake","Many-banded tree snake","Northern tree snake","Trinket snake","Black-banded trinket snake","Twig snake","African twig snake","Twin Headed King Snake","Titanboa","Urutu","Vine snake","Asian Vine Snake, Whip Snake","American Vine Snake","Mexican vine snake","Viper","Asp viper","Bamboo viper","Bluntnose viper","Brazilian mud Viper","Burrowing viper","Bush viper","Great Lakes bush viper","Hairy bush viper","Nitsche's bush viper","Rough-scaled bush viper","Spiny bush viper","Carpet viper","Crossed viper","Cyclades blunt-nosed viper","Eyelash viper","False horned viper","Fea's viper","Fifty pacer","Gaboon viper","Hognosed viper","Horned desert viper","Horned viper","Jumping viper","Kaznakov's viper","Leaf-nosed viper","Leaf viper","Levant viper","Long-nosed viper","McMahon's viper","Mole viper","Palestine viper","Pallas' viper","Palm viper","Amazonian palm viper","Black-speckled palm-pitviper","Eyelash palm-pitviper","Green palm viper","Mexican palm-pitviper","Guatemalan palm viper","Honduran palm viper","Siamese palm viper","Side-striped palm-pitviper","Yellow-lined palm viper","Pit viper","Banded pitviper","Bamboo pitviper","Barbour's pit viper","Black-tailed horned pit viper","Bornean pitviper","Brongersma's pitviper","Brown spotted pitviper[4]","Cantor's pitviper","Elegant pitviper","Eyelash pit viper","Fan-Si-Pan horned pitviper","Flat-nosed pitviper","Godman's pit viper","Green tree pit viper","Habu pit viper","Hagen's pitviper","Horseshoe pitviper","Jerdon's pitviper","Kanburian pit viper","Kaulback's lance-headed pitviper","Kham Plateau pitviper","Large-eyed pitviper","Malabar rock pitviper","Malayan pit viper","Mangrove pit viper","Mangshan pitviper","Motuo bamboo pitviper","Nicobar bamboo pitviper","Philippine pitviper","Pointed-scaled pit viper[5]","Red-tailed bamboo pitviper","Schultze's pitviper","Stejneger's bamboo pitviper","Sri Lankan pit viper","Temple pit viper","Tibetan bamboo pitviper","Tiger pit viper","Undulated pit viper","Wagler's pit viper","Wirot's pit viper","Portuguese viper","Saw-scaled viper","Schlegel's viper","Sedge viper","Sharp-nosed viper","Snorkel viper","Temple viper","Tree viper","Chinese tree viper","Guatemalan tree viper","Hutton's tree viper","Indian tree viper","Large-scaled tree viper","Malcolm's tree viper","Nitsche's tree viper","Pope's tree viper","Rough-scaled tree viper","Rungwe tree viper","Sumatran tree viper","White-lipped tree viper","Ursini's viper","Western hog-nosed viper","Wart snake","Water moccasin","Water snake","Bocourt's water snake","Northern water snake","Whip snake","Long-nosed whip snake","Wolf snake","African wolf snake","Barred wolf snake","Worm snake","Common worm snake","Longnosed worm snake","Wutu","Yarara","Zebra snake"],ib=["dog","cat","snake","bear","lion","cetacean","insect","crocodilia","cow","bird","fish","rabbit","horse"],ob={bear:Ug,bird:zg,cat:qg,cetacean:Kg,cow:Jg,crocodilia:Yg,dog:Qg,fish:Xg,horse:Zg,insect:eb,lion:rb,rabbit:tb,rodent:ab,snake:nb,type:ib},ub=ob,sb=["{{person.name}}","{{company.name}}"],lb=["Redhold","Treeflex","Trippledex","Kanlam","Bigtax","Daltfresh","Toughjoyfax","Mat Lam Tam","Otcom","Tres-Zap","Y-Solowarm","Tresom","Voltsillam","Biodex","Greenlam","Viva","Matsoft","Temp","Zoolab","Subin","Rank","Job","Stringtough","Tin","It","Home Ing","Zamit","Sonsing","Konklab","Alpha","Latlux","Voyatouch","Alphazap","Holdlamis","Zaam-Dox","Sub-Ex","Quo Lux","Bamity","Ventosanzap","Lotstring","Hatity","Tempsoft","Overhold","Fixflex","Konklux","Zontrax","Tampflex","Span","Namfix","Transcof","Stim","Fix San","Sonair","Stronghold","Fintone","Y-find","Opela","Lotlux","Ronstring","Zathin","Duobam","Keylex"],cb=["0.#.#","0.##","#.##","#.#","#.#.#"],db={author:sb,name:lb,version:cb},pb=db,mb=["###-###-####","(###) ###-####","1-###-###-####","###.###.####"],Fb={formats:mb},hb=Fb,fb=["red","green","blue","yellow","purple","mint green","teal","white","black","orange","pink","grey","maroon","violet","turquoise","tan","sky blue","salmon","plum","orchid","olive","magenta","lime","ivory","indigo","gold","fuchsia","cyan","azure","lavender","silver"],yb={human:fb},gb=yb,bb=["Books","Movies","Music","Games","Electronics","Computers","Home","Garden","Tools","Grocery","Health","Beauty","Toys","Kids","Baby","Clothing","Shoes","Jewelery","Sports","Outdoors","Automotive","Industrial"],vb=["Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support","The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive","New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016","The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality","The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design","The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J","The Football Is Good For Training And Recreational Purposes","Carbonite web goalkeeper gloves are ergonomically designed to give easy fit","Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles","New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart","The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients","Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals"],Db={adjective:["Small","Ergonomic","Electronic","Rustic","Intelligent","Gorgeous","Incredible","Elegant","Fantastic","Practical","Modern","Recycled","Sleek","Bespoke","Awesome","Generic","Handcrafted","Handmade","Oriental","Licensed","Luxurious","Refined","Unbranded","Tasty"],material:["Steel","Bronze","Wooden","Concrete","Plastic","Cotton","Granite","Rubber","Metal","Soft","Fresh","Frozen"],product:["Chair","Car","Computer","Keyboard","Mouse","Bike","Ball","Gloves","Pants","Shirt","Table","Shoes","Hat","Towels","Soap","Tuna","Chicken","Fish","Cheese","Bacon","Pizza","Salad","Sausages","Chips"]},Eb={department:bb,product_description:vb,product_name:Db},kb=Eb,Ab=["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"],wb=["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich"],Cb=["synergies","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","action-items","portals","niches","technologies","content","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies","blockchains","lifetime value"],Sb=["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"],Tb=["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"],Bb=["{{person.last_name}} {{company.suffix}}","{{person.last_name}} - {{person.last_name}}","{{person.last_name}}, {{person.last_name}} and {{person.last_name}}"],Nb=["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"],Rb=["Inc","and Sons","LLC","Group"],Lb={adjective:Ab,buzz_adjective:wb,buzz_noun:Cb,buzz_verb:Sb,descriptor:Tb,name_pattern:Bb,noun:Nb,suffix:Rb},Mb=Lb,Ib=["id","title","name","email","phone","token","group","category","password","comment","avatar","status","createdAt","updatedAt"],xb={column:Ib},Ob=xb,_b={wide:["January","February","March","April","May","June","July","August","September","October","November","December"],abbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},Pb={wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],abbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]},Gb={month:_b,weekday:Pb},Hb=Gb,jb=["Checking","Savings","Money Market","Investment","Home Loan","Credit Card","Auto Loan","Personal Loan"],$b=["34##-######-####L","37##-######-####L"],Wb=["30[0-5]#-######-###L","36##-######-###L","54##-####-####-###L"],Vb=["6011-####-####-###L","65##-####-####-###L","64[4-9]#-####-####-###L","6011-62##-####-####-###L","65##-62##-####-####-###L","64[4-9]#-62##-####-####-###L"],Ub=["3528-####-####-###L","3529-####-####-###L","35[3-8]#-####-####-###L"],zb=["5018-#{4}-#{4}-#{3}L","5020-#{4}-#{4}-#{3}L","5038-#{4}-#{4}-#{3}L","5893-#{4}-#{4}-#{3}L","6304-#{4}-#{4}-#{3}L","6759-#{4}-#{4}-#{3}L","676[1-3]-####-####-###L","5018#{11,15}L","5020#{11,15}L","5038#{11,15}L","5893#{11,15}L","6304#{11,15}L","6759#{11,15}L","676[1-3]#{11,15}L"],qb=["5[1-5]##-####-####-###L","2[221-720]-####-####-###L"],Kb=["4###########L","4###-####-####-###L"],Jb={american_express:$b,diners_club:Wb,discover:Vb,jcb:Ub,maestro:zb,mastercard:qb,visa:Kb},Yb=Jb,Qb=[{name:"UAE Dirham",code:"AED",symbol:""},{name:"Afghani",code:"AFN",symbol:"؋"},{name:"Lek",code:"ALL",symbol:"Lek"},{name:"Armenian Dram",code:"AMD",symbol:""},{name:"Netherlands Antillian Guilder",code:"ANG",symbol:"ƒ"},{name:"Kwanza",code:"AOA",symbol:""},{name:"Argentine Peso",code:"ARS",symbol:"$"},{name:"Australian Dollar",code:"AUD",symbol:"$"},{name:"Aruban Guilder",code:"AWG",symbol:"ƒ"},{name:"Azerbaijanian Manat",code:"AZN",symbol:"ман"},{name:"Convertible Marks",code:"BAM",symbol:"KM"},{name:"Barbados Dollar",code:"BBD",symbol:"$"},{name:"Taka",code:"BDT",symbol:""},{name:"Bulgarian Lev",code:"BGN",symbol:"лв"},{name:"Bahraini Dinar",code:"BHD",symbol:""},{name:"Burundi Franc",code:"BIF",symbol:""},{name:"Bermudian Dollar (customarily known as Bermuda Dollar)",code:"BMD",symbol:"$"},{name:"Brunei Dollar",code:"BND",symbol:"$"},{name:"Boliviano boliviano",code:"BOB",symbol:"Bs"},{name:"Brazilian Real",code:"BRL",symbol:"R$"},{name:"Bahamian Dollar",code:"BSD",symbol:"$"},{name:"Pula",code:"BWP",symbol:"P"},{name:"Belarusian Ruble",code:"BYN",symbol:"Rbl"},{name:"Belize Dollar",code:"BZD",symbol:"BZ$"},{name:"Canadian Dollar",code:"CAD",symbol:"$"},{name:"Congolese Franc",code:"CDF",symbol:""},{name:"Swiss Franc",code:"CHF",symbol:"CHF"},{name:"Chilean Peso",code:"CLP",symbol:"$"},{name:"Yuan Renminbi",code:"CNY",symbol:"¥"},{name:"Colombian Peso",code:"COP",symbol:"$"},{name:"Costa Rican Colon",code:"CRC",symbol:"₡"},{name:"Cuban Peso",code:"CUP",symbol:"₱"},{name:"Cape Verde Escudo",code:"CVE",symbol:""},{name:"Czech Koruna",code:"CZK",symbol:"Kč"},{name:"Djibouti Franc",code:"DJF",symbol:""},{name:"Danish Krone",code:"DKK",symbol:"kr"},{name:"Dominican Peso",code:"DOP",symbol:"RD$"},{name:"Algerian Dinar",code:"DZD",symbol:""},{name:"Egyptian Pound",code:"EGP",symbol:"£"},{name:"Nakfa",code:"ERN",symbol:""},{name:"Ethiopian Birr",code:"ETB",symbol:""},{name:"Euro",code:"EUR",symbol:"€"},{name:"Fiji Dollar",code:"FJD",symbol:"$"},{name:"Falkland Islands Pound",code:"FKP",symbol:"£"},{name:"Pound Sterling",code:"GBP",symbol:"£"},{name:"Lari",code:"GEL",symbol:""},{name:"Cedi",code:"GHS",symbol:""},{name:"Gibraltar Pound",code:"GIP",symbol:"£"},{name:"Dalasi",code:"GMD",symbol:""},{name:"Guinea Franc",code:"GNF",symbol:""},{name:"Quetzal",code:"GTQ",symbol:"Q"},{name:"Guyana Dollar",code:"GYD",symbol:"$"},{name:"Hong Kong Dollar",code:"HKD",symbol:"$"},{name:"Lempira",code:"HNL",symbol:"L"},{name:"Gourde",code:"HTG",symbol:""},{name:"Forint",code:"HUF",symbol:"Ft"},{name:"Rupiah",code:"IDR",symbol:"Rp"},{name:"New Israeli Sheqel",code:"ILS",symbol:"₪"},{name:"Bhutanese Ngultrum",code:"BTN",symbol:"Nu"},{name:"Indian Rupee",code:"INR",symbol:"₹"},{name:"Iraqi Dinar",code:"IQD",symbol:""},{name:"Iranian Rial",code:"IRR",symbol:"﷼"},{name:"Iceland Krona",code:"ISK",symbol:"kr"},{name:"Jamaican Dollar",code:"JMD",symbol:"J$"},{name:"Jordanian Dinar",code:"JOD",symbol:""},{name:"Yen",code:"JPY",symbol:"¥"},{name:"Kenyan Shilling",code:"KES",symbol:""},{name:"Som",code:"KGS",symbol:"лв"},{name:"Riel",code:"KHR",symbol:"៛"},{name:"Comoro Franc",code:"KMF",symbol:""},{name:"North Korean Won",code:"KPW",symbol:"₩"},{name:"Won",code:"KRW",symbol:"₩"},{name:"Kuwaiti Dinar",code:"KWD",symbol:""},{name:"Cayman Islands Dollar",code:"KYD",symbol:"$"},{name:"Tenge",code:"KZT",symbol:"лв"},{name:"Kip",code:"LAK",symbol:"₭"},{name:"Lebanese Pound",code:"LBP",symbol:"£"},{name:"Sri Lanka Rupee",code:"LKR",symbol:"₨"},{name:"Liberian Dollar",code:"LRD",symbol:"$"},{name:"Libyan Dinar",code:"LYD",symbol:""},{name:"Moroccan Dirham",code:"MAD",symbol:""},{name:"Moldovan Leu",code:"MDL",symbol:""},{name:"Malagasy Ariary",code:"MGA",symbol:""},{name:"Denar",code:"MKD",symbol:"ден"},{name:"Kyat",code:"MMK",symbol:""},{name:"Tugrik",code:"MNT",symbol:"₮"},{name:"Pataca",code:"MOP",symbol:""},{name:"Ouguiya",code:"MRU",symbol:""},{name:"Mauritius Rupee",code:"MUR",symbol:"₨"},{name:"Rufiyaa",code:"MVR",symbol:""},{name:"Kwacha",code:"MWK",symbol:""},{name:"Mexican Peso",code:"MXN",symbol:"$"},{name:"Malaysian Ringgit",code:"MYR",symbol:"RM"},{name:"Metical",code:"MZN",symbol:"MT"},{name:"Naira",code:"NGN",symbol:"₦"},{name:"Cordoba Oro",code:"NIO",symbol:"C$"},{name:"Norwegian Krone",code:"NOK",symbol:"kr"},{name:"Nepalese Rupee",code:"NPR",symbol:"₨"},{name:"New Zealand Dollar",code:"NZD",symbol:"$"},{name:"Rial Omani",code:"OMR",symbol:"﷼"},{name:"Balboa",code:"PAB",symbol:"B/."},{name:"Nuevo Sol",code:"PEN",symbol:"S/."},{name:"Kina",code:"PGK",symbol:""},{name:"Philippine Peso",code:"PHP",symbol:"Php"},{name:"Pakistan Rupee",code:"PKR",symbol:"₨"},{name:"Zloty",code:"PLN",symbol:"zł"},{name:"Guarani",code:"PYG",symbol:"Gs"},{name:"Qatari Rial",code:"QAR",symbol:"﷼"},{name:"New Leu",code:"RON",symbol:"lei"},{name:"Serbian Dinar",code:"RSD",symbol:"Дин."},{name:"Russian Ruble",code:"RUB",symbol:"руб"},{name:"Rwanda Franc",code:"RWF",symbol:""},{name:"Saudi Riyal",code:"SAR",symbol:"﷼"},{name:"Solomon Islands Dollar",code:"SBD",symbol:"$"},{name:"Seychelles Rupee",code:"SCR",symbol:"₨"},{name:"Sudanese Pound",code:"SDG",symbol:""},{name:"Swedish Krona",code:"SEK",symbol:"kr"},{name:"Singapore Dollar",code:"SGD",symbol:"$"},{name:"Saint Helena Pound",code:"SHP",symbol:"£"},{name:"Leone",code:"SLE",symbol:""},{name:"Somali Shilling",code:"SOS",symbol:"S"},{name:"Surinam Dollar",code:"SRD",symbol:"$"},{name:"South Sudanese pound",code:"SSP",symbol:""},{name:"Dobra",code:"STN",symbol:"Db"},{name:"Syrian Pound",code:"SYP",symbol:"£"},{name:"Lilangeni",code:"SZL",symbol:""},{name:"Baht",code:"THB",symbol:"฿"},{name:"Somoni",code:"TJS",symbol:""},{name:"Manat",code:"TMT",symbol:""},{name:"Tunisian Dinar",code:"TND",symbol:""},{name:"Pa'anga",code:"TOP",symbol:""},{name:"Turkish Lira",code:"TRY",symbol:"₺"},{name:"Trinidad and Tobago Dollar",code:"TTD",symbol:"TT$"},{name:"New Taiwan Dollar",code:"TWD",symbol:"NT$"},{name:"Tanzanian Shilling",code:"TZS",symbol:""},{name:"Hryvnia",code:"UAH",symbol:"₴"},{name:"Uganda Shilling",code:"UGX",symbol:""},{name:"US Dollar",code:"USD",symbol:"$"},{name:"Peso Uruguayo",code:"UYU",symbol:"$U"},{name:"Uzbekistan Sum",code:"UZS",symbol:"лв"},{name:"Venezuelan bolívar",code:"VES",symbol:"Bs"},{name:"Dong",code:"VND",symbol:"₫"},{name:"Vatu",code:"VUV",symbol:""},{name:"Tala",code:"WST",symbol:""},{name:"CFA Franc BEAC",code:"XAF",symbol:""},{name:"East Caribbean Dollar",code:"XCD",symbol:"$"},{name:"CFA Franc BCEAO",code:"XOF",symbol:""},{name:"CFP Franc",code:"XPF",symbol:""},{name:"Yemeni Rial",code:"YER",symbol:"﷼"},{name:"Rand",code:"ZAR",symbol:"R"},{name:"Lesotho Loti",code:"LSL",symbol:""},{name:"Namibia Dollar",code:"NAD",symbol:"N$"},{name:"Zambian Kwacha",code:"ZMW",symbol:"K"},{name:"Zimbabwe Dollar",code:"ZWL",symbol:""}],Xb=["deposit","withdrawal","payment","invoice"],Zb={account_type:jb,credit_card:Yb,currency:Qb,transaction_type:Xb},e2=Zb,r2=["auxiliary","primary","back-end","digital","open-source","virtual","cross-platform","redundant","online","haptic","multi-byte","bluetooth","wireless","1080p","neural","optical","solid state","mobile"],t2=["backing up","bypassing","hacking","overriding","compressing","copying","navigating","indexing","connecting","generating","quantifying","calculating","synthesizing","transmitting","programming","parsing"],a2=["driver","protocol","bandwidth","panel","microchip","program","port","card","array","interface","system","sensor","firewall","hard drive","pixel","alarm","feed","monitor","application","transmitter","bus","circuit","capacitor","matrix"],n2=["If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!","We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!","You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!","Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!","The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!","{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!"],i2=["back up","bypass","hack","override","compress","copy","navigate","index","connect","generate","quantify","calculate","synthesize","input","transmit","program","reboot","parse"],o2={adjective:r2,ingverb:t2,noun:a2,phrase:n2,verb:i2},u2=o2,s2=["com","biz","info","name","net","org"],l2=["example.org","example.com","example.net"],c2=["gmail.com","yahoo.com","hotmail.com"],d2={domain_suffix:s2,example_email:l2,free_email:c2},p2=d2,m2=["#####","####","###"],F2=["Abilene","Akron","Alafaya","Alameda","Albany","Albuquerque","Alexandria","Alhambra","Aliso Viejo","Allen","Allentown","Aloha","Alpharetta","Altadena","Altamonte Springs","Altoona","Amarillo","Ames","Anaheim","Anchorage","Anderson","Ankeny","Ann Arbor","Annandale","Antelope","Antioch","Apex","Apopka","Apple Valley","Appleton","Arcadia","Arden-Arcade","Arecibo","Arlington","Arlington Heights","Arvada","Ashburn","Asheville","Aspen Hill","Atascocita","Athens-Clarke County","Atlanta","Attleboro","Auburn","Augusta-Richmond County","Aurora","Austin","Avondale","Azusa","Bakersfield","Baldwin Park","Baltimore","Barnstable Town","Bartlett","Baton Rouge","Battle Creek","Bayamon","Bayonne","Baytown","Beaumont","Beavercreek","Beaverton","Bedford","Bel Air South","Bell Gardens","Belleville","Bellevue","Bellflower","Bellingham","Bend","Bentonville","Berkeley","Berwyn","Bethesda","Bethlehem","Billings","Biloxi","Binghamton","Birmingham","Bismarck","Blacksburg","Blaine","Bloomington","Blue Springs","Boca Raton","Boise City","Bolingbrook","Bonita Springs","Bossier City","Boston","Bothell","Boulder","Bountiful","Bowie","Bowling Green","Boynton Beach","Bozeman","Bradenton","Brandon","Brentwood","Bridgeport","Bristol","Brockton","Broken Arrow","Brookhaven","Brookline","Brooklyn Park","Broomfield","Brownsville","Bryan","Buckeye","Buena Park","Buffalo","Buffalo Grove","Burbank","Burien","Burke","Burleson","Burlington","Burnsville","Caguas","Caldwell","Camarillo","Cambridge","Camden","Canton","Cape Coral","Carlsbad","Carmel","Carmichael","Carolina","Carrollton","Carson","Carson City","Cary","Casa Grande","Casas Adobes","Casper","Castle Rock","Castro Valley","Catalina Foothills","Cathedral City","Catonsville","Cedar Hill","Cedar Park","Cedar Rapids","Centennial","Centreville","Ceres","Cerritos","Champaign","Chandler","Chapel Hill","Charleston","Charlotte","Charlottesville","Chattanooga","Cheektowaga","Chesapeake","Chesterfield","Cheyenne","Chicago","Chico","Chicopee","Chino","Chino Hills","Chula Vista","Cicero","Cincinnati","Citrus Heights","Clarksville","Clearwater","Cleveland","Cleveland Heights","Clifton","Clovis","Coachella","Coconut Creek","Coeur d'Alene","College Station","Collierville","Colorado Springs","Colton","Columbia","Columbus","Commerce City","Compton","Concord","Conroe","Conway","Coon Rapids","Coral Gables","Coral Springs","Corona","Corpus Christi","Corvallis","Costa Mesa","Council Bluffs","Country Club","Covina","Cranston","Cupertino","Cutler Bay","Cuyahoga Falls","Cypress","Dale City","Dallas","Daly City","Danbury","Danville","Davenport","Davie","Davis","Dayton","Daytona Beach","DeKalb","DeSoto","Dearborn","Dearborn Heights","Decatur","Deerfield Beach","Delano","Delray Beach","Deltona","Denton","Denver","Des Moines","Des Plaines","Detroit","Diamond Bar","Doral","Dothan","Downers Grove","Downey","Draper","Dublin","Dubuque","Duluth","Dundalk","Dunwoody","Durham","Eagan","East Hartford","East Honolulu","East Lansing","East Los Angeles","East Orange","East Providence","Eastvale","Eau Claire","Eden Prairie","Edina","Edinburg","Edmond","El Cajon","El Centro","El Dorado Hills","El Monte","El Paso","Elgin","Elizabeth","Elk Grove","Elkhart","Ellicott City","Elmhurst","Elyria","Encinitas","Enid","Enterprise","Erie","Escondido","Euclid","Eugene","Euless","Evanston","Evansville","Everett","Fairfield","Fall River","Fargo","Farmington","Farmington Hills","Fayetteville","Federal Way","Findlay","Fishers","Flagstaff","Flint","Florence-Graham","Florin","Florissant","Flower Mound","Folsom","Fond du Lac","Fontana","Fort Collins","Fort Lauderdale","Fort Myers","Fort Pierce","Fort Smith","Fort Wayne","Fort Worth","Fountain Valley","Fountainebleau","Framingham","Franklin","Frederick","Freeport","Fremont","Fresno","Frisco","Fullerton","Gainesville","Gaithersburg","Galveston","Garden Grove","Gardena","Garland","Gary","Gastonia","Georgetown","Germantown","Gilbert","Gilroy","Glen Burnie","Glendale","Glendora","Glenview","Goodyear","Grand Forks","Grand Island","Grand Junction","Grand Prairie","Grand Rapids","Grapevine","Great Falls","Greeley","Green Bay","Greensboro","Greenville","Greenwood","Gresham","Guaynabo","Gulfport","Hacienda Heights","Hackensack","Haltom City","Hamilton","Hammond","Hampton","Hanford","Harlingen","Harrisburg","Harrisonburg","Hartford","Hattiesburg","Haverhill","Hawthorne","Hayward","Hemet","Hempstead","Henderson","Hendersonville","Hesperia","Hialeah","Hicksville","High Point","Highland","Highlands Ranch","Hillsboro","Hilo","Hoboken","Hoffman Estates","Hollywood","Homestead","Honolulu","Hoover","Houston","Huntersville","Huntington","Huntington Beach","Huntington Park","Huntsville","Hutchinson","Idaho Falls","Independence","Indianapolis","Indio","Inglewood","Iowa City","Irondequoit","Irvine","Irving","Jackson","Jacksonville","Janesville","Jefferson City","Jeffersonville","Jersey City","Johns Creek","Johnson City","Joliet","Jonesboro","Joplin","Jupiter","Jurupa Valley","Kalamazoo","Kannapolis","Kansas City","Kearny","Keller","Kendale Lakes","Kendall","Kenner","Kennewick","Kenosha","Kent","Kentwood","Kettering","Killeen","Kingsport","Kirkland","Kissimmee","Knoxville","Kokomo","La Crosse","La Habra","La Mesa","La Mirada","Lacey","Lafayette","Laguna Niguel","Lake Charles","Lake Elsinore","Lake Forest","Lake Havasu City","Lake Ridge","Lakeland","Lakeville","Lakewood","Lancaster","Lansing","Laredo","Largo","Las Cruces","Las Vegas","Lauderhill","Lawrence","Lawton","Layton","League City","Lee's Summit","Leesburg","Lehi","Lehigh Acres","Lenexa","Levittown","Lewisville","Lexington-Fayette","Lincoln","Linden","Little Rock","Littleton","Livermore","Livonia","Lodi","Logan","Lombard","Lompoc","Long Beach","Longmont","Longview","Lorain","Los Angeles","Louisville/Jefferson County","Loveland","Lowell","Lubbock","Lynchburg","Lynn","Lynwood","Macon-Bibb County","Madera","Madison","Malden","Manchester","Manhattan","Mansfield","Manteca","Maple Grove","Margate","Maricopa","Marietta","Marysville","Mayaguez","McAllen","McKinney","McLean","Medford","Melbourne","Memphis","Menifee","Mentor","Merced","Meriden","Meridian","Mesa","Mesquite","Metairie","Methuen Town","Miami","Miami Beach","Miami Gardens","Middletown","Midland","Midwest City","Milford","Millcreek","Milpitas","Milwaukee","Minneapolis","Minnetonka","Minot","Miramar","Mishawaka","Mission","Mission Viejo","Missoula","Missouri City","Mobile","Modesto","Moline","Monroe","Montebello","Monterey Park","Montgomery","Moore","Moreno Valley","Morgan Hill","Mount Pleasant","Mount Prospect","Mount Vernon","Mountain View","Muncie","Murfreesboro","Murray","Murrieta","Nampa","Napa","Naperville","Nashua","Nashville-Davidson","National City","New Bedford","New Braunfels","New Britain","New Brunswick","New Haven","New Orleans","New Rochelle","New York","Newark","Newport Beach","Newport News","Newton","Niagara Falls","Noblesville","Norfolk","Normal","Norman","North Bethesda","North Charleston","North Highlands","North Las Vegas","North Lauderdale","North Little Rock","North Miami","North Miami Beach","North Port","North Richland Hills","Norwalk","Novato","Novi","O'Fallon","Oak Lawn","Oak Park","Oakland","Oakland Park","Ocala","Oceanside","Odessa","Ogden","Oklahoma City","Olathe","Olympia","Omaha","Ontario","Orange","Orem","Orland Park","Orlando","Oro Valley","Oshkosh","Overland Park","Owensboro","Oxnard","Palatine","Palm Bay","Palm Beach Gardens","Palm Coast","Palm Desert","Palm Harbor","Palm Springs","Palmdale","Palo Alto","Paradise","Paramount","Parker","Parma","Pasadena","Pasco","Passaic","Paterson","Pawtucket","Peabody","Pearl City","Pearland","Pembroke Pines","Pensacola","Peoria","Perris","Perth Amboy","Petaluma","Pflugerville","Pharr","Philadelphia","Phoenix","Pico Rivera","Pine Bluff","Pine Hills","Pinellas Park","Pittsburg","Pittsburgh","Pittsfield","Placentia","Plainfield","Plano","Plantation","Pleasanton","Plymouth","Pocatello","Poinciana","Pomona","Pompano Beach","Ponce","Pontiac","Port Arthur","Port Charlotte","Port Orange","Port St. Lucie","Portage","Porterville","Portland","Portsmouth","Potomac","Poway","Providence","Provo","Pueblo","Quincy","Racine","Raleigh","Rancho Cordova","Rancho Cucamonga","Rancho Palos Verdes","Rancho Santa Margarita","Rapid City","Reading","Redding","Redlands","Redmond","Redondo Beach","Redwood City","Reno","Renton","Reston","Revere","Rialto","Richardson","Richland","Richmond","Rio Rancho","Riverside","Riverton","Riverview","Roanoke","Rochester","Rochester Hills","Rock Hill","Rockford","Rocklin","Rockville","Rockwall","Rocky Mount","Rogers","Rohnert Park","Rosemead","Roseville","Roswell","Round Rock","Rowland Heights","Rowlett","Royal Oak","Sacramento","Saginaw","Salem","Salina","Salinas","Salt Lake City","Sammamish","San Angelo","San Antonio","San Bernardino","San Bruno","San Buenaventura (Ventura)","San Clemente","San Diego","San Francisco","San Jacinto","San Jose","San Juan","San Leandro","San Luis Obispo","San Marcos","San Mateo","San Rafael","San Ramon","San Tan Valley","Sandy","Sandy Springs","Sanford","Santa Ana","Santa Barbara","Santa Clara","Santa Clarita","Santa Cruz","Santa Fe","Santa Maria","Santa Monica","Santa Rosa","Santee","Sarasota","Savannah","Sayreville","Schaumburg","Schenectady","Scottsdale","Scranton","Seattle","Severn","Shawnee","Sheboygan","Shoreline","Shreveport","Sierra Vista","Silver Spring","Simi Valley","Sioux City","Sioux Falls","Skokie","Smyrna","Somerville","South Bend","South Gate","South Hill","South Jordan","South San Francisco","South Valley","South Whittier","Southaven","Southfield","Sparks","Spokane","Spokane Valley","Spring","Spring Hill","Spring Valley","Springdale","Springfield","St. Charles","St. Clair Shores","St. Cloud","St. George","St. Joseph","St. Louis","St. Louis Park","St. Paul","St. Peters","St. Petersburg","Stamford","State College","Sterling Heights","Stillwater","Stockton","Stratford","Strongsville","Suffolk","Sugar Land","Summerville","Sunnyvale","Sunrise","Sunrise Manor","Surprise","Syracuse","Tacoma","Tallahassee","Tamarac","Tamiami","Tampa","Taunton","Taylor","Taylorsville","Temecula","Tempe","Temple","Terre Haute","Texas City","The Hammocks","The Villages","The Woodlands","Thornton","Thousand Oaks","Tigard","Tinley Park","Titusville","Toledo","Toms River","Tonawanda","Topeka","Torrance","Town 'n' Country","Towson","Tracy","Trenton","Troy","Trujillo Alto","Tuckahoe","Tucson","Tulare","Tulsa","Turlock","Tuscaloosa","Tustin","Twin Falls","Tyler","Union City","University","Upland","Urbana","Urbandale","Utica","Vacaville","Valdosta","Vallejo","Vancouver","Victoria","Victorville","Vineland","Virginia Beach","Visalia","Vista","Waco","Waipahu","Waldorf","Walnut Creek","Waltham","Warner Robins","Warren","Warwick","Washington","Waterbury","Waterloo","Watsonville","Waukegan","Waukesha","Wauwatosa","Wellington","Wesley Chapel","West Allis","West Babylon","West Covina","West Des Moines","West Hartford","West Haven","West Jordan","West Lafayette","West New York","West Palm Beach","West Sacramento","West Seneca","West Valley City","Westfield","Westland","Westminster","Weston","Weymouth Town","Wheaton","White Plains","Whittier","Wichita","Wichita Falls","Wilmington","Wilson","Winston-Salem","Woodbury","Woodland","Worcester","Wylie","Wyoming","Yakima","Yonkers","Yorba Linda","York","Youngstown","Yuba City","Yucaipa","Yuma"],h2=["{{location.city_prefix}} {{person.first_name}}{{location.city_suffix}}","{{location.city_prefix}} {{person.first_name}}","{{person.first_name}}{{location.city_suffix}}","{{person.last_name}}{{location.city_suffix}}","{{location.city_name}}"],f2=["North","East","West","South","New","Lake","Port","Fort"],y2=["town","ton","land","ville","berg","burgh","boro","borough","bury","view","port","mouth","stad","stead","furt","chester","cester","fort","field","haven","side","shire","worth"],g2=["Afghanistan","Aland Islands","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bonaire, Sint Eustatius and Saba","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory (Chagos Archipelago)","Brunei Darussalam","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos (Keeling) Islands","Colombia","Comoros","Congo","Cook Islands","Costa Rica","Cote d'Ivoire","Croatia","Cuba","Curacao","Cyprus","Czechia","Democratic Republic of the Congo","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Faroe Islands","Falkland Islands (Malvinas)","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guinea-Bissau","Guyana","Haiti","Heard Island and McDonald Islands","Holy See (Vatican City State)","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Democratic People's Republic of Korea","Republic of Korea","Kuwait","Kyrgyz Republic","Lao People's Democratic Republic","Latvia","Lebanon","Lesotho","Liberia","Libyan Arab Jamahiriya","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Macedonia","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn Islands","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russian Federation","Rwanda","Saint Barthelemy","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Martin","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Sint Maarten","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Svalbard & Jan Mayen Islands","Sweden","Switzerland","Syrian Arab Republic","Taiwan","Tajikistan","Tanzania","Thailand","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Virgin Islands, British","Virgin Islands, U.S.","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe"],b2=["Adams County","Calhoun County","Carroll County","Clark County","Clay County","Crawford County","Douglas County","Fayette County","Franklin County","Grant County","Greene County","Hamilton County","Hancock County","Henry County","Jackson County","Jefferson County","Johnson County","Lake County","Lawrence County","Lee County","Lincoln County","Logan County","Madison County","Marion County","Marshall County","Monroe County","Montgomery County","Morgan County","Perry County","Pike County","Polk County","Scott County","Union County","Warren County","Washington County","Wayne County","Avon","Bedfordshire","Berkshire","Borders","Buckinghamshire","Cambridgeshire","Central","Cheshire","Cleveland","Clwyd","Cornwall","County Antrim","County Armagh","County Down","County Fermanagh","County Londonderry","County Tyrone","Cumbria","Derbyshire","Devon","Dorset","Dumfries and Galloway","Durham","Dyfed","East Sussex","Essex","Fife","Gloucestershire","Grampian","Greater Manchester","Gwent","Gwynedd County","Hampshire","Herefordshire","Hertfordshire","Highlands and Islands","Humberside","Isle of Wight","Kent","Lancashire","Leicestershire","Lincolnshire","Lothian","Merseyside","Mid Glamorgan","Norfolk","North Yorkshire","Northamptonshire","Northumberland","Nottinghamshire","Oxfordshire","Powys","Rutland","Shropshire","Somerset","South Glamorgan","South Yorkshire","Staffordshire","Strathclyde","Suffolk","Surrey","Tayside","Tyne and Wear","Warwickshire","West Glamorgan","West Midlands","West Sussex","West Yorkshire","Wiltshire","Worcestershire"],v2=["United States of America"],D2=["North","East","South","West","Northeast","Northwest","Southeast","Southwest"],E2=["N","E","S","W","NE","NW","SE","SW"],k2=["#####","#####-####"],A2=["Apt. ###","Suite ###"],w2=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],C2=["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"],S2={normal:"{{location.buildingNumber}} {{location.street}}",full:"{{location.buildingNumber}} {{location.street}} {{location.secondaryAddress}}"},T2=["10th Street","11th Street","12th Street","13th Street","14th Street","15th Street","16th Street","1st Avenue","1st Street","2nd Avenue","2nd Street","3rd Avenue","3rd Street","4th Avenue","4th Street","5th Avenue","5th Street","6th Avenue","6th Street","7th Avenue","7th Street","8th Avenue","8th Street","9th Street","A Street","Abbey Road","Adams Avenue","Adams Street","Airport Road","Albany Road","Albert Road","Albion Street","Alexandra Road","Alfred Street","Alma Street","Ash Close","Ash Grove","Ash Road","Ash Street","Aspen Close","Atlantic Avenue","Avenue Road","Back Lane","Baker Street","Balmoral Road","Barn Close","Barton Road","Bath Road","Bath Street","Bay Street","Beach Road","Bedford Road","Beech Close","Beech Drive","Beech Grove","Beech Road","Beechwood Avenue","Bell Lane","Belmont Road","Birch Avenue","Birch Close","Birch Grove","Birch Road","Blind Lane","Bluebell Close","Boundary Road","Bramble Close","Bramley Close","Bridge Road","Bridge Street","Broad Lane","Broad Street","Broadway","Broadway Avenue","Broadway Street","Brook Lane","Brook Road","Brook Street","Brookside","Buckingham Road","Cambridge Street","Canal Street","Castle Close","Castle Lane","Castle Road","Castle Street","Cavendish Road","Cedar Avenue","Cedar Close","Cedar Grove","Cedar Road","Cedar Street","Cemetery Road","Center Avenue","Center Road","Center Street","Central Avenue","Central Street","Chapel Close","Chapel Hill","Chapel Road","Chapel Street","Charles Street","Cherry Close","Cherry Street","Cherry Tree Close","Chester Road","Chestnut Close","Chestnut Drive","Chestnut Grove","Chestnut Street","Church Avenue","Church Close","Church Hill","Church Lane","Church Path","Church Road","Church Street","Church View","Church Walk","Claremont Road","Clarence Road","Clarence Street","Clarendon Road","Clark Street","Clay Lane","Cleveland Street","Cliff Road","Clifton Road","Clinton Street","College Avenue","College Street","Columbia Avenue","Commerce Street","Commercial Road","Commercial Street","Common Lane","Coronation Avenue","Coronation Road","County Line Road","County Road","Court Street","Cow Lane","Crescent Road","Cromwell Road","Cross Lane","Cross Street","Crown Street","Cumberland Street","Dale Street","Dark Lane","Davis Street","Depot Street","Derby Road","Derwent Close","Devonshire Road","Division Street","Douglas Road","Duke Street","E 10th Street","E 11th Street","E 12th Street","E 14th Street","E 1st Street","E 2nd Street","E 3rd Street","E 4th Avenue","E 4th Street","E 5th Street","E 6th Avenue","E 6th Street","E 7th Street","E 8th Street","E 9th Street","E Bridge Street","E Broad Street","E Broadway","E Broadway Street","E Cedar Street","E Center Street","E Central Avenue","E Church Street","E Elm Street","E Franklin Street","E Front Street","E Grand Avenue","E High Street","E Jackson Street","E Jefferson Street","E Main","E Main Street","E Maple Street","E Market Street","E North Street","E Oak Street","E Park Avenue","E Pine Street","E River Road","E South Street","E State Street","E Union Street","E Walnut Street","E Washington Avenue","E Washington Street","E Water Street","East Avenue","East Road","East Street","Edward Street","Elm Close","Elm Grove","Elm Road","Elm Street","Euclid Avenue","Fairfield Road","Farm Close","Ferry Road","Field Close","Field Lane","First Avenue","First Street","Fore Street","Forest Avenue","Forest Road","Fourth Avenue","Franklin Avenue","Franklin Road","Franklin Street","Front Street","Frontage Road","Garden Close","Garden Street","George Street","Gladstone Road","Glebe Close","Gloucester Road","Gordon Road","Gordon Street","Grand Avenue","Grange Avenue","Grange Close","Grange Road","Grant Street","Green Close","Green Lane","Green Street","Greenville Road","Greenway","Greenwood Road","Grove Lane","Grove Road","Grove Street","Hall Lane","Hall Street","Harrison Avenue","Harrison Street","Hawthorn Avenue","Hawthorn Close","Hazel Close","Hazel Grove","Heath Road","Heather Close","Henry Street","Heron Close","Hickory Street","High Road","High Street","Highfield Avenue","Highfield Close","Highfield Road","Highland Avenue","Hill Road","Hill Street","Hillside","Hillside Avenue","Hillside Close","Hillside Road","Holly Close","Honeysuckle Close","Howard Road","Howard Street","Jackson Avenue","Jackson Street","James Street","Jefferson Avenue","Jefferson Street","Johnson Street","Jubilee Close","Juniper Close","Kent Road","Kestrel Close","King Street","King's Road","Kingfisher Close","Kings Highway","Kingsway","Laburnum Grove","Lafayette Street","Lake Avenue","Lake Drive","Lake Road","Lake Street","Lancaster Road","Lansdowne Road","Larch Close","Laurel Close","Lawrence Street","Lee Street","Liberty Street","Lime Grove","Lincoln Avenue","Lincoln Highway","Lincoln Road","Lincoln Street","Locust Street","Lodge Close","Lodge Lane","London Road","Long Lane","Low Road","Madison Avenue","Madison Street","Main","Main Avenue","Main Road","Main Street","Main Street E","Main Street N","Main Street S","Main Street W","Manchester Road","Manor Close","Manor Drive","Manor Gardens","Manor Road","Manor Way","Maple Avenue","Maple Close","Maple Drive","Maple Road","Maple Street","Market Place","Market Square","Market Street","Marlborough Road","Marsh Lane","Martin Luther King Boulevard","Martin Luther King Drive","Martin Luther King Jr Boulevard","Mary Street","Mayfield Road","Meadow Close","Meadow Drive","Meadow Lane","Meadow View","Meadow Way","Memorial Drive","Middle Street","Mill Close","Mill Lane","Mill Road","Mill Street","Milton Road","Milton Street","Monroe Street","Moor Lane","Moss Lane","Mount Pleasant","Mount Street","Mulberry Street","N 1st Street","N 2nd Street","N 3rd Street","N 4th Street","N 5th Street","N 6th Street","N 7th Street","N 8th Street","N 9th Street","N Bridge Street","N Broad Street","N Broadway","N Broadway Street","N Cedar Street","N Center Street","N Central Avenue","N Chestnut Street","N Church Street","N College Street","N Court Street","N Division Street","N East Street","N Elm Street","N Franklin Street","N Front Street","N Harrison Street","N High Street","N Jackson Street","N Jefferson Street","N Lincoln Street","N Locust Street","N Main","N Main Avenue","N Main Street","N Maple Street","N Market Street","N Monroe Street","N Oak Street","N Park Street","N Pearl Street","N Pine Street","N Poplar Street","N Railroad Street","N State Street","N Union Street","N Walnut Street","N Washington Avenue","N Washington Street","N Water Street","Nelson Road","Nelson Street","New Lane","New Road","New Street","Newton Road","Nightingale Close","Norfolk Road","North Avenue","North Lane","North Road","North Street","Northfield Road","Oak Avenue","Oak Drive","Oak Lane","Oak Road","Oak Street","Oakfield Road","Oaklands","Old Lane","Old Military Road","Old Road","Old State Road","Orchard Drive","Orchard Lane","Orchard Road","Orchard Street","Oxford Road","Oxford Street","Park Avenue","Park Crescent","Park Drive","Park Lane","Park Place","Park Road","Park Street","Park View","Parkside","Pearl Street","Pennsylvania Avenue","Pine Close","Pine Grove","Pine Street","Pinfold Lane","Pleasant Street","Poplar Avenue","Poplar Close","Poplar Road","Poplar Street","Post Road","Pound Lane","Princes Street","Princess Street","Priory Close","Priory Road","Prospect Avenue","Prospect Place","Prospect Road","Prospect Street","Quarry Lane","Quarry Road","Queen's Road","Railroad Avenue","Railroad Street","Railway Street","Rectory Close","Rectory Lane","Richmond Close","Richmond Road","Ridge Road","River Road","River Street","Riverside","Riverside Avenue","Riverside Drive","Roman Road","Roman Way","Rowan Close","Russell Street","S 10th Street","S 14th Street","S 1st Avenue","S 1st Street","S 2nd Street","S 3rd Street","S 4th Street","S 5th Street","S 6th Street","S 7th Street","S 8th Street","S 9th Street","S Bridge Street","S Broad Street","S Broadway","S Broadway Street","S Center Street","S Central Avenue","S Chestnut Street","S Church Street","S College Street","S Division Street","S East Street","S Elm Street","S Franklin Street","S Front Street","S Grand Avenue","S High Street","S Jackson Street","S Jefferson Street","S Lincoln Street","S Main","S Main Avenue","S Main Street","S Maple Street","S Market Street","S Mill Street","S Monroe Street","S Oak Street","S Park Street","S Pine Street","S Railroad Street","S State Street","S Union Street","S Walnut Street","S Washington Avenue","S Washington Street","S Water Street","S West Street","Salisbury Road","Sandringham Road","Sandy Lane","School Close","School Lane","School Road","School Street","Second Avenue","Silver Street","Skyline Drive","Smith Street","Somerset Road","South Avenue","South Drive","South Road","South Street","South View","Spring Gardens","Spring Street","Springfield Close","Springfield Road","Spruce Street","St Andrew's Road","St Andrews Close","St George's Road","St John's Road","St Mary's Close","St Mary's Road","Stanley Road","Stanley Street","State Avenue","State Line Road","State Road","State Street","Station Road","Station Street","Stoney Lane","Sycamore Avenue","Sycamore Close","Sycamore Drive","Sycamore Street","Talbot Road","Tennyson Road","The Avenue","The Beeches","The Causeway","The Chase","The Coppice","The Copse","The Crescent","The Croft","The Dell","The Drive","The Fairway","The Glebe","The Grange","The Green","The Grove","The Hawthorns","The Lane","The Laurels","The Limes","The Maltings","The Meadows","The Mews","The Mount","The Oaks","The Orchard","The Oval","The Paddock","The Paddocks","The Poplars","The Ridgeway","The Ridings","The Rise","The Sidings","The Spinney","The Square","The Willows","The Woodlands","Third Avenue","Third Street","Tower Road","Trinity Road","Tudor Close","Union Avenue","Union Street","University Avenue","University Drive","Valley Road","Veterans Memorial Drive","Veterans Memorial Highway","Vicarage Close","Vicarage Lane","Vicarage Road","Victoria Place","Victoria Road","Victoria Street","Vine Street","W 10th Street","W 11th Street","W 12th Street","W 14th Street","W 1st Street","W 2nd Street","W 3rd Street","W 4th Avenue","W 4th Street","W 5th Street","W 6th Avenue","W 6th Street","W 7th Street","W 8th Street","W 9th Street","W Bridge Street","W Broad Street","W Broadway","W Broadway Avenue","W Broadway Street","W Center Street","W Central Avenue","W Chestnut Street","W Church Street","W Division Street","W Elm Street","W Franklin Street","W Front Street","W Grand Avenue","W High Street","W Jackson Street","W Jefferson Street","W Lake Street","W Main","W Main Street","W Maple Street","W Market Street","W Monroe Street","W North Street","W Oak Street","W Park Street","W Pine Street","W River Road","W South Street","W State Street","W Union Street","W Walnut Street","W Washington Avenue","W Washington Street","Walnut Close","Walnut Street","Warren Close","Warren Road","Washington Avenue","Washington Boulevard","Washington Road","Washington Street","Water Lane","Water Street","Waterloo Road","Waterside","Watery Lane","Waverley Road","Well Lane","Wellington Road","Wellington Street","West Avenue","West End","West Lane","West Road","West Street","West View","Western Avenue","Western Road","Westfield Road","Westgate","William Street","Willow Close","Willow Drive","Willow Grove","Willow Road","Willow Street","Windermere Road","Windmill Close","Windmill Lane","Windsor Avenue","Windsor Close","Windsor Drive","Wood Lane","Wood Street","Woodland Close","Woodland Road","Woodlands","Woodlands Avenue","Woodlands Close","Woodlands Road","Woodside","Woodside Road","Wren Close","Yew Tree Close","York Road","York Street"],B2=["{{person.first_name}} {{location.street_suffix}}","{{person.last_name}} {{location.street_suffix}}","{{location.street_name}}"],N2=["Alley","Avenue","Branch","Bridge","Brook","Brooks","Burg","Burgs","Bypass","Camp","Canyon","Cape","Causeway","Center","Centers","Circle","Circles","Cliff","Cliffs","Club","Common","Corner","Corners","Course","Court","Courts","Cove","Coves","Creek","Crescent","Crest","Crossing","Crossroad","Curve","Dale","Dam","Divide","Drive","Drives","Estate","Estates","Expressway","Extension","Extensions","Fall","Falls","Ferry","Field","Fields","Flat","Flats","Ford","Fords","Forest","Forge","Forges","Fork","Forks","Fort","Freeway","Garden","Gardens","Gateway","Glen","Glens","Green","Greens","Grove","Groves","Harbor","Harbors","Haven","Heights","Highway","Hill","Hills","Hollow","Inlet","Island","Islands","Isle","Junction","Junctions","Key","Keys","Knoll","Knolls","Lake","Lakes","Land","Landing","Lane","Light","Lights","Loaf","Lock","Locks","Lodge","Loop","Mall","Manor","Manors","Meadow","Meadows","Mews","Mill","Mills","Mission","Motorway","Mount","Mountain","Mountains","Neck","Orchard","Oval","Overpass","Park","Parks","Parkway","Parkways","Pass","Passage","Path","Pike","Pine","Pines","Place","Plain","Plains","Plaza","Point","Points","Port","Ports","Prairie","Radial","Ramp","Ranch","Rapid","Rapids","Rest","Ridge","Ridges","River","Road","Roads","Route","Row","Rue","Run","Shoal","Shoals","Shore","Shores","Skyway","Spring","Springs","Spur","Spurs","Square","Squares","Station","Stravenue","Stream","Street","Streets","Summit","Terrace","Throughway","Trace","Track","Trafficway","Trail","Tunnel","Turnpike","Underpass","Union","Unions","Valley","Valleys","Via","Viaduct","View","Views","Village","Villages","Ville","Vista","Walk","Walks","Wall","Way","Ways","Well","Wells"],R2={building_number:m2,city_name:F2,city_pattern:h2,city_prefix:f2,city_suffix:y2,country:g2,county:b2,default_country:v2,direction:D2,direction_abbr:E2,postcode:k2,secondary_address:A2,state:w2,state_abbr:C2,street_address:S2,street_name:T2,street_pattern:B2,street_suffix:N2},L2=R2,M2=["a","ab","abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accommodo","accusamus","accusantium","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","ad","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipisci","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alias","alienus","alii","alioqui","aliqua","aliquam","aliquid","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amet","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperiam","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","architecto","arcus","argentum","argumentum","arguo","arma","armarium","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","asperiores","aspernatur","aspicio","asporto","assentator","assumenda","astrum","at","atavus","ater","atque","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","baiulus","balbus","barba","bardus","basium","beatae","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","blanditiis","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodi","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","consectetur","consequatur","consequuntur","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corporis","corpus","correptius","corrigo","corroboro","corrumpo","corrupti","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cumque","cunabula","cunae","cunctatio","cupiditas","cupiditate","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","custodia","damnatio","damno","dapifer","debeo","debilito","debitis","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delectus","delego","deleniti","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","deserunt","desidero","desino","desipio","desolo","desparatus","despecto","dicta","dignissimos","distinctio","dolor","dolore","dolorem","doloremque","dolores","doloribus","dolorum","ducimus","ea","eaque","earum","eius","eligendi","enim","eos","error","esse","est","et","eum","eveniet","ex","excepturi","exercitationem","expedita","explicabo","facere","facilis","fuga","fugiat","fugit","harum","hic","id","illo","illum","impedit","in","incidunt","infit","inflammatio","inventore","ipsa","ipsam","ipsum","iste","itaque","iure","iusto","labore","laboriosam","laborum","laudantium","libero","magnam","magni","maiores","maxime","minima","minus","modi","molestiae","molestias","mollitia","nam","natus","necessitatibus","nemo","neque","nesciunt","nihil","nisi","nobis","non","nostrum","nulla","numquam","occaecati","ocer","odio","odit","officia","officiis","omnis","optio","paens","pariatur","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecus","peior","pel","perferendis","perspiciatis","placeat","porro","possimus","praesentium","provident","quae","quaerat","quam","quas","quasi","qui","quia","quibusdam","quidem","quis","quisquam","quo","quod","quos","ratione","recusandae","reiciendis","rem","repellat","repellendus","reprehenderit","repudiandae","rerum","saepe","sapiente","sed","sequi","similique","sint","sit","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","soluta","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","sunt","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suscipit","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","tempora","tempore","temporibus","temptatio","tempus","tenax","tendo","teneo","tener","tenetur","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totam","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullam","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","ut","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velit","velociter","velum","velut","venia","veniam","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","veritatis","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitae","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","voluptas","voluptate","voluptatem","voluptates","voluptatibus","voluptatum","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","xiphias"],I2={words:M2},x2=I2,O2={title:"English",code:"en",language:"en",endonym:"English",dir:"ltr",script:"Latn"},_2=O2,P2=["Rock","Metal","Pop","Electronic","Folk","World","Country","Jazz","Funk","Soul","Hip Hop","Classical","Latin","Reggae","Stage And Screen","Blues","Non Music","Rap"],G2=["White Christmas","Hey Jude","Every Breath You Take","Mack the Knife","Rock Around the Clock","I Want to Hold Your Hand","(I Can't Get No) Satisfaction","The Twist","(Everything I Do) I Do it For You","Bridge Over Troubled Water","When Doves Cry","Call Me","Bette Davis Eyes","I Will Always Love You","Over the Rainbow","American Pie","Flashdance. What a Feeling","The Way We Were","I Heard it Through the Grapevine","You've Lost That Lovin' Feelin'","Nothing Compares 2 U","Endless Love","Yeah!","Let's Get it On","That's What Friends Are For","You Light Up My Life","(Sittin' On) the Dock of the Bay","Joy to the World","Heartbreak Hotel","Theme From 'A Summer Place'","Aquarius/Let The Sunshine In","I Will Survive","It's Too Late","Respect","Sugar Sugar","Stayin' Alive","Maggie May","My Heart Will Go On","Eye of the Tiger","End of the Road","Another One Bites the Dust","Billie Jean","Let's Stay Together","Battle of New Orleans","Oh","Hound Dog","I Love Rock 'n' Roll","Smooth","Good Vibrations","Physical","Light My Fire","Low","Hey Ya!","Let it Be","Don't Be Cruel","Hotel California","We Belong Together","Le Freak","Raindrops Keep Falling On My Head","How High the Moon","My Girl","I Can't Stop Loving You","Killing Me Softly With His Song","Mona Lisa","In the Mood","She Loves You","The Letter","Mister Sandman","Careless Whisper","What's Love Got to Do With It?","I'm a Believer","Wooly Bully","Theme From 'Shaft'","Hot Stuff","Centerfold","Honky Tonk Woman","I'll Be There","Gangsta's Paradise","Yesterday","My Sharona","Tennessee Waltz","Reach Out (I'll Be There)","California Dreamin'","Jailhouse Rock","Irreplaceable","Dancing in the Street","Rolling In The Deep","Tie a Yellow Ribbon 'round the Old Oak Tree","Stand By Me","Sentimental Journey","The First Time Ever I Saw Your Face","Louie Louie","Another Brick in the Wall (part 2)","(Just Like) Starting Over","Night Fever","To Sir","You're So Vain","Be My Baby","Celebration","(They Long to Be) Close to You","Begin the Beguine","I Still Haven't Found What I'm Looking For","I Want You Back","Arthur's Theme (Best That You Can Do)","Boulevard of Broken Dreams","With Or Without You","Tonight's the Night (Gonna Be Alright)","Are You Lonesome Tonight?","Upside Down","Dancing Queen","Sweet Child O' Mine","Where Did Our Love Go","Unchained Melody","Rudolph","Take My Breath Away","I'll Make Love to You","Love Will Keep Us Together","When a Man Loves a Woman","Walk Like an Egyptian","Crazy in Love","Strangers in the Night","You Belong to Me","In Da Club","Say You","We Are the World","Johnny B Goode","Love Theme From 'A Star is Born' (Evergreen)","Shadow Dancing","Superstition","Beat It","Night & Day","Waterfalls","House of the Rising Sun","Paper Doll","Downtown","I Can't Help Myself (Sugar Pie","Kiss From a Rose","Believe","Ballad of the Green Berets","Proud Mary","Too Young","Umbrella","Swanee","Need You Tonight","Like a Rolling Stone","Lady","One Sweet Day","Lean On Me","Tik-Toc","Monday Monday","What'd I Say","How You Remind Me","Silly Love Songs","My Guy","Macarena","Goodnight","Just My Imagination (Running Away With Me)","The Sounds of Silence","Imagine","Me & Bobby McGee","Near You","What's Going On?","Suspicious Minds","Ode To Billie Joe","Wind Beneath My Wings","The Boy is Mine","Mr Tambourine Man","Faith","Green Onions","Mrs Robinson","How Deep is Your Love?","Hey There","Heart of Glass","Pennies From Heaven","Like a Virgin","Midnight Train to Georgia","Help!","Tossing & Turning","The Sign","Born to Be Wild","Layla","I Just Wanna Be Your Everything","War","96 Tears","I Get Around","Because You Loved Me","Summer in the City","Get Back","Secret Love","9 to 5","(Ghost) Riders in the Sky","The Loco-Motion","Play That Funky Music","Bohemian Rhapsody","Little Things Mean a Lot","Cry","All Shook Up","Up Where We Belong","Sledgehammer","Fire & Rain","Stop! in the Name of Love","Sweet Home Alabama","Another Day in Paradise","Bleeding Love","Lady Marmalade (Voulez-Vous Coucher Aver Moi Ce Soir?)","Whispering","Vogue","Under the Bridge","Sixteen Tons","Sugar Shack","Baby Love","What a Fool Believes","Lose Yourself","Hello Dolly","Brown Eyed Girl","Without You","Build Me Up Buttercup","We Found Love","Tears in Heaven","Family Affair","All I Wanna Do","Soul Man","Tequila","Rock With You","Livin' La Vida Loca","Best of My Love","Runaway","Alone Again (Naturally)","Can't Help Falling in Love","My Sweet Lord","Runaround Sue","Swinging On a Star","Gold Digger","Happy Together","Losing My Religion","Heart of Gold","Stardust","Will You Love Me Tomorrow","You Are the Sunshine of My Life","You Were Meant for Me","Take On Me","Hollaback Girl","God Bless America","I Swear","Sunshine of Your Love","Firework","Groovin'","Smells Like Teen Spirit","Big Girls Don't Cry","Jack & Diane","Addicted to Love","The Last Dance","Georgia On My Mind","Money For Nothing","Jump","Vaya Con Dios (may God Be With You)","You'll Never Know","That'll Be the Day","Girls Just Wanna Have Fun","Wheel of Fortune","When You Wish Upon a Star","Don't Fence Me In","Turn! Turn! Turn! (To Everything There is a Season)","Volare","Sweet Dreams (Are Made of This)","Whole Lotta Love","You've Got a Friend","Penny Lane","People Got to Be Free","Nature Boy","Sexyback","Crying","Single Ladies (Put A Ring On It)","Bad Girls","Too Close","I Got You Babe","We've Only Just Begun","Sh-Boom (Life Could Be a Dream)","Shining Star","Kansas City","Like a Prayer","Cheek to Cheek","Papa Was a Rolling Stone","Promiscuous","Love Shack","Funkytown","Crazy","Philadelphia Freedom","Temperature","Somebody That I Used to Know","All I Have to Do is Dream","Jessie's Girl","Rhinestone Cowboy","Blue Suede Shoes","Ebony & Ivory","I'll Never Smile Again","Keep On Loving You","Since U Been Gone","The Way You Look Tonight","Crazy Little Thing Called Love","The Great Pretender","Brown Sugar","Que sera sera (Whatever will be will be)","No One","Bad Day","Boom Boom Pow","Party Rock Anthem","Because of You","Chattanooga Choo Choo","A Whiter Shade of Pale","Love Me Tender","Higher Love","Footloose","Blurred Lines","I Just Called to Say I Love You","Come Together","It's Now Or Never","Under the Boardwalk","Don't You Want Me","You Can't Hurry Love","Fame","Fallin'","Poker Face","Bad Romance","Ruby Tuesday","All Night Long (All Night)","Baby Got Back","Whole Lotta Shakin' Goin' On","Frenesi","December 1963 (Oh What a Night)","Bad Moon Rising","Abracadabra","I Gotta Feeling","The Song From Moulin Rouge (Where Is Your Heart)","Waiting For a Girl Like You","Everybody Loves Somebody","I Can't Go For That (No Can Do)","Buttons & Bows","It's All in the Game","Love Train","Dance to the Music","Candle in the Wind '97","Honey","Kiss","I'll Take You There","Paint it Black","Band of Gold","Just the Way You Are","Spirit in the Sky","Vision of Love","Hips don't lie","Till The End of Time","Duke of Earl","YMCA","Oh My Papa (O Mein Papa)","Pistol Packin' Mama","Gonna Make You Sweat (Everybody Dance Now)","Dilemma","I Need You Now","Wanted","Jumpin' Jack Flash","Against All Odds (Take a Look At Me Now)","Tom Dooley","Goodbye Yellow Brick Road","Rhapsody in Blue","Bennie & the Jets","Call Me Maybe","You Really Got Me","God Bless the Child","I'm Sorry","Bad","I Can't Get Next to You","The Power of Love","Dreamlover","Only The Lonely (Know The Way I Feel)","We Are Family","At Last","Brand New Key","I've Heard That Song Before","Stay (I Missed You)","Do Ya Think I'm Sexy?","Tutti Frutti","This Ole House","Please Mr Postman","Good Times","Something","(I've Had) the Time of My Life","I Don't Want to Miss a Thing","Down Hearted Blues","Rag Doll","Blueberry Hill","Ain't No Sunshine","Wild Thing","Blaze of Glory","Ray of Light","The Hustle","Grenade","Cathy's Clown","Minnie the Moocher","Love Is Blue (L'Amour Est Bleu)","Iris","The Boys of Summer","The Tide is High","She Drives Me Crazy","Save the Best For Last","These Boots Are Made For Walking","I Feel Love","A Woman in Love","We Can Work it Out","The Reason","Locked Out Of Heaven","Do That to Me One More Time","That's the Way Love Goes","A Hard Day's Night","I Believe I Can Fly","Karma Chameleon","One O'Clock Jump","Mule Train","Car Wash","Rapture","Creep","Streets of Philadelphia","West End Girls","Leader of the Pack","T For Texas (Blue Yodel No 1)","Mama Told Me Not to Come","Just Dance","Mercy Mercy Me (The Ecology)","Livin' On a Prayer","Good Lovin'","50 Ways to Leave Your Lover","Stronger","I Can See Clearly Now","We Are the Champions","(I've Got a Gal In) Kalamazoo","No Scrubs","How Do You Mend a Broken Heart","I Got You (I Feel Good)","Don't Let the Stars Get in Your Eyes","The Girl From Ipanema","(Sexual) Healing","Tears of a Clown","We Will Rock You","Hold On","Bye Bye Love","Chapel of Love","White Rabbit","Rock the Boat","The Gypsy","Take The 'A' Train","Crimson & Clover","Crocodile Rock","Make Love to Me","Nothing's Gonna Stop Us Now","Say Say Say","The Christmas Song (Chestnuts Roasting On An Open Fire)","Un-Break My Heart","Cherish","I'll Be Missing You","Drops of Jupiter (Tell Me)","There goes my baby","You Send Me","If (They Made Me a King)","The Prisoner's Song","ABC","Do Wah Diddy Diddy","He's So Fine","A Boy Named Sue","Roll Over Beethoven","Sweet Georgia Brown","Earth Angel","Rehab","(You Keep Me) Hangin' On","This Diamond Ring","Be My Love","Rush Rush","You're Beautiful","Roll With It","Moonlight Serenade","Unbelievable","Peg o' My Heart","This Land is Your Land","Stranger On the Shore","Rum & Coca-Cola","Hit the Road","Without Me","Crazy For You","I Want to Know What Love Is","Bye Bye","Down Under","At the Hop","One Bad Apple","Kiss & Say Goodbye","For What It's Worth (Stop","The Long & Winding Road","Baby One More Time","Stairway to Heaven","How Do I Live?","Hello","Truly Madly Deeply","Great Balls of Fire","King of the Road","I Wanna Dance With Somebody (Who Loves Me)","Reunited","Help Me","Rags to Riches","(It's No) Sin","Say My Name","Nobody Does it Better","Paperback Writer","Don't Worry Be Happy","I Fall to Pieces","Body & Soul","You're Still the One","Stormy Weather (Keeps Rainin' All the Time)","Horse With No Name","American Woman","Chattanoogie Shoe-Shine Boy","Pick Up the Pieces","Everybody Wants to Rule the World","Blue Tango","Hurt So Good","Apologize","Let's Dance","(You're My) Soul & Inspiration","I Only Have Eyes For You","Wichita Lineman","Hanging by a Moment","Spinning Wheel","Look Away","Ironic","Don't Stop 'Til You Get Enough","Empire State Of Mind","Do You Love Me?","Jive Talkin'","You're the One That I Want","Sweet Soul Music","Hey There Delilah","A Whole New World (Aladdin's Theme)","Somethin' Stupid","Knock Three Times","Mickey","The Wanderer","Dancing in the Dark","It's Still Rock 'n' Roll to Me","Boogie Oogie Oogie","Can You Feel the Love Tonight","Harper Valley PTA","Seasons in the Sun","Come On-a My House","Viva La Vida","Walk On By","Drop it Like It's Hot","Private Eyes","Maniac","All My Lovin' (You're Never Gonna Get It)","Take a Bow","Ring of Fire","Save the Last Dance For Me","Make it With You","Don't Speak","I Shot the Sheriff","Say It Right","Sing","Twist & Shout","Walk This Way","A-Tisket A-Tasket","Let Me Love You","I Can Dream","Toxic","The Joker","Hero","In the Year 2525 (Exordium & Terminus)","Your Song","Oh Happy Day","Grease","Love In This Club","Angie","How Much is That Doggy in the Window?","Daydream Believer","Whip It","Boogie Woogie Bugle Boy","Down","Hanky Panky","Total Eclipse of the Heart","Cat's in the Cradle","Strange Fruit","Breathe","On My Own","Dizzy","Ticket to Ride","We Got The Beat","On the Atchison","Always On My Mind","Unforgettable","In the End","Music","Can't Buy Me Love","Chain of Fools","Won't Get Fooled Again","Happy Days Are Here Again","Third Man Theme","Your Cheatin' Heart","Thriller","Venus","Time After Time","That Lucky Old Sun (Just Rolls Around Heaven All Day)","E.T.","Three Coins in the Fountain","Touch Me","You Ain't Seen Nothin' Yet","Gives You Hell","Knock On Wood","One of These Nights","Again","Doo Wop (That Thing)","Whoomp! (There it Is)","Magic","I'm Walking Behind You","We Didn't Start the Fire","Lola","Ghostbusters","Winchester Cathedral","Greatest Love of All","My Love","Wannabe","Miss You","I Feel Fine","Baby Baby","TSOP (The Sound of Philadelphia)","Loving You","This Guy's in Love With You","Till I Waltz Again With You","Why Do Fools Fall in Love?","Nights in White Satin","That's the Way (I Like It)","My Prayer","(Put Another Nickel In) Music! Music! Music!","Colors of the Wind","Morning Train (Nine to Five)","I Went to Your Wedding","Kiss Me","Gypsies","Cracklin' Rosie","Maybellene","Born in the USA","Here Without You","Mony Mony","Mmmbop","You Always Hurt the One You Love","Eight Days a Week","What Goes Around Comes Around","Kung Fu Fighting","Fantasy","Sir Duke","Ain't Misbehavin'","Need You Now","Last Train to Clarksville","Yakety Yak","I'll be seeing you","Hard to Say I'm Sorry","It's My Party","Love to Love You Baby","Miss You Much","Born to Run","Instant Karma","The Rose","Purple Rain","One","Groove is in the Heart","Gimme Some Lovin'","Beautiful Day","Escape (The Pina Colada Song)","Use Somebody","Fortunate Son","Afternoon Delight","Love's Theme","Sailing","Cherry Pink & Apple Blossom White","Georgy Girl","How to Save a Life","I Walk the Line","All You Need is Love","U Can't Touch This","All Out of Love","Where is the Love?","Revolution","The Love You Save","Black Or White","This Used to Be My Playground","Living For the City","School's Out","Disturbia","Riders On the Storm","Some Enchanted Evening","Weak","Maneater","More Than Words","Time of the Season","Mrs Brown You've Got a Lovely Daughter","If You Leave Me Now","Can't Get Enough of Your Love","Na Na Hey Hey (Kiss Him Goodbye)","Mr Brightside","Black Velvet","I'm Yours","My Blue Heaven","It Had to Be You","Tha Crossroads","Ac-cent-tchu-ate the Positive","Everyday People","We Are Young","Take Me Home","Smoke! Smoke! Smoke! (That Cigarette)","In the Summertime","The Tracks of My Tears","Fly Robin Fly","Love is a Many Splendoured Thing","Another Night","Long Tall Sally","You Sexy Thing","The Morning After","Get Off of My Cloud","Roses Are Red","Thank You (Falettinme be Mice Elf Again)","Slow Poke","You Belong With Me","Ain't No Mountain High Enough","Auf Wiederseh'n Sweetheart","Beauty & the Beast","St Louis Blues","Peggy Sue","U Got it Bad","Sweet Caroline (Good Times Never Seemed So Good)","Wedding Bell Blues","Freebird","Wipe Out","California Girls","Being With You","Makin' Whoopee","Shop Around","Smoke On the Water","Hungry Heart","That's Amore","My Life","Brandy (You're A Fine Girl)","Walk Don't Run","Surfin' USA","Ball of Confusion (That's What the World is Today)","Sunshine Superman","Frankenstein","Kiss You All Over","Wishing Well","Piano Man","Ben","In the Ghetto","Hang On Sloopy","Singing The Blues","Cry Like a Baby","I Honestly Love You","Brother","Lookin' Out My Back Door","Candy Man","Burn","Stagger Lee","Moonlight Cocktail","Coming Up","Pop Muzik","As Time Goes By","My Eyes Adored You","Strawberry Fields Forever","Some of These Days","I Think I Love You","Judy in Disguise (With Glasses)","All Along the Watchtower","A Thousand Miles","Fast Car","Red Red Wine","Live & Let Die","Come On Eileen","Right Back Where We Started From","Brother Louie","Ol' Man River","Band On the Run","Rich Girl","Green River","Got to Give it Up","Behind Closed Doors","Don't Go Breaking My Heart","I'm Looking Over a Four Leaf Clover","Mr Big Stuff","Tiger Rag","Kryptonite","Hey Paula","Go Your Own Way","Big Bad John","Wake Me Up Before You Go Go","Tangerine","Wayward Wind","Disco Lady","Spanish Harlem","Wicked Game","Rosanna","Papa Don't Preach","Somebody to Love","Kokomo","Manana (Is Soon Enough For Me)","Puttin' on the Ritz","One More Try","I'll Walk Alone","Shout","Woman","Ballerina","We Built This City","19th Nervous Breakdown","Working My Way Back to You","Superstar","Foolish Games","Get Down Tonight","On Bended Knee","Magic Carpet Ride","Only You (And You Alone)","A String of Pearls","A Tree in the Meadow","So Much in Love","Every Little Thing She Does is Magic","La Bamba","Tighten Up","Three Times a Lady","Airplanes","Don't Leave Me This Way","Rock the Casbah","Feel Good Inc","Love Me Do","Kiss On My List","Give Me Everything","Have You Ever Really Loved a Woman?","Love Letters in the Sand","Ring My Bell","Love Child","I Feel For You","Bye","(Let Me Be Your) Teddy Bear","Soldier Boy","Papa's Got a Brand New Bag","Love Hangover","Spill the Wine","Royals","April Showers","Don't You (Forget About Me)","Travellin' Man","The Thing","You Make Me Feel Brand New","The Glow-Worm","You Don't Bring Me Flowers","Summertime Blues","Straight Up","Sunday","Wake Up Little Susie","She's a Lady","Over There","Little Darlin'","Rag Mop","Shake Down","Up Around the Bend","Harbour Lights","Chances Are","Mood Indigo","Pony Time","After You've Gone","I Wanna Love You","Da Doo Ron Ron (When He Walked Me Home)","If You Don't Know Me By Now","Green Tambourine","My Man","If I Didn't Care","St George & the Dragonette","Why Don't You Believe Me?","How Will I Know","Disco Duck","Lonely Boy","Never Gonna Give You Up","Before The Next Teardrop Falls","Running Scared","Let's Hear it For the Boy","Sleep Walk","Walk On the Wild Side","Memories Are Made of This","Open Arms","Stuck On You","Personality","Feel Like Making Love","Stars & Stripes Forever","Besame Mucho","Let Me Call You Sweetheart","Indian Reservation (The Lament Of The Cherokee Reservation Indian)","Cars","You Make Me Feel Like Dancing","Whatcha Say","Me & Mrs Jones","Bitter Sweet Symphony","Uncle Albert (Admiral Halsey)","More Than a Feeling","My Boyfriend's Back","People","He'll Have to Go","I Can Help","The Streak","Dreams","Hair","Cold","Nothin' on You","The End of the World","Caldonia Boogie (What Makes Your Big Head So Hard)","I Kissed A Girl","Incense & Peppermints","12th Street Rag","West End Blues","The Way You Move","Smoke Gets in Your Eyes","Want Ads","Long Cool Woman in a Black Dress","Hey Baby","(Your Love Keeps Lifting Me) Higher & Higher","He's a Rebel","Alone","Thrift Shop","Don't Let the Sun Go Down On Me","The Sweet Escape","Return to Sender","Here in My Heart","Wabash Cannonball","Ain't That a Shame","Travellin' Band","I'm Your Boogie Man","I Write the Songs","This Love","Lights","Will It Go Round In Circles","Purple Haze","Rock Your Baby","Delicado","Tammy","Check On It","Breaking Up is Hard to Do","1999","Prisoner of Love","Wild Wild West","Walk Like a Man","I Will Follow Him","Glamorous","Yellow Rose of Texas","That Old Black Magic","I'm So Lonesome I Could Cry","Up Up & Away","Baby Come Back","Let it Snow! Let it Snow! Let it Snow!","Pon De Replay","Because I Love You (The Postman Song)","Sleepy Lagoon","Baker Street","Dardanella","You Don't Have to Be a Star (To Be in My Show)","Leaving","Glory of Love","Theme From 'Greatest American Hero' (Believe It Or Not)","Shake You Down","Ole Buttermilk Sky","I Can't Get Started","Freak Me","Hot Child In The City","Man in the Mirror","Queen of Hearts","Let's Groove","Change the World","You make Me Wanna","Someday","Eve of Destruction","One of Us","Honky Tonk","Be Bop a Lula","Two Hearts","Paper Planes"],H2={genre:P2,song_name:G2},j2=H2,$2=["activist","artist","author","blogger","business owner","coach","creator","designer","developer","dreamer","educator","engineer","entrepreneur","environmentalist","film lover","filmmaker","foodie","founder","friend","gamer","geek","grad","inventor","leader","model","musician","nerd","parent","patriot","person","philosopher","photographer","public speaker","scientist","singer","streamer","student","teacher","traveler","veteran","writer"],W2=["{{person.bio_part}}","{{person.bio_part}}, {{person.bio_part}}","{{person.bio_part}}, {{person.bio_part}}, {{person.bio_part}}","{{person.bio_part}}, {{person.bio_part}}, {{person.bio_part}} {{internet.emoji}}","{{word.noun}} {{person.bio_supporter}}","{{word.noun}} {{person.bio_supporter}}  {{internet.emoji}}","{{word.noun}} {{person.bio_supporter}}, {{person.bio_part}}","{{word.noun}} {{person.bio_supporter}}, {{person.bio_part}} {{internet.emoji}}"],V2=["advocate","devotee","enthusiast","fan","junkie","lover","supporter"],U2=["Mary","Patricia","Linda","Barbara","Elizabeth","Jennifer","Maria","Susan","Margaret","Dorothy","Lisa","Nancy","Karen","Betty","Helen","Sandra","Donna","Carol","Ruth","Sharon","Michelle","Laura","Sarah","Kimberly","Deborah","Jessica","Shirley","Cynthia","Angela","Melissa","Brenda","Amy","Anna","Rebecca","Virginia","Kathleen","Pamela","Martha","Debra","Amanda","Stephanie","Carolyn","Christine","Marie","Janet","Catherine","Frances","Ann","Joyce","Diane","Alice","Julie","Heather","Teresa","Doris","Gloria","Evelyn","Jean","Cheryl","Mildred","Katherine","Joan","Ashley","Judith","Rose","Janice","Kelly","Nicole","Judy","Christina","Kathy","Theresa","Beverly","Denise","Tammy","Irene","Jane","Lori","Rachel","Marilyn","Andrea","Kathryn","Louise","Sara","Anne","Jacqueline","Wanda","Bonnie","Julia","Ruby","Lois","Tina","Phyllis","Norma","Paula","Diana","Annie","Lillian","Emily","Robin","Peggy","Crystal","Gladys","Rita","Dawn","Connie","Florence","Tracy","Edna","Tiffany","Carmen","Rosa","Cindy","Grace","Wendy","Victoria","Edith","Kim","Sherry","Sylvia","Josephine","Thelma","Shannon","Sheila","Ethel","Ellen","Elaine","Marjorie","Carrie","Charlotte","Monica","Esther","Pauline","Emma","Juanita","Anita","Rhonda","Hazel","Amber","Eva","Debbie","April","Leslie","Clara","Lucille","Jamie","Joanne","Eleanor","Valerie","Danielle","Megan","Alicia","Suzanne","Michele","Gail","Bertha","Darlene","Veronica","Jill","Erin","Geraldine","Lauren","Cathy","Joann","Lorraine","Lynn","Sally","Regina","Erica","Beatrice","Dolores","Bernice","Audrey","Yvonne","Annette","June","Samantha","Marion","Dana","Stacy","Ana","Renee","Ida","Vivian","Roberta","Holly","Brittany","Melanie","Loretta","Yolanda","Jeanette","Laurie","Katie","Kristen","Vanessa","Alma","Sue","Elsie","Beth","Jeanne","Vicki","Carla","Tara","Rosemary","Eileen","Terri","Gertrude","Lucy","Tonya","Ella","Stacey","Wilma","Gina","Kristin","Jessie","Natalie","Agnes","Vera","Willie","Charlene","Bessie","Delores","Melinda","Pearl","Arlene","Maureen","Colleen","Allison","Tamara","Joy","Georgia","Constance","Lillie","Claudia","Jackie","Marcia","Tanya","Nellie","Minnie","Marlene","Heidi","Glenda","Lydia","Viola","Courtney","Marian","Stella","Caroline","Dora","Jo","Vickie","Mattie","Terry","Maxine","Irma","Mabel","Marsha","Myrtle","Lena","Christy","Deanna","Patsy","Hilda","Gwendolyn","Jennie","Nora","Margie","Nina","Cassandra","Leah","Penny","Kay","Priscilla","Naomi","Carole","Brandy","Olga","Billie","Dianne","Tracey","Leona","Jenny","Felicia","Sonia","Miriam","Velma","Becky","Bobbie","Violet","Kristina","Toni","Misty","Mae","Shelly","Daisy","Ramona","Sherri","Erika","Katrina","Claire","Lindsey","Lindsay","Geneva","Guadalupe","Belinda","Margarita","Sheryl","Cora","Faye","Ada","Natasha","Sabrina","Isabel","Marguerite","Hattie","Harriet","Molly","Cecilia","Kristi","Brandi","Blanche","Sandy","Rosie","Joanna","Iris","Eunice","Angie","Inez","Lynda","Madeline","Amelia","Alberta","Genevieve","Monique","Jodi","Janie","Maggie","Kayla","Sonya","Jan","Lee","Kristine","Candace","Fannie","Maryann","Opal","Alison","Yvette","Melody","Luz","Susie","Olivia","Flora","Shelley","Kristy","Mamie","Lula","Lola","Verna","Beulah","Antoinette","Candice","Juana","Jeannette","Pam","Kelli","Hannah","Whitney","Bridget","Karla","Celia","Latoya","Patty","Shelia","Gayle","Della","Vicky","Lynne","Sheri","Marianne","Kara","Jacquelyn","Erma","Blanca","Myra","Leticia","Pat","Krista","Roxanne","Angelica","Johnnie","Robyn","Francis","Adrienne","Rosalie","Alexandra","Brooke","Bethany","Sadie","Bernadette","Traci","Jody","Kendra","Jasmine","Nichole","Rachael","Chelsea","Mable","Ernestine","Muriel","Marcella","Elena","Krystal","Angelina","Nadine","Kari","Estelle","Dianna","Paulette","Lora","Mona","Doreen","Rosemarie","Angel","Desiree","Antonia","Hope","Ginger","Janis","Betsy","Christie","Freda","Mercedes","Meredith","Lynette","Teri","Cristina","Eula","Leigh","Meghan","Sophia","Eloise","Rochelle","Gretchen","Cecelia","Raquel","Henrietta","Alyssa","Jana","Kelley","Gwen","Kerry","Jenna","Tricia","Laverne","Olive","Alexis","Tasha","Silvia","Elvira","Casey","Delia","Sophie","Kate","Patti","Lorena","Kellie","Sonja","Lila","Lana","Darla","May","Mindy","Essie","Mandy","Lorene","Elsa","Josefina","Jeannie","Miranda","Dixie","Lucia","Marta","Faith","Lela","Johanna","Shari","Camille","Tami","Shawna","Elisa","Ebony","Melba","Ora","Nettie","Tabitha","Ollie","Jaime","Winifred","Kristie"],z2=["Abigail","Adele","Alex","Alice","Alisha","Amber","Amelia","Amora","Anaïs","Angelou","Anika","Anise","Annabel","Anne","Aphrodite","Aretha","Arya","Ashton","Aster","Audrey","Avery","Bailee","Bay","Belle","Beth","Billie","Blair","Blaise","Blake","Blanche","Blue","Bree","Brielle","Brienne","Brooke","Caleen","Candice","Caprice","Carelyn","Caylen","Celine","Cerise","Cia","Claire","Claudia","Clementine","Coral","Coraline","Dahlia","Dakota","Dawn","Della","Demi","Denise","Denver","Devine","Devon","Diana","Dylan","Ebony","Eden","Eleanor","Elein","Elizabeth","Ellen","Elodie","Eloise","Ember","Emma","Erin","Eyre","Faith","Farrah","Fawn","Fayre","Fern","France","Francis","Frida","Genisis","Georgia","Grace","Gwen","Harley","Harper","Hazel","Helen","Hippolyta","Holly","Hope","Imani","Iowa","Ireland","Irene","Iris","Isa","Isla","Ivy","Jade","Jane","Jazz","Jean","Jess","Jett","Jo","Joan","Jolie","Jordan","Josie","Journey","Joy","Jules","Julien","Juliet","Juniper","Justice","Kali","Karma","Kat","Kate","Kennedy","Keva","Kylie","Lake","Lane","Lark","Layla","Lee","Leigh","Leona","Lexi","London","Lou","Louise","Love","Luna","Lux","Lynn","Lyric","Maddie","Mae","Marie","Matilda","Maude","Maybel","Meadow","Medusa","Mercy","Michelle","Mirabel","Monroe","Morgan","Nalia","Naomi","Nova","Olive","Paige","Parker","Pax","Pearl","Penelope","Phoenix","Quinn","Rae","Rain","Raven","Ray","Raye","Rebel","Reese","Reeve","Regan","Riley","River","Robin","Rory","Rose","Royal","Ruth","Rylie","Sage","Sam","Saturn","Scout","Serena","Sky","Skylar","Sofia","Sophia","Storm","Sue","Suzanne","Sydney","Taylen","Taylor","Teagan","Tempest","Tenley","Thea","Trinity","Valerie","Venus","Vera","Violet","Willow","Winter","Xena","Zaylee","Zion","Zoe"],Yp=["Mrs.","Ms.","Miss","Dr."],q2=["Aaliyah","Aaron","Abagail","Abbey","Abbie","Abbigail","Abby","Abdiel","Abdul","Abdullah","Abe","Abel","Abelardo","Abigail","Abigale","Abigayle","Abner","Abraham","Ada","Adah","Adalberto","Adaline","Adam","Adan","Addie","Addison","Adela","Adelbert","Adele","Adelia","Adeline","Adell","Adella","Adelle","Aditya","Adolf","Adolfo","Adolph","Adolphus","Adonis","Adrain","Adrian","Adriana","Adrianna","Adriel","Adrien","Adrienne","Afton","Aglae","Agnes","Agustin","Agustina","Ahmad","Ahmed","Aida","Aidan","Aiden","Aileen","Aimee","Aisha","Aiyana","Akeem","Al","Alaina","Alan","Alana","Alanis","Alanna","Alayna","Alba","Albert","Alberta","Albertha","Alberto","Albin","Albina","Alda","Alden","Alec","Aleen","Alejandra","Alejandrin","Alek","Alena","Alene","Alessandra","Alessandro","Alessia","Aletha","Alex","Alexa","Alexander","Alexandra","Alexandre","Alexandrea","Alexandria","Alexandrine","Alexandro","Alexane","Alexanne","Alexie","Alexis","Alexys","Alexzander","Alf","Alfonso","Alfonzo","Alford","Alfred","Alfreda","Alfredo","Ali","Alia","Alice","Alicia","Alisa","Alisha","Alison","Alivia","Aliya","Aliyah","Aliza","Alize","Allan","Allen","Allene","Allie","Allison","Ally","Alphonso","Alta","Althea","Alva","Alvah","Alvena","Alvera","Alverta","Alvina","Alvis","Alyce","Alycia","Alysa","Alysha","Alyson","Alysson","Amalia","Amanda","Amani","Amara","Amari","Amaya","Amber","Ambrose","Amelia","Amelie","Amely","America","Americo","Amie","Amina","Amir","Amira","Amiya","Amos","Amparo","Amy","Amya","Ana","Anabel","Anabelle","Anahi","Anais","Anastacio","Anastasia","Anderson","Andre","Andreane","Andreanne","Andres","Andrew","Andy","Angel","Angela","Angelica","Angelina","Angeline","Angelita","Angelo","Angie","Angus","Anibal","Anika","Anissa","Anita","Aniya","Aniyah","Anjali","Anna","Annabel","Annabell","Annabelle","Annalise","Annamae","Annamarie","Anne","Annetta","Annette","Annie","Ansel","Ansley","Anthony","Antoinette","Antone","Antonetta","Antonette","Antonia","Antonietta","Antonina","Antonio","Antwan","Antwon","Anya","April","Ara","Araceli","Aracely","Arch","Archibald","Ardella","Arden","Ardith","Arely","Ari","Ariane","Arianna","Aric","Ariel","Arielle","Arjun","Arlene","Arlie","Arlo","Armand","Armando","Armani","Arnaldo","Arne","Arno","Arnold","Arnoldo","Arnulfo","Aron","Art","Arthur","Arturo","Arvel","Arvid","Arvilla","Aryanna","Asa","Asha","Ashlee","Ashleigh","Ashley","Ashly","Ashlynn","Ashton","Ashtyn","Asia","Assunta","Astrid","Athena","Aubree","Aubrey","Audie","Audra","Audreanne","Audrey","August","Augusta","Augustine","Augustus","Aurelia","Aurelie","Aurelio","Aurore","Austen","Austin","Austyn","Autumn","Ava","Avery","Avis","Axel","Ayana","Ayden","Ayla","Aylin","Baby","Bailee","Bailey","Barbara","Barney","Baron","Barrett","Barry","Bart","Bartholome","Barton","Baylee","Beatrice","Beau","Beaulah","Bell","Bella","Belle","Ben","Benedict","Benjamin","Bennett","Bennie","Benny","Benton","Berenice","Bernadette","Bernadine","Bernard","Bernardo","Berneice","Bernhard","Bernice","Bernie","Berniece","Bernita","Berry","Bert","Berta","Bertha","Bertram","Bertrand","Beryl","Bessie","Beth","Bethany","Bethel","Betsy","Bette","Bettie","Betty","Bettye","Beulah","Beverly","Bianka","Bill","Billie","Billy","Birdie","Blair","Blaise","Blake","Blanca","Blanche","Blaze","Bo","Bobbie","Bobby","Bonita","Bonnie","Boris","Boyd","Brad","Braden","Bradford","Bradley","Bradly","Brady","Braeden","Brain","Brandi","Brando","Brandon","Brandt","Brandy","Brandyn","Brannon","Branson","Brant","Braulio","Braxton","Brayan","Breana","Breanna","Breanne","Brenda","Brendan","Brenden","Brendon","Brenna","Brennan","Brennon","Brent","Bret","Brett","Bria","Brian","Briana","Brianne","Brice","Bridget","Bridgette","Bridie","Brielle","Brigitte","Brionna","Brisa","Britney","Brittany","Brock","Broderick","Brody","Brook","Brooke","Brooklyn","Brooks","Brown","Bruce","Bryana","Bryce","Brycen","Bryon","Buck","Bud","Buddy","Buford","Bulah","Burdette","Burley","Burnice","Buster","Cade","Caden","Caesar","Caitlyn","Cale","Caleb","Caleigh","Cali","Calista","Callie","Camden","Cameron","Camila","Camilla","Camille","Camren","Camron","Camryn","Camylle","Candace","Candelario","Candice","Candida","Candido","Cara","Carey","Carissa","Carlee","Carleton","Carley","Carli","Carlie","Carlo","Carlos","Carlotta","Carmel","Carmela","Carmella","Carmelo","Carmen","Carmine","Carol","Carolanne","Carole","Carolina","Caroline","Carolyn","Carolyne","Carrie","Carroll","Carson","Carter","Cary","Casandra","Casey","Casimer","Casimir","Casper","Cassandra","Cassandre","Cassidy","Cassie","Catalina","Caterina","Catharine","Catherine","Cathrine","Cathryn","Cathy","Cayla","Ceasar","Cecelia","Cecil","Cecile","Cecilia","Cedrick","Celestine","Celestino","Celia","Celine","Cesar","Chad","Chadd","Chadrick","Chaim","Chance","Chandler","Chanel","Chanelle","Charity","Charlene","Charles","Charley","Charlie","Charlotte","Chase","Chasity","Chauncey","Chaya","Chaz","Chelsea","Chelsey","Chelsie","Chesley","Chester","Chet","Cheyanne","Cheyenne","Chloe","Chris","Christ","Christa","Christelle","Christian","Christiana","Christina","Christine","Christop","Christophe","Christopher","Christy","Chyna","Ciara","Cicero","Cielo","Cierra","Cindy","Citlalli","Clair","Claire","Clara","Clarabelle","Clare","Clarissa","Clark","Claud","Claude","Claudia","Claudie","Claudine","Clay","Clemens","Clement","Clementina","Clementine","Clemmie","Cleo","Cleora","Cleta","Cletus","Cleve","Cleveland","Clifford","Clifton","Clint","Clinton","Clotilde","Clovis","Cloyd","Clyde","Coby","Cody","Colby","Cole","Coleman","Colin","Colleen","Collin","Colt","Colten","Colton","Columbus","Concepcion","Conner","Connie","Connor","Conor","Conrad","Constance","Constantin","Consuelo","Cooper","Cora","Coralie","Corbin","Cordelia","Cordell","Cordia","Cordie","Corene","Corine","Cornelius","Cornell","Corrine","Cortez","Cortney","Cory","Coty","Courtney","Coy","Craig","Crawford","Creola","Cristal","Cristian","Cristina","Cristobal","Cristopher","Cruz","Crystal","Crystel","Cullen","Curt","Curtis","Cydney","Cynthia","Cyril","Cyrus","Dagmar","Dahlia","Daija","Daisha","Daisy","Dakota","Dale","Dallas","Dallin","Dalton","Damaris","Dameon","Damian","Damien","Damion","Damon","Dan","Dana","Dandre","Dane","D'angelo","Dangelo","Danial","Daniela","Daniella","Danielle","Danika","Dannie","Danny","Dante","Danyka","Daphne","Daphnee","Daphney","Darby","Daren","Darian","Dariana","Darien","Dario","Darion","Darius","Darlene","Daron","Darrel","Darrell","Darren","Darrick","Darrin","Darrion","Darron","Darryl","Darwin","Daryl","Dashawn","Dasia","Dave","David","Davin","Davion","Davon","Davonte","Dawn","Dawson","Dax","Dayana","Dayna","Dayne","Dayton","Dean","Deangelo","Deanna","Deborah","Declan","Dedric","Dedrick","Dee","Deion","Deja","Dejah","Dejon","Dejuan","Delaney","Delbert","Delfina","Delia","Delilah","Dell","Della","Delmer","Delores","Delpha","Delphia","Delphine","Delta","Demarco","Demarcus","Demario","Demetris","Demetrius","Demond","Dena","Denis","Dennis","Deon","Deondre","Deontae","Deonte","Dereck","Derek","Derick","Deron","Derrick","Deshaun","Deshawn","Desiree","Desmond","Dessie","Destany","Destin","Destinee","Destiney","Destini","Destiny","Devan","Devante","Deven","Devin","Devon","Devonte","Devyn","Dewayne","Dewitt","Dexter","Diamond","Diana","Dianna","Diego","Dillan","Dillon","Dimitri","Dina","Dino","Dion","Dixie","Dock","Dolly","Dolores","Domenic","Domenica","Domenick","Domenico","Domingo","Dominic","Dominique","Don","Donald","Donato","Donavon","Donna","Donnell","Donnie","Donny","Dora","Dorcas","Dorian","Doris","Dorothea","Dorothy","Dorris","Dortha","Dorthy","Doug","Douglas","Dovie","Doyle","Drake","Drew","Duane","Dudley","Dulce","Duncan","Durward","Dustin","Dusty","Dwight","Dylan","Earl","Earlene","Earline","Earnest","Earnestine","Easter","Easton","Ebba","Ebony","Ed","Eda","Edd","Eddie","Eden","Edgar","Edgardo","Edison","Edmond","Edmund","Edna","Eduardo","Edward","Edwardo","Edwin","Edwina","Edyth","Edythe","Effie","Efrain","Efren","Eileen","Einar","Eino","Eladio","Elaina","Elbert","Elda","Eldon","Eldora","Eldred","Eldridge","Eleanora","Eleanore","Eleazar","Electa","Elena","Elenor","Elenora","Eleonore","Elfrieda","Eli","Elian","Eliane","Elias","Eliezer","Elijah","Elinor","Elinore","Elisa","Elisabeth","Elise","Eliseo","Elisha","Elissa","Eliza","Elizabeth","Ella","Ellen","Ellie","Elliot","Elliott","Ellis","Ellsworth","Elmer","Elmira","Elmo","Elmore","Elna","Elnora","Elody","Eloisa","Eloise","Elouise","Eloy","Elroy","Elsa","Else","Elsie","Elta","Elton","Elva","Elvera","Elvie","Elvis","Elwin","Elwyn","Elyse","Elyssa","Elza","Emanuel","Emelia","Emelie","Emely","Emerald","Emerson","Emery","Emie","Emil","Emile","Emilia","Emiliano","Emilie","Emilio","Emily","Emma","Emmalee","Emmanuel","Emmanuelle","Emmet","Emmett","Emmie","Emmitt","Emmy","Emory","Ena","Enid","Enoch","Enola","Enos","Enrico","Enrique","Ephraim","Era","Eriberto","Eric","Erica","Erich","Erick","Ericka","Erik","Erika","Erin","Erling","Erna","Ernest","Ernestina","Ernestine","Ernesto","Ernie","Ervin","Erwin","Eryn","Esmeralda","Esperanza","Esta","Esteban","Estefania","Estel","Estell","Estella","Estelle","Estevan","Esther","Estrella","Etha","Ethan","Ethel","Ethelyn","Ethyl","Ettie","Eudora","Eugene","Eugenia","Eula","Eulah","Eulalia","Euna","Eunice","Eusebio","Eva","Evalyn","Evan","Evangeline","Evans","Eve","Eveline","Evelyn","Everardo","Everett","Everette","Evert","Evie","Ewald","Ewell","Ezekiel","Ezequiel","Ezra","Fabian","Fabiola","Fae","Fannie","Fanny","Fatima","Faustino","Fausto","Favian","Fay","Faye","Federico","Felicia","Felicita","Felicity","Felipa","Felipe","Felix","Felton","Fermin","Fern","Fernando","Ferne","Fidel","Filiberto","Filomena","Finn","Fiona","Flavie","Flavio","Fleta","Fletcher","Flo","Florence","Florencio","Florian","Florida","Florine","Flossie","Floy","Floyd","Ford","Forest","Forrest","Foster","Frances","Francesca","Francesco","Francis","Francisca","Francisco","Franco","Frank","Frankie","Franz","Fred","Freda","Freddie","Freddy","Frederic","Frederick","Frederik","Frederique","Fredrick","Fredy","Freeda","Freeman","Freida","Frida","Frieda","Friedrich","Fritz","Furman","Gabe","Gabriel","Gabriella","Gabrielle","Gaetano","Gage","Gail","Gardner","Garett","Garfield","Garland","Garnet","Garnett","Garret","Garrett","Garrick","Garrison","Garry","Garth","Gaston","Gavin","Gayle","Gene","General","Genesis","Genevieve","Gennaro","Genoveva","Geo","Geoffrey","George","Georgette","Georgiana","Georgianna","Geovanni","Geovanny","Geovany","Gerald","Geraldine","Gerard","Gerardo","Gerda","Gerhard","Germaine","German","Gerry","Gerson","Gertrude","Gia","Gianni","Gideon","Gilbert","Gilberto","Gilda","Giles","Gillian","Gina","Gino","Giovani","Giovanna","Giovanni","Giovanny","Gisselle","Giuseppe","Gladyce","Gladys","Glen","Glenda","Glenna","Glennie","Gloria","Godfrey","Golda","Golden","Gonzalo","Gordon","Grace","Gracie","Graciela","Grady","Graham","Grant","Granville","Grayce","Grayson","Green","Greg","Gregg","Gregoria","Gregorio","Gregory","Greta","Gretchen","Greyson","Griffin","Grover","Guadalupe","Gudrun","Guido","Guillermo","Guiseppe","Gunnar","Gunner","Gus","Gussie","Gust","Gustave","Guy","Gwen","Gwendolyn","Hadley","Hailee","Hailey","Hailie","Hal","Haleigh","Haley","Halie","Halle","Hallie","Hank","Hanna","Hannah","Hans","Hardy","Harley","Harmon","Harmony","Harold","Harrison","Harry","Harvey","Haskell","Hassan","Hassie","Hattie","Haven","Hayden","Haylee","Hayley","Haylie","Hazel","Hazle","Heath","Heather","Heaven","Heber","Hector","Heidi","Helen","Helena","Helene","Helga","Hellen","Helmer","Heloise","Henderson","Henri","Henriette","Henry","Herbert","Herman","Hermann","Hermina","Herminia","Herminio","Hershel","Herta","Hertha","Hester","Hettie","Hilario","Hilbert","Hilda","Hildegard","Hillard","Hillary","Hilma","Hilton","Hipolito","Hiram","Hobart","Holden","Hollie","Hollis","Holly","Hope","Horace","Horacio","Hortense","Hosea","Houston","Howard","Howell","Hoyt","Hubert","Hudson","Hugh","Hulda","Humberto","Hunter","Hyman","Ian","Ibrahim","Icie","Ida","Idell","Idella","Ignacio","Ignatius","Ike","Ila","Ilene","Iliana","Ima","Imani","Imelda","Immanuel","Imogene","Ines","Irma","Irving","Irwin","Isaac","Isabel","Isabell","Isabella","Isabelle","Isac","Isadore","Isai","Isaiah","Isaias","Isidro","Ismael","Isobel","Isom","Israel","Issac","Itzel","Iva","Ivah","Ivory","Ivy","Izabella","Izaiah","Jabari","Jace","Jacey","Jacinthe","Jacinto","Jack","Jackeline","Jackie","Jacklyn","Jackson","Jacky","Jaclyn","Jacquelyn","Jacques","Jacynthe","Jada","Jade","Jaden","Jadon","Jadyn","Jaeden","Jaida","Jaiden","Jailyn","Jaime","Jairo","Jakayla","Jake","Jakob","Jaleel","Jalen","Jalon","Jalyn","Jamaal","Jamal","Jamar","Jamarcus","Jamel","Jameson","Jamey","Jamie","Jamil","Jamir","Jamison","Jammie","Jan","Jana","Janae","Jane","Janelle","Janessa","Janet","Janice","Janick","Janie","Janis","Janiya","Jannie","Jany","Jaquan","Jaquelin","Jaqueline","Jared","Jaren","Jarod","Jaron","Jarred","Jarrell","Jarret","Jarrett","Jarrod","Jarvis","Jasen","Jasmin","Jason","Jasper","Jaunita","Javier","Javon","Javonte","Jay","Jayce","Jaycee","Jayda","Jayde","Jayden","Jaydon","Jaylan","Jaylen","Jaylin","Jaylon","Jayme","Jayne","Jayson","Jazlyn","Jazmin","Jazmyn","Jazmyne","Jean","Jeanette","Jeanie","Jeanne","Jed","Jedediah","Jedidiah","Jeff","Jefferey","Jeffery","Jeffrey","Jeffry","Jena","Jenifer","Jennie","Jennifer","Jennings","Jennyfer","Jensen","Jerad","Jerald","Jeramie","Jeramy","Jerel","Jeremie","Jeremy","Jermain","Jermaine","Jermey","Jerod","Jerome","Jeromy","Jerrell","Jerrod","Jerrold","Jerry","Jess","Jesse","Jessica","Jessie","Jessika","Jessy","Jessyca","Jesus","Jett","Jettie","Jevon","Jewel","Jewell","Jillian","Jimmie","Jimmy","Jo","Joan","Joana","Joanie","Joanne","Joannie","Joanny","Joany","Joaquin","Jocelyn","Jodie","Jody","Joe","Joel","Joelle","Joesph","Joey","Johan","Johann","Johanna","Johathan","John","Johnathan","Johnathon","Johnnie","Johnny","Johnpaul","Johnson","Jolie","Jon","Jonas","Jonatan","Jonathan","Jonathon","Jordan","Jordane","Jordi","Jordon","Jordy","Jordyn","Jorge","Jose","Josefa","Josefina","Joseph","Josephine","Josh","Joshua","Joshuah","Josiah","Josiane","Josianne","Josie","Josue","Jovan","Jovani","Jovanny","Jovany","Joy","Joyce","Juana","Juanita","Judah","Judd","Jude","Judge","Judson","Judy","Jules","Julia","Julian","Juliana","Julianne","Julie","Julien","Juliet","Julio","Julius","June","Junior","Junius","Justen","Justice","Justina","Justine","Juston","Justus","Justyn","Juvenal","Juwan","Kacey","Kaci","Kacie","Kade","Kaden","Kadin","Kaela","Kaelyn","Kaia","Kailee","Kailey","Kailyn","Kaitlin","Kaitlyn","Kale","Kaleb","Kaleigh","Kaley","Kali","Kallie","Kameron","Kamille","Kamren","Kamron","Kamryn","Kane","Kara","Kareem","Karelle","Karen","Kari","Kariane","Karianne","Karina","Karine","Karl","Karlee","Karley","Karli","Karlie","Karolann","Karson","Kasandra","Kasey","Kassandra","Katarina","Katelin","Katelyn","Katelynn","Katharina","Katherine","Katheryn","Kathleen","Kathlyn","Kathryn","Kathryne","Katlyn","Katlynn","Katrina","Katrine","Kattie","Kavon","Kay","Kaya","Kaycee","Kayden","Kayla","Kaylah","Kaylee","Kayleigh","Kayley","Kayli","Kaylie","Kaylin","Keagan","Keanu","Keara","Keaton","Keegan","Keeley","Keely","Keenan","Keira","Keith","Kellen","Kelley","Kelli","Kellie","Kelly","Kelsi","Kelsie","Kelton","Kelvin","Ken","Kendall","Kendra","Kendrick","Kenna","Kennedi","Kennedy","Kenneth","Kennith","Kenny","Kenton","Kenya","Kenyatta","Kenyon","Keon","Keshaun","Keshawn","Keven","Kevin","Kevon","Keyon","Keyshawn","Khalid","Khalil","Kian","Kiana","Kianna","Kiara","Kiarra","Kiel","Kiera","Kieran","Kiley","Kim","Kimberly","King","Kip","Kira","Kirk","Kirsten","Kirstin","Kitty","Kobe","Koby","Kody","Kolby","Kole","Korbin","Korey","Kory","Kraig","Kris","Krista","Kristian","Kristin","Kristina","Kristofer","Kristoffer","Kristopher","Kristy","Krystal","Krystel","Krystina","Kurt","Kurtis","Kyla","Kyle","Kylee","Kyleigh","Kyler","Kylie","Kyra","Lacey","Lacy","Ladarius","Lafayette","Laila","Laisha","Lamar","Lambert","Lamont","Lance","Landen","Lane","Laney","Larissa","Laron","Larry","Larue","Laura","Laurel","Lauren","Laurence","Lauretta","Lauriane","Laurianne","Laurie","Laurine","Laury","Lauryn","Lavada","Lavern","Laverna","Laverne","Lavina","Lavinia","Lavon","Lavonne","Lawrence","Lawson","Layla","Layne","Lazaro","Lea","Leann","Leanna","Leanne","Leatha","Leda","Lee","Leif","Leila","Leilani","Lela","Lelah","Leland","Lelia","Lempi","Lemuel","Lenna","Lennie","Lenny","Lenora","Lenore","Leo","Leola","Leon","Leonard","Leonardo","Leone","Leonel","Leonie","Leonor","Leonora","Leopold","Leopoldo","Leora","Lera","Lesley","Leslie","Lesly","Lessie","Lester","Leta","Letha","Letitia","Levi","Lew","Lewis","Lexi","Lexie","Lexus","Lia","Liam","Liana","Libbie","Libby","Lila","Lilian","Liliana","Liliane","Lilla","Lillian","Lilliana","Lillie","Lilly","Lily","Lilyan","Lina","Lincoln","Linda","Lindsay","Lindsey","Linnea","Linnie","Linwood","Lionel","Lisa","Lisandro","Lisette","Litzy","Liza","Lizeth","Lizzie","Llewellyn","Lloyd","Logan","Lois","Lola","Lolita","Loma","Lon","London","Lonie","Lonnie","Lonny","Lonzo","Lora","Loraine","Loren","Lorena","Lorenz","Lorenza","Lorenzo","Lori","Lorine","Lorna","Lottie","Lou","Louie","Louisa","Lourdes","Louvenia","Lowell","Loy","Loyal","Loyce","Lucas","Luciano","Lucie","Lucienne","Lucile","Lucinda","Lucio","Lucious","Lucius","Lucy","Ludie","Ludwig","Lue","Luella","Luigi","Luis","Luisa","Lukas","Lula","Lulu","Luna","Lupe","Lura","Lurline","Luther","Luz","Lyda","Lydia","Lyla","Lynn","Lyric","Lysanne","Mabel","Mabelle","Mable","Mac","Macey","Maci","Macie","Mack","Mackenzie","Macy","Madaline","Madalyn","Maddison","Madeline","Madelyn","Madelynn","Madge","Madie","Madilyn","Madisen","Madison","Madisyn","Madonna","Madyson","Mae","Maegan","Maeve","Mafalda","Magali","Magdalen","Magdalena","Maggie","Magnolia","Magnus","Maia","Maida","Maiya","Major","Makayla","Makenna","Makenzie","Malachi","Malcolm","Malika","Malinda","Mallie","Mallory","Malvina","Mandy","Manley","Manuel","Manuela","Mara","Marc","Marcel","Marcelina","Marcelino","Marcella","Marcelle","Marcellus","Marcelo","Marcia","Marco","Marcos","Marcus","Margaret","Margarete","Margarett","Margaretta","Margarette","Margarita","Marge","Margie","Margot","Margret","Marguerite","Maria","Mariah","Mariam","Marian","Mariana","Mariane","Marianna","Marianne","Mariano","Maribel","Marie","Mariela","Marielle","Marietta","Marilie","Marilou","Marilyne","Marina","Mario","Marion","Marisa","Marisol","Maritza","Marjolaine","Marjorie","Marjory","Mark","Markus","Marlee","Marlen","Marlene","Marley","Marlin","Marlon","Marques","Marquis","Marquise","Marshall","Marta","Martin","Martina","Martine","Marty","Marvin","Mary","Maryam","Maryjane","Maryse","Mason","Mateo","Mathew","Mathias","Mathilde","Matilda","Matilde","Matt","Matteo","Mattie","Maud","Maude","Maudie","Maureen","Maurice","Mauricio","Maurine","Maverick","Mavis","Max","Maxie","Maxime","Maximilian","Maximillia","Maximillian","Maximo","Maximus","Maxine","Maxwell","May","Maya","Maybell","Maybelle","Maye","Maymie","Maynard","Mayra","Mazie","Mckayla","Mckenna","Mckenzie","Meagan","Meaghan","Meda","Megane","Meggie","Meghan","Mekhi","Melany","Melba","Melisa","Melissa","Mellie","Melody","Melvin","Melvina","Melyna","Melyssa","Mercedes","Meredith","Merl","Merle","Merlin","Merritt","Mertie","Mervin","Meta","Mia","Micaela","Micah","Michael","Michaela","Michale","Micheal","Michel","Michele","Michelle","Miguel","Mikayla","Mike","Mikel","Milan","Miles","Milford","Miller","Millie","Milo","Milton","Mina","Minerva","Minnie","Miracle","Mireille","Mireya","Misael","Missouri","Misty","Mitchel","Mitchell","Mittie","Modesta","Modesto","Mohamed","Mohammad","Mohammed","Moises","Mollie","Molly","Mona","Monica","Monique","Monroe","Monserrat","Monserrate","Montana","Monte","Monty","Morgan","Moriah","Morris","Mortimer","Morton","Mose","Moses","Moshe","Mossie","Mozell","Mozelle","Muhammad","Muriel","Murl","Murphy","Murray","Mustafa","Mya","Myah","Mylene","Myles","Myra","Myriam","Myrl","Myrna","Myron","Myrtice","Myrtie","Myrtis","Myrtle","Nadia","Nakia","Name","Nannie","Naomi","Naomie","Napoleon","Narciso","Nash","Nasir","Nat","Natalia","Natalie","Natasha","Nathan","Nathanael","Nathanial","Nathaniel","Nathen","Nayeli","Neal","Ned","Nedra","Neha","Neil","Nelda","Nella","Nelle","Nellie","Nels","Nelson","Neoma","Nestor","Nettie","Neva","Newell","Newton","Nia","Nicholas","Nicholaus","Nichole","Nick","Nicklaus","Nickolas","Nico","Nicola","Nicolas","Nicole","Nicolette","Nigel","Nikita","Nikki","Nikko","Niko","Nikolas","Nils","Nina","Noah","Noble","Noe","Noel","Noelia","Noemi","Noemie","Noemy","Nola","Nolan","Nona","Nora","Norbert","Norberto","Norene","Norma","Norris","Norval","Norwood","Nova","Novella","Nya","Nyah","Nyasia","Obie","Oceane","Ocie","Octavia","Oda","Odell","Odessa","Odie","Ofelia","Okey","Ola","Olaf","Ole","Olen","Oleta","Olga","Olin","Oliver","Ollie","Oma","Omari","Omer","Ona","Onie","Opal","Ophelia","Ora","Oral","Oran","Oren","Orie","Orin","Orion","Orland","Orlando","Orlo","Orpha","Orrin","Orval","Orville","Osbaldo","Osborne","Oscar","Osvaldo","Oswald","Oswaldo","Otha","Otho","Otilia","Otis","Ottilie","Ottis","Otto","Ova","Owen","Ozella","Pablo","Paige","Palma","Pamela","Pansy","Paolo","Paris","Parker","Pascale","Pasquale","Pat","Patience","Patricia","Patrick","Patsy","Pattie","Paul","Paula","Pauline","Paxton","Payton","Pearl","Pearlie","Pearline","Pedro","Peggie","Penelope","Percival","Percy","Perry","Pete","Peter","Petra","Peyton","Philip","Phoebe","Phyllis","Pierce","Pierre","Pietro","Pink","Pinkie","Piper","Polly","Porter","Precious","Presley","Preston","Price","Prince","Princess","Priscilla","Providenci","Prudence","Queen","Queenie","Quentin","Quincy","Quinn","Quinten","Quinton","Rachael","Rachel","Rachelle","Rae","Raegan","Rafael","Rafaela","Raheem","Rahsaan","Rahul","Raina","Raleigh","Ralph","Ramiro","Ramon","Ramona","Randal","Randall","Randi","Randy","Ransom","Raoul","Raphael","Raphaelle","Raquel","Rashad","Rashawn","Rasheed","Raul","Raven","Ray","Raymond","Raymundo","Reagan","Reanna","Reba","Rebeca","Rebecca","Rebeka","Rebekah","Reece","Reed","Reese","Regan","Reggie","Reginald","Reid","Reilly","Reina","Reinhold","Remington","Rene","Renee","Ressie","Reta","Retha","Retta","Reuben","Reva","Rex","Rey","Reyes","Reymundo","Reyna","Reynold","Rhea","Rhett","Rhianna","Rhiannon","Rhoda","Ricardo","Richard","Richie","Richmond","Rick","Rickey","Rickie","Ricky","Rico","Rigoberto","Riley","Rita","River","Robb","Robbie","Robert","Roberta","Roberto","Robin","Robyn","Rocio","Rocky","Rod","Roderick","Rodger","Rodolfo","Rodrick","Rodrigo","Roel","Rogelio","Roger","Rogers","Rolando","Rollin","Roma","Romaine","Roman","Ron","Ronaldo","Ronny","Roosevelt","Rory","Rosa","Rosalee","Rosalia","Rosalind","Rosalinda","Rosalyn","Rosamond","Rosanna","Rosario","Roscoe","Rose","Rosella","Roselyn","Rosemarie","Rosemary","Rosendo","Rosetta","Rosie","Rosina","Roslyn","Ross","Rossie","Rowan","Rowena","Rowland","Roxane","Roxanne","Roy","Royal","Royce","Rozella","Ruben","Rubie","Ruby","Rubye","Rudolph","Rudy","Rupert","Russ","Russel","Russell","Rusty","Ruth","Ruthe","Ruthie","Ryan","Ryann","Ryder","Rylan","Rylee","Ryleigh","Ryley","Sabina","Sabrina","Sabryna","Sadie","Sadye","Sage","Saige","Sallie","Sally","Salma","Salvador","Salvatore","Sam","Samanta","Samantha","Samara","Samir","Sammie","Sammy","Samson","Sandra","Sandrine","Sandy","Sanford","Santa","Santiago","Santina","Santino","Santos","Sarah","Sarai","Sarina","Sasha","Saul","Savanah","Savanna","Savannah","Savion","Scarlett","Schuyler","Scot","Scottie","Scotty","Seamus","Sean","Sebastian","Sedrick","Selena","Selina","Selmer","Serena","Serenity","Seth","Shad","Shaina","Shakira","Shana","Shane","Shanel","Shanelle","Shania","Shanie","Shaniya","Shanna","Shannon","Shanny","Shanon","Shany","Sharon","Shaun","Shawn","Shawna","Shaylee","Shayna","Shayne","Shea","Sheila","Sheldon","Shemar","Sheridan","Sherman","Sherwood","Shirley","Shyann","Shyanne","Sibyl","Sid","Sidney","Sienna","Sierra","Sigmund","Sigrid","Sigurd","Silas","Sim","Simeon","Simone","Sincere","Sister","Skye","Skyla","Skylar","Sofia","Soledad","Solon","Sonia","Sonny","Sonya","Sophia","Sophie","Spencer","Stacey","Stacy","Stan","Stanford","Stanley","Stanton","Stefan","Stefanie","Stella","Stephan","Stephania","Stephanie","Stephany","Stephen","Stephon","Sterling","Steve","Stevie","Stewart","Stone","Stuart","Summer","Sunny","Susan","Susana","Susanna","Susie","Suzanne","Sven","Syble","Sydnee","Sydney","Sydni","Sydnie","Sylvan","Sylvester","Sylvia","Tabitha","Tad","Talia","Talon","Tamara","Tamia","Tania","Tanner","Tanya","Tara","Taryn","Tate","Tatum","Tatyana","Taurean","Tavares","Taya","Taylor","Teagan","Ted","Telly","Terence","Teresa","Terrance","Terrell","Terrence","Terrill","Terry","Tess","Tessie","Tevin","Thad","Thaddeus","Thalia","Thea","Thelma","Theo","Theodora","Theodore","Theresa","Therese","Theresia","Theron","Thomas","Thora","Thurman","Tia","Tiana","Tianna","Tiara","Tierra","Tiffany","Tillman","Timmothy","Timmy","Timothy","Tina","Tito","Titus","Tobin","Toby","Tod","Tom","Tomas","Tomasa","Tommie","Toney","Toni","Tony","Torey","Torrance","Torrey","Toy","Trace","Tracey","Tracy","Travis","Travon","Tre","Tremaine","Tremayne","Trent","Trenton","Tressa","Tressie","Treva","Trever","Trevion","Trevor","Trey","Trinity","Trisha","Tristian","Tristin","Triston","Troy","Trudie","Trycia","Trystan","Turner","Twila","Tyler","Tyra","Tyree","Tyreek","Tyrel","Tyrell","Tyrese","Tyrique","Tyshawn","Tyson","Ubaldo","Ulices","Ulises","Una","Unique","Urban","Uriah","Uriel","Ursula","Vada","Valentin","Valentina","Valentine","Valerie","Vallie","Van","Vance","Vanessa","Vaughn","Veda","Velda","Vella","Velma","Velva","Vena","Verda","Verdie","Vergie","Verla","Verlie","Vern","Verna","Verner","Vernice","Vernie","Vernon","Verona","Veronica","Vesta","Vicenta","Vicente","Vickie","Vicky","Victor","Victoria","Vida","Vidal","Vilma","Vince","Vincent","Vincenza","Vincenzo","Vinnie","Viola","Violet","Violette","Virgie","Virgil","Virginia","Virginie","Vita","Vito","Viva","Vivian","Viviane","Vivianne","Vivien","Vivienne","Vladimir","Wade","Waino","Waldo","Walker","Wallace","Walter","Walton","Wanda","Ward","Warren","Watson","Wava","Waylon","Wayne","Webster","Weldon","Wellington","Wendell","Wendy","Werner","Westley","Weston","Whitney","Wilber","Wilbert","Wilburn","Wiley","Wilford","Wilfred","Wilfredo","Wilfrid","Wilhelm","Wilhelmine","Will","Willa","Willard","William","Willie","Willis","Willow","Willy","Wilma","Wilmer","Wilson","Wilton","Winfield","Winifred","Winnifred","Winona","Winston","Woodrow","Wyatt","Wyman","Xander","Xavier","Xzavier","Yadira","Yasmeen","Yasmin","Yasmine","Yazmin","Yesenia","Yessenia","Yolanda","Yoshiko","Yvette","Yvonne","Zachariah","Zachary","Zachery","Zack","Zackary","Zackery","Zakary","Zander","Zane","Zaria","Zechariah","Zelda","Zella","Zelma","Zena","Zetta","Zion","Zita","Zoe","Zoey","Zoie","Zoila","Zola","Zora","Zula"],K2=["Agender","Androgyne","Androgynous","Bigender","Cis female","Cis male","Cis man","Cis woman","Cis","Cisgender female","Cisgender male","Cisgender man","Cisgender woman","Cisgender","Demi-boy","Demi-girl","Demi-man","Demi-woman","Demiflux","Demigender","F2M","FTM","Female to male trans man","Female to male transgender man","Female to male transsexual man","Female to male","Gender fluid","Gender neutral","Gender nonconforming","Gender questioning","Gender variant","Genderflux","Genderqueer","Hermaphrodite","Intersex man","Intersex person","Intersex woman","Intersex","M2F","MTF","Male to female trans woman","Male to female transgender woman","Male to female transsexual woman","Male to female","Man","Multigender","Neither","Neutrois","Non-binary","Omnigender","Other","Pangender","Polygender","T* man","T* woman","Trans female","Trans male","Trans man","Trans person","Trans woman","Trans","Transexual female","Transexual male","Transexual man","Transexual person","Transexual woman","Transexual","Transgender female","Transgender person","Transmasculine","Trigender","Two* person","Two-spirit person","Two-spirit","Woman","Xenogender"],J2=["{{person.jobDescriptor}} {{person.jobArea}} {{person.jobType}}"],Y2=["Abbott","Abernathy","Abshire","Adams","Altenwerth","Anderson","Ankunding","Armstrong","Auer","Aufderhar","Bahringer","Bailey","Balistreri","Barrows","Bartell","Bartoletti","Barton","Bashirian","Batz","Bauch","Baumbach","Bayer","Beahan","Beatty","Bechtelar","Becker","Bednar","Beer","Beier","Berge","Bergnaum","Bergstrom","Bernhard","Bernier","Bins","Blanda","Blick","Block","Bode","Boehm","Bogan","Bogisich","Borer","Bosco","Botsford","Boyer","Boyle","Bradtke","Brakus","Braun","Breitenberg","Brekke","Brown","Bruen","Buckridge","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Conn","Connelly","Conroy","Considine","Corkery","Cormier","Corwin","Cremin","Crist","Crona","Cronin","Crooks","Cruickshank","Cummerata","Cummings","Dach","D'Amore","Daniel","Dare","Daugherty","Davis","Deckow","Denesik","Dibbert","Dickens","Dicki","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","DuBuque","Durgan","Ebert","Effertz","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feest","Feil","Ferry","Fisher","Flatley","Frami","Franecki","Franey","Friesen","Fritsch","Funk","Gerhold","Gerlach","Gibson","Gislason","Gleason","Gleichner","Glover","Goldner","Goodwin","Gorczany","Gottlieb","Goyette","Grady","Graham","Grant","Green","Greenfelder","Greenholt","Grimes","Gulgowski","Gusikowski","Gutkowski","Gutmann","Haag","Hackett","Hagenes","Hahn","Haley","Halvorson","Hamill","Hammes","Hand","Hane","Hansen","Harber","Harris","Hartmann","Harvey","Hauck","Hayes","Heaney","Heathcote","Hegmann","Heidenreich","Heller","Herman","Hermann","Hermiston","Herzog","Hessel","Hettinger","Hickle","Hilll","Hills","Hilpert","Hintz","Hirthe","Hodkiewicz","Hoeger","Homenick","Hoppe","Howe","Howell","Hudson","Huel","Huels","Hyatt","Jacobi","Jacobs","Jacobson","Jakubowski","Jaskolski","Jast","Jenkins","Jerde","Johns","Johnson","Johnston","Jones","Kassulke","Kautzer","Keebler","Keeling","Kemmer","Kerluke","Kertzmann","Kessler","Kiehn","Kihn","Kilback","King","Kirlin","Klein","Kling","Klocko","Koch","Koelpin","Koepp","Kohler","Konopelski","Koss","Kovacek","Kozey","Krajcik","Kreiger","Kris","Kshlerin","Kub","Kuhic","Kuhlman","Kuhn","Kulas","Kunde","Kunze","Kuphal","Kutch","Kuvalis","Labadie","Lakin","Lang","Langosh","Langworth","Larkin","Larson","Leannon","Lebsack","Ledner","Leffler","Legros","Lehner","Lemke","Lesch","Leuschke","Lind","Lindgren","Littel","Little","Lockman","Lowe","Lubowitz","Lueilwitz","Luettgen","Lynch","Macejkovic","MacGyver","Maggio","Mann","Mante","Marks","Marquardt","Marvin","Mayer","Mayert","McClure","McCullough","McDermott","McGlynn","McKenzie","McLaughlin","Medhurst","Mertz","Metz","Miller","Mills","Mitchell","Moen","Mohr","Monahan","Moore","Morar","Morissette","Mosciski","Mraz","Mueller","Muller","Murazik","Murphy","Murray","Nader","Nicolas","Nienow","Nikolaus","Nitzsche","Nolan","Oberbrunner","O'Connell","O'Conner","O'Hara","O'Keefe","O'Kon","Okuneva","Olson","Ondricka","O'Reilly","Orn","Ortiz","Osinski","Pacocha","Padberg","Pagac","Parisian","Parker","Paucek","Pfannerstill","Pfeffer","Pollich","Pouros","Powlowski","Predovic","Price","Prohaska","Prosacco","Purdy","Quigley","Quitzon","Rath","Ratke","Rau","Raynor","Reichel","Reichert","Reilly","Reinger","Rempel","Renner","Reynolds","Rice","Rippin","Ritchie","Robel","Roberts","Rodriguez","Rogahn","Rohan","Rolfson","Romaguera","Roob","Rosenbaum","Rowe","Ruecker","Runolfsdottir","Runolfsson","Runte","Russel","Rutherford","Ryan","Sanford","Satterfield","Sauer","Sawayn","Schaden","Schaefer","Schamberger","Schiller","Schimmel","Schinner","Schmeler","Schmidt","Schmitt","Schneider","Schoen","Schowalter","Schroeder","Schulist","Schultz","Schumm","Schuppe","Schuster","Senger","Shanahan","Shields","Simonis","Sipes","Skiles","Smith","Smitham","Spencer","Spinka","Sporer","Stamm","Stanton","Stark","Stehr","Steuber","Stiedemann","Stokes","Stoltenberg","Stracke","Streich","Stroman","Strosin","Swaniawski","Swift","Terry","Thiel","Thompson","Tillman","Torp","Torphy","Towne","Toy","Trantow","Tremblay","Treutel","Tromp","Turcotte","Turner","Ullrich","Upton","Vandervort","Veum","Volkman","Von","VonRueden","Waelchi","Walker","Walsh","Walter","Ward","Waters","Watsica","Weber","Wehner","Weimann","Weissnat","Welch","West","White","Wiegand","Wilderman","Wilkinson","Will","Williamson","Willms","Windler","Wintheiser","Wisoky","Wisozk","Witting","Wiza","Wolf","Wolff","Wuckert","Wunsch","Wyman","Yost","Yundt","Zboncak","Zemlak","Ziemann","Zieme","Zulauf"],Q2=[{value:"{{person.last_name}}",weight:95},{value:"{{person.last_name}}-{{person.last_name}}",weight:5}],X2=["James","John","Robert","Michael","William","David","Richard","Charles","Joseph","Thomas","Christopher","Daniel","Paul","Mark","Donald","George","Kenneth","Steven","Edward","Brian","Ronald","Anthony","Kevin","Jason","Matthew","Gary","Timothy","Jose","Larry","Jeffrey","Frank","Scott","Eric","Stephen","Andrew","Raymond","Gregory","Joshua","Jerry","Dennis","Walter","Patrick","Peter","Harold","Douglas","Henry","Carl","Arthur","Ryan","Roger","Joe","Juan","Jack","Albert","Jonathan","Justin","Terry","Gerald","Keith","Samuel","Willie","Ralph","Lawrence","Nicholas","Roy","Benjamin","Bruce","Brandon","Adam","Harry","Fred","Wayne","Billy","Steve","Louis","Jeremy","Aaron","Randy","Howard","Eugene","Carlos","Russell","Bobby","Victor","Martin","Ernest","Phillip","Todd","Jesse","Craig","Alan","Shawn","Clarence","Sean","Philip","Chris","Johnny","Earl","Jimmy","Antonio","Danny","Bryan","Tony","Luis","Mike","Stanley","Leonard","Nathan","Dale","Manuel","Rodney","Curtis","Norman","Allen","Marvin","Vincent","Glenn","Jeffery","Travis","Jeff","Chad","Jacob","Lee","Melvin","Alfred","Kyle","Francis","Bradley","Jesus","Herbert","Frederick","Ray","Joel","Edwin","Don","Eddie","Ricky","Troy","Randall","Barry","Alexander","Bernard","Mario","Leroy","Francisco","Marcus","Micheal","Theodore","Clifford","Miguel","Oscar","Jay","Jim","Tom","Calvin","Alex","Jon","Ronnie","Bill","Lloyd","Tommy","Leon","Derek","Warren","Darrell","Jerome","Floyd","Leo","Alvin","Tim","Wesley","Gordon","Dean","Greg","Jorge","Dustin","Pedro","Derrick","Dan","Lewis","Zachary","Corey","Herman","Maurice","Vernon","Roberto","Clyde","Glen","Hector","Shane","Ricardo","Sam","Rick","Lester","Brent","Ramon","Charlie","Tyler","Gilbert","Gene","Marc","Reginald","Ruben","Brett","Angel","Nathaniel","Rafael","Leslie","Edgar","Milton","Raul","Ben","Chester","Cecil","Duane","Franklin","Andre","Elmer","Brad","Gabriel","Ron","Mitchell","Roland","Arnold","Harvey","Jared","Adrian","Karl","Cory","Claude","Erik","Darryl","Jamie","Neil","Jessie","Christian","Javier","Fernando","Clinton","Ted","Mathew","Tyrone","Darren","Lonnie","Lance","Cody","Julio","Kelly","Kurt","Allan","Nelson","Guy","Clayton","Hugh","Max","Dwayne","Dwight","Armando","Felix","Jimmie","Everett","Jordan","Ian","Wallace","Ken","Bob","Jaime","Casey","Alfredo","Alberto","Dave","Ivan","Johnnie","Sidney","Byron","Julian","Isaac","Morris","Clifton","Willard","Daryl","Ross","Virgil","Andy","Marshall","Salvador","Perry","Kirk","Sergio","Marion","Tracy","Seth","Kent","Terrance","Rene","Eduardo","Terrence","Enrique","Freddie","Wade","Austin","Stuart","Fredrick","Arturo","Alejandro","Jackie","Joey","Nick","Luther","Wendell","Jeremiah","Evan","Julius","Dana","Donnie","Otis","Shannon","Trevor","Oliver","Luke","Homer","Gerard","Doug","Kenny","Hubert","Angelo","Shaun","Lyle","Matt","Lynn","Alfonso","Orlando","Rex","Carlton","Ernesto","Cameron","Neal","Pablo","Lorenzo","Omar","Wilbur","Blake","Grant","Horace","Roderick","Kerry","Abraham","Willis","Rickey","Jean","Ira","Andres","Cesar","Johnathan","Malcolm","Rudolph","Damon","Kelvin","Rudy","Preston","Alton","Archie","Marco","Wm","Pete","Randolph","Garry","Geoffrey","Jonathon","Felipe","Bennie","Gerardo","Ed","Dominic","Robin","Loren","Delbert","Colin","Guillermo","Earnest","Lucas","Benny","Noel","Spencer","Rodolfo","Myron","Edmund","Garrett","Salvatore","Cedric","Lowell","Gregg","Sherman","Wilson","Devin","Sylvester","Kim","Roosevelt","Israel","Jermaine","Forrest","Wilbert","Leland","Simon","Guadalupe","Clark","Irving","Carroll","Bryant","Owen","Rufus","Woodrow","Sammy","Kristopher","Mack","Levi","Marcos","Gustavo","Jake","Lionel","Marty","Taylor","Ellis","Dallas","Gilberto","Clint","Nicolas","Laurence","Ismael","Orville","Drew","Jody","Ervin","Dewey","Al","Wilfred","Josh","Hugo","Ignacio","Caleb","Tomas","Sheldon","Erick","Frankie","Stewart","Doyle","Darrel","Rogelio","Terence","Santiago","Alonzo","Elias","Bert","Elbert","Ramiro","Conrad","Pat","Noah","Grady","Phil","Cornelius","Lamar","Rolando","Clay","Percy","Dexter","Bradford","Merle","Darin","Amos","Terrell","Moses","Irvin","Saul","Roman","Darnell","Randal","Tommie","Timmy","Darrin","Winston","Brendan","Toby","Van","Abel","Dominick","Boyd","Courtney","Jan","Emilio","Elijah","Cary","Domingo","Santos","Aubrey","Emmett","Marlon","Emanuel","Jerald","Edmond"],Z2=["Ace","Aiden","Alexander","Ander","Anthony","Asher","August","Aziel","Bear","Beckham","Benjamin","Buddy","Calvin","Carter","Charles","Christopher","Clyde","Cooper","Daniel","David","Dior","Dylan","Elijah","Ellis","Emerson","Ethan","Ezra","Fletcher","Flynn","Gabriel","Grayson","Gus","Hank","Harrison","Hendrix","Henry","Houston","Hudson","Hugh","Isaac","Jack","Jackson","Jacob","Jakobe","James","Jaxon","Jaxtyn","Jayden","John","Joseph","Josiah","Jude","Julian","Karsyn","Kenji","Kobe","Kylo","Lennon","Leo","Levi","Liam","Lincoln","Logan","Louis","Lucas","Lucky","Luke","Mason","Mateo","Matthew","Maverick","Michael","Monroe","Nixon","Ocean","Oliver","Otis","Otto","Owen","Ozzy","Parker","Rocky","Samuel","Sebastian","Sonny","Teddy","Theo","Theodore","Thomas","Truett","Walter","Warren","Watson","William","Wison","Wyatt","Ziggy","Zyair"],Qp=["Mr.","Dr."],ev=["Addison","Alex","Anderson","Angel","Arden","August","Austin","Avery","Bailey","Billie","Blake","Bowie","Brooklyn","Cameron","Charlie","Corey","Dakota","Drew","Elliott","Ellis","Emerson","Finley","Gray","Greer","Harper","Hayden","Jaden","James","Jamie","Jordan","Jules","Kai","Kendall","Kennedy","Kyle","Leslie","Logan","London","Marlowe","Micah","Nico","Noah","North","Parker","Phoenix","Quinn","Reagan","Reese","Reign","Riley","River","Robin","Rory","Rowan","Ryan","Sage","Sasha","Sawyer","Shawn","Shiloh","Skyler","Taylor"],rv=[{value:"{{person.firstName}} {{person.lastName}}",weight:49},{value:"{{person.prefix}} {{person.firstName}} {{person.lastName}}",weight:7},{value:"{{person.firstName}} {{person.lastName}} {{person.suffix}}",weight:7},{value:"{{person.prefix}} {{person.firstName}} {{person.lastName}} {{person.suffix}}",weight:1}];function Xp(...e){return[...new Set(e.flat())].sort()}var tv=Xp(Yp,Qp),av=["female","male"],nv=["Jr.","Sr.","I","II","III","IV","V","MD","DDS","PhD","DVM"],iv={descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liaison","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]},ov=["Aquarius","Pisces","Aries","Taurus","Gemini","Cancer","Leo","Virgo","Libra","Scorpio","Sagittarius","Capricorn"],uv={bio_part:$2,bio_pattern:W2,bio_supporter:V2,female_first_name:U2,female_middle_name:z2,female_prefix:Yp,first_name:q2,gender:K2,job_title_pattern:J2,last_name:Y2,last_name_pattern:Q2,male_first_name:X2,male_middle_name:Z2,male_prefix:Qp,middle_name:ev,name:rv,prefix:tv,sex:av,suffix:nv,title:iv,western_zodiac_sign:ov},sv=uv,lv=["!##-!##-####","(!##) !##-####","1-!##-!##-####","!##.!##.####","!##-!##-#### x###","(!##) !##-#### x###","1-!##-!##-#### x###","!##.!##.#### x###","!##-!##-#### x####","(!##) !##-#### x####","1-!##-!##-#### x####","!##.!##.#### x####","!##-!##-#### x#####","(!##) !##-#### x#####","1-!##-!##-#### x#####","!##.!##.#### x#####"],cv={formats:lv},dv=cv,pv=Object.freeze([{symbol:"H",name:"Hydrogen",atomicNumber:1},{symbol:"He",name:"Helium",atomicNumber:2},{symbol:"Li",name:"Lithium",atomicNumber:3},{symbol:"Be",name:"Beryllium",atomicNumber:4},{symbol:"B",name:"Boron",atomicNumber:5},{symbol:"C",name:"Carbon",atomicNumber:6},{symbol:"N",name:"Nitrogen",atomicNumber:7},{symbol:"O",name:"Oxygen",atomicNumber:8},{symbol:"F",name:"Fluorine",atomicNumber:9},{symbol:"Ne",name:"Neon",atomicNumber:10},{symbol:"Na",name:"Sodium",atomicNumber:11},{symbol:"Mg",name:"Magnesium",atomicNumber:12},{symbol:"Al",name:"Aluminium",atomicNumber:13},{symbol:"Si",name:"Silicon",atomicNumber:14},{symbol:"P",name:"Phosphorus",atomicNumber:15},{symbol:"S",name:"Sulfur",atomicNumber:16},{symbol:"Cl",name:"Chlorine",atomicNumber:17},{symbol:"Ar",name:"Argon",atomicNumber:18},{symbol:"K",name:"Potassium",atomicNumber:19},{symbol:"Ca",name:"Calcium",atomicNumber:20},{symbol:"Sc",name:"Scandium",atomicNumber:21},{symbol:"Ti",name:"Titanium",atomicNumber:22},{symbol:"V",name:"Vanadium",atomicNumber:23},{symbol:"Cr",name:"Chromium",atomicNumber:24},{symbol:"Mn",name:"Manganese",atomicNumber:25},{symbol:"Fe",name:"Iron",atomicNumber:26},{symbol:"Co",name:"Cobalt",atomicNumber:27},{symbol:"Ni",name:"Nickel",atomicNumber:28},{symbol:"Cu",name:"Copper",atomicNumber:29},{symbol:"Zn",name:"Zinc",atomicNumber:30},{symbol:"Ga",name:"Gallium",atomicNumber:31},{symbol:"Ge",name:"Germanium",atomicNumber:32},{symbol:"As",name:"Arsenic",atomicNumber:33},{symbol:"Se",name:"Selenium",atomicNumber:34},{symbol:"Br",name:"Bromine",atomicNumber:35},{symbol:"Kr",name:"Krypton",atomicNumber:36},{symbol:"Rb",name:"Rubidium",atomicNumber:37},{symbol:"Sr",name:"Strontium",atomicNumber:38},{symbol:"Y",name:"Yttrium",atomicNumber:39},{symbol:"Zr",name:"Zirconium",atomicNumber:40},{symbol:"Nb",name:"Niobium",atomicNumber:41},{symbol:"Mo",name:"Molybdenum",atomicNumber:42},{symbol:"Tc",name:"Technetium",atomicNumber:43},{symbol:"Ru",name:"Ruthenium",atomicNumber:44},{symbol:"Rh",name:"Rhodium",atomicNumber:45},{symbol:"Pd",name:"Palladium",atomicNumber:46},{symbol:"Ag",name:"Silver",atomicNumber:47},{symbol:"Cd",name:"Cadmium",atomicNumber:48},{symbol:"In",name:"Indium",atomicNumber:49},{symbol:"Sn",name:"Tin",atomicNumber:50},{symbol:"Sb",name:"Antimony",atomicNumber:51},{symbol:"Te",name:"Tellurium",atomicNumber:52},{symbol:"I",name:"Iodine",atomicNumber:53},{symbol:"Xe",name:"Xenon",atomicNumber:54},{symbol:"Cs",name:"Caesium",atomicNumber:55},{symbol:"Ba",name:"Barium",atomicNumber:56},{symbol:"La",name:"Lanthanum",atomicNumber:57},{symbol:"Ce",name:"Cerium",atomicNumber:58},{symbol:"Pr",name:"Praseodymium",atomicNumber:59},{symbol:"Nd",name:"Neodymium",atomicNumber:60},{symbol:"Pm",name:"Promethium",atomicNumber:61},{symbol:"Sm",name:"Samarium",atomicNumber:62},{symbol:"Eu",name:"Europium",atomicNumber:63},{symbol:"Gd",name:"Gadolinium",atomicNumber:64},{symbol:"Tb",name:"Terbium",atomicNumber:65},{symbol:"Dy",name:"Dysprosium",atomicNumber:66},{symbol:"Ho",name:"Holmium",atomicNumber:67},{symbol:"Er",name:"Erbium",atomicNumber:68},{symbol:"Tm",name:"Thulium",atomicNumber:69},{symbol:"Yb",name:"Ytterbium",atomicNumber:70},{symbol:"Lu",name:"Lutetium",atomicNumber:71},{symbol:"Hf",name:"Hafnium",atomicNumber:72},{symbol:"Ta",name:"Tantalum",atomicNumber:73},{symbol:"W",name:"Tungsten",atomicNumber:74},{symbol:"Re",name:"Rhenium",atomicNumber:75},{symbol:"Os",name:"Osmium",atomicNumber:76},{symbol:"Ir",name:"Iridium",atomicNumber:77},{symbol:"Pt",name:"Platinum",atomicNumber:78},{symbol:"Au",name:"Gold",atomicNumber:79},{symbol:"Hg",name:"Mercury",atomicNumber:80},{symbol:"Tl",name:"Thallium",atomicNumber:81},{symbol:"Pb",name:"Lead",atomicNumber:82},{symbol:"Bi",name:"Bismuth",atomicNumber:83},{symbol:"Po",name:"Polonium",atomicNumber:84},{symbol:"At",name:"Astatine",atomicNumber:85},{symbol:"Rn",name:"Radon",atomicNumber:86},{symbol:"Fr",name:"Francium",atomicNumber:87},{symbol:"Ra",name:"Radium",atomicNumber:88},{symbol:"Ac",name:"Actinium",atomicNumber:89},{symbol:"Th",name:"Thorium",atomicNumber:90},{symbol:"Pa",name:"Protactinium",atomicNumber:91},{symbol:"U",name:"Uranium",atomicNumber:92},{symbol:"Np",name:"Neptunium",atomicNumber:93},{symbol:"Pu",name:"Plutonium",atomicNumber:94},{symbol:"Am",name:"Americium",atomicNumber:95},{symbol:"Cm",name:"Curium",atomicNumber:96},{symbol:"Bk",name:"Berkelium",atomicNumber:97},{symbol:"Cf",name:"Californium",atomicNumber:98},{symbol:"Es",name:"Einsteinium",atomicNumber:99},{symbol:"Fm",name:"Fermium",atomicNumber:100},{symbol:"Md",name:"Mendelevium",atomicNumber:101},{symbol:"No",name:"Nobelium",atomicNumber:102},{symbol:"Lr",name:"Lawrencium",atomicNumber:103},{symbol:"Rf",name:"Rutherfordium",atomicNumber:104},{symbol:"Db",name:"Dubnium",atomicNumber:105},{symbol:"Sg",name:"Seaborgium",atomicNumber:106},{symbol:"Bh",name:"Bohrium",atomicNumber:107},{symbol:"Hs",name:"Hassium",atomicNumber:108},{symbol:"Mt",name:"Meitnerium",atomicNumber:109},{symbol:"Ds",name:"Darmstadtium",atomicNumber:110},{symbol:"Rg",name:"Roentgenium",atomicNumber:111},{symbol:"Cn",name:"Copernicium",atomicNumber:112},{symbol:"Nh",name:"Nihonium",atomicNumber:113},{symbol:"Fl",name:"Flerovium",atomicNumber:114},{symbol:"Mc",name:"Moscovium",atomicNumber:115},{symbol:"Lv",name:"Livermorium",atomicNumber:116},{symbol:"Ts",name:"Tennessine",atomicNumber:117},{symbol:"Og",name:"Oganesson",atomicNumber:118}]),mv=Object.freeze([{name:"meter",symbol:"m"},{name:"second",symbol:"s"},{name:"mole",symbol:"mol"},{name:"ampere",symbol:"A"},{name:"kelvin",symbol:"K"},{name:"candela",symbol:"cd"},{name:"kilogram",symbol:"kg"},{name:"radian",symbol:"rad"},{name:"hertz",symbol:"Hz"},{name:"newton",symbol:"N"},{name:"pascal",symbol:"Pa"},{name:"joule",symbol:"J"},{name:"watt",symbol:"W"},{name:"coulomb",symbol:"C"},{name:"volt",symbol:"V"},{name:"ohm",symbol:"Ω"},{name:"tesla",symbol:"T"},{name:"degree Celsius",symbol:"°C"},{name:"lumen",symbol:"lm"},{name:"becquerel",symbol:"Bq"},{name:"gray",symbol:"Gy"},{name:"sievert",symbol:"Sv"},{name:"steradian",symbol:"sr"},{name:"farad",symbol:"F"},{name:"siemens",symbol:"S"},{name:"weber",symbol:"Wb"},{name:"henry",symbol:"H"},{name:"lux",symbol:"lx"},{name:"katal",symbol:"kat"}]),Fv={chemicalElement:pv,unit:mv},hv=Fv,fv=["ants","bats","bears","bees","birds","buffalo","cats","chickens","cattle","dogs","dolphins","ducks","elephants","fishes","foxes","frogs","geese","goats","horses","kangaroos","lions","monkeys","owls","oxen","penguins","people","pigs","rabbits","sheep","tigers","whales","wolves","zebras","banshees","crows","black cats","chimeras","ghosts","conspirators","dragons","dwarves","elves","enchanters","exorcists","sons","foes","giants","gnomes","goblins","gooses","griffins","lycanthropes","nemesis","ogres","oracles","prophets","sorcerors","spiders","spirits","vampires","warlocks","vixens","werewolves","witches","worshipers","zombies","druids"],yv=["{{location.state}} {{team.creature}}"],gv={creature:fv,name:yv},bv=gv,vv=["Adventure Road Bicycle","BMX Bicycle","City Bicycle","Cruiser Bicycle","Cyclocross Bicycle","Dual-Sport Bicycle","Fitness Bicycle","Flat-Foot Comfort Bicycle","Folding Bicycle","Hybrid Bicycle","Mountain Bicycle","Recumbent Bicycle","Road Bicycle","Tandem Bicycle","Touring Bicycle","Track/Fixed-Gear Bicycle","Triathlon/Time Trial Bicycle","Tricycle"],Dv=["Diesel","Electric","Gasoline","Hybrid"],Ev=["Aston Martin","Audi","Bentley","BMW","Bugatti","Cadillac","Chevrolet","Chrysler","Dodge","Ferrari","Fiat","Ford","Honda","Hyundai","Jaguar","Jeep","Kia","Lamborghini","Land Rover","Maserati","Mazda","Mercedes Benz","Mini","Nissan","Polestar","Porsche","Rolls Royce","Smart","Tesla","Toyota","Volkswagen","Volvo"],kv=["Fiesta","Focus","Taurus","Mustang","Explorer","Expedition","F-150","Model T","Ranchero","Volt","Cruze","Malibu","Impala","Camaro","Corvette","Colorado","Silverado","El Camino","CTS","XTS","ATS","Escalade","Alpine","Charger","LeBaron","PT Cruiser","Challenger","Durango","Grand Caravan","Wrangler","Grand Cherokee","Roadster","Model S","Model 3","Model X","Model Y","Camry","Prius","Land Cruiser","Accord","Civic","Element","Sentra","Altima","A8","A4","Beetle","Jetta","Golf","911","Spyder","Countach","Mercielago","Aventador","1","2","Fortwo","V90","XC90","CX-9"],Av=["Cargo Van","Convertible","Coupe","Crew Cab Pickup","Extended Cab Pickup","Hatchback","Minivan","Passenger Van","SUV","Sedan","Wagon"],wv={bicycle_type:vv,fuel:Dv,manufacturer:Ev,model:kv,type:Av},Cv=wv,Sv=["abandoned","able","absolute","adorable","adventurous","academic","acceptable","acclaimed","accomplished","accurate","aching","acidic","acrobatic","active","actual","adept","admirable","admired","adolescent","adored","advanced","afraid","affectionate","aged","aggravating","aggressive","agile","agitated","agonizing","agreeable","ajar","alarmed","alarming","alert","alienated","alive","all","altruistic","amazing","ambitious","ample","amused","amusing","anchored","ancient","angelic","angry","anguished","animated","annual","another","antique","anxious","any","apprehensive","appropriate","apt","arctic","arid","aromatic","artistic","ashamed","assured","astonishing","athletic","attached","attentive","attractive","austere","authentic","authorized","automatic","avaricious","average","aware","awesome","awful","awkward","babyish","bad","back","baggy","bare","barren","basic","beautiful","belated","beloved","beneficial","better","best","bewitched","big","big-hearted","biodegradable","bite-sized","bitter","black","black-and-white","bland","blank","blaring","bleak","blind","blissful","blond","blue","blushing","bogus","boiling","bold","bony","boring","bossy","both","bouncy","bountiful","bowed","brave","breakable","brief","bright","brilliant","brisk","broken","bronze","brown","bruised","bubbly","bulky","bumpy","buoyant","burdensome","burly","bustling","busy","buttery","buzzing","calculating","calm","candid","canine","capital","carefree","careful","careless","caring","cautious","cavernous","celebrated","charming","cheap","cheerful","cheery","chief","chilly","chubby","circular","classic","clean","clear","clear-cut","clever","close","closed","cloudy","clueless","clumsy","cluttered","coarse","cold","colorful","colorless","colossal","comfortable","common","compassionate","competent","complete","complex","complicated","composed","concerned","concrete","confused","conscious","considerate","constant","content","conventional","cooked","cool","cooperative","coordinated","corny","corrupt","costly","courageous","courteous","crafty","crazy","creamy","creative","creepy","criminal","crisp","critical","crooked","crowded","cruel","crushing","cuddly","cultivated","cultured","cumbersome","curly","curvy","cute","cylindrical","damaged","damp","dangerous","dapper","daring","darling","dark","dazzling","dead","deadly","deafening","dear","dearest","decent","decimal","decisive","deep","defenseless","defensive","defiant","deficient","definite","definitive","delayed","delectable","delicious","delightful","delirious","demanding","dense","dental","dependable","dependent","descriptive","deserted","detailed","determined","devoted","different","difficult","digital","diligent","dim","dimpled","direct","disastrous","discrete","disgusting","disloyal","dismal","distant","downright","dreary","dirty","disguised","dishonest","distinct","distorted","dizzy","doting","double","drab","drafty","dramatic","droopy","dry","dual","dull","dutiful","each","eager","earnest","early","easy","easy-going","ecstatic","edible","educated","elaborate","elastic","elated","elderly","electric","elegant","elementary","elliptical","embarrassed","embellished","eminent","emotional","empty","enchanted","enchanting","energetic","enlightened","enormous","enraged","entire","envious","equal","equatorial","essential","esteemed","ethical","euphoric","even","evergreen","everlasting","every","evil","exalted","excellent","exemplary","exhausted","excitable","excited","exciting","exotic","expensive","experienced","expert","extraneous","extroverted","extra-large","extra-small","fabulous","failing","faint","fair","faithful","fake","false","familiar","famous","fancy","fantastic","far","faraway","far-flung","far-off","fast","fat","fatal","fatherly","favorable","favorite","fearful","fearless","feisty","feline","female","feminine","few","fickle","filthy","fine","finished","firm","first","firsthand","fitting","fixed","flaky","flamboyant","flashy","flat","flawed","flawless","flickering","flimsy","flippant","flowery","fluffy","fluid","flustered","focused","fond","foolhardy","foolish","forceful","forked","formal","forsaken","forthright","fortunate","fragrant","frail","frank","frayed","free","french","fresh","frequent","friendly","frightened","frightening","frigid","frilly","frizzy","frivolous","front","frosty","frozen","frugal","fruitful","full","fumbling","functional","funny","fussy","fuzzy","gargantuan","gaseous","general","generous","gentle","genuine","giant","giddy","gigantic","gifted","giving","glamorous","glaring","glass","gleaming","gleeful","glistening","glittering","gloomy","glorious","glossy","glum","golden","good","good-natured","gorgeous","graceful","gracious","grand","grandiose","granular","grateful","grave","gray","great","greedy","green","gregarious","grim","grimy","gripping","grizzled","grotesque","grouchy","grounded","growing","growling","grown","grubby","gruesome","grumpy","guilty","gullible","gummy","hairy","half","handmade","handsome","handy","happy","happy-go-lucky","hard","hard-to-find","harmful","harmless","harmonious","harsh","hasty","hateful","haunting","healthy","heartfelt","hearty","heavenly","heavy","hefty","helpful","helpless","hidden","hideous","high","high-level","hilarious","hoarse","hollow","homely","honest","honorable","honored","hopeful","horrible","hospitable","hot","huge","humble","humiliating","humming","humongous","hungry","hurtful","husky","icky","icy","ideal","idealistic","identical","idle","idolized","ignorant","ill","ill-fated","ill-informed","illiterate","illustrious","imaginary","imaginative","immaculate","immaterial","immediate","immense","impassioned","impeccable","impartial","imperfect","imperturbable","impish","impolite","important","impossible","impractical","impressionable","impressive","improbable","impure","inborn","incomparable","incompatible","incomplete","inconsequential","incredible","indelible","inexperienced","indolent","infamous","infantile","infatuated","inferior","infinite","informal","innocent","insecure","insidious","insignificant","insistent","instructive","insubstantial","intelligent","intent","intentional","interesting","internal","international","intrepid","ironclad","irresponsible","irritating","itchy","jaded","jagged","jam-packed","jaunty","jealous","jittery","joint","jolly","jovial","joyful","joyous","jubilant","judicious","juicy","jumbo","junior","jumpy","juvenile","kaleidoscopic","keen","key","kind","kindhearted","kindly","klutzy","knobby","knotty","knowledgeable","knowing","known","kooky","kosher","lanky","large","last","lasting","late","lavish","lawful","lazy","leading","lean","leafy","left","legal","legitimate","light","lighthearted","likable","likely","limited","limp","limping","linear","lined","liquid","little","live","lively","livid","loathsome","lone","lonely","long","long-term","loose","lopsided","lost","loud","lovable","lovely","loving","low","loyal","lucky","lumbering","luminous","lumpy","lustrous","luxurious","mad","made-up","magnificent","majestic","major","male","mammoth","married","marvelous","masculine","massive","mature","meager","mealy","mean","measly","meaty","medical","mediocre","medium","meek","mellow","melodic","memorable","menacing","merry","messy","metallic","mild","milky","mindless","miniature","minor","minty","miserable","miserly","misguided","misty","mixed","modern","modest","moist","monstrous","monthly","monumental","moral","mortified","motherly","motionless","mountainous","muddy","muffled","multicolored","mundane","murky","mushy","musty","muted","mysterious","naive","narrow","natural","naughty","nautical","near","neat","necessary","needy","negative","neglected","negligible","neighboring","nervous","new","next","nice","nifty","nimble","nippy","nocturnal","noisy","nonstop","normal","notable","noted","noteworthy","novel","noxious","numb","nutritious","nutty","obedient","oblong","oily","obvious","occasional","odd","oddball","offbeat","offensive","official","old","old-fashioned","only","open","optimal","optimistic","opulent","orange","orderly","organic","ornate","ornery","ordinary","original","other","our","outlying","outgoing","outlandish","outrageous","outstanding","oval","overcooked","overdue","overjoyed","overlooked","palatable","pale","paltry","parallel","parched","partial","passionate","past","pastel","peaceful","peppery","perfect","perfumed","periodic","perky","personal","pertinent","pesky","pessimistic","petty","phony","physical","piercing","pink","pitiful","plain","plaintive","plastic","playful","pleasant","pleased","pleasing","plump","plush","polished","polite","political","pointed","pointless","poised","poor","popular","portly","posh","positive","possible","potable","powerful","powerless","practical","precious","present","prestigious","pretty","previous","pricey","prickly","primary","prime","pristine","private","prize","probable","productive","profitable","profuse","proper","proud","prudent","punctual","pungent","puny","pure","purple","pushy","putrid","puzzled","puzzling","quaint","qualified","quarrelsome","quarterly","queasy","querulous","questionable","quick","quick-witted","quiet","quintessential","quirky","quixotic","quizzical","radiant","ragged","rapid","rare","rash","raw","recent","reckless","rectangular","ready","real","realistic","reasonable","red","reflecting","regal","regular","reliable","relieved","remarkable","remorseful","remote","repentant","required","respectful","responsible","repulsive","revolving","rewarding","rich","rigid","right","ringed","ripe","roasted","robust","rosy","rotating","rotten","rough","round","rowdy","royal","rubbery","rundown","ruddy","rude","runny","rural","rusty","sad","safe","salty","same","sandy","sane","sarcastic","sardonic","satisfied","scaly","scarce","scared","scary","scented","scholarly","scientific","scornful","scratchy","scrawny","second","secondary","second-hand","secret","self-assured","self-reliant","selfish","sentimental","separate","serene","serious","serpentine","several","severe","shabby","shadowy","shady","shallow","shameful","shameless","sharp","shimmering","shiny","shocked","shocking","shoddy","short","short-term","showy","shrill","shy","sick","silent","silky","silly","silver","similar","simple","simplistic","sinful","single","sizzling","skeletal","skinny","sleepy","slight","slim","slimy","slippery","slow","slushy","small","smart","smoggy","smooth","smug","snappy","snarling","sneaky","sniveling","snoopy","sociable","soft","soggy","solid","somber","some","spherical","sophisticated","sore","sorrowful","soulful","soupy","sour","spanish","sparkling","sparse","specific","spectacular","speedy","spicy","spiffy","spirited","spiteful","splendid","spotless","spotted","spry","square","squeaky","squiggly","stable","staid","stained","stale","standard","starchy","stark","starry","steep","sticky","stiff","stimulating","stingy","stormy","straight","strange","steel","strict","strident","striking","striped","strong","studious","stunning","stupendous","sturdy","stylish","subdued","submissive","substantial","subtle","suburban","sudden","sugary","sunny","super","superb","superficial","superior","supportive","sure-footed","surprised","suspicious","svelte","sweaty","sweet","sweltering","swift","sympathetic","tall","talkative","tame","tan","tangible","tart","tasty","tattered","taut","tedious","teeming","tempting","tender","tense","tepid","terrible","terrific","testy","thankful","that","these","thick","thin","third","thirsty","this","thorough","thorny","those","thoughtful","threadbare","thrifty","thunderous","tidy","tight","timely","tinted","tiny","tired","torn","total","tough","traumatic","treasured","tremendous","tragic","trained","triangular","tricky","trifling","trim","trivial","troubled","true","trusting","trustworthy","trusty","truthful","turbulent","twin","ugly","ultimate","unacceptable","unaware","uncomfortable","uncommon","unconscious","understated","unequaled","uneven","unfinished","unfit","unfolded","unfortunate","unhappy","unhealthy","uniform","unimportant","unique","united","unkempt","unknown","unlawful","unlined","unlucky","unnatural","unpleasant","unrealistic","unripe","unruly","unselfish","unsightly","unsteady","unsung","untidy","untimely","untried","untrue","unused","unusual","unwelcome","unwieldy","unwilling","unwitting","unwritten","upbeat","upright","upset","urban","usable","used","useful","useless","utilized","utter","vacant","vague","vain","valid","valuable","vapid","variable","vast","velvety","venerated","vengeful","verifiable","vibrant","vicious","victorious","vigilant","vigorous","villainous","violet","violent","virtual","virtuous","visible","vital","vivacious","vivid","voluminous","wan","warlike","warm","warmhearted","warped","wary","wasteful","watchful","waterlogged","watery","wavy","wealthy","weak","weary","webbed","wee","weekly","weepy","weighty","weird","welcome","well-documented","well-groomed","well-informed","well-lit","well-made","well-off","well-to-do","well-worn","wet","which","whimsical","whirlwind","whispered","white","whole","whopping","wicked","wide","wide-eyed","wiggly","wild","willing","wilted","winding","windy","winged","wiry","wise","witty","wobbly","woeful","wonderful","wooden","woozy","wordy","worldly","worn","worried","worrisome","worse","worst","worthless","worthwhile","worthy","wrathful","wretched","writhing","wrong","wry","yawning","yearly","yellow","yellowish","young","youthful","yummy","zany","zealous","zesty","zigzag"],Tv=["abnormally","absentmindedly","accidentally","acidly","actually","adventurously","afterwards","almost","always","angrily","annually","anxiously","arrogantly","awkwardly","badly","bashfully","beautifully","bitterly","bleakly","blindly","blissfully","boastfully","boldly","bravely","briefly","brightly","briskly","broadly","busily","calmly","carefully","carelessly","cautiously","certainly","cheerfully","clearly","cleverly","closely","coaxingly","colorfully","commonly","continually","coolly","correctly","courageously","crossly","cruelly","curiously","daily","daintily","dearly","deceivingly","deeply","defiantly","deliberately","delightfully","diligently","dimly","doubtfully","dreamily","easily","elegantly","energetically","enormously","enthusiastically","equally","especially","even","evenly","eventually","exactly","excitedly","extremely","fairly","faithfully","famously","far","fast","fatally","ferociously","fervently","fiercely","fondly","foolishly","fortunately","frankly","frantically","freely","frenetically","frightfully","fully","furiously","generally","generously","gently","gladly","gleefully","gracefully","gratefully","greatly","greedily","happily","hastily","healthily","heavily","helpfully","helplessly","highly","honestly","hopelessly","hourly","hungrily","immediately","innocently","inquisitively","instantly","intensely","intently","interestingly","inwardly","irritably","jaggedly","jealously","joshingly","jovially","joyfully","joyously","jubilantly","judgementally","justly","keenly","kiddingly","kindheartedly","kindly","kissingly","knavishly","knottily","knowingly","knowledgeably","kookily","lazily","less","lightly","likely","limply","lively","loftily","longingly","loosely","loudly","lovingly","loyally","madly","majestically","meaningfully","mechanically","merrily","miserably","mockingly","monthly","more","mortally","mostly","mysteriously","naturally","nearly","neatly","needily","nervously","never","nicely","noisily","not","obediently","obnoxiously","oddly","offensively","officially","often","only","openly","optimistically","overconfidently","owlishly","painfully","partially","patiently","perfectly","physically","playfully","politely","poorly","positively","potentially","powerfully","promptly","properly","punctually","quaintly","quarrelsomely","queasily","questionably","questioningly","quicker","quickly","quietly","quirkily","quizzically","rapidly","rarely","readily","really","reassuringly","recklessly","regularly","reluctantly","repeatedly","reproachfully","restfully","righteously","rightfully","rigidly","roughly","rudely","sadly","safely","scarcely","scarily","searchingly","sedately","seemingly","seldom","selfishly","separately","seriously","shakily","sharply","sheepishly","shrilly","shyly","silently","sleepily","slowly","smoothly","softly","solemnly","solidly","sometimes","soon","speedily","stealthily","sternly","strictly","successfully","suddenly","surprisingly","suspiciously","sweetly","swiftly","sympathetically","tenderly","tensely","terribly","thankfully","thoroughly","thoughtfully","tightly","tomorrow","too","tremendously","triumphantly","truly","truthfully","ultimately","unabashedly","unaccountably","unbearably","unethically","unexpectedly","unfortunately","unimpressively","unnaturally","unnecessarily","upbeat","upliftingly","upright","upside-down","upward","upwardly","urgently","usefully","uselessly","usually","utterly","vacantly","vaguely","vainly","valiantly","vastly","verbally","very","viciously","victoriously","violently","vivaciously","voluntarily","warmly","weakly","wearily","well","wetly","wholly","wildly","willfully","wisely","woefully","wonderfully","worriedly","wrongly","yawningly","yearly","yearningly","yesterday","yieldingly","youthfully"],Bv=["after","although","and","as","because","before","but","consequently","even","finally","for","furthermore","hence","how","however","if","inasmuch","incidentally","indeed","instead","lest","likewise","meanwhile","nor","now","once","or","provided","since","so","supposing","than","that","though","till","unless","until","what","when","whenever","where","whereas","wherever","whether","which","while","who","whoever","whose","why","yet"],Nv=["yuck","oh","phooey","blah","boo","whoa","yowza","huzzah","boohoo","fooey","geez","pfft","ew","ah","yum","brr","hm","yahoo","aha","woot","drat","gah","meh","psst","aw","ugh","yippee","eek","gee","bah","gadzooks","duh","ha","mmm","ouch","phew","ack","uh-huh","gosh","hmph","pish","zowie","er","ick","oof","um"],Rv=["ATM","CD","SUV","TV","aardvark","abacus","abbey","abbreviation","abdomen","ability","abnormality","abolishment","abrogation","absence","abundance","academics","academy","accelerant","accelerator","accent","acceptance","access","accessory","accident","accommodation","accompanist","accomplishment","accord","accordance","accordion","account","accountability","accountant","accounting","accuracy","accusation","acetate","achievement","achiever","acid","acknowledgment","acorn","acoustics","acquaintance","acquisition","acre","acrylic","act","action","activation","activist","activity","actor","actress","acupuncture","ad","adaptation","adapter","addiction","addition","address","adjective","adjustment","admin","administration","administrator","admire","admission","adobe","adoption","adrenalin","adrenaline","adult","adulthood","advance","advancement","advantage","advent","adverb","advertisement","advertising","advice","adviser","advocacy","advocate","affair","affect","affidavit","affiliate","affinity","afoul","afterlife","aftermath","afternoon","aftershave","aftershock","afterthought","age","agency","agenda","agent","aggradation","aggression","aglet","agony","agreement","agriculture","aid","aide","aim","air","airbag","airbus","aircraft","airfare","airfield","airforce","airline","airmail","airman","airplane","airport","airship","airspace","alarm","alb","albatross","album","alcohol","alcove","alder","ale","alert","alfalfa","algebra","algorithm","alias","alibi","alien","allegation","allergist","alley","alliance","alligator","allocation","allowance","alloy","alluvium","almanac","almighty","almond","alpaca","alpenglow","alpenhorn","alpha","alphabet","altar","alteration","alternative","altitude","alto","aluminium","aluminum","amazement","amazon","ambassador","amber","ambience","ambiguity","ambition","ambulance","amendment","amenity","ammunition","amnesty","amount","amusement","anagram","analgesia","analog","analogue","analogy","analysis","analyst","analytics","anarchist","anarchy","anatomy","ancestor","anchovy","android","anesthesiologist","anesthesiology","angel","anger","angina","angle","angora","angstrom","anguish","animal","anime","anise","ankle","anklet","anniversary","announcement","annual","anorak","answer","ant","anteater","antecedent","antechamber","antelope","antennae","anterior","anthropology","antibody","anticipation","anticodon","antigen","antique","antiquity","antler","antling","anxiety","anybody","anyone","anything","anywhere","apartment","ape","aperitif","apology","app","apparatus","apparel","appeal","appearance","appellation","appendix","appetiser","appetite","appetizer","applause","apple","applewood","appliance","application","appointment","appreciation","apprehension","approach","appropriation","approval","apricot","apron","apse","aquarium","aquifer","arcade","arch","arch-rival","archaeologist","archaeology","archeology","archer","architect","architecture","archives","area","arena","argument","arithmetic","ark","arm","arm-rest","armadillo","armament","armchair","armoire","armor","armour","armpit","armrest","army","arrangement","array","arrest","arrival","arrogance","arrow","art","artery","arthur","artichoke","article","artifact","artificer","artist","ascend","ascent","ascot","ash","ashram","ashtray","aside","asparagus","aspect","asphalt","aspic","assassination","assault","assembly","assertion","assessment","asset","assignment","assist","assistance","assistant","associate","association","assumption","assurance","asterisk","astrakhan","astrolabe","astrologer","astrology","astronomy","asymmetry","atelier","atheist","athlete","athletics","atmosphere","atom","atrium","attachment","attack","attacker","attainment","attempt","attendance","attendant","attention","attenuation","attic","attitude","attorney","attraction","attribute","auction","audience","audit","auditorium","aunt","authentication","authenticity","author","authorisation","authority","authorization","auto","autoimmunity","automation","automaton","autumn","availability","avalanche","avenue","average","avocado","award","awareness","awe","axis","azimuth","baboon","babushka","baby","bachelor","back","back-up","backbone","backburn","backdrop","background","backpack","backup","backyard","bacon","bacterium","badge","badger","bafflement","bag","bagel","baggage","baggie","baggy","bagpipe","bail","bait","bake","baker","bakery","bakeware","balaclava","balalaika","balance","balcony","ball","ballet","balloon","balloonist","ballot","ballpark","bamboo","ban","banana","band","bandana","bandanna","bandolier","bandwidth","bangle","banjo","bank","bankbook","banker","banking","bankruptcy","banner","banquette","banyan","baobab","bar","barbecue","barbeque","barber","bargain","barge","baritone","barium","bark","barley","barn","barometer","barracks","barrage","barrel","barrier","barstool","bartender","base","baseball","baseboard","baseline","basement","basics","basil","basin","basis","basket","basketball","bass","bassinet","bassoon","bat","bath","bather","bathhouse","bathrobe","bathroom","bathtub","battalion","batter","battery","batting","battle","battleship","bay","bayou","beach","bead","beak","beam","bean","beancurd","beanie","beanstalk","bear","beard","beast","beastie","beat","beating","beauty","beck","bed","bedrock","bedroom","bee","beech","beef","beet","beetle","beggar","beginner","beginning","begonia","behalf","behavior","behaviour","behest","behold","being","belfry","belief","believer","bell","belligerency","bellows","belly","belt","bench","bend","beneficiary","benefit","beret","berry","best-seller","bestseller","bet","beverage","beyond","bias","bibliography","bicycle","bid","bidder","bidding","bidet","bifocals","bijou","bike","bikini","bill","billboard","billing","billion","bin","binoculars","biology","biopsy","biosphere","biplane","birch","bird","bird-watcher","birdbath","birdcage","birdhouse","birth","birthday","biscuit","bit","bite","bitten","bitter","blackberry","blackbird","blackboard","blackfish","blackness","bladder","blade","blame","blank","blanket","blast","blazer","blend","blessing","blight","blind","blinker","blister","blizzard","block","blocker","blog","blogger","blood","bloodflow","bloom","bloomer","blossom","blouse","blow","blowgun","blowhole","blueberry","blush","boar","board","boat","boatload","boatyard","bob","bobcat","body","bog","bolero","bolt","bond","bonding","bondsman","bone","bonfire","bongo","bonnet","bonsai","bonus","boogeyman","book","bookcase","bookend","booking","booklet","bookmark","boolean","boom","boon","boost","booster","boot","bootie","border","bore","borrower","borrowing","boss","botany","bother","bottle","bottling","bottom","bottom-line","boudoir","bough","boulder","boulevard","boundary","bouquet","bourgeoisie","bout","boutique","bow","bower","bowl","bowler","bowling","bowtie","box","boxer","boxspring","boy","boycott","boyfriend","boyhood","boysenberry","brace","bracelet","bracket","brain","brake","bran","branch","brand","brass","bratwurst","bread","breadcrumb","breadfruit","break","breakdown","breakfast","breakpoint","breakthrough","breastplate","breath","breeze","brewer","bribery","brick","bricklaying","bride","bridge","brief","briefing","briefly","brilliant","brink","brisket","broad","broadcast","broccoli","brochure","brocolli","broiler","broker","bronchitis","bronco","bronze","brooch","brood","brook","broom","brother","brother-in-law","brow","brownie","browser","browsing","brunch","brush","brushfire","brushing","bubble","buck","bucket","buckle","buckwheat","bud","buddy","budget","buffalo","buffer","buffet","bug","buggy","bugle","builder","building","bulb","bulk","bull","bull-fighter","bulldozer","bullet","bump","bumper","bun","bunch","bungalow","bunkhouse","burden","bureau","burglar","burial","burn","burn-out","burning","burrito","burro","burrow","burst","bus","bush","business","businessman","bust","bustle","butane","butcher","butler","butter","butterfly","button","buy","buyer","buying","buzz","buzzard","c-clamp","cabana","cabbage","cabin","cabinet","cable","caboose","cacao","cactus","caddy","cadet","cafe","caffeine","caftan","cage","cake","calcification","calculation","calculator","calculus","calendar","calf","caliber","calibre","calico","call","calm","calorie","camel","cameo","camera","camp","campaign","campaigning","campanile","camper","campus","can","canal","candelabra","candidacy","candidate","candle","candy","cane","cannibal","cannon","canoe","canon","canopy","cantaloupe","canteen","canvas","cap","capability","capacity","cape","caper","capital","capitalism","capitulation","capon","cappelletti","cappuccino","captain","caption","captor","car","carabao","caramel","caravan","carbohydrate","carbon","carboxyl","card","cardboard","cardigan","care","career","cargo","caribou","carload","carnation","carnival","carol","carotene","carp","carpenter","carpet","carpeting","carport","carriage","carrier","carrot","carry","cart","cartel","carter","cartilage","cartload","cartoon","cartridge","carving","cascade","case","casement","cash","cashew","cashier","casino","casket","cassava","casserole","cassock","cast","castanet","castle","casualty","cat","catacomb","catalogue","catalysis","catalyst","catamaran","catastrophe","catch","catcher","category","caterpillar","cathedral","cation","catsup","cattle","cauliflower","causal","cause","causeway","caution","cave","caviar","cayenne","ceiling","celebration","celebrity","celeriac","celery","cell","cellar","cello","celsius","cement","cemetery","cenotaph","census","cent","center","centimeter","centre","centurion","century","cephalopod","ceramic","ceramics","cereal","ceremony","certainty","certificate","certification","cesspool","chafe","chain","chainstay","chair","chairlift","chairman","chairperson","chaise","chalet","chalice","chalk","challenge","chamber","champagne","champion","championship","chance","chandelier","change","channel","chaos","chap","chapel","chaplain","chapter","character","characteristic","characterization","chard","charge","charger","charity","charlatan","charm","charset","chart","charter","chasm","chassis","chastity","chasuble","chateau","chatter","chauffeur","chauvinist","check","checkbook","checking","checkout","checkroom","cheddar","cheek","cheer","cheese","cheesecake","cheetah","chef","chem","chemical","chemistry","chemotaxis","cheque","cherry","chess","chest","chestnut","chick","chicken","chicory","chief","chiffonier","child","childbirth","childhood","chili","chill","chime","chimpanzee","chin","chinchilla","chino","chip","chipmunk","chit-chat","chivalry","chive","chives","chocolate","choice","choir","choker","cholesterol","choosing","chop","chops","chopstick","chopsticks","chord","chorus","chow","chowder","chrome","chromolithograph","chronicle","chronograph","chronometer","chrysalis","chub","chuck","church","churn","chutney","cicada","cigarette","cilantro","cinder","cinema","cinnamon","circadian","circle","circuit","circulation","circumference","circumstance","cirrus","citizen","citizenship","citron","citrus","city","civilian","civilisation","civilization","claim","clam","clamp","clan","clank","clapboard","clarification","clarinet","clarity","clasp","class","classic","classification","classmate","classroom","clause","clave","clavicle","clavier","claw","clay","cleaner","clearance","clearing","cleat","clef","cleft","clergyman","cleric","clerk","click","client","cliff","climate","climb","clinic","clip","clipboard","clipper","cloak","cloakroom","clock","clockwork","clogs","cloister","clone","close","closet","closing","closure","cloth","clothes","clothing","cloud","cloudburst","clove","clover","cloves","club","clue","cluster","clutch","co-producer","coach","coal","coalition","coast","coaster","coat","cob","cobbler","cobweb","cockpit","cockroach","cocktail","cocoa","coconut","cod","code","codepage","codling","codon","coevolution","cofactor","coffee","coffin","cohesion","cohort","coil","coin","coincidence","coinsurance","coke","cold","coleslaw","coliseum","collaboration","collagen","collapse","collar","collard","collateral","colleague","collection","collectivisation","collectivization","collector","college","collision","colloquy","colon","colonial","colonialism","colonisation","colonization","colony","color","colorlessness","colt","column","columnist","comb","combat","combination","combine","comeback","comedy","comestible","comfort","comfortable","comic","comics","comma","command","commander","commandment","comment","commerce","commercial","commission","commitment","committee","commodity","common","commonsense","commotion","communicant","communication","communion","communist","community","commuter","company","comparison","compass","compassion","compassionate","compensation","competence","competition","competitor","complaint","complement","completion","complex","complexity","compliance","complication","complicity","compliment","component","comportment","composer","composite","composition","compost","comprehension","compress","compromise","comptroller","compulsion","computer","comradeship","con","concentrate","concentration","concept","conception","concern","concert","conclusion","concrete","condition","conditioner","condominium","condor","conduct","conductor","cone","confectionery","conference","confidence","confidentiality","configuration","confirmation","conflict","conformation","confusion","conga","congo","congregation","congress","congressman","congressperson","conifer","connection","connotation","conscience","consciousness","consensus","consent","consequence","conservation","conservative","consideration","consignment","consist","consistency","console","consonant","conspiracy","conspirator","constant","constellation","constitution","constraint","construction","consul","consulate","consulting","consumer","consumption","contact","contagion","container","content","contention","contest","context","continent","contingency","continuity","contour","contract","contractor","contrail","contrary","contrast","contribution","contributor","control","controller","controversy","convection","convenience","convention","conversation","conversion","convert","convertible","conviction","cook","cookbook","cookie","cooking","cooperation","coordination","coordinator","cop","cop-out","cope","copper","copy","copying","copyright","copywriter","coral","cord","corduroy","core","cork","cormorant","corn","corner","cornerstone","cornet","cornflakes","cornmeal","corporal","corporation","corporatism","corps","corral","correspondence","correspondent","corridor","corruption","corsage","cosset","cost","costume","cot","cottage","cotton","couch","cougar","cough","council","councilman","councilor","councilperson","counsel","counseling","counselling","counsellor","counselor","count","counter","counter-force","counterpart","countess","country","countryside","county","couple","coupon","courage","course","court","courthouse","courtroom","cousin","covariate","cover","coverage","coverall","cow","cowbell","cowboy","coyote","crab","cradle","craft","craftsman","cranberry","crane","cranky","crate","cravat","craw","crawdad","crayfish","crayon","crazy","cream","creation","creative","creativity","creator","creature","creche","credential","credenza","credibility","credit","creditor","creek","crepe","crest","crew","crewman","crewmate","crewmember","crewmen","cria","crib","cribbage","cricket","cricketer","crime","criminal","crinoline","crisis","crisp","criteria","criterion","critic","criticism","crocodile","crocus","croissant","crook","crop","cross","cross-contamination","cross-stitch","croup","crow","crowd","crown","crude","cruelty","cruise","crumb","crunch","crusader","crush","crust","cry","crystal","crystallography","cub","cube","cuckoo","cucumber","cue","cuff-link","cuisine","cultivar","cultivator","culture","culvert","cummerbund","cup","cupboard","cupcake","cupola","curd","cure","curio","curiosity","curl","curler","currant","currency","current","curriculum","curry","curse","cursor","curtailment","curtain","curve","cushion","custard","custody","custom","customer","cut","cuticle","cutlet","cutover","cutting","cyclamen","cycle","cyclone","cyclooxygenase","cygnet","cylinder","cymbal","cynic","cyst","cytokine","cytoplasm","dad","daddy","daffodil","dagger","dahlia","daikon","daily","dairy","daisy","dam","damage","dame","dance","dancer","dancing","dandelion","danger","dare","dark","darkness","darn","dart","dash","dashboard","data","database","date","daughter","dawn","day","daybed","daylight","dead","deadline","deal","dealer","dealing","dearest","death","deathwatch","debate","debris","debt","debtor","decade","decadence","decency","decimal","decision","decision-making","deck","declaration","declination","decline","decoder","decongestant","decoration","decrease","decryption","dedication","deduce","deduction","deed","deep","deer","default","defeat","defendant","defender","defense","deficit","definition","deformation","degradation","degree","delay","deliberation","delight","delivery","demand","democracy","democrat","demur","den","denim","denominator","density","dentist","deodorant","department","departure","dependency","dependent","deployment","deposit","deposition","depot","depression","depressive","depth","deputy","derby","derivation","derivative","derrick","descendant","descent","description","desert","design","designation","designer","desire","desk","desktop","dessert","destination","destiny","destroyer","destruction","detail","detainee","detainment","detection","detective","detector","detention","determination","detour","devastation","developer","developing","development","developmental","deviance","deviation","device","devil","dew","dhow","diabetes","diadem","diagnosis","diagram","dial","dialect","dialogue","diam","diamond","diaper","diaphragm","diarist","diary","dibble","dickey","dictaphone","dictator","diction","dictionary","die","diesel","diet","difference","differential","difficulty","diffuse","dig","digestion","digestive","digger","digging","digit","dignity","dilapidation","dill","dilution","dime","dimension","dimple","diner","dinghy","dining","dinner","dinosaur","dioxide","dip","diploma","diplomacy","direction","directive","director","directory","dirndl","dirt","disability","disadvantage","disagreement","disappointment","disarmament","disaster","discharge","discipline","disclaimer","disclosure","disco","disconnection","discount","discourse","discovery","discrepancy","discretion","discrimination","discussion","disdain","disease","disembodiment","disengagement","disguise","disgust","dish","dishwasher","disk","disparity","dispatch","displacement","display","disposal","disposer","disposition","dispute","disregard","disruption","dissemination","dissonance","distance","distinction","distortion","distribution","distributor","district","divalent","divan","diver","diversity","divide","dividend","divider","divine","diving","division","divorce","doc","dock","doctor","doctorate","doctrine","document","documentary","documentation","doe","dog","dogsled","dogwood","doing","doll","dollar","dollop","dolman","dolor","dolphin","domain","dome","donation","donkey","donor","donut","door","doorbell","doorknob","doorpost","doorway","dory","dose","dot","double","doubling","doubt","doubter","dough","doughnut","down","downfall","downforce","downgrade","download","downstairs","downtown","downturn","dozen","draft","drag","dragon","dragonfly","dragonfruit","dragster","drain","drainage","drake","drama","dramaturge","drapes","draw","drawbridge","drawer","drawing","dream","dreamer","dredger","dress","dresser","dressing","drill","drink","drinking","drive","driver","driveway","driving","drizzle","dromedary","drop","drudgery","drug","drum","drummer","dryer","duck","duckling","dud","dude","due","duel","dueling","duffel","dugout","dulcimer","dumbwaiter","dump","dune","dungarees","dungeon","duplexer","duration","durian","dusk","dust","duster","duty","dwell","dwelling","dynamics","dynamite","dynamo","dynasty","dysfunction","e-book","e-mail","e-reader","eagle","eaglet","ear","eardrum","earmuffs","earnings","earplug","earring","earrings","earth","earthquake","earthworm","ease","easel","east","eating","eaves","eavesdropper","ecclesia","echidna","eclipse","ecliptic","ecology","economics","economy","ecosystem","ectoderm","ectodermal","ecumenist","eddy","edge","edger","edible","editing","edition","editor","editorial","education","eel","effacement","effect","effective","effectiveness","effector","efficacy","efficiency","effort","egg","egghead","eggnog","eggplant","ego","eicosanoid","ejector","elbow","elderberry","election","electricity","electrocardiogram","electronics","element","elephant","elevation","elevator","eleventh","elf","elicit","eligibility","elimination","elite","elixir","elk","ellipse","elm","elongation","elver","email","emanate","embarrassment","embassy","embellishment","embossing","embryo","emerald","emergence","emergency","emergent","emery","emission","emitter","emotion","emphasis","empire","employ","employee","employer","employment","empowerment","emu","enactment","encirclement","enclave","enclosure","encounter","encouragement","encyclopedia","end","endive","endoderm","endorsement","endothelium","endpoint","enemy","energy","enforcement","engagement","engine","engineer","engineering","enigma","enjoyment","enquiry","enrollment","enterprise","entertainment","enthusiasm","entirety","entity","entrance","entree","entrepreneur","entry","envelope","environment","envy","enzyme","epauliere","epee","ephemera","ephemeris","ephyra","epic","episode","epithelium","epoch","eponym","epoxy","equal","equality","equation","equinox","equipment","equity","equivalent","era","eraser","erosion","error","escalator","escape","espadrille","espalier","essay","essence","essential","establishment","estate","estimate","estrogen","estuary","eternity","ethernet","ethics","ethnicity","ethyl","euphonium","eurocentrism","evaluation","evaluator","evaporation","eve","evening","evening-wear","event","everybody","everyone","everything","eviction","evidence","evil","evocation","evolution","ex-husband","ex-wife","exaggeration","exam","examination","examiner","example","exasperation","excellence","exception","excerpt","excess","exchange","excitement","exclamation","excursion","excuse","execution","executive","executor","exercise","exhaust","exhaustion","exhibit","exhibition","exile","existence","exit","exocrine","expansion","expansionism","expectancy","expectation","expedition","expense","experience","experiment","experimentation","expert","expertise","explanation","exploration","explorer","export","expose","exposition","exposure","expression","extension","extent","exterior","external","extinction","extreme","extremist","eye","eyeball","eyebrow","eyebrows","eyeglasses","eyelash","eyelashes","eyelid","eyelids","eyeliner","eyestrain","eyrie","fabric","face","facelift","facet","facility","facsimile","fact","factor","factory","faculty","fahrenheit","fail","failure","fairness","fairy","faith","faithful","fall","fallacy","falling-out","fame","familiar","familiarity","family","fan","fang","fanlight","fanny-pack","fantasy","farm","farmer","farming","farmland","farrow","fascia","fashion","fat","fate","father","father-in-law","fatigue","fatigues","faucet","fault","fav","fava","favor","favorite","fawn","fax","fear","feast","feather","feature","fedelini","federation","fedora","fee","feed","feedback","feeding","feel","feeling","fellow","felony","female","fen","fence","fencing","fender","feng","fennel","ferret","ferry","ferryboat","fertilizer","festival","fetus","few","fiber","fiberglass","fibre","fibroblast","fibrosis","ficlet","fiction","fiddle","field","fiery","fiesta","fifth","fig","fight","fighter","figure","figurine","file","filing","fill","fillet","filly","film","filter","filth","final","finance","financing","finding","fine","finer","finger","fingerling","fingernail","finish","finisher","fir","fire","fireman","fireplace","firewall","firm","first","fish","fishbone","fisherman","fishery","fishing","fishmonger","fishnet","fit","fitness","fix","fixture","flag","flair","flame","flan","flanker","flare","flash","flat","flatboat","flavor","flax","fleck","fledgling","fleece","flesh","flexibility","flick","flicker","flight","flint","flintlock","flip-flops","flock","flood","floodplain","floor","floozie","flour","flow","flower","flu","flugelhorn","fluke","flume","flung","flute","fly","flytrap","foal","foam","fob","focus","fog","fold","folder","folk","folklore","follower","following","fondue","font","food","foodstuffs","fool","foot","footage","football","footnote","footprint","footrest","footstep","footstool","footwear","forage","forager","foray","force","ford","forearm","forebear","forecast","forehead","foreigner","forelimb","forest","forestry","forever","forgery","fork","form","formal","formamide","format","formation","former","formicarium","formula","fort","forte","fortnight","fortress","fortune","forum","foundation","founder","founding","fountain","fourths","fowl","fox","foxglove","fraction","fragrance","frame","framework","fratricide","fraud","fraudster","freak","freckle","freedom","freelance","freezer","freezing","freight","freighter","frenzy","freon","frequency","fresco","friction","fridge","friend","friendship","fries","frigate","fright","fringe","fritter","frock","frog","front","frontier","frost","frosting","frown","fruit","frustration","fry","fuel","fugato","fulfillment","full","fun","function","functionality","fund","funding","fundraising","fur","furnace","furniture","fusarium","futon","future","gadget","gaffe","gaffer","gain","gaiters","gale","gall-bladder","gallery","galley","gallon","galoshes","gambling","game","gamebird","gaming","gamma-ray","gander","gang","gap","garage","garb","garbage","garden","garlic","garment","garter","gas","gasket","gasoline","gasp","gastronomy","gastropod","gate","gateway","gather","gathering","gator","gauge","gauntlet","gavel","gazebo","gazelle","gear","gearshift","geek","gel","gelatin","gelding","gem","gemsbok","gender","gene","general","generation","generator","generosity","genetics","genie","genius","genre","gentleman","geography","geology","geometry","geranium","gerbil","gesture","geyser","gherkin","ghost","giant","gift","gig","gigantism","giggle","ginger","gingerbread","ginseng","giraffe","girdle","girl","girlfriend","glacier","gladiolus","glance","gland","glass","glasses","glee","glen","glider","gliding","glimpse","globe","glockenspiel","gloom","glory","glove","glow","glucose","glue","glut","glutamate","gnat","gnu","go-kart","goal","goat","gobbler","god","goddess","godfather","godmother","godparent","goggles","going","gold","goldfish","golf","gondola","gong","good","good-bye","goodbye","goodie","goodness","goodnight","goodwill","goose","gopher","gorilla","gosling","gossip","governance","government","governor","gown","grab-bag","grace","grade","gradient","graduate","graduation","graffiti","graft","grain","gram","grammar","gran","grand","grandchild","granddaughter","grandfather","grandma","grandmom","grandmother","grandpa","grandparent","grandson","granny","granola","grant","grape","grapefruit","graph","graphic","grasp","grass","grasshopper","grassland","gratitude","gravel","gravitas","gravity","gravy","gray","grease","great-grandfather","great-grandmother","greatness","greed","green","greenhouse","greens","grenade","grey","grid","grief","grill","grin","grip","gripper","grit","grocery","ground","group","grouper","grouse","grove","growth","grub","guacamole","guarantee","guard","guava","guerrilla","guess","guest","guestbook","guidance","guide","guideline","guilder","guilt","guilty","guinea","guitar","guitarist","gum","gumshoe","gun","gunpowder","gutter","guy","gym","gymnast","gymnastics","gynaecology","gyro","habit","habitat","hacienda","hacksaw","hackwork","hail","hair","haircut","hake","half","half-brother","half-sister","halibut","hall","halloween","hallway","halt","ham","hamburger","hammer","hammock","hamster","hand","hand-holding","handball","handful","handgun","handicap","handle","handlebar","handmaiden","handover","handrail","handsaw","hanger","happening","happiness","harald","harbor","harbour","hard-hat","hardboard","hardcover","hardening","hardhat","hardship","hardware","hare","harm","harmonica","harmonise","harmonize","harmony","harp","harpooner","harpsichord","harvest","harvester","hash","hashtag","hassock","haste","hat","hatbox","hatchet","hatchling","hate","hatred","haunt","haven","haversack","havoc","hawk","hay","haze","hazel","hazelnut","head","headache","headlight","headline","headphones","headquarters","headrest","health","health-care","hearing","hearsay","heart","heart-throb","heartache","heartbeat","hearth","hearthside","heartwood","heat","heater","heating","heaven","heavy","hectare","hedge","hedgehog","heel","heifer","height","heir","heirloom","helicopter","helium","hellcat","hello","helmet","helo","help","hemisphere","hemp","hen","hepatitis","herb","herbs","heritage","hermit","hero","heroine","heron","herring","hesitation","hexagon","heyday","hiccups","hide","hierarchy","high","high-rise","highland","highlight","highway","hike","hiking","hill","hint","hip","hippodrome","hippopotamus","hire","hiring","historian","history","hit","hive","hobbit","hobby","hockey","hog","hold","holder","hole","holiday","home","homeland","homeownership","hometown","homework","homogenate","homonym","honesty","honey","honeybee","honeydew","honor","honoree","hood","hoof","hook","hop","hope","hops","horde","horizon","hormone","horn","hornet","horror","horse","horseradish","horst","hose","hosiery","hospice","hospital","hospitalisation","hospitality","hospitalization","host","hostel","hostess","hotdog","hotel","hound","hour","hourglass","house","houseboat","household","housewife","housework","housing","hovel","hovercraft","howard","howitzer","hub","hubcap","hubris","hug","hugger","hull","human","humanity","humidity","hummus","humor","humour","hundred","hunger","hunt","hunter","hunting","hurdle","hurdler","hurricane","hurry","hurt","husband","hut","hutch","hyacinth","hybridisation","hybridization","hydrant","hydraulics","hydrocarb","hydrocarbon","hydrofoil","hydrogen","hydrolyse","hydrolysis","hydrolyze","hydroxyl","hyena","hygienic","hype","hyphenation","hypochondria","hypothermia","hypothesis","ice","ice-cream","iceberg","icebreaker","icecream","icicle","icing","icon","icy","id","idea","ideal","identification","identity","ideology","idiom","igloo","ignorance","ignorant","ikebana","illiteracy","illness","illusion","illustration","image","imagination","imbalance","imitation","immigrant","immigration","immortal","impact","impairment","impala","impediment","implement","implementation","implication","import","importance","impostor","impress","impression","imprisonment","impropriety","improvement","impudence","impulse","in-joke","in-laws","inability","inauguration","inbox","incandescence","incarnation","incense","incentive","inch","incidence","incident","incision","inclusion","income","incompetence","inconvenience","increase","incubation","independence","independent","index","indication","indicator","indigence","individual","industrialisation","industrialization","industry","inequality","inevitable","infancy","infant","infarction","infection","infiltration","infinite","infix","inflammation","inflation","influence","influx","info","information","infrastructure","infusion","inglenook","ingrate","ingredient","inhabitant","inheritance","inhibition","inhibitor","initial","initialise","initialize","initiative","injunction","injury","injustice","ink","inlay","inn","innervation","innocence","innocent","innovation","input","inquiry","inscription","insect","insectarium","insert","inside","insight","insolence","insomnia","inspection","inspector","inspiration","installation","instance","instant","instinct","institute","institution","instruction","instructor","instrument","instrumentalist","instrumentation","insulation","insurance","insurgence","insurrection","integer","integral","integration","integrity","intellect","intelligence","intensity","intent","intention","intentionality","interaction","interchange","interconnection","interest","interface","interferometer","interior","interject","interloper","internet","interpretation","interpreter","interval","intervenor","intervention","interview","interviewer","intestine","introduction","intuition","invader","invasion","invention","inventor","inventory","inverse","inversion","investigation","investigator","investment","investor","invitation","invite","invoice","involvement","iridescence","iris","iron","ironclad","irony","irrigation","ischemia","island","isogloss","isolation","issue","item","itinerary","ivory","jack","jackal","jacket","jackfruit","jade","jaguar","jail","jailhouse","jalapeño","jam","jar","jasmine","jaw","jazz","jealousy","jeans","jeep","jelly","jellybeans","jellyfish","jet","jewel","jeweller","jewellery","jewelry","jicama","jiffy","job","jockey","jodhpurs","joey","jogging","joint","joke","jot","journal","journalism","journalist","journey","joy","judge","judgment","judo","jug","juggernaut","juice","julienne","jumbo","jump","jumper","jumpsuit","jungle","junior","junk","junker","junket","jury","justice","justification","jute","kale","kangaroo","karate","kayak","kazoo","kebab","keep","keeper","kendo","kennel","ketch","ketchup","kettle","kettledrum","key","keyboard","keyboarding","keystone","kick","kick-off","kid","kidney","kielbasa","kill","killer","killing","kilogram","kilometer","kilt","kimono","kinase","kind","kindness","king","kingdom","kingfish","kiosk","kiss","kit","kitchen","kite","kitsch","kitten","kitty","kiwi","knee","kneejerk","knickers","knife","knife-edge","knight","knitting","knock","knot","know-how","knowledge","knuckle","koala","kohlrabi","lab","label","labor","laboratory","laborer","labour","labourer","lace","lack","lacquerware","lad","ladder","ladle","lady","ladybug","lag","lake","lamb","lambkin","lament","lamp","lanai","land","landform","landing","landmine","landscape","lane","language","lantern","lap","laparoscope","lapdog","laptop","larch","lard","larder","lark","larva","laryngitis","lasagna","lashes","last","latency","latex","lathe","latitude","latte","latter","laugh","laughter","laundry","lava","law","lawmaker","lawn","lawsuit","lawyer","lay","layer","layout","lead","leader","leadership","leading","leaf","league","leaker","leap","learning","leash","leather","leave","leaver","lecture","leek","leeway","left","leg","legacy","legal","legend","legging","legislation","legislator","legislature","legitimacy","legume","leisure","lemon","lemonade","lemur","lender","lending","length","lens","lentil","leopard","leprosy","leptocephalus","lesson","letter","lettuce","level","lever","leverage","leveret","liability","liar","liberty","library","licence","license","licensing","licorice","lid","lie","lieu","lieutenant","life","lifestyle","lifetime","lift","ligand","light","lighting","lightning","lightscreen","ligula","likelihood","likeness","lilac","lily","limb","lime","limestone","limit","limitation","limo","line","linen","liner","linguist","linguistics","lining","link","linkage","linseed","lion","lip","lipid","lipoprotein","lipstick","liquid","liquidity","liquor","list","listening","listing","literate","literature","litigation","litmus","litter","littleneck","liver","livestock","living","lizard","llama","load","loading","loaf","loafer","loan","lobby","lobotomy","lobster","local","locality","location","lock","locker","locket","locomotive","locust","lode","loft","log","loggia","logic","login","logistics","logo","loincloth","lollipop","loneliness","longboat","longitude","look","lookout","loop","loophole","loquat","lord","loss","lot","lotion","lottery","lounge","louse","lout","love","lover","lox","loyalty","luck","luggage","lumber","lumberman","lunch","luncheonette","lunchmeat","lunchroom","lung","lunge","lute","luxury","lychee","lycra","lye","lymphocyte","lynx","lyocell","lyre","lyrics","lysine","mRNA","macadamia","macaroni","macaroon","macaw","machine","machinery","macrame","macro","macrofauna","madam","maelstrom","maestro","magazine","maggot","magic","magnet","magnitude","maid","maiden","mail","mailbox","mailer","mailing","mailman","main","mainland","mainstream","maintainer","maintenance","maize","major","major-league","majority","makeover","maker","makeup","making","male","malice","mall","mallard","mallet","malnutrition","mama","mambo","mammoth","man","manacle","management","manager","manatee","mandarin","mandate","mandolin","mangle","mango","mangrove","manhunt","maniac","manicure","manifestation","manipulation","mankind","manner","manor","mansard","manservant","mansion","mantel","mantle","mantua","manufacturer","manufacturing","many","map","maple","mapping","maracas","marathon","marble","march","mare","margarine","margin","mariachi","marimba","marines","marionberry","mark","marker","market","marketer","marketing","marketplace","marksman","markup","marmalade","marriage","marsh","marshland","marshmallow","marten","marxism","mascara","mask","masonry","mass","massage","mast","masterpiece","mastication","mastoid","mat","match","matchmaker","mate","material","maternity","math","mathematics","matrix","matter","mattock","mattress","max","maximum","maybe","mayonnaise","mayor","meadow","meal","mean","meander","meaning","means","meantime","measles","measure","measurement","meat","meatball","meatloaf","mecca","mechanic","mechanism","med","medal","media","median","medication","medicine","medium","meet","meeting","melatonin","melody","melon","member","membership","membrane","meme","memo","memorial","memory","men","menopause","menorah","mention","mentor","menu","merchandise","merchant","mercury","meridian","meringue","merit","mesenchyme","mess","message","messenger","messy","metabolite","metal","metallurgist","metaphor","meteor","meteorology","meter","methane","method","methodology","metric","metro","metronome","mezzanine","microlending","micronutrient","microphone","microwave","mid-course","midden","middle","middleman","midline","midnight","midwife","might","migrant","migration","mile","mileage","milepost","milestone","military","milk","milkshake","mill","millennium","millet","millimeter","million","millisecond","millstone","mime","mimosa","min","mincemeat","mind","mine","mineral","mineshaft","mini","mini-skirt","minibus","minimalism","minimum","mining","minion","minister","mink","minnow","minor","minor-league","minority","mint","minute","miracle","mirror","miscommunication","misfit","misnomer","misplacement","misreading","misrepresentation","miss","missile","mission","mist","mistake","mister","misunderstand","miter","mitten","mix","mixer","mixture","moai","moat","mob","mobile","mobility","mobster","moccasins","mocha","mochi","mode","model","modeling","modem","modernist","modernity","modification","molar","molasses","molding","mole","molecule","mom","moment","monastery","monasticism","money","monger","monitor","monitoring","monk","monkey","monocle","monopoly","monotheism","monsoon","monster","month","monument","mood","moody","moon","moonlight","moonscape","moose","mop","morale","morbid","morbidity","morning","morphology","morsel","mortal","mortality","mortgage","mortise","mosque","mosquito","most","motel","moth","mother","mother-in-law","motion","motivation","motive","motor","motorboat","motorcar","motorcycle","mound","mountain","mouse","mouser","mousse","moustache","mouth","mouton","movement","mover","movie","mower","mozzarella","mud","muffin","mug","mukluk","mule","multimedia","muscat","muscatel","muscle","musculature","museum","mushroom","music","music-box","music-making","musician","muskrat","mussel","mustache","mustard","mutation","mutt","mutton","mycoplasma","mystery","myth","mythology","nail","name","naming","nanoparticle","napkin","narrative","nasal","nation","nationality","native","naturalisation","nature","navigation","necessity","neck","necklace","necktie","nectar","nectarine","need","needle","neglect","negligee","negotiation","neighbor","neighborhood","neighbour","neighbourhood","neologism","neon","neonate","nephew","nerve","nest","nestling","nestmate","net","netball","netbook","netsuke","network","networking","neurobiologist","neuron","neuropathologist","neuropsychiatry","news","newsletter","newspaper","newsprint","newsstand","nexus","nibble","nicety","niche","nick","nickel","nickname","niece","night","nightclub","nightgown","nightingale","nightlife","nightlight","nightmare","ninja","nit","nitrogen","nobody","nod","node","noir","noise","nonbeliever","nonconformist","nondisclosure","nonsense","noodle","noodles","noon","norm","normal","normalisation","normalization","north","nose","notation","note","notebook","notepad","nothing","notice","notion","notoriety","nougat","noun","nourishment","novel","nucleotidase","nucleotide","nudge","nuke","number","numeracy","numeric","numismatist","nun","nurse","nursery","nursing","nurture","nut","nutmeg","nutrient","nutrition","nylon","oak","oar","oasis","oat","oatmeal","oats","obedience","obesity","obi","object","objection","objective","obligation","oboe","observation","observatory","obsession","obsidian","obstacle","occasion","occupation","occurrence","ocean","ocelot","octagon","octave","octavo","octet","octopus","odometer","odyssey","oeuvre","off-ramp","offence","offense","offer","offering","office","officer","official","offset","oil","okra","oldie","oleo","olive","omega","omelet","omission","omnivore","oncology","onion","online","onset","opening","opera","operating","operation","operator","ophthalmologist","opinion","opossum","opponent","opportunist","opportunity","opposite","opposition","optimal","optimisation","optimist","optimization","option","orange","orangutan","orator","orchard","orchestra","orchid","order","ordinary","ordination","ore","oregano","organ","organisation","organising","organization","organizing","orient","orientation","origin","original","originality","ornament","osmosis","osprey","ostrich","other","otter","ottoman","ounce","outback","outcome","outfielder","outfit","outhouse","outlaw","outlay","outlet","outline","outlook","output","outrage","outrigger","outrun","outset","outside","oval","ovary","oven","overcharge","overclocking","overcoat","overexertion","overflight","overhead","overheard","overload","overnighter","overshoot","oversight","overview","overweight","owl","owner","ownership","ox","oxford","oxygen","oyster","ozone","pace","pacemaker","pack","package","packaging","packet","pad","paddle","paddock","pagan","page","pagoda","pail","pain","paint","painter","painting","paintwork","pair","pajamas","palace","palate","palm","pamphlet","pan","pancake","pancreas","panda","panel","panic","pannier","panpipe","panther","pantologist","pantology","pantry","pants","pantsuit","pantyhose","papa","papaya","paper","paperback","paperwork","parable","parachute","parade","paradise","paragraph","parallelogram","paramecium","paramedic","parameter","paranoia","parcel","parchment","pard","pardon","parent","parenthesis","parenting","park","parka","parking","parliament","parole","parrot","parser","parsley","parsnip","part","participant","participation","particle","particular","partner","partnership","partridge","party","pass","passage","passbook","passenger","passing","passion","passive","passport","password","past","pasta","paste","pastor","pastoralist","pastry","pasture","pat","patch","pate","patent","patentee","path","pathogenesis","pathology","pathway","patience","patient","patina","patio","patriarch","patrimony","patriot","patrol","patroller","patrolling","patron","pattern","patty","pattypan","pause","pavement","pavilion","paw","pawnshop","pay","payee","payment","payoff","pea","peace","peach","peacoat","peacock","peak","peanut","pear","pearl","peasant","pecan","pedal","peek","peen","peer","peer-to-peer","pegboard","pelican","pelt","pen","penalty","pence","pencil","pendant","pendulum","penguin","penicillin","peninsula","pennant","penny","pension","pentagon","peony","people","pepper","pepperoni","percent","percentage","perception","perch","perennial","perfection","performance","perfume","period","periodical","peripheral","permafrost","permission","permit","perp","perpendicular","persimmon","person","personal","personality","personnel","perspective","pest","pet","petal","petition","petitioner","petticoat","pew","pharmacist","pharmacopoeia","phase","pheasant","phenomenon","phenotype","pheromone","philanthropy","philosopher","philosophy","phone","phosphate","photo","photodiode","photograph","photographer","photography","photoreceptor","phrase","phrasing","physical","physics","physiology","pianist","piano","piccolo","pick","pickax","pickaxe","picket","pickle","pickup","picnic","picture","picturesque","pie","piece","pier","piety","pig","pigeon","piglet","pigpen","pigsty","pike","pilaf","pile","pilgrim","pilgrimage","pill","pillar","pillbox","pillow","pilot","pimple","pin","pinafore","pince-nez","pine","pineapple","pinecone","ping","pinkie","pinot","pinstripe","pint","pinto","pinworm","pioneer","pipe","pipeline","piracy","pirate","pit","pita","pitch","pitcher","pitching","pith","pizza","place","placebo","placement","placode","plagiarism","plain","plaintiff","plan","plane","planet","planning","plant","plantation","planter","planula","plaster","plasterboard","plastic","plate","platelet","platform","platinum","platter","platypus","play","player","playground","playroom","playwright","plea","pleasure","pleat","pledge","plenty","plier","pliers","plight","plot","plough","plover","plow","plowman","plug","plugin","plum","plumber","plume","plunger","plywood","pneumonia","pocket","pocket-watch","pocketbook","pod","podcast","poem","poet","poetry","poignance","point","poison","poisoning","poker","polarisation","polarization","pole","polenta","police","policeman","policy","polish","politician","politics","poll","polliwog","pollutant","pollution","polo","polyester","polyp","pomegranate","pomelo","pompom","poncho","pond","pony","pool","poor","pop","popcorn","poppy","popsicle","popularity","population","populist","porcelain","porch","porcupine","pork","porpoise","port","porter","portfolio","porthole","portion","portrait","position","possession","possibility","possible","post","postage","postbox","poster","posterior","postfix","pot","potato","potential","pottery","potty","pouch","poultry","pound","pounding","poverty","powder","power","practice","practitioner","prairie","praise","pray","prayer","precedence","precedent","precipitation","precision","predecessor","preface","preference","prefix","pregnancy","prejudice","prelude","premeditation","premier","premise","premium","preoccupation","preparation","prescription","presence","present","presentation","preservation","preserves","presidency","president","press","pressroom","pressure","pressurisation","pressurization","prestige","presume","pretzel","prevalence","prevention","prey","price","pricing","pride","priest","priesthood","primary","primate","prince","princess","principal","principle","print","printer","printing","prior","priority","prison","prisoner","privacy","private","privilege","prize","prizefight","probability","probation","probe","problem","procedure","proceedings","process","processing","processor","proctor","procurement","produce","producer","product","production","productivity","profession","professional","professor","profile","profit","progenitor","program","programme","programming","progress","progression","prohibition","project","proliferation","promenade","promise","promotion","prompt","pronoun","pronunciation","proof","proof-reader","propane","property","prophet","proponent","proportion","proposal","proposition","proprietor","prose","prosecution","prosecutor","prospect","prosperity","prostacyclin","prostanoid","prostrate","protection","protein","protest","protocol","providence","provider","province","provision","prow","proximal","proximity","prune","pruner","pseudocode","pseudoscience","psychiatrist","psychoanalyst","psychologist","psychology","ptarmigan","pub","public","publication","publicity","publisher","publishing","pudding","puddle","puffin","pug","puggle","pulley","pulse","puma","pump","pumpernickel","pumpkin","pumpkinseed","pun","punch","punctuation","punishment","pup","pupa","pupil","puppet","puppy","purchase","puritan","purity","purpose","purr","purse","pursuit","push","pusher","put","puzzle","pyramid","pyridine","quadrant","quail","qualification","quality","quantity","quart","quarter","quartet","quartz","queen","query","quest","question","questioner","questionnaire","quiche","quicksand","quiet","quill","quilt","quince","quinoa","quit","quiver","quota","quotation","quote","rabbi","rabbit","raccoon","race","racer","racing","rack","radar","radiator","radio","radiosonde","radish","raffle","raft","rag","rage","raid","rail","railing","railroad","railway","raiment","rain","rainbow","raincoat","rainmaker","rainstorm","rainy","raise","raisin","rake","rally","ram","rambler","ramen","ramie","ranch","rancher","randomisation","randomization","range","ranger","rank","rap","raspberry","rat","rate","ratepayer","rating","ratio","rationale","rations","raven","ravioli","rawhide","ray","rayon","razor","reach","reactant","reaction","read","reader","readiness","reading","real","reality","realization","realm","reamer","rear","reason","reasoning","rebel","rebellion","reboot","recall","recapitulation","receipt","receiver","reception","receptor","recess","recession","recipe","recipient","reciprocity","reclamation","recliner","recognition","recollection","recommendation","reconsideration","record","recorder","recording","recovery","recreation","recruit","rectangle","redesign","redhead","redirect","rediscovery","reduction","reef","refectory","reference","referendum","reflection","reform","refreshments","refrigerator","refuge","refund","refusal","refuse","regard","regime","region","regionalism","register","registration","registry","regret","regulation","regulator","rehospitalisation","rehospitalization","reindeer","reinscription","reject","relation","relationship","relative","relaxation","relay","release","reliability","relief","religion","relish","reluctance","remains","remark","reminder","remnant","remote","removal","renaissance","rent","reorganisation","reorganization","repair","reparation","repayment","repeat","replacement","replica","replication","reply","report","reporter","reporting","repository","representation","representative","reprocessing","republic","republican","reputation","request","requirement","resale","rescue","research","researcher","resemblance","reservation","reserve","reservoir","reset","residence","resident","residue","resist","resistance","resolution","resolve","resort","resource","respect","respite","response","responsibility","rest","restaurant","restoration","restriction","restroom","restructuring","result","resume","retailer","retention","rethinking","retina","retirement","retouching","retreat","retrospect","retrospective","retrospectivity","return","reunion","revascularisation","revascularization","reveal","revelation","revenant","revenge","revenue","reversal","reverse","review","revitalisation","revitalization","revival","revolution","revolver","reward","rhetoric","rheumatism","rhinoceros","rhubarb","rhyme","rhythm","rib","ribbon","rice","riddle","ride","rider","ridge","riding","rifle","right","rim","ring","ringworm","riot","rip","ripple","rise","riser","risk","rite","ritual","river","riverbed","rivulet","road","roadway","roar","roast","robe","robin","robot","robotics","rock","rocker","rocket","rocket-ship","rod","role","roll","roller","romaine","romance","roof","room","roommate","rooster","root","rope","rose","rosemary","roster","rostrum","rotation","round","roundabout","route","router","routine","row","rowboat","rowing","rubber","rubbish","rubric","ruby","ruckus","rudiment","ruffle","rug","rugby","ruin","rule","ruler","ruling","rumor","run","runaway","runner","running","runway","rush","rust","rutabaga","rye","sabre","sack","saddle","sadness","safari","safe","safeguard","safety","saffron","sage","sail","sailboat","sailing","sailor","saint","sake","salad","salami","salary","sale","salesman","salmon","salon","saloon","salsa","salt","salute","samovar","sampan","sample","samurai","sanction","sanctity","sanctuary","sand","sandal","sandbar","sandpaper","sandwich","sanity","sardine","sari","sarong","sash","satellite","satin","satire","satisfaction","sauce","saucer","sauerkraut","sausage","savage","savannah","saving","savings","savior","saviour","savory","saw","saxophone","scaffold","scale","scallion","scallops","scalp","scam","scanner","scarecrow","scarf","scarification","scenario","scene","scenery","scent","schedule","scheduling","schema","scheme","schnitzel","scholar","scholarship","school","schoolhouse","schooner","science","scientist","scimitar","scissors","scooter","scope","score","scorn","scorpion","scotch","scout","scow","scrambled","scrap","scraper","scratch","screamer","screen","screening","screenwriting","screw","screw-up","screwdriver","scrim","scrip","script","scripture","scrutiny","sculpting","sculptural","sculpture","sea","seabass","seafood","seagull","seal","seaplane","search","seashore","seaside","season","seat","seaweed","second","secrecy","secret","secretariat","secretary","secretion","section","sectional","sector","security","sediment","seed","seeder","seeker","seep","segment","seizure","selection","self","self-confidence","self-control","self-esteem","seller","selling","semantics","semester","semicircle","semicolon","semiconductor","seminar","senate","senator","sender","senior","sense","sensibility","sensitive","sensitivity","sensor","sentence","sentencing","sentiment","sepal","separation","septicaemia","sequel","sequence","serial","series","sermon","serum","serval","servant","server","service","servitude","sesame","session","set","setback","setting","settlement","settler","severity","sewer","shack","shackle","shade","shadow","shadowbox","shakedown","shaker","shallot","shallows","shame","shampoo","shanty","shape","share","shareholder","shark","shaw","shawl","shear","shearling","sheath","shed","sheep","sheet","shelf","shell","shelter","sherbet","sherry","shield","shift","shin","shine","shingle","ship","shipper","shipping","shipyard","shirt","shirtdress","shoat","shock","shoe","shoe-horn","shoehorn","shoelace","shoemaker","shoes","shoestring","shofar","shoot","shootdown","shop","shopper","shopping","shore","shoreline","short","shortage","shorts","shortwave","shot","shoulder","shout","shovel","show","show-stopper","shower","shred","shrimp","shrine","shutdown","sibling","sick","sickness","side","sideboard","sideburns","sidecar","sidestream","sidewalk","siding","siege","sigh","sight","sightseeing","sign","signal","signature","signet","significance","signify","signup","silence","silica","silicon","silk","silkworm","sill","silly","silo","silver","similarity","simple","simplicity","simplification","simvastatin","sin","singer","singing","singular","sink","sinuosity","sip","sir","sister","sister-in-law","sitar","site","situation","size","skate","skating","skean","skeleton","ski","skiing","skill","skin","skirt","skull","skullcap","skullduggery","skunk","sky","skylight","skyline","skyscraper","skywalk","slang","slapstick","slash","slate","slaw","sled","sledge","sleep","sleepiness","sleeping","sleet","sleuth","slice","slide","slider","slime","slip","slipper","slippers","slope","slot","sloth","slump","smell","smelting","smile","smith","smock","smog","smoke","smoking","smolt","smuggling","snack","snail","snake","snakebite","snap","snarl","sneaker","sneakers","sneeze","sniffle","snob","snorer","snow","snowboarding","snowflake","snowman","snowmobiling","snowplow","snowstorm","snowsuit","snuck","snug","snuggle","soap","soccer","socialism","socialist","society","sociology","sock","socks","soda","sofa","softball","softdrink","softening","software","soil","soldier","sole","solicitation","solicitor","solidarity","solidity","soliloquy","solitaire","solution","solvency","sombrero","somebody","someone","someplace","somersault","something","somewhere","son","sonar","sonata","song","songbird","sonnet","soot","sophomore","soprano","sorbet","sorghum","sorrel","sorrow","sort","soul","soulmate","sound","soundness","soup","source","sourwood","sousaphone","south","southeast","souvenir","sovereignty","sow","soy","soybean","space","spacing","spaghetti","span","spandex","sparerib","spark","sparrow","spasm","spat","spatula","spawn","speaker","speakerphone","speaking","spear","spec","special","specialist","specialty","species","specification","spectacle","spectacles","spectrograph","spectrum","speculation","speech","speed","speedboat","spell","spelling","spelt","spending","sphere","sphynx","spice","spider","spiderling","spike","spill","spinach","spine","spiral","spirit","spiritual","spirituality","spit","spite","spleen","splendor","split","spokesman","spokeswoman","sponge","sponsor","sponsorship","spool","spoon","spork","sport","sportsman","spot","spotlight","spouse","sprag","sprat","spray","spread","spreadsheet","spree","spring","sprinkles","sprinter","sprout","spruce","spud","spume","spur","spy","spyglass","square","squash","squatter","squeegee","squid","squirrel","stab","stability","stable","stack","stacking","stadium","staff","stag","stage","stain","stair","staircase","stake","stalk","stall","stallion","stamen","stamina","stamp","stance","stand","standard","standardisation","standardization","standing","standoff","standpoint","star","starboard","start","starter","state","statement","statin","station","station-wagon","statistic","statistics","statue","status","statute","stay","steak","stealth","steam","steamroller","steel","steeple","stem","stench","stencil","step","step-aunt","step-brother","step-daughter","step-father","step-grandfather","step-grandmother","step-mother","step-sister","step-son","step-uncle","stepdaughter","stepmother","stepping-stone","stepson","stereo","stew","steward","stick","sticker","stiletto","still","stimulation","stimulus","sting","stinger","stir-fry","stitch","stitcher","stock","stock-in-trade","stockings","stole","stomach","stone","stonework","stool","stop","stopsign","stopwatch","storage","store","storey","storm","story","story-telling","storyboard","stot","stove","strait","strand","stranger","strap","strategy","straw","strawberry","strawman","stream","street","streetcar","strength","stress","stretch","strife","strike","string","strip","stripe","strobe","structure","strudel","struggle","stucco","stud","student","studio","study","stuff","stumbling","stump","stupidity","sturgeon","sty","style","styling","stylus","sub","subcomponent","subconscious","subcontractor","subexpression","subgroup","subject","submarine","submitter","subprime","subroutine","subscription","subsection","subset","subsidence","subsidiary","subsidy","substance","substitution","subtitle","suburb","subway","success","succotash","suede","suet","suffocation","sugar","suggestion","suit","suitcase","suite","sulfur","sultan","sum","summary","summer","summit","sun","sunbeam","sunbonnet","sundae","sunday","sundial","sunflower","sunglasses","sunlamp","sunlight","sunrise","sunroom","sunset","sunshine","superiority","supermarket","supernatural","supervision","supervisor","supper","supplement","supplier","supply","support","supporter","suppression","supreme","surface","surfboard","surge","surgeon","surgery","surname","surplus","surprise","surround","surroundings","surrounds","survey","survival","survivor","sushi","suspect","suspenders","suspension","sustainment","sustenance","swamp","swan","swanling","swath","sweat","sweater","sweatshirt","sweatshop","sweatsuit","sweets","swell","swim","swimming","swimsuit","swine","swing","switch","switchboard","switching","swivel","sword","swordfight","swordfish","sycamore","symbol","symmetry","sympathy","symptom","syndicate","syndrome","synergy","synod","synonym","synthesis","syrup","system","t-shirt","tab","tabby","tabernacle","table","tablecloth","tablet","tabletop","tachometer","tackle","taco","tactics","tactile","tadpole","tag","tail","tailbud","tailor","tailspin","take-out","takeover","tale","talent","talk","talking","tam-o'-shanter","tamale","tambour","tambourine","tan","tandem","tangerine","tank","tank-top","tanker","tankful","tap","tape","tapioca","target","taro","tarragon","tart","task","tassel","taste","tatami","tattler","tattoo","tavern","tax","taxi","taxicab","taxpayer","tea","teacher","teaching","team","teammate","teapot","tear","tech","technician","technique","technologist","technology","tectonics","teen","teenager","teepee","telephone","telescreen","teletype","television","tell","teller","temp","temper","temperature","temple","tempo","temporariness","temporary","temptation","temptress","tenant","tendency","tender","tenement","tenet","tennis","tenor","tension","tensor","tent","tentacle","tenth","tepee","teriyaki","term","terminal","termination","terminology","termite","terrace","terracotta","terrapin","terrarium","territory","test","testament","testimonial","testimony","testing","text","textbook","textual","texture","thanks","thaw","theater","theft","theism","theme","theology","theory","therapist","therapy","thermals","thermometer","thermostat","thesis","thickness","thief","thigh","thing","thinking","thirst","thistle","thong","thongs","thorn","thought","thousand","thread","threat","threshold","thrift","thrill","throne","thrush","thumb","thump","thunder","thunderbolt","thunderhead","thunderstorm","thyme","tiara","tic","tick","ticket","tide","tie","tiger","tights","tile","till","tilt","timbale","timber","time","timeline","timeout","timer","timetable","timing","timpani","tin","tinderbox","tintype","tip","tire","tissue","titanium","title","toad","toast","toaster","tobacco","today","toe","toenail","toffee","tofu","tog","toga","toilet","tolerance","tolerant","toll","tom-tom","tomatillo","tomato","tomb","tomography","tomorrow","ton","tonality","tone","tongue","tonic","tonight","tool","toot","tooth","toothbrush","toothpaste","toothpick","top","top-hat","topic","topsail","toque","toreador","tornado","torso","torte","tortellini","tortilla","tortoise","total","tote","touch","tough-guy","tour","tourism","tourist","tournament","tow-truck","towel","tower","town","townhouse","township","toy","trace","trachoma","track","tracking","tracksuit","tract","tractor","trade","trader","trading","tradition","traditionalism","traffic","trafficker","tragedy","trail","trailer","trailpatrol","train","trainer","training","trait","tram","trance","transaction","transcript","transfer","transformation","transit","transition","translation","transmission","transom","transparency","transplantation","transport","transportation","trap","trapdoor","trapezium","trapezoid","trash","travel","traveler","tray","treasure","treasury","treat","treatment","treaty","tree","trek","trellis","tremor","trench","trend","triad","trial","triangle","tribe","tributary","trick","trigger","trigonometry","trillion","trim","trinket","trip","tripod","tritone","triumph","trolley","troop","trooper","trophy","trouble","trousers","trout","trove","trowel","truck","trumpet","trunk","trust","trustee","truth","try","tsunami","tub","tuba","tube","tuber","tug","tugboat","tuition","tulip","tumbler","tummy","tuna","tune","tune-up","tunic","tunnel","turban","turf","turkey","turmeric","turn","turning","turnip","turnover","turnstile","turret","turtle","tusk","tussle","tutu","tuxedo","tweet","tweezers","twig","twilight","twine","twins","twist","twister","twitter","type","typeface","typewriter","typhoon","ukulele","ultimatum","umbrella","unblinking","uncertainty","uncle","underclothes","underestimate","underground","underneath","underpants","underpass","undershirt","understanding","understatement","undertaker","underwear","underweight","underwire","underwriting","unemployment","unibody","uniform","uniformity","union","unique","unit","unity","universe","university","update","upgrade","uplift","upper","upstairs","upward","urge","urgency","urn","usage","use","user","usher","usual","utensil","utilisation","utility","utilization","vacation","vaccine","vacuum","vagrant","valance","valentine","validate","validity","valley","valuable","value","vampire","van","vanadyl","vane","vanilla","vanity","variability","variable","variant","variation","variety","vascular","vase","vault","vaulting","veal","vector","vegetable","vegetarian","vegetarianism","vegetation","vehicle","veil","vein","veldt","vellum","velocity","velodrome","velvet","vendor","veneer","vengeance","venison","venom","venti","venture","venue","veranda","verb","verdict","verification","vermicelli","vernacular","verse","version","vertigo","verve","vessel","vest","vestment","vet","veteran","veterinarian","veto","viability","vibraphone","vibration","vibrissae","vice","vicinity","victim","victory","video","view","viewer","vignette","villa","village","vine","vinegar","vineyard","vintage","vintner","vinyl","viola","violation","violence","violet","violin","virtue","virus","visa","viscose","vise","vision","visit","visitor","visor","vista","visual","vitality","vitamin","vitro","vivo","vogue","voice","void","vol","volatility","volcano","volleyball","volume","volunteer","volunteering","vote","voter","voting","voyage","vulture","wafer","waffle","wage","wagon","waist","waistband","wait","waiter","waiting","waitress","waiver","wake","walk","walker","walking","walkway","wall","wallaby","wallet","walnut","walrus","wampum","wannabe","want","war","warden","wardrobe","warfare","warlock","warlord","warm-up","warming","warmth","warning","warrant","warren","warrior","wasabi","wash","washbasin","washcloth","washer","washtub","wasp","waste","wastebasket","wasting","watch","watcher","watchmaker","water","waterbed","watercress","waterfall","waterfront","watermelon","waterskiing","waterspout","waterwheel","wave","waveform","wax","way","weakness","wealth","weapon","wear","weasel","weather","web","webinar","webmail","webpage","website","wedding","wedge","weeder","weedkiller","week","weekend","weekender","weight","weird","welcome","welfare","well","well-being","west","western","wet-bar","wetland","wetsuit","whack","whale","wharf","wheat","wheel","whelp","whey","whip","whirlpool","whirlwind","whisker","whisper","whistle","whole","wholesale","wholesaler","whorl","wick","widget","widow","width","wife","wifi","wild","wildebeest","wilderness","wildlife","will","willingness","willow","win","wind","wind-chime","windage","window","windscreen","windshield","winery","wing","wingman","wingtip","wink","winner","winter","wire","wiretap","wiring","wisdom","wiseguy","wish","wisteria","wit","witch","witch-hunt","withdrawal","witness","wok","wolf","woman","wombat","wonder","wont","wood","woodchuck","woodland","woodshed","woodwind","wool","woolens","word","wording","work","workbench","worker","workforce","workhorse","working","workout","workplace","workshop","world","worm","worry","worship","worshiper","worth","wound","wrap","wraparound","wrapper","wrapping","wreck","wrecker","wren","wrench","wrestler","wriggler","wrinkle","wrist","writer","writing","wrong","xylophone","yacht","yahoo","yak","yam","yang","yard","yarmulke","yarn","yawl","year","yeast","yellowjacket","yesterday","yew","yin","yoga","yogurt","yoke","yolk","young","youngster","yourself","youth","yoyo","yurt","zampone","zebra","zebrafish","zen","zephyr","zero","ziggurat","zinc","zipper","zither","zombie","zone","zoo","zoologist","zoology","zoot-suit","zucchini"],Lv=["a","abaft","aboard","about","above","absent","across","afore","after","against","along","alongside","amid","amidst","among","amongst","an","anenst","anti","apropos","apud","around","as","aside","astride","at","athwart","atop","barring","before","behind","below","beneath","beside","besides","between","beyond","but","by","circa","concerning","considering","despite","down","during","except","excepting","excluding","failing","following","for","forenenst","from","given","in","including","inside","into","lest","like","mid","midst","minus","modulo","near","next","notwithstanding","of","off","on","onto","opposite","out","outside","over","pace","past","per","plus","pro","qua","regarding","round","sans","save","since","than","the","through","throughout","till","times","to","toward","towards","under","underneath","unlike","until","unto","up","upon","versus","via","vice","with","within","without","worth"],Mv=["abandon","abase","abate","abbreviate","abdicate","abduct","abet","abhor","abide","abjure","abnegate","abolish","abominate","abort","abound","abrade","abridge","abrogate","abscond","abseil","absent","absolve","absorb","abstain","abstract","abut","accede","accelerate","accent","accentuate","accept","access","accessorise","accessorize","acclaim","acclimate","acclimatise","acclimatize","accommodate","accompany","accomplish","accord","accost","account","accouter","accoutre","accredit","accrue","acculturate","accumulate","accuse","accustom","ace","ache","achieve","acidify","acknowledge","acquaint","acquiesce","acquire","acquit","act","action","activate","actualise","actualize","actuate","adapt","add","addle","address","adduce","adhere","adjoin","adjourn","adjudge","adjudicate","adjure","adjust","administer","admire","admit","admonish","adopt","adore","adorn","adsorb","adulterate","adumbrate","advance","advantage","advertise","advise","advocate","aerate","affect","affiliate","affirm","affix","afflict","afford","afforest","affront","age","agglomerate","aggravate","aggregate","agitate","agonise","agonize","agree","aid","ail","aim","air","airbrush","airdrop","airfreight","airlift","alarm","alert","alienate","alight","align","allay","allege","alleviate","allocate","allot","allow","alloy","allude","ally","alphabetise","alphabetize","alter","alternate","amalgamate","amass","amaze","amble","ambush","ameliorate","amend","amortise","amortize","amount","amplify","amputate","amuse","anaesthetise","anaesthetize","analyse","anchor","anesthetize","anger","angle","anglicise","anglicize","animate","anneal","annex","annihilate","annotate","announce","annoy","annul","anodise","anodize","anoint","anonymise","anonymize","answer","antagonise","antagonize","antedate","anthologise","anthologize","anticipate","ape","apologise","apologize","apostrophise","apostrophize","appal","appall","appeal","appear","appease","append","appertain","applaud","apply","appoint","apportion","appraise","appreciate","apprehend","apprentice","apprise","approach","appropriate","approve","approximate","aquaplane","arbitrate","arc","arch","archive","argue","arise","arm","arraign","arrange","array","arrest","arrive","arrogate","art","articulate","ascend","ascertain","ascribe","ask","asphyxiate","aspirate","aspire","assail","assassinate","assault","assay","assemble","assent","assert","assess","assign","assimilate","assist","associate","assuage","assume","assure","asterisk","astonish","astound","atomise","atomize","atone","atrophy","attach","attack","attain","attempt","attend","attenuate","attest","attract","attribute","auction","audit","audition","augment","augur","authenticate","author","authorise","authorize","autograph","automate","autosave","autowind","avail","avenge","aver","average","avert","avoid","avow","await","awake","awaken","award","awe","ax","axe","baa","babble","baby","babysit","back","backcomb","backdate","backfill","backfire","backlight","backpack","backspace","backtrack","badger","baffle","bag","bail","bait","bake","balance","bale","ball","balloon","ballot","balls","bamboozle","ban","band","bandage","bandy","banish","bank","bankroll","bankrupt","banter","baptise","baptize","bar","barbecue","bare","bargain","barge","bark","barnstorm","barrack","barrel","barricade","barter","base","bash","bask","baste","bat","batch","bath","bathe","batten","batter","battle","baulk","bawl","bay","bayonet","be","beach","beam","bean","bear","beard","beat","beatbox","beatboxer","beatify","beautify","beckon","become","bedazzle","bedeck","bedevil","beef","beep","beetle","befall","befit","befog","befriend","beg","beget","beggar","begin","begrudge","beguile","behave","behold","behoove","behove","belabor","belabour","belay","belch","belie","believe","belittle","bellow","belly","bellyache","belong","belt","bemoan","bemuse","benchmark","bend","benefit","bequeath","berate","bereave","berth","beseech","beset","besiege","besmirch","bespatter","bespeak","best","bestir","bestow","bestride","bet","betake","betide","betoken","betray","better","bewail","beware","bewilder","bewitch","bias","bicker","bicycle","bid","bide","biff","bifurcate","big","bike","bilk","bill","billet","billow","bin","bind","binge","biodegrade","bird","bisect","bite","bitmap","bivouac","bivvy","blab","blabber","blacken","blackmail","blag","blame","blanch","blank","blanket","blare","blaspheme","blast","blather","blaze","blazon","bleach","bleat","bleed","bleep","blemish","blench","blend","bless","blight","blind","blindfold","blindfolded","blindside","blink","bliss","blister","blitz","bloat","block","blockade","blog","blood","bloom","bloop","blossom","blot","blow","blub","blubber","bludge","bludgeon","bluff","blunder","blunt","blur","blurt","blush","bluster","board","boast","bob","bobble","bode","bodge","bog","boggle","boil","bolster","bolt","bomb","bombard","bond","bonk","boo","boogie","book","bookmark","boom","boomerang","boost","boot","bootleg","bop","border","bore","born","borrow","boss","botch","bother","bottle","bottleful","bottom","bounce","bound","bow","bowdlerise","bowdlerize","bowl","bowlful","box","boycott","braai","brace","braces","bracket","brag","braid","brain","brainstorm","brainwash","braise","brake","branch","brand","brandish","brave","brawl","bray","brazen","breach","break","breakfast","breathalyse","breathalyze","breathe","breed","breeze","brew","bribe","brick","bridge","bridle","brief","brighten","brim","bring","bristle","broach","broadcast","broaden","broadside","broil","broker","brood","brook","browbeat","browse","bruise","bruit","brush","brutalise","brutalize","bubble","buck","bucket","bucketful","buckle","bud","buddy","budge","budget","buff","buffer","buffet","bug","build","bulge","bulk","bulldoze","bully","bum","bumble","bump","bunch","bundle","bungle","bunk","bunker","bunt","buoy","burble","burden","burgeon","burglarize","burgle","burn","burnish","burp","burrow","burst","bury","bus","bushwhack","busk","bust","bustle","busy","butcher","butt","butter","button","buttonhole","buttress","buy","buzz","buzzing","bypass","cable","cache","cackle","caddie","cadge","cage","cajole","cake","calcify","calculate","calibrate","call","calm","calve","camouflage","camp","campaign","can","canalise","canalize","cancel","cane","cannibalise","cannibalize","cannon","cannulate","canoe","canonise","canonize","canst","cant","canter","canvass","cap","caper","capitalise","capitalize","capitulate","capsize","captain","caption","captivate","capture","caramelise","caramelize","carbonise","carbonize","carburise","carburize","card","care","careen","career","caress","caricature","carjack","carol","carom","carouse","carp","carpet","carpool","carry","cart","cartwheel","carve","cascade","case","cash","cashier","casserole","cast","castigate","catalog","catalogue","catalyse","catalyze","catapult","catch","categorise","categorize","cater","caterwaul","catnap","caucus","caulk","cause","cauterise","cauterize","caution","cave","cavil","cavort","caw","cc","cease","cede","celebrate","cement","censor","censure","centralise","centralize","centre","certificate","certify","chafe","chaff","chain","chair","chalk","challenge","champ","champion","chance","change","channel","chant","chaperon","chaperone","char","characterise","characterize","charbroil","charge","chargesheet","chargrill","charm","chart","charter","chase","chasten","chastise","chat","chatter","chauffeur","cheapen","cheat","cheater","check","checkmate","cheek","cheep","cheer","cherish","chew","chicken","chide","chill","chillax","chime","chip","chirp","chisel","chivvy","chlorinate","choke","chomp","choose","chop","choreograph","chortle","chorus","christen","chromakey","chronicle","chuck","chuckle","chunder","chunter","churn","cinch","circle","circulate","circumnavigate","circumscribe","circumvent","cite","civilise","civilize","clack","claim","clam","clamber","clamor","clamour","clamp","clang","clank","clap","clarify","clash","clasp","class","classify","clatter","claw","clean","cleanse","clear","cleave","clench","clerk","click","climb","clinch","cling","clink","clinking","clip","cloak","clobber","clock","clog","clone","clonk","close","closet","clot","clothe","cloud","clout","clown","club","cluck","clue","clump","clunk","cluster","clutch","clutter","coach","coagulate","coalesce","coarsen","coast","coat","coax","cobble","cocoon","coddle","code","codify","coerce","coexist","cogitate","cohabit","cohere","coil","coin","coincide","collaborate","collapse","collar","collate","collect","collectivise","collectivize","collide","colligate","collocate","collude","colonise","colonize","colorize","colour","comb","combat","combine","combust","come","comfort","command","commandeer","commemorate","commence","commend","comment","commentate","commercialise","commercialize","commingle","commiserate","commission","commit","commune","communicate","commute","compact","compare","compartmentalise","compartmentalize","compel","compensate","compete","compile","complain","complement","complete","complicate","compliment","comply","comport","compose","compost","compound","comprehend","compress","comprise","compromise","compute","computerise","computerize","con","conceal","concede","conceive","concentrate","conceptualise","conceptualize","concern","concertina","conciliate","conclude","concoct","concrete","concur","concuss","condemn","condense","condescend","condition","condone","conduct","cone","confer","confess","confide","configure","confine","confirm","confiscate","conflate","conflict","conform","confound","confront","confuse","confute","congeal","congratulate","congregate","conjecture","conjoin","conjugate","conjure","conk","connect","connive","connote","conquer","conscientise","conscientize","conscript","consecrate","consent","conserve","consider","consign","consist","console","consolidate","consort","conspire","constitute","constrain","constrict","construct","construe","consult","consume","consummate","contact","contain","contaminate","contemplate","contend","content","contest","contextualise","contextualize","continue","contort","contract","contradict","contraindicate","contrast","contravene","contribute","contrive","control","controvert","convalesce","convene","converge","converse","convert","convey","convict","convince","convoke","convulse","coo","cook","cool","coop","cooperate","coordinate","cop","cope","coppice","copy","copyright","cordon","core","cork","corkscrew","corner","corral","correct","correlate","correspond","corrode","corrupt","coruscate","cosh","cosset","cost","cosy","cotton","couch","cough","counsel","count","countenance","counter","counteract","counterbalance","counterfeit","countermand","counterpoint","countersign","couple","courier","course","court","covenant","cover","covet","cow","cower","cozy","crackle","cradle","craft","cram","cramp","crane","crank","crate","crave","crawl","crayon","creak","creaking","cream","crease","create","credential","credit","creep","cremate","creolise","creolize","creosote","crest","crew","crib","crick","criminalise","criminalize","crimp","cringe","crinkle","cripple","crisp","criticise","criticize","critique","croak","crochet","crook","croon","crop","cross","crouch","crow","crowd","crown","cruise","crumble","crumple","crunch","crusade","crush","cry","crystallise","crystallize","cube","cuddle","cudgel","cue","cuff","cull","culminate","cultivate","culture","cup","curate","curb","curdle","cure","curl","curry","curse","curtail","curtain","curtsy","curve","cushion","cuss","customise","customize","cut","cwtch","cycle","dab","dabble","dally","dam","damage","damp","dampen","dance","dandle","dangle","dare","darken","darn","dart","dash","date","daub","daunt","dawdle","dawn","daydream","dazzle","deactivate","deaden","deadhead","deafen","deal","debar","debase","debate","debilitate","debit","debrief","debug","debunk","debut","decamp","decant","decay","deceive","decelerate","decentralise","decentralize","decide","decimalise","decimalize","decimate","decipher","deck","declaim","declare","declassify","decline","declutter","decode","decommission","decompose","decompress","deconsecrate","deconstruct","decontaminate","decontrol","decorate","decouple","decoy","decrease","decree","decriminalise","decriminalize","decry","decrypt","dedicate","deduce","deduct","deejay","deem","deepen","deface","defame","default","defeat","defect","defend","defer","defile","define","deflate","deflect","defog","defoliate","deforest","deform","defrag","defragment","defraud","defray","defrock","defrost","defuse","defy","degenerate","deglaze","degrade","degrease","dehumanise","dehumanize","dehydrate","deify","deign","delay","delegate","delete","deliberate","delight","delimit","delineate","deliquesce","deliver","delouse","delude","deluge","delve","demand","demarcate","demean","demerge","demilitarise","demilitarize","demineralise","demineralize","demist","demo","demob","demobilise","demobilize","democratise","democratize","demolish","demonise","demonize","demonstrate","demoralise","demoralize","demote","demotivate","demur","demystify","denationalise","denationalize","denigrate","denitrify","denominate","denote","denounce","dent","denude","deny","depart","depend","depersonalise","depersonalize","depict","deplane","deplete","deplore","deploy","depopulate","deport","depose","deposit","deprave","deprecate","depreciate","depress","depressurise","depressurize","deprive","depute","deputise","deputize","deracinate","derail","dereference","deregulate","deride","derive","derogate","descale","descend","describe","descry","desecrate","desegregate","deselect","desensitise","desensitize","desert","deserve","design","designate","desire","desist","deskill","desolate","despair","despise","despoil","destabilise","destabilize","destock","destroy","detach","detail","detain","detect","deter","deteriorate","determine","detest","dethrone","detonate","detour","detoxify","detract","detrain","devalue","devastate","develop","deviate","devise","devoice","devolve","devote","devour","diagnose","dial","dice","dicker","dictate","die","diet","differ","differentiate","diffract","diffuse","dig","digest","digitalise","digitalize","digitise","digitize","dignify","digress","dilate","dilute","diluted","dim","diminish","dimple","dine","ding","dip","diphthongise","diphthongize","direct","dirty","dis","disable","disabuse","disadvantage","disaffiliate","disafforest","disagree","disallow","disambiguate","disappear","disappoint","disapprove","disarm","disarrange","disassemble","disassociate","disavow","disband","disbar","disbelieve","disburse","discard","discern","discharge","discipline","disclaim","disclose","discolor","discolour","discomfit","discomfort","discompose","disconcert","disconnect","discontinue","discount","discourage","discourse","discover","discredit","discriminate","discuss","disdain","disembark","disembowel","disenfranchise","disengage","disentangle","disestablish","disgorge","disgrace","disguise","disgust","dish","dishearten","dishonor","dishonour","disillusion","disincentivise","disincentivize","disinfect","disinherit","disinhibit","disintegrate","disinter","disinvest","dislike","dislocate","dislodge","dismantle","dismay","dismember","dismiss","dismount","disobey","disorient","disorientate","disown","disparage","dispatch","dispel","dispense","disperse","displace","display","displease","disport","dispose","dispossess","disprove","dispute","disqualify","disregard","disrespect","disrobe","disrupt","dissect","dissemble","disseminate","dissent","dissimulate","dissipate","dissociate","dissolve","dissuade","distance","distend","distil","distill","distinguish","distort","distract","distress","distribute","distrust","disturb","disunite","ditch","dither","dive","diverge","diversify","divert","divest","divide","divine","divorce","divulge","divvy","do","dob","dock","doctor","document","dodge","doff","dog","dole","doll","dollarise","dollarize","domesticate","dominate","don","donate","doodle","doom","doorstep","dop","dope","dose","doss","dot","dote","double","doubt","douse","dovetail","down","downchange","downgrade","downlink","download","downplay","downshift","downsize","dowse","doze","draft","drag","dragoon","drain","dramatise","dramatize","drape","draught","draw","drawl","dread","dream","dredge","drench","dress","dribble","drift","drill","drink","drip","drive","drivel","drizzle","drone","drool","droop","drop","drown","drowse","drug","drum","dry","dub","duck","duckie","ducks","duel","duff","dull","dumb","dumbfound","dump","dunk","dunt","dupe","duplicate","dust","dwarf","dwell","dwindle","dye","dynamite","earmark","earn","earth","ease","eat","eavesdrop","ebb","echo","eclipse","economise","economize","eddy","edge","edify","edit","editorialise","editorialize","educate","efface","effect","effectuate","egg","eject","eke","elaborate","elapse","elbow","elect","electrify","electrocute","electroplate","elevate","elicit","elide","eliminate","elongate","elope","elucidate","elude","email","emanate","emancipate","embalm","embargo","embark","embarrass","embed","embellish","embezzle","embitter","emblazon","embody","embolden","emboss","embrace","embroider","embroil","emcee","emend","emerge","emigrate","emit","emote","empathise","empathize","emphasise","emphasize","employ","empower","empty","emulate","emulsify","enable","enact","encamp","encapsulate","encase","encash","enchant","encircle","enclose","encode","encompass","encounter","encourage","encroach","encrypt","encumber","end","endanger","endear","endeavor","endeavour","endorse","endow","endure","energise","energize","enervate","enfeeble","enfold","enforce","enfranchise","engage","engender","engineer","engorge","engrave","engross","engulf","enhance","enjoin","enjoy","enlarge","enlighten","enlist","enliven","enmesh","ennoble","enquire","enrage","enrapture","enrich","enrol","enroll","ensconce","enshrine","enshroud","ensnare","ensue","ensure","entail","entangle","enter","entertain","enthral","enthrall","enthrone","enthuse","entice","entitle","entomb","entrance","entrap","entreat","entrench","entrust","entwine","enumerate","enunciate","envelop","envisage","envision","envy","epitomise","epitomize","equal","equalise","equalize","equate","equip","equivocate","eradicate","erase","erode","err","erupt","escalate","escape","eschew","espouse","espy","essay","establish","esteem","estimate","etch","eulogise","eulogize","euthanise","euthanize","evacuate","evade","evaluate","evangelise","evangelize","evaporate","even","eventuate","evict","evidence","evince","eviscerate","evoke","evolve","exacerbate","exact","exaggerate","exalt","examine","exasperate","excavate","exceed","excel","except","excerpt","exchange","excise","excite","exclaim","exclude","excommunicate","excoriate","excrete","exculpate","excuse","execute","exemplify","exempt","exercise","exert","exeunt","exfoliate","exhale","exhaust","exhibit","exhilarate","exhort","exhume","exile","exist","exit","exonerate","exorcise","exorcize","expand","expatiate","expect","expectorate","expedite","expel","expend","experience","experiment","expiate","expire","explain","explicate","explode","exploit","explore","export","expose","expostulate","expound","express","expropriate","expunge","expurgate","extemporise","extemporize","extend","exterminate","externalise","externalize","extinguish","extirpate","extol","extort","extract","extradite","extrapolate","extricate","extrude","exude","exult","eye","eyeball","eyeglasses","fabricate","face","facilitate","factor","factorise","factorize","fade","faff","fail","faint","fake","fall","falsify","falter","familiarise","familiarize","fan","fancy","fantasise","fantasize","fare","farewell","farm","farrow","fascinate","fashion","fast","fasten","father","fathom","fatten","fault","favor","favour","fawn","fax","faze","fear","feast","feather","feature","federate","feed","feel","feign","feint","fell","feminise","feminize","fence","fend","ferment","ferret","ferry","fertilise","fertilize","fess","fester","festoon","fetch","fete","fetter","feud","fib","fictionalise","fictionalize","fiddle","fidget","field","fight","figure","filch","file","filibuster","fill","fillet","film","filter","finagle","finalise","finalize","finance","find","fine","finesse","fingerprint","finish","fire","firebomb","firm","fish","fishtail","fit","fix","fizz","fizzle","flag","flagellate","flail","flake","flame","flank","flap","flare","flash","flat","flatline","flatten","flatter","flaunt","flavour","flay","fleck","flee","fleece","flesh","flex","flick","flicker","flight","flinch","fling","flip","flirt","flit","float","flock","flog","flood","floodlight","floor","flop","floss","flounce","flounder","flour","flourish","flout","flow","flower","flub","fluctuate","fluff","flummox","flunk","flush","fluster","flutter","fly","foal","foam","fob","focalise","focalize","focus","fog","foil","foist","fold","follow","foment","fool","foot","forage","forbear","forbid","force","ford","forearm","forecast","foreclose","foregather","foreground","foresee","foreshadow","foreshorten","forestall","foretell","forewarn","forfeit","forfend","forgather","forge","forget","forgive","forgo","fork","form","formalise","formalize","format","formulate","forsake","forswear","fortify","forward","forwards","fossick","fossilise","fossilize","foster","foul","found","founder","fox","fracture","fragment","frame","franchise","frank","fraternise","fraternize","fray","freak","free","freelance","freeload","freestyle","freewheel","freeze","freight","frequent","freshen","fret","frighten","fringe","frisk","fritter","frizz","frizzle","frogmarch","frolic","front","frost","froth","frown","fruit","frustrate","fry","fudge","fuel","fulfil","fulfill","fulminate","fumble","fume","fumigate","function","fund","funk","funnel","furl","furlough","furnish","furrow","further","fuse","fuss","gab","gabble","gad","gag","gain","gainsay","gall","gallivant","gallop","galumph","galvanise","galvanize","gamble","gambol","gang","gape","garage","garden","gargle","garland","garner","garnish","garrison","garrote","garrotte","gas","gash","gasp","gatecrash","gather","gauge","gawk","gawp","gaze","gazump","gazunder","gear","gee","gel","geld","gen","generalise","generalize","generate","gentrify","genuflect","germinate","gerrymander","gestate","gesticulate","gesture","get","ghost","ghostwrite","gibber","gift","giggle","gild","ginger","gird","girdle","give","gladden","glamorise","glamorize","glance","glare","glass","glaze","gleam","glean","glide","glimmer","glimmering","glimpse","glint","glisten","glister","glitter","gloat","globalise","globalize","glom","glorify","glory","gloss","glow","glower","glue","glug","glut","gnash","gnaw","go","goad","gobble","goggle","goldbrick","goof","google","goose","gore","gorge","gossip","gouge","govern","grab","grace","grade","graduate","graft","grant","grapple","grasp","grass","grate","gratify","gravitate","graze","grease","green","greet","grey","grieve","grill","grimace","grin","grind","grip","gripe","grit","grizzle","groan","grok","groom","grouch","ground","group","grouse","grout","grovel","grow","growl","grub","grudge","grumble","grunt","guarantee","guard","guess","guest","guffaw","guide","guillotine","guilt","gulp","gum","gun","gurgle","gurn","gush","gussy","gust","gut","gutter","guzzle","gybe","gyrate","hack","haemorrhage","haggle","hail","hallmark","halloo","hallucinate","halt","halve","ham","hammer","hamper","hamstring","hand","handcuff","handicap","handle","hang","hanker","happen","harangue","harass","harbor","harbour","harden","hare","hark","harm","harmonise","harmonize","harness","harp","harpoon","harrow","harrumph","harry","harvest","hash","hassle","hasten","hatch","hate","haul","haunt","have","haw","hawk","hazard","haze","head","headbutt","headhunt","headline","heal","heap","hear","hearken","hearten","heat","heave","heckle","hector","hedge","heed","heel","heft","heighten","heist","help","hem","hemorrhage","herald","herd","hesitate","hew","hex","hibernate","hiccough","hiccup","hide","hie","highball","highlight","hightail","hijack","hike","hinder","hinge","hint","hire","hiss","hit","hitch","hitchhike","hive","hoard","hoax","hobble","hobnob","hock","hog","hoick","hoist","hold","hole","holiday","holler","hollow","holster","home","homeschool","homestead","hone","honeymoon","honk","honour","hoodwink","hoof","hook","hoon","hoot","hoover","hop","hope","horn","horrify","horse","horsewhip","hose","hosepipe","hospitalise","hospitalize","host","hot","hotfoot","hound","house","hover","howl","huddle","huff","hug","hull","hum","humanise","humanize","humble","humiliate","humour","hunch","hunger","hunker","hunt","hurdle","hurl","hurry","hurt","hurtle","husband","hush","husk","hustle","hybridise","hybridize","hydrate","hydroplane","hype","hyperventilate","hyphenate","hypnotise","hypnotize","hypothesise","hypothesize","ice","iconify","idealise","idealize","ideate","identify","idle","idolise","idolize","ignite","ignore","illuminate","illumine","illustrate","imagine","imagineer","imbibe","imbue","imitate","immerse","immigrate","immobilise","immobilize","immolate","immortalise","immortalize","immunise","immunize","immure","impact","impair","impale","impanel","impart","impeach","impede","impel","imperil","impersonate","impinge","implant","implement","implicate","implode","implore","imply","import","importune","impose","impound","impoverish","impress","imprint","imprison","improve","improvise","impugn","inactivate","inaugurate","incapacitate","incarcerate","incarnate","incense","incentivise","incentivize","inch","incinerate","incise","incite","incline","include","incommode","inconvenience","incorporate","increase","incriminate","incubate","inculcate","incur","indemnify","indent","index","indicate","indict","individualise","individualize","individuate","indoctrinate","induce","induct","indulge","industrialise","industrialize","infantilise","infantilize","infect","infer","infest","infill","infiltrate","inflame","inflate","inflect","inflict","influence","inform","infringe","infuriate","infuse","ingest","ingratiate","inhabit","inhale","inhere","inherit","inhibit","initial","initialise","initialize","initiate","inject","injure","ink","inlay","innovate","inoculate","input","inscribe","insert","inset","insinuate","insist","inspect","inspire","install","instance","instigate","instil","instill","institute","institutionalise","institutionalize","instruct","insulate","insult","insure","integrate","intend","intensify","inter","interact","intercede","intercept","interchange","interconnect","intercut","interest","interface","interfere","interject","interlace","interleave","interlink","interlock","intermarry","intermesh","intermingle","intermix","intern","internalise","internalize","internationalise","internationalize","interpenetrate","interpolate","interpose","interpret","interrelate","interrogate","interrupt","intersect","intersperse","intertwine","intervene","interview","interweave","interwork","intimate","intimidate","intone","intoxicate","intrigue","introduce","intrude","intubate","intuit","inundate","inure","invade","invalid","invalidate","inveigh","inveigle","invent","inventory","invert","invest","investigate","invigilate","invigorate","invite","invoice","invoke","involve","ionise","ionize","irk","iron","irradiate","irrigate","irritate","irrupt","isolate","issue","italicise","italicize","itch","itemise","itemize","iterate","jab","jabber","jack","jackknife","jail","jam","jangle","jar","jaw","jaywalk","jazz","jeer","jell","jeopardise","jeopardize","jest","jet","jettison","jib","jibe","jiggle","jilt","jingle","jink","jinx","jive","jockey","jog","joggle","join","joint","joke","jol","jolly","jolt","josh","jostle","jot","journey","joust","judder","judge","juggle","juice","jumble","jump","junk","justify","jut","juxtapose","keel","keelhaul","keen","keep","ken","key","keyboard","kibitz","kick","kid","kindle","kip","kiss","kit","kite","klap","kludge","knacker","knead","knee","kneecap","kneel","knife","knight","knit","knock","knot","know","knuckle","kowtow","kvetch","label","labour","lace","lacerate","lack","lacquer","ladder","ladle","lag","lam","lamb","lambast","lambaste","lament","lamp","lampoon","lance","land","lands","landscape","languish","lap","lapse","lard","large","lark","lash","lasso","last","latch","lather","laud","laugh","launch","launder","lavish","lay","layer","laze","leach","lead","leaf","leaflet","leak","lean","leap","leapfrog","learn","lease","leash","leave","leaven","lecture","leer","leg","legalise","legalize","legislate","legitimise","legitimize","lend","lengthen","lessen","let","letter","letterbox","level","lever","leverage","levitate","levy","liaise","libel","liberalise","liberalize","liberate","license","lick","lie","lift","ligate","light","lighten","like","liken","limber","lime","limit","limp","line","linger","link","lionise","lionize","liquefy","liquidate","liquidise","liquidize","lisp","list","listen","litigate","litter","live","liven","load","loads","loaf","loan","loathe","lob","lobby","lobotomise","lobotomize","localise","localize","locate","lock","lodge","loft","log","loiter","loll","lollop","long","look","looks","loom","loop","loose","loosen","loot","lop","lope","lord","lose","lounge","lour","louse","love","low","lowball","lower","lubricate","luck","lug","lull","lumber","lump","lunch","lunge","lurch","lure","lurk","luxuriate","macerate","machine","madden","magic","magnetise","magnetize","magnify","mail","maim","mainline","mainstream","maintain","major","make","malfunction","malign","malinger","maltreat","man","manacle","manage","mandate","mangle","manhandle","manicure","manifest","manipulate","manoeuvre","mantle","manufacture","manure","map","mar","march","marginalise","marginalize","marinate","mark","market","maroon","marry","marshal","martyr","marvel","masculinise","masculinize","mash","mask","masquerade","mass","massacre","massage","master","mastermind","masticate","match","materialise","materialize","matriculate","matter","mature","maul","maunder","max","maximise","maximize","mean","meander","measure","mechanise","mechanize","medal","meddle","mediate","medicate","meditate","meet","meld","mellow","melt","memorialise","memorialize","memorise","memorize","menace","mend","mention","meow","mercerise","mercerize","merchandise","merge","merit","mesh","mesmerise","mesmerize","mess","message","metabolise","metabolize","metamorphose","mete","meter","methinks","mew","mewl","miaow","microblog","microchip","micromanage","microwave","micturate","migrate","militarise","militarize","militate","milk","mill","mime","mimic","mince","mind","mine","mingle","miniaturise","miniaturize","minimise","minimize","minister","minor","mint","minute","mirror","misapply","misappropriate","misbehave","miscalculate","miscast","misconceive","misconstrue","miscount","misdiagnose","misdial","misdirect","misfile","misfire","misgovern","mishandle","mishear","mishit","misinform","misinterpret","misjudge","miskey","mislay","mislead","mismanage","mismatch","misname","misplace","misplay","mispronounce","misquote","misread","misreport","misrepresent","miss","mission","misspell","misspend","mist","mistake","mistime","mistreat","mistrust","misunderstand","misuse","mitigate","mitre","mix","moan","mob","mobilise","mobilize","mock","mod","model","moderate","modernise","modernize","modify","modulate","moisten","moisturise","moisturize","mold","molder","mollify","mollycoddle","molt","monitor","monopolise","monopolize","moo","mooch","moon","moonlight","moonwalk","moor","moot","mop","mope","moralise","moralize","morph","mortar","mortgage","mortify","mosey","mosh","mothball","mother","motion","motivate","motor","mould","moulder","moult","mount","mourn","mouse","mouth","move","movies","mow","muck","muddle","muddy","muffle","mug","mulch","mull","multicast","multiply","multitask","mumble","mumbling","mummify","munch","murmur","murmuring","murmurings","muscle","muse","mushroom","muss","muster","mutate","mute","mutilate","mutiny","mutter","muzzle","mystify","nab","nag","nail","name","namecheck","nap","narrate","narrow","narrowcast","nasalise","nasalize","nationalise","nationalize","natter","naturalise","naturalize","nauseate","navigate","near","nearer","nearest","neaten","necessitate","neck","necklace","need","needle","negate","negative","neglect","negotiate","neigh","nerve","nest","nestle","net","nettle","network","neuter","neutralise","neutralize","nibble","nick","nickname","nitrify","nix","nobble","nod","nominalize","nominate","norm","normalise","normalize","nose","nosedive","nosh","notarise","notarize","notch","note","notice","notify","nourish","nudge","nuke","nullify","numb","number","nurse","nurture","nut","nuzzle","obey","obfuscate","object","objectify","oblige","obliterate","obscure","observe","obsess","obstruct","obtain","obtrude","obviate","occasion","occlude","occupy","occur","off","offend","offer","officiate","offload","offset","offshore","ogle","oil","okay","omit","ooze","open","operate","opine","oppose","oppress","opt","optimise","optimize","option","orbit","orchestrate","ordain","order","organise","organize","orient","orientate","originate","ornament","orphan","oscillate","ossify","ostracise","ostracize","oust","out","outbid","outclass","outdistance","outdo","outface","outfit","outflank","outfox","outgrow","outgun","outlast","outlaw","outline","outlive","outmaneuver","outmanoeuvre","outnumber","outpace","outperform","outplay","outpoint","output","outrage","outrank","outrun","outsell","outshine","outsmart","outsource","outstay","outstrip","outvote","outweigh","outwit","overachieve","overact","overawe","overbalance","overbook","overburden","overcharge","overcome","overcompensate","overcook","overdevelop","overdo","overdose","overdraw","overdub","overeat","overemphasize","overestimate","overexpose","overextend","overfeed","overflow","overfly","overgeneralise","overgeneralize","overgraze","overhang","overhaul","overhear","overheat","overindulge","overlap","overlay","overlie","overload","overlook","overpay","overplay","overpower","overprint","overproduce","overrate","overreach","overreact","override","overrule","overrun","oversee","oversell","overshadow","overshoot","oversimplify","oversleep","overspend","overstate","overstay","overstep","overstock","overstretch","overtake","overtax","overthrow","overtrain","overturn","overuse","overvalue","overwhelm","overwinter","overwork","overwrite","owe","own","oxidise","oxidize","oxygenate","pace","pacify","pack","package","packetise","packetize","pad","paddle","padlock","page","paginate","pailful","pain","paint","pair","pal","palatalise","palatalize","pale","pall","palliate","palm","palpate","palpitate","pamper","pan","pander","panel","panhandle","panic","pant","paper","parachute","parade","parallel","paralyse","paralyze","paraphrase","parboil","parcel","parch","pardon","pare","park","parlay","parley","parody","parole","parrot","parry","parse","part","partake","participate","particularise","particularize","partition","partner","party","pass","passivise","passivize","paste","pasteurise","pasteurize","pasture","pat","patch","patent","patrol","patronise","patronize","patter","pattern","pause","pave","paw","pawn","pay","peak","peal","pedal","peddle","pedestrianise","pedestrianize","peek","peel","peep","peer","peg","pelt","pen","penalise","penalize","pencil","pension","people","pep","pepper","perambulate","perceive","perch","percolate","perfect","perforate","perform","perfume","perish","perjure","perk","perm","permeate","permit","perpetrate","perpetuate","perplex","persecute","persevere","persist","personalise","personalize","personify","perspire","persuade","pertain","perturb","peruse","pervade","pervert","pester","pet","peter","petition","petrify","phase","philosophise","philosophize","phone","photocopy","photograph","photoshop","photosynthesise","photosynthesize","phrase","pick","picket","pickle","picnic","picture","picturise","picturize","piddle","piece","pierce","pig","pigeonhole","piggyback","pike","pile","pilfer","pill","pillage","pillory","pillow","pilot","pin","pinch","pine","ping","pinion","pink","pinpoint","pioneer","pip","pipe","pique","pirate","pirouette","pit","pitch","pity","pivot","pixelate","pixellate","placate","place","plagiarise","plagiarize","plague","plait","plan","plane","plant","plaster","plasticise","plasticize","plate","plateau","play","plead","please","pledge","plight","plod","plonk","plop","plot","plough","pluck","plug","plumb","plummet","plump","plunder","plunge","plunk","pluralise","pluralize","ply","poach","pocket","point","poise","poison","poke","polarise","polarize","pole","poleax","poleaxe","police","polish","politicise","politicize","poll","pollard","pollinate","pollute","polymerise","polymerize","ponce","ponder","pong","pontificate","pony","pooh","pool","pootle","pop","popularise","popularize","populate","pore","port","portend","portion","portray","pose","posit","position","possess","posset","post","postmark","postpone","postulate","posture","pot","potter","pounce","pound","pour","pout","powder","power","practice","practise","praise","praises","prance","prang","prate","prattle","pray","preach","precede","precipitate","precis","preclude","predate","predecease","predetermine","predicate","predict","predispose","predominate","preen","preface","prefer","prefigure","prefix","preheat","prejudge","prejudice","preload","premaster","premiere","preoccupy","prep","prepare","prepone","preregister","presage","prescind","prescribe","preselect","presell","present","preserve","preset","preside","press","pressure","pressurise","pressurize","presume","presuppose","pretend","pretest","prettify","prevail","prevaricate","prevent","preview","prey","price","prickle","pride","prime","primp","print","prioritise","prioritize","prise","privatise","privatize","privilege","prize","probate","probe","proceed","process","proclaim","procrastinate","procreate","proctor","procure","prod","produce","profane","profess","professionalise","professionalize","proffer","profile","profit","program","programme","progress","prohibit","project","proliferate","prolong","promenade","promise","promote","prompt","promulgate","pronounce","proof","proofread","prop","propagandise","propagandize","propagate","propel","prophesy","propitiate","propose","proposition","propound","proscribe","prosecute","proselytise","proselytize","prospect","prosper","prostrate","protect","protest","protrude","prove","provide","provision","provoke","prowl","prune","pry","psych","psychoanalyse","publicise","publicize","publish","pucker","puff","pull","pullulate","pulp","pulsate","pulse","pulverise","pulverize","pummel","pump","pun","punch","punctuate","puncture","punish","punt","pupate","purchase","purge","purify","purl","purloin","purport","purr","purse","pursue","purvey","push","pussyfoot","put","putrefy","putt","putter","puzzle","quack","quadruple","quaff","quail","quake","qualify","quantify","quarantine","quarrel","quarry","quarter","quarterback","quash","quaver","quell","quench","query","quest","question","queue","quibble","quicken","quiet","quieten","quintuple","quip","quirk","quit","quiver","quiz","quote","quoth","rabbit","race","rack","radiate","radicalise","radicalize","radio","raffle","rag","rage","raid","rail","railroad","rain","raise","rake","rally","ram","ramble","ramp","rampage","randomise","randomize","range","rank","rankle","ransack","ransom","rant","rap","rappel","rasp","rasterise","rasterize","rat","ratchet","rate","ratify","ration","rationalise","rationalize","rattle","ravage","rave","ravel","ravish","raze","razz","reach","reacquaint","react","reactivate","read","readdress","readies","readjust","readmit","ready","reaffirm","realign","realise","realize","reallocate","ream","reanimate","reap","reappear","reapply","reappoint","reappraise","rear","rearm","rearrange","reason","reassemble","reassert","reassess","reassign","reassure","reawaken","rebel","reboot","reborn","rebound","rebrand","rebuff","rebuild","rebuke","rebut","recall","recant","recap","recapitulate","recapture","recast","recede","receive","recess","recharge","reciprocate","recite","reckon","reclaim","reclassify","recline","recognise","recognize","recoil","recollect","recommence","recommend","recompense","reconcile","recondition","reconfigure","reconfirm","reconnect","reconnoitre","reconquer","reconsider","reconstitute","reconstruct","reconvene","record","recount","recoup","recover","recreate","recrudesce","recruit","rectify","recuperate","recur","recycle","redact","redden","redecorate","redeem","redefine","redeploy","redesign","redevelop","redial","redirect","rediscover","redistribute","redistrict","redo","redouble","redound","redraft","redraw","redress","reduce","reduplicate","reef","reek","reel","ref","refer","referee","reference","refill","refinance","refine","refit","reflate","reflect","refloat","refocus","reform","reformat","reformulate","refract","refrain","refresh","refrigerate","refuel","refund","refurbish","refuse","refute","regain","regale","regard","regenerate","register","regress","regret","regroup","regularise","regularize","regulate","regurgitate","rehabilitate","rehash","rehear","rehearse","reheat","rehome","rehouse","reign","reignite","reimburse","rein","reincarnate","reinforce","reinstate","reinterpret","reintroduce","reinvent","reinvest","reinvigorate","reissue","reiterate","reject","rejig","rejigger","rejoice","rejoin","rejuvenate","rekindle","relapse","relate","relaunch","relax","relay","release","relegate","relent","relieve","relinquish","relish","relive","reload","relocate","rely","remain","remainder","remake","remand","remap","remark","remarry","remaster","remediate","remedy","remember","remind","reminisce","remit","remix","remodel","remonstrate","remortgage","remould","remount","remove","remunerate","rename","rend","render","rendezvous","renege","renew","renounce","renovate","rent","reoccur","reoffend","reopen","reorder","reorganise","reorganize","reorient","repackage","repair","repatriate","repay","repeal","repeat","repel","repent","rephrase","replace","replay","replenish","replicate","reply","report","repose","repossess","represent","repress","reprieve","reprimand","reprint","reproach","reprocess","reproduce","reprove","repudiate","repulse","repurpose","request","require","requisition","requite","rerun","reschedule","rescind","rescue","research","researches","resect","resell","resemble","resent","reserve","reset","resettle","reshape","reshuffle","reside","resign","resist","resit","resize","reskill","resolve","resonate","resort","resound","resource","respect","respire","respond","respray","rest","restart","restate","restock","restore","restrain","restrict","restring","restructure","result","resume","resupply","resurface","resurrect","resuscitate","retail","retain","retake","retaliate","retch","retell","retest","rethink","retire","retool","retort","retouch","retrace","retract","retrain","retreat","retrench","retrieve","retrofit","retry","return","reunify","reunite","reuse","rev","revalue","revamp","reveal","revel","revenge","reverberate","revere","reverse","revert","review","revile","revise","revisit","revitalise","revitalize","revive","revivify","revoke","revolt","revolutionise","revolutionize","revolve","reward","rewind","rewire","reword","rework","rewrite","rhapsodise","rhapsodize","rhyme","rib","rick","ricochet","rid","riddle","ride","ridge","ridicule","riffle","rifle","rig","right","rightsize","rile","rim","ring","rinse","riot","rip","ripen","riposte","ripple","rise","risk","ritualise","ritualize","rival","rivet","roam","roar","roast","rob","robe","rock","rocket","roger","roll","romance","romanticise","romanticize","romp","roof","room","roost","root","rope","rosin","roster","rot","rotate","rouge","rough","roughen","roughhouse","round","rouse","roust","rout","route","rove","row","rub","rubberneck","rubbish","ruck","rue","ruffle","ruin","ruins","rule","rumble","ruminate","rummage","rumor","rumour","rumple","run","rupture","rush","rust","rustle","sabotage","sack","sacrifice","sadden","saddle","safeguard","sag","sail","salaam","salivate","sally","salt","salute","salvage","salve","sample","sanctify","sanction","sand","sandbag","sandblast","sandpaper","sandwich","sanitise","sanitize","sap","sashay","sass","sate","satiate","satirise","satirize","satisfy","saturate","saunter","savage","save","savor","savour","saw","say","scald","scale","scallop","scalp","scamper","scan","scandalise","scandalize","scapegoat","scar","scare","scarf","scarify","scarper","scatter","scattering","scavenge","scent","schedule","schematise","schematize","scheme","schlep","schlepp","schmooze","school","schtup","schuss","scoff","scold","scoop","scoot","scope","scorch","score","scorn","scotch","scour","scourge","scout","scowl","scrabble","scram","scramble","scrap","scrape","scratch","scrawl","scream","screech","screen","screw","scribble","scrimp","script","scroll","scrounge","scrub","scrummage","scrunch","scruple","scrutinise","scrutinize","scud","scuff","scuffle","scull","sculpt","scupper","scurry","scuttle","scythe","seal","sealift","sear","search","season","seat","secede","seclude","second","secrete","section","secularise","secularize","secure","sedate","see","seed","seek","seep","seethe","segment","segregate","segue","seize","select","sell","sellotape","semaphore","send","sensationalise","sensationalize","sense","sensitise","sensitize","sentence","sentimentalise","sentimentalize","separate","sequence","sequester","sequestrate","serenade","serialise","serialize","sermonise","sermonize","serve","service","set","settle","sever","sew","shack","shackle","shade","shadow","shaft","shake","shalt","sham","shamble","shame","shampoo","shanghai","shape","share","sharpen","shatter","shave","shear","sheathe","shed","sheer","shell","shellac","shelter","shelve","shepherd","shield","shift","shimmer","shimmy","shin","shine","shinny","ship","shipwreck","shirk","shiver","shock","shoe","shoehorn","shoo","shoot","shop","shoplift","shore","short","shorten","shortlist","shoulder","shout","shove","shovel","show","showboat","showcase","shower","shred","shriek","shrill","shrink","shrivel","shroom","shroud","shrug","shuck","shudder","shuffle","shun","shunt","shush","shut","shuttle","shy","sic","sick","sicken","side","sideline","sidestep","sideswipe","sidetrack","sidle","sieve","sift","sigh","sight","sightsee","sign","signal","signify","signpost","silence","silhouette","silt","silver","simmer","simper","simplify","simulate","simulcast","sin","sing","singe","single","sink","sip","siphon","sire","sit","site","situate","size","sizzle","skate","skateboard","skedaddle","sketch","skew","skewer","ski","skid","skim","skimp","skin","skip","skipper","skirmish","skirt","skitter","skive","skivvy","skulk","sky","skyjack","skyrocket","slack","slacken","slake","slam","slander","slap","slash","slate","slather","sledge","sleek","sleep","sleepwalk","sleet","slew","slice","slick","slide","slight","slim","sling","slink","slip","slit","slither","slob","slobber","slog","slop","slope","slosh","slot","slouch","slough","slow","slug","sluice","slum","slumber","slump","slur","slurp","smart","smarten","smash","smear","smell","smelt","smile","smirk","smite","smoke","smooch","smoodge","smooth","smother","smoulder","smudge","smuggle","snack","snaffle","snag","snaggle","snake","snap","snare","snarf","snarl","sneak","sneer","sneeze","snicker","sniff","sniffle","snip","snipe","snitch","snivel","snooker","snoop","snooper","snooze","snore","snorkel","snort","snow","snowball","snowplough","snowplow","snub","snuffle","snuffling","snuggle","soak","soap","soar","sober","socialise","socialize","sock","sod","soften","soil","sojourn","solace","solder","soldier","sole","solemnise","solemnize","solicit","solidify","soliloquize","solve","somersault","soothe","sorrow","sort","sough","sound","soundproof","soup","sour","source","sow","space","span","spangle","spar","spare","spark","sparkle","spatter","spattering","spawn","spay","speak","spear","spearhead","spec","specialise","specialize","specify","spectacles","spectate","speculate","speed","spell","spellcheck","spend","spew","spice","spiff","spike","spill","spin","spiral","spirit","spit","spite","splash","splatter","splay","splice","splinter","split","splosh","splurge","splutter","spoil","sponge","sponsor","spoof","spook","spool","spoon","sport","sports","spot","spotlight","spout","sprain","sprawl","spray","spread","spring","springboard","sprinkle","sprint","spritz","sprout","spruce","spur","spurn","spurt","sputter","spy","squabble","squall","squander","square","squash","squat","squawk","squeak","squeal","squeeze","squelch","squint","squirm","squirrel","squirt","squish","stab","stabilise","stabilize","stable","stables","stack","staff","stage","stagger","stagnate","stain","stake","stalk","stall","stammer","stamp","stampede","stanch","stand","standardise","standardize","staple","star","starch","stare","start","startle","starve","stash","state","statement","station","staunch","stave","stay","steady","steal","steam","steamroller","steel","steep","steepen","steer","stem","stencil","step","stereotype","sterilise","sterilize","stew","stick","stickybeak","stiff","stiffen","stifle","stigmatise","stigmatize","still","stimulate","sting","stinger","stink","stint","stipple","stipulate","stir","stitch","stock","stockpile","stoke","stomach","stomp","stone","stonewall","stoop","stop","stopper","store","storm","storyboard","stow","straddle","strafe","straggle","straighten","strain","strand","strangle","strap","stratify","stravage","stravaig","stray","streak","stream","streamline","strengthen","stress","stretch","stretcher","strew","stride","strike","string","strip","strive","stroll","structure","struggle","strum","strut","stub","stud","study","stuff","stultify","stumble","stump","stun","stunt","stupefy","stutter","style","stymie","sub","subcontract","subdivide","subdue","subedit","subject","sublet","sublimate","submerge","submit","subordinate","suborn","subpoena","subscribe","subside","subsidise","subsidize","subsist","substantiate","substitute","subsume","subtend","subtitle","subtract","subvert","succeed","succor","succour","succumb","suckle","suction","sue","suffer","suffice","suffocate","suffuse","sugar","suggest","suit","sulk","sulks","sully","sum","summarise","summarize","summon","summons","sun","sunbathe","sunder","sunset","sup","superimpose","superintend","superpose","supersede","supersize","supersized","supervene","supervise","supplant","supplement","supply","support","suppose","suppress","suppurate","surcharge","surf","surface","surge","surmise","surmount","surpass","surprise","surrender","surround","survey","survive","suspect","suspend","suspenders","suss","sustain","suture","swab","swaddle","swagger","swamp","swan","swank","swap","swarm","swat","swath","swathe","sway","swear","sweat","sweep","sweeps","sweeten","swell","swelter","swerve","swig","swill","swim","swindle","swing","swipe","swirl","swish","switch","swivel","swoon","swoop","swoosh","swot","symbolise","symbolize","sympathise","sympathize","symptomize","synchronise","synchronize","syndicate","synthesise","synthesize","syringe","systematise","systematize","tab","table","tabulate","tack","tackle","tag","tail","tailgate","tailor","taint","take","talk","tally","tame","tamp","tamper","tan","tangle","tango","tank","tankful","tantalise","tantalize","tap","tape","taper","tar","target","tarmac","tarnish","tarry","tart","task","taste","tattle","tattoo","taunt","tauten","tax","taxi","taxicab","teach","team","tear","tease","tee","teem","teeter","teethe","telecast","telecommute","teleconference","telegraph","telemeter","teleoperate","telephone","teleport","telescope","televise","telex","tell","telnet","temp","temper","temporise","temporize","tempt","tenant","tend","tender","tenderise","tenderize","tense","tension","tergiversate","term","terminate","terraform","terrify","terrorise","terrorize","test","testify","tether","text","thank","thatch","thaw","theorise","theorize","thicken","thin","think","thirst","thrash","thread","threaten","thresh","thrill","thrive","throb","throbbing","throng","throttle","throw","thud","thumb","thump","thunder","thwack","thwart","tick","ticket","tickle","tide","tidy","tie","tighten","tile","till","tilt","time","timetable","tinge","tingle","tingling","tinker","tinkling","tint","tip","tippex","tipple","tiptoe","tire","titillate","titivate","title","titrate","titter","toady","toast","toboggan","toddle","toe","tog","toggle","toil","tolerate","toll","tone","tongue","tonify","tool","toot","tootle","top","topple","torch","torment","torpedo","toss","tot","total","tote","totter","touch","tough","toughen","tour","tousle","tout","tow","towel","tower","toy","trace","track","trade","traduce","traffic","trail","train","traipse","trammel","trample","trampoline","tranquilize","tranquillize","transact","transcend","transcribe","transfer","transfigure","transfix","transform","transfuse","transgress","transit","translate","transliterate","transmit","transmogrify","transmute","transpire","transplant","transport","transpose","trap","trash","traumatise","traumatize","travel","traverse","trawl","tread","treasure","treat","treble","trek","tremble","trembling","trepan","trespass","trial","trick","trickle","trifle","trigger","trill","trim","trip","triple","triumph","trivialise","trivialize","troll","tromp","troop","trot","trouble","troubleshoot","trounce","trouser","truant","truck","trudge","trump","trumpet","truncate","trundle","truss","trust","try","tuck","tug","tugboat","tumble","tune","tunnel","turbocharge","turf","turn","tussle","tut","tutor","twang","tweak","tweet","twiddle","twig","twin","twine","twinkle","twirl","twist","twitch","twitter","twittering","type","typecast","typeset","typify","tyrannise","tyrannize","ulcerate","ululate","ump","umpire","unbalance","unban","unbend","unblock","unbuckle","unburden","unbutton","uncoil","uncork","uncouple","uncover","uncurl","undelete","underachieve","underbid","undercharge","undercook","undercut","underestimate","underestimation","underexpose","undergo","underlie","underline","undermine","underpay","underperform","underpin","underplay","underrate","underscore","undersell","undershoot","underspend","understand","understate","understudy","undertake","undervalue","underwrite","undo","undock","undress","undulate","unearth","unfasten","unfold","unfreeze","unfurl","unhand","unhinge","unhitch","unhook","unify","uninstall","unionise","unionize","unite","unlace","unlearn","unleash","unload","unlock","unloose","unloosen","unmask","unnerve","unpack","unpick","unplug","unravel","unroll","unsaddle","unscramble","unscrew","unseat","unsettle","unsubscribe","untangle","untie","unveil","unwind","unwrap","unzip","up","upbraid","upchange","upchuck","update","upend","upgrade","uphold","upholster","uplift","upload","uproot","upsell","upset","upshift","upskill","upstage","urge","use","usher","usurp","utilise","utilize","utter","vacate","vacation","vaccinate","vacillate","vacuum","valet","validate","value","vamoose","vandalise","vandalize","vanish","vanquish","vaporise","vaporize","varnish","vary","vault","veer","veg","vegetate","veil","vend","veneer","venerate","vent","ventilate","venture","verbalise","verbalize","verge","verify","versify","vest","vet","veto","vex","vibrate","victimise","victimize","vide","video","videotape","vie","view","viewing","vilify","vindicate","violate","visit","visualise","visualize","vitiate","vitrify","vocalize","voice","void","volley","volumise","volumize","volunteer","vote","vouch","vouchsafe","vow","voyage","vulgarise","vulgarize","waddle","wade","waffle","waft","wag","wage","wager","waggle","wail","wait","waive","wake","wakeboard","waken","walk","wall","wallop","wallow","wallpaper","waltz","wander","wane","wangle","want","warble","ward","warm","warn","warp","warrant","wash","wassail","waste","watch","water","waterproof","waterski","wave","waver","wax","waylay","weaken","wean","weaponise","weaponize","wear","weary","weasel","weather","weatherise","weatherize","weave","wed","wedge","weekend","weep","weigh","weight","weird","welch","welcome","weld","well","welly","wend","westernise","westernize","wet","whack","wheedle","wheel","wheeze","whelp","whet","whiff","while","whilst","whimper","whine","whinge","whinny","whip","whirl","whirr","whirring","whisk","whisper","whispering","whistle","whiten","whitewash","whittle","whoop","whoosh","whup","wick","widen","widow","wield","wig","wiggle","wildcat","will","wilt","wimp","win","wince","winch","wind","winds","windsurf","wine","wing","wink","winkle","winnow","winter","wipe","wire","wiretap","wise","wisecrack","wish","withdraw","wither","withhold","withstand","witness","witter","wobble","wolf","wonder","woo","woof","word","work","worm","worry","worsen","worship","worst","wound","wow","wowee","wrangle","wrap","wreak","wreathe","wreck","wrench","wrest","wrestle","wriggle","wring","wrinkle","writ","write","writhe","wrong","wrought","xerox","yack","yak","yap","yaw","yawn","yearn","yell","yellow","yelp","yield","yodel","yoke","yomp","yowl","yuppify","zap","zero","zigzag","zing","zip","zone","zoom"],Iv={adjective:Sv,adverb:Tv,conjunction:Bv,interjection:Nv,noun:Rv,preposition:Lv,verb:Mv},xv=Iv,Ov={airline:Vg,animal:ub,app:pb,cell_phone:hb,color:gb,commerce:kb,company:Mb,database:Ob,date:Hb,finance:e2,hacker:u2,internet:p2,location:L2,lorem:x2,metadata:_2,music:j2,person:sv,phone_number:dv,science:hv,team:bv,vehicle:Cv,word:xv},_v=Ov,Pv=Object.defineProperty,Gv=(e,r,t)=>r in e?Pv(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,me=(e,r,t)=>(Gv(e,typeof r!="symbol"?r+"":r,t),t),ue=class extends Error{};function Hv(e){let r=Object.getPrototypeOf(e);do{for(let t of Object.getOwnPropertyNames(r))typeof e[t]=="function"&&t!=="constructor"&&(e[t]=e[t].bind(e));r=Object.getPrototypeOf(r)}while(r!==Object.prototype)}var Wt=class{constructor(r){this.faker=r,Hv(this)}},Pe=class extends Wt{constructor(r){super(r),this.faker=r}},Zp=(e=>(e.Narrowbody="narrowbody",e.Regional="regional",e.Widebody="widebody",e))(Zp||{}),jv=["0","1","2","3","4","5","6","7","8","9"],$v=["0","O","1","I","L"],Wv={regional:20,narrowbody:35,widebody:60},Vv={regional:["A","B","C","D"],narrowbody:["A","B","C","D","E","F"],widebody:["A","B","C","D","E","F","G","H","J","K"]},Uv=class extends Pe{airport(){return this.faker.helpers.arrayElement(this.faker.definitions.airline.airport)}airline(){return this.faker.helpers.arrayElement(this.faker.definitions.airline.airline)}airplane(){return this.faker.helpers.arrayElement(this.faker.definitions.airline.airplane)}recordLocator(r={}){let{allowNumerics:t=!1,allowVisuallySimilarCharacters:a=!1}=r,n=[];return t||n.push(...jv),a||n.push(...$v),this.faker.string.alphanumeric({length:6,casing:"upper",exclude:n})}seat(r={}){let{aircraftType:t="narrowbody"}=r,a=Wv[t],n=Vv[t],i=this.faker.number.int({min:1,max:a}),o=this.faker.helpers.arrayElement(n);return`${i}${o}`}aircraftType(){return this.faker.helpers.enumValue(Zp)}flightNumber(r={}){let{length:t={min:1,max:4},addLeadingZeros:a=!1}=r,n=this.faker.string.numeric({length:t,allowLeadingZeros:!1});return a?n.padStart(4,"0"):n}},em=(e=>(e.SRGB="sRGB",e.DisplayP3="display-p3",e.REC2020="rec2020",e.A98RGB="a98-rgb",e.ProphotoRGB="prophoto-rgb",e))(em||{}),rm=(e=>(e.RGB="rgb",e.RGBA="rgba",e.HSL="hsl",e.HSLA="hsla",e.HWB="hwb",e.CMYK="cmyk",e.LAB="lab",e.LCH="lch",e.COLOR="color",e))(rm||{});function zv(e,r){let{prefix:t,casing:a}=r;switch(a){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase();break}return t&&(e=t+e),e}function tm(e){return e.map(r=>{if(r%1!==0){let t=new ArrayBuffer(4);new DataView(t).setFloat32(0,r);let a=new Uint8Array(t);return tm([...a]).replace(/ /g,"")}return(r>>>0).toString(2).padStart(8,"0")}).join(" ")}function qv(e,r="rgb",t="sRGB"){let a=n=>Math.round(n*100);switch(r){case"rgba":return`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`;case"color":return`color(${t} ${e[0]} ${e[1]} ${e[2]})`;case"cmyk":return`cmyk(${a(e[0])}%, ${a(e[1])}%, ${a(e[2])}%, ${a(e[3])}%)`;case"hsl":return`hsl(${e[0]}deg ${a(e[1])}% ${a(e[2])}%)`;case"hsla":return`hsl(${e[0]}deg ${a(e[1])}% ${a(e[2])}% / ${a(e[3])})`;case"hwb":return`hwb(${e[0]} ${a(e[1])}% ${a(e[2])}%)`;case"lab":return`lab(${a(e[0])}% ${e[1]} ${e[2]})`;case"lch":return`lch(${a(e[0])}% ${e[1]} ${e[2]})`;case"rgb":default:return`rgb(${e[0]}, ${e[1]}, ${e[2]})`}}function st(e,r,t="rgb",a="sRGB"){switch(r){case"css":return qv(e,t,a);case"binary":return tm(e);case"decimal":default:return e}}var Kv=class extends Pe{human(){return this.faker.helpers.arrayElement(this.faker.definitions.color.human)}space(){return this.faker.helpers.arrayElement(this.faker.definitions.color.space)}cssSupportedFunction(){return this.faker.helpers.enumValue(rm)}cssSupportedSpace(){return this.faker.helpers.enumValue(em)}rgb(r={}){let{format:t="hex",includeAlpha:a=!1,prefix:n="#",casing:i="lower"}=r,o,u="rgb";return t==="hex"?(o=this.faker.string.hexadecimal({length:a?8:6,prefix:""}),o=zv(o,{prefix:n,casing:i}),o):(o=Array.from({length:3},()=>this.faker.number.int(255)),a&&(o.push(this.faker.number.float({multipleOf:.01})),u="rgba"),st(o,t,u))}cmyk(r){let t=Array.from({length:4},()=>this.faker.number.float({multipleOf:.01}));return st(t,r?.format||"decimal","cmyk")}hsl(r){let t=[this.faker.number.int(360)];for(let a=0;a<(r!=null&&r.includeAlpha?3:2);a++)t.push(this.faker.number.float({multipleOf:.01}));return st(t,r?.format||"decimal",r!=null&&r.includeAlpha?"hsla":"hsl")}hwb(r){let t=[this.faker.number.int(360)];for(let a=0;a<2;a++)t.push(this.faker.number.float({multipleOf:.01}));return st(t,r?.format||"decimal","hwb")}lab(r){let t=[this.faker.number.float({multipleOf:1e-6})];for(let a=0;a<2;a++)t.push(this.faker.number.float({min:-100,max:100,multipleOf:1e-4}));return st(t,r?.format||"decimal","lab")}lch(r){let t=[this.faker.number.float({multipleOf:1e-6})];for(let a=0;a<2;a++)t.push(this.faker.number.float({max:230,multipleOf:.1}));return st(t,r?.format||"decimal","lch")}colorByCSSColorSpace(r){r?.format==="css"&&!(r!=null&&r.space)&&(r={...r,space:"sRGB"});let t=Array.from({length:3},()=>this.faker.number.float({multipleOf:1e-4}));return st(t,r?.format||"decimal","color",r?.space)}},hn=()=>{throw new ue("You cannot edit the locale data on the faker instance")};function Jv(e){let r={};return new Proxy(e,{has(){return!0},get(t,a){return typeof a=="symbol"||a==="nodeType"?t[a]:a in r?r[a]:r[a]=Yv(a,t[a])},set:hn,deleteProperty:hn})}function fn(e,...r){if(e===null)throw new ue(`The locale data for '${r.join(".")}' aren't applicable to this locale.
  If you think this is a bug, please report it at: https://github.com/faker-js/faker`);if(e===void 0)throw new ue(`The locale data for '${r.join(".")}' are missing in this locale.
  Please contribute the missing data to the project or use a locale/Faker instance that has these data.
  For more information see https://fakerjs.dev/guide/localization.html`)}function Yv(e,r={}){return new Proxy(r,{has(t,a){return t[a]!=null},get(t,a){let n=t[a];return typeof a=="symbol"||a==="nodeType"||fn(n,e,a.toString()),n},set:hn,deleteProperty:hn})}var am=(e=>(e.Female="female",e.Male="male",e))(am||{});function oa(e,r,t,{generic:a,female:n,male:i},o){let u;switch(t){case"female":u=n;break;case"male":u=i;break;default:u=a;break}return u==null&&(n!=null&&i!=null?u=e.helpers.arrayElement([n,i]):u=a,fn(u,`person.{${o}, female_${o}, male_${o}}`)),r(u)}var Qv=class extends Pe{firstName(r){var t;let{first_name:a,female_first_name:n,male_first_name:i}=(t=this.faker.rawDefinitions.person)!=null?t:{};return oa(this.faker,this.faker.helpers.arrayElement,r,{generic:a,female:n,male:i},"first_name")}lastName(r){var t;let{last_name:a,female_last_name:n,male_last_name:i,last_name_pattern:o,male_last_name_pattern:u,female_last_name_pattern:s}=(t=this.faker.rawDefinitions.person)!=null?t:{};if(o!=null||u!=null||s!=null){let l=oa(this.faker,this.faker.helpers.weightedArrayElement,r,{generic:o,female:s,male:u},"last_name_pattern");return this.faker.helpers.fake(l)}return oa(this.faker,this.faker.helpers.arrayElement,r,{generic:a,female:n,male:i},"last_name")}middleName(r){var t;let{middle_name:a,female_middle_name:n,male_middle_name:i}=(t=this.faker.rawDefinitions.person)!=null?t:{};return oa(this.faker,this.faker.helpers.arrayElement,r,{generic:a,female:n,male:i},"middle_name")}fullName(r={}){let{sex:t=this.faker.helpers.arrayElement(["female","male"]),firstName:a=this.firstName(t),lastName:n=this.lastName(t)}=r,i=this.faker.helpers.weightedArrayElement(this.faker.definitions.person.name);return this.faker.helpers.mustache(i,{"person.prefix":()=>this.prefix(t),"person.firstName":()=>a,"person.middleName":()=>this.middleName(t),"person.lastName":()=>n,"person.suffix":()=>this.suffix()})}gender(){return this.faker.helpers.arrayElement(this.faker.definitions.person.gender)}sex(){return this.faker.helpers.arrayElement(this.faker.definitions.person.sex)}sexType(){return this.faker.helpers.enumValue(am)}bio(){let{bio_pattern:r}=this.faker.definitions.person;return this.faker.helpers.fake(r)}prefix(r){var t;let{prefix:a,female_prefix:n,male_prefix:i}=(t=this.faker.rawDefinitions.person)!=null?t:{};return oa(this.faker,this.faker.helpers.arrayElement,r,{generic:a,female:n,male:i},"prefix")}suffix(){return this.faker.helpers.arrayElement(this.faker.definitions.person.suffix)}jobTitle(){return this.faker.helpers.fake(this.faker.definitions.person.job_title_pattern)}jobDescriptor(){let r=this.faker.definitions.person.title.descriptor;if(r==null)throw new ue("No person.title.descriptor definitions available.");return this.faker.helpers.arrayElement(r)}jobArea(){let r=this.faker.definitions.person.title.level;if(r==null)throw new ue("No person.title.area definitions available.");return this.faker.helpers.arrayElement(r)}jobType(){let r=this.faker.definitions.person.title.job;if(r==null)throw new ue("No person.title.job definitions available.");return this.faker.helpers.arrayElement(r)}zodiacSign(){return this.faker.helpers.arrayElement(this.faker.definitions.person.western_zodiac_sign)}},Xv=class{constructor(){me(this,"N",624),me(this,"M",397),me(this,"MATRIX_A",2567483615),me(this,"UPPER_MASK",2147483648),me(this,"LOWER_MASK",2147483647),me(this,"mt",Array.from({length:this.N})),me(this,"mti",this.N+1),me(this,"mag01",[0,this.MATRIX_A])}unsigned32(e){return e<0?(e^this.UPPER_MASK)+this.UPPER_MASK:e}subtraction32(e,r){return e<r?this.unsigned32(4294967296-(r-e)&4294967295):e-r}addition32(e,r){return this.unsigned32(e+r&4294967295)}multiplication32(e,r){let t=0;for(let a=0;a<32;++a)e>>>a&1&&(t=this.addition32(t,this.unsigned32(r<<a)));return t}initGenrand(e){for(this.mt[0]=this.unsigned32(e&4294967295),this.mti=1;this.mti<this.N;this.mti++)this.mt[this.mti]=this.addition32(this.multiplication32(1812433253,this.unsigned32(this.mt[this.mti-1]^this.mt[this.mti-1]>>>30)),this.mti),this.mt[this.mti]=this.unsigned32(this.mt[this.mti]&4294967295)}initByArray(e,r){this.initGenrand(19650218);let t=1,a=0,n=this.N>r?this.N:r;for(;n;n--)this.mt[t]=this.addition32(this.addition32(this.unsigned32(this.mt[t]^this.multiplication32(this.unsigned32(this.mt[t-1]^this.mt[t-1]>>>30),1664525)),e[a]),a),this.mt[t]=this.unsigned32(this.mt[t]&4294967295),t++,a++,t>=this.N&&(this.mt[0]=this.mt[this.N-1],t=1),a>=r&&(a=0);for(n=this.N-1;n;n--)this.mt[t]=this.subtraction32(this.unsigned32(this.mt[t]^this.multiplication32(this.unsigned32(this.mt[t-1]^this.mt[t-1]>>>30),1566083941)),t),this.mt[t]=this.unsigned32(this.mt[t]&4294967295),t++,t>=this.N&&(this.mt[0]=this.mt[this.N-1],t=1);this.mt[0]=2147483648}genrandInt32(){let e;if(this.mti>=this.N){let r;for(this.mti===this.N+1&&this.initGenrand(5489),r=0;r<this.N-this.M;r++)e=this.unsigned32(this.mt[r]&this.UPPER_MASK|this.mt[r+1]&this.LOWER_MASK),this.mt[r]=this.unsigned32(this.mt[r+this.M]^e>>>1^this.mag01[e&1]);for(;r<this.N-1;r++)e=this.unsigned32(this.mt[r]&this.UPPER_MASK|this.mt[r+1]&this.LOWER_MASK),this.mt[r]=this.unsigned32(this.mt[r+(this.M-this.N)]^e>>>1^this.mag01[e&1]);e=this.unsigned32(this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK),this.mt[this.N-1]=this.unsigned32(this.mt[this.M-1]^e>>>1^this.mag01[e&1]),this.mti=0}return e=this.mt[this.mti++],e=this.unsigned32(e^e>>>11),e=this.unsigned32(e^e<<7&2636928640),e=this.unsigned32(e^e<<15&4022730752),e=this.unsigned32(e^e>>>18),e}genrandInt31(){return this.genrandInt32()>>>1}genrandReal1(){return this.genrandInt32()*(1/4294967295)}genrandReal2(){return this.genrandInt32()*(1/4294967296)}genrandReal3(){return(this.genrandInt32()+.5)*(1/4294967296)}genrandRes53(){let e=this.genrandInt32()>>>5,r=this.genrandInt32()>>>6;return(e*67108864+r)*(1/9007199254740992)}};function Zv(){let e=new Xv;return e.initGenrand(Math.ceil(Math.random()*Number.MAX_SAFE_INTEGER)),{next(){return e.genrandReal2()},seed(r){typeof r=="number"?e.initGenrand(r):Array.isArray(r)&&e.initByArray(r,r.length)}}}function V(e){let r=`[@faker-js/faker]: ${e.deprecated} is deprecated`;e.since&&(r+=` since v${e.since}`),e.until&&(r+=` and will be removed in v${e.until}`),e.proposed&&(r+=`. Please use ${e.proposed} instead`),console.warn(`${r}.`)}var eD=class extends Wt{number(r=99999){V({deprecated:"faker.datatype.number()",proposed:"faker.number.int()",since:"8.0",until:"9.0"}),typeof r=="number"&&(r={max:r});let{min:t=0,max:a=t+99999,precision:n=1}=r;return this.faker.number.float({min:t,max:a,multipleOf:n})}float(r={}){V({deprecated:"faker.datatype.float()",proposed:"faker.number.float()",since:"8.0",until:"9.0"}),typeof r=="number"&&(r={precision:r});let{min:t=0,max:a=t+99999,precision:n=.01}=r;return this.faker.number.float({min:t,max:a,multipleOf:n})}datetime(r={}){V({deprecated:"faker.datatype.datetime({ min, max })",proposed:"faker.date.between({ from, to }) or faker.date.anytime()",since:"8.0",until:"9.0"});let t=864e13,a=typeof r=="number"?void 0:r.min,n=typeof r=="number"?r:r.max;return(a==null||a<t*-1)&&(a=Date.UTC(1990,0)),(n==null||n>t)&&(n=Date.UTC(2100,0)),this.faker.date.between({from:a,to:n})}string(r={}){V({deprecated:"faker.datatype.string()",proposed:"faker.string.sample()",since:"8.0",until:"9.0"}),typeof r=="number"&&(r={length:r});let{length:t=10}=r;return this.faker.string.sample(t)}uuid(){return V({deprecated:"faker.datatype.uuid()",proposed:"faker.string.uuid()",since:"8.0",until:"9.0"}),this.faker.string.uuid()}boolean(r={}){typeof r=="number"&&(r={probability:r});let{probability:t=.5}=r;return t<=0?!1:t>=1?!0:this.faker.number.float()<t}hexadecimal(r={}){return V({deprecated:"faker.datatype.hexadecimal()",proposed:"faker.string.hexadecimal() or faker.number.hex()",since:"8.0",until:"9.0"}),this.faker.string.hexadecimal({...r,casing:r.case})}json(){V({deprecated:"faker.datatype.json()",proposed:"your own function to generate complex objects",since:"8.0",until:"9.0"});let r=["foo","bar","bike","a","b","name","prop"],t={};for(let a of r)t[a]=this.boolean()?this.faker.string.sample():this.faker.number.int();return JSON.stringify(t)}array(r=10){return V({deprecated:"faker.datatype.array()",proposed:"your own function to build complex arrays",since:"8.0",until:"9.0"}),this.faker.helpers.multiple(()=>this.boolean()?this.faker.string.sample():this.faker.number.int(),{count:r})}bigInt(r){return V({deprecated:"faker.datatype.bigInt()",proposed:"faker.number.bigInt()",since:"8.0",until:"9.0"}),this.faker.number.bigInt(r)}};function Gr(e,r){return e==null?r():(e=new Date(e),Number.isNaN(e.valueOf())&&(e=r()),e)}var nm=class extends Wt{anytime(r={}){let{refDate:t}=r,a=Gr(t,this.faker.defaultRefDate);return this.between({from:new Date(a.getTime()-1e3*60*60*24*365),to:new Date(a.getTime()+1e3*60*60*24*365)})}past(r={},t){typeof r=="number"&&(V({deprecated:"faker.date.past(years, refDate)",proposed:"faker.date.past({ years, refDate })",since:"8.0",until:"9.0"}),r={years:r});let{years:a=1,refDate:n=t}=r;if(a<=0)throw new ue("Years must be greater than 0.");let i=Gr(n,this.faker.defaultRefDate),o={min:1e3,max:a*365*24*3600*1e3},u=i.getTime();return u-=this.faker.number.int(o),i.setTime(u),i}future(r={},t){typeof r=="number"&&(V({deprecated:"faker.date.future(years, refDate)",proposed:"faker.date.future({ years, refDate })",since:"8.0",until:"9.0"}),r={years:r});let{years:a=1,refDate:n=t}=r;if(a<=0)throw new ue("Years must be greater than 0.");let i=Gr(n,this.faker.defaultRefDate),o={min:1e3,max:a*365*24*3600*1e3},u=i.getTime();return u+=this.faker.number.int(o),i.setTime(u),i}between(r,t){(r instanceof Date||typeof r!="object")&&(V({deprecated:"faker.date.between(from, to)",proposed:"faker.date.between({ from, to })",since:"8.0",until:"9.0"}),r={from:r,to:t??r});let{from:a,to:n}=r,i=Gr(a,this.faker.defaultRefDate).getTime(),o=Gr(n,this.faker.defaultRefDate).getTime(),u=this.faker.number.int(o-i);return new Date(i+u)}betweens(r,t,a=3){(r instanceof Date||typeof r!="object")&&(V({deprecated:"faker.date.betweens(from, to, count)",proposed:"faker.date.betweens({ from, to, count })",since:"8.0",until:"9.0"}),r={from:r,to:t??r,count:a});let{from:n,to:i,count:o=3}=r;return this.faker.helpers.multiple(()=>this.between({from:n,to:i}),{count:o}).sort((u,s)=>u.getTime()-s.getTime())}recent(r={},t){typeof r=="number"&&(V({deprecated:"faker.date.recent(days, refDate)",proposed:"faker.date.recent({ days, refDate })",since:"8.0",until:"9.0"}),r={days:r});let{days:a=1,refDate:n=t}=r;if(a<=0)throw new ue("Days must be greater than 0.");let i=Gr(n,this.faker.defaultRefDate),o={min:1e3,max:a*24*3600*1e3},u=i.getTime();return u-=this.faker.number.int(o),i.setTime(u),i}soon(r={},t){typeof r=="number"&&(V({deprecated:"faker.date.soon(days, refDate)",proposed:"faker.date.soon({ days, refDate })",since:"8.0",until:"9.0"}),r={days:r});let{days:a=1,refDate:n=t}=r;if(a<=0)throw new ue("Days must be greater than 0.");let i=Gr(n,this.faker.defaultRefDate),o={min:1e3,max:a*24*3600*1e3},u=i.getTime();return u+=this.faker.number.int(o),i.setTime(u),i}birthdate(r={}){var t,a,n,i;let o=r.mode==="age"?"age":"year",u=Gr(r.refDate,this.faker.defaultRefDate),s=u.getUTCFullYear(),l,c;if(o==="age"?(l=new Date(u).setUTCFullYear(s-((t=r.max)!=null?t:80)-1),c=new Date(u).setUTCFullYear(s-((a=r.min)!=null?a:18))):(l=new Date(Date.UTC(0,0,2)).setUTCFullYear((n=r.min)!=null?n:s-80),c=new Date(Date.UTC(0,11,30)).setUTCFullYear((i=r.max)!=null?i:s-19)),c<l)throw new ue(`Max ${r.max} should be larger than or equal to min ${r.min}.`);return new Date(this.faker.number.int({min:l,max:c}))}},rD=class extends nm{constructor(r){super(r),this.faker=r}month(r={}){let{abbr:t,abbreviated:a=t??!1,context:n=!1}=r;t!=null&&V({deprecated:"faker.date.month({ abbr })",proposed:"faker.date.month({ abbreviated })",since:"8.0",until:"9.0"});let i=this.faker.definitions.date.month,o;a?o=n&&i.abbr_context!=null?"abbr_context":"abbr":o=n&&i.wide_context!=null?"wide_context":"wide";let u=i[o];return fn(u,"date.month",o),this.faker.helpers.arrayElement(u)}weekday(r={}){let{abbr:t,abbreviated:a=t??!1,context:n=!1}=r;t!=null&&V({deprecated:"faker.date.weekday({ abbr })",proposed:"faker.date.weekday({ abbreviated })",since:"8.0",until:"9.0"});let i=this.faker.definitions.date.weekday,o;a?o=n&&i.abbr_context!=null?"abbr_context":"abbr":o=n&&i.wide_context!=null?"wide_context":"wide";let u=i[o];return fn(u,"date.weekday",o),this.faker.helpers.arrayElement(u)}},tD=/\.|\(/;function aD(e,r,t=[r,r.rawDefinitions]){if(e.length===0)throw new ue("Eval expression cannot be empty.");if(t.length===0)throw new ue("Eval entrypoints cannot be empty.");let a=t,n=e;do{let o;n.startsWith("(")?[o,a]=nD(n,a):[o,a]=oD(n,a),n=n.substring(o),a=a.filter(u=>u!=null).map(u=>Array.isArray(u)?r.helpers.arrayElement(u):u)}while(n.length>0&&a.length>0);if(a.length===0)throw new ue(`Cannot resolve expression '${e}'`);let i=a[0];return typeof i=="function"?i():i}function nD(e,r){let[t,a]=iD(e),n=e[t+1];switch(n){case".":case"(":case void 0:break;default:throw new ue(`Expected dot ('.'), open parenthesis ('('), or nothing after function call but got '${n}'`)}return[t+(n==="."?2:1),r.map(i=>typeof i=="function"?i(...a):i)]}function iD(e){let r=e.indexOf(")",1);if(r===-1)throw new ue(`Missing closing parenthesis in '${e}'`);for(;r!==-1;){let a=e.substring(1,r);try{return[r,JSON.parse(`[${a}]`)]}catch{if(!a.includes("'")&&!a.includes('"'))try{return[r,JSON.parse(`["${a}"]`)]}catch{}}r=e.indexOf(")",r+1)}r=e.lastIndexOf(")");let t=e.substring(1,r);return[r,[t]]}function oD(e,r){var t,a;let n=tD.exec(e),i=((t=n?.[0])!=null?t:"")===".",o=(a=n?.index)!=null?a:e.length,u=e.substring(0,o);if(u.length===0)throw new ue(`Expression parts cannot be empty in '${e}'`);let s=e[o+1];if(i&&(s==null||s==="."||s==="("))throw new ue(`Found dot without property name in '${e}'`);return[o+(i?1:0),r.map(l=>uD(l,u))]}function uD(e,r){switch(typeof e){case"function":{try{e=e()}catch{return}return e?.[r]}case"object":return e?.[r];default:return}}function sD(e){let r=lD(e.replace(/L?$/,"0"));return r===0?0:10-r}function lD(e){e=e.replace(/[\s-]/g,"");let r=0,t=!1;for(let a=e.length-1;a>=0;a--){let n=Number.parseInt(e[a]);t&&(n*=2,n>9&&(n=n%10+1)),r+=n,t=!t}return r%10}function cD(e,r){return e[r]===void 0?-1:0}function Nl(e,r,t,a,n){throw console.error("Error",t),console.log(`Found ${Object.keys(a).length} unique entries before throwing error.
retried: ${n}
total time: ${r-e}ms`),new ue(`${t} for uniqueness check.

May not be able to generate any more unique values with current settings.
Try adjusting maxTime or maxRetries parameters for faker.helpers.unique().`)}function im(e,r,t={}){let a=Date.now(),{startTime:n=Date.now(),maxTime:i=50,maxRetries:o=50,currentIterations:u=0,compare:s=cD,store:l={}}=t,{exclude:c=[]}=t;if(t.currentIterations=u,Array.isArray(c)||(c=[c]),a-n>=i)return Nl(n,a,`Exceeded maxTime: ${i}`,l,u);if(u>=o)return Nl(n,a,`Exceeded maxRetries: ${o}`,l,u);let d=e(...r);return s(l,d)===-1&&!c.includes(d)?(l[d]=d,t.currentIterations=0,d):(t.currentIterations++,im(e,r,{...t,startTime:n,maxTime:i,maxRetries:o,compare:s,exclude:c}))}function Rl(e,r,t,a){let n=1;if(r)switch(r){case"?":{n=e.datatype.boolean()?0:1;break}case"*":{let i=1;for(;e.datatype.boolean();)i*=2;n=e.number.int({min:0,max:i});break}case"+":{let i=1;for(;e.datatype.boolean();)i*=2;n=e.number.int({min:1,max:i});break}default:throw new ue("Unknown quantifier symbol provided.")}else t!=null&&a!=null?n=e.number.int({min:Number.parseInt(t),max:Number.parseInt(a)}):t!=null&&a==null&&(n=Number.parseInt(t));return n}function Ll(e,r=""){let t=/(.)\{(\d+),(\d+)\}/,a=/(.)\{(\d+)\}/,n=/\[(\d+)-(\d+)\]/,i,o,u,s,l=t.exec(r);for(;l!=null;)i=Number.parseInt(l[2]),o=Number.parseInt(l[3]),i>o&&(u=o,o=i,i=u),s=e.number.int({min:i,max:o}),r=r.slice(0,l.index)+l[1].repeat(s)+r.slice(l.index+l[0].length),l=t.exec(r);for(l=a.exec(r);l!=null;)s=Number.parseInt(l[2]),r=r.slice(0,l.index)+l[1].repeat(s)+r.slice(l.index+l[0].length),l=a.exec(r);for(l=n.exec(r);l!=null;)i=Number.parseInt(l[1]),o=Number.parseInt(l[2]),i>o&&(u=o,o=i,i=u),r=r.slice(0,l.index)+e.number.int({min:i,max:o}).toString()+r.slice(l.index+l[0].length),l=n.exec(r);return r}function po(e,r="",t="#"){let a="";for(let n=0;n<r.length;n++)r.charAt(n)===t?a+=e.number.int(9):r.charAt(n)==="!"?a+=e.number.int({min:2,max:9}):a+=r.charAt(n);return a}var om=class extends Wt{constructor(){super(...arguments),me(this,"uniqueStore",{})}slugify(r=""){return r.normalize("NFKD").replace(/[\u0300-\u036F]/g,"").replace(/ /g,"-").replace(/[^\w.-]+/g,"")}replaceSymbolWithNumber(r="",t="#"){return V({deprecated:"faker.helpers.replaceSymbolWithNumber",proposed:"string.replace(/#+/g, (m) => faker.string.numeric(m.length))",since:"8.4",until:"9.0"}),po(this.faker,r,t)}replaceSymbols(r=""){let t=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],a="";for(let n=0;n<r.length;n++)r.charAt(n)==="#"?a+=this.faker.number.int(9):r.charAt(n)==="?"?a+=this.arrayElement(t):r.charAt(n)==="*"?a+=this.faker.datatype.boolean()?this.arrayElement(t):this.faker.number.int(9):a+=r.charAt(n);return a}replaceCreditCardSymbols(r="6453-####-####-####-###L",t="#"){r=Ll(this.faker,r),r=po(this.faker,r,t);let a=sD(r);return r.replace("L",String(a))}regexpStyleStringParse(r=""){return V({deprecated:"faker.helpers.regexpStyleStringParse",proposed:"faker.helpers.fromRegExp",since:"8.1",until:"9.0"}),Ll(this.faker,r)}fromRegExp(r){var t,a,n,i,o,u,s;let l=!1;r instanceof RegExp&&(l=r.flags.includes("i"),r=r.toString(),r=(a=(t=/\/(.+?)\//.exec(r))==null?void 0:t[1])!=null?a:"");let c,d,p,h=/([.A-Za-z0-9])(?:\{(\d+)(?:,(\d+)|)\}|(\?|\*|\+))(?![^[]*]|[^{]*})/,g=h.exec(r);for(;g!=null;){let T=g[2],E=g[3],R=g[4];p=Rl(this.faker,R,T,E),r=r.slice(0,g.index)+g[1].repeat(p)+r.slice(g.index+g[0].length),g=h.exec(r)}let b=/(\d-\d|\w-\w|\d|\w|[-!@#$&()`.+,/"])/,F=/\[(\^|)(-|)(.+?)\](?:\{(\d+)(?:,(\d+)|)\}|(\?|\*|\+)|)/;for(g=F.exec(r);g!=null;){let T=g[1]==="^",E=g[2]==="-",R=g[4],C=g[5],j=g[6],L=[],y=g[3],B=b.exec(y);for(E&&L.push(45);B!=null;){if(B[0].includes("-")){let P=B[0].split("-").map($=>{var X;return(X=$.codePointAt(0))!=null?X:Number.NaN});if(c=P[0],d=P[1],c>d)throw new ue("Character range provided is out of order.");for(let $=c;$<=d;$++)if(l&&Number.isNaN(Number(String.fromCodePoint($)))){let X=String.fromCodePoint($);L.push((n=X.toUpperCase().codePointAt(0))!=null?n:Number.NaN,(i=X.toLowerCase().codePointAt(0))!=null?i:Number.NaN)}else L.push($)}else l&&Number.isNaN(Number(B[0]))?L.push((o=B[0].toUpperCase().codePointAt(0))!=null?o:Number.NaN,(u=B[0].toLowerCase().codePointAt(0))!=null?u:Number.NaN):L.push((s=B[0].codePointAt(0))!=null?s:Number.NaN);y=y.substring(B[0].length),B=b.exec(y)}if(p=Rl(this.faker,j,R,C),T){let P=-1;for(let $=48;$<=57;$++){if(P=L.indexOf($),P>-1){L.splice(P,1);continue}L.push($)}for(let $=65;$<=90;$++){if(P=L.indexOf($),P>-1){L.splice(P,1);continue}L.push($)}for(let $=97;$<=122;$++){if(P=L.indexOf($),P>-1){L.splice(P,1);continue}L.push($)}}let H=this.multiple(()=>String.fromCodePoint(this.arrayElement(L)),{count:p}).join("");r=r.slice(0,g.index)+H+r.slice(g.index+g[0].length),g=F.exec(r)}let D=/(.)\{(\d+),(\d+)\}/;for(g=D.exec(r);g!=null;){if(c=Number.parseInt(g[2]),d=Number.parseInt(g[3]),c>d)throw new ue("Numbers out of order in {} quantifier.");p=this.faker.number.int({min:c,max:d}),r=r.slice(0,g.index)+g[1].repeat(p)+r.slice(g.index+g[0].length),g=D.exec(r)}let N=/(.)\{(\d+)\}/;for(g=N.exec(r);g!=null;)p=Number.parseInt(g[2]),r=r.slice(0,g.index)+g[1].repeat(p)+r.slice(g.index+g[0].length),g=N.exec(r);return r}shuffle(r,t={}){let{inplace:a=!1}=t;a||(r=[...r]);for(let n=r.length-1;n>0;--n){let i=this.faker.number.int(n);[r[n],r[i]]=[r[i],r[n]]}return r}uniqueArray(r,t){if(Array.isArray(r)){let n=[...new Set(r)];return this.shuffle(n).splice(0,t)}let a=new Set;try{if(typeof r=="function"){let n=1e3*t,i=0;for(;a.size<t&&i<n;)a.add(r()),i++}}catch{}return[...a]}mustache(r,t){if(r==null)return"";for(let a in t){let n=new RegExp(`{{${a}}}`,"g"),i=t[a];typeof i=="string"&&(i=i.replace(/\$/g,"$$$$")),r=r.replace(n,i)}return r}maybe(r,t={}){if(this.faker.datatype.boolean(t))return r()}objectKey(r){let t=Object.keys(r);return this.arrayElement(t)}objectValue(r){let t=this.faker.helpers.objectKey(r);return r[t]}objectEntry(r){let t=this.faker.helpers.objectKey(r);return[t,r[t]]}arrayElement(r){if(r==null)throw new ue("Calling `faker.helpers.arrayElement()` without arguments is no longer supported.");if(r.length===0)throw new ue("Cannot get value from empty dataset.");let t=r.length>1?this.faker.number.int({max:r.length-1}):0;return r[t]}weightedArrayElement(r){if(r.length===0)throw new ue("weightedArrayElement expects an array with at least one element");if(!r.every(i=>i.weight>0))throw new ue("weightedArrayElement expects an array of { weight, value } objects where weight is a positive number");let t=r.reduce((i,{weight:o})=>i+o,0),a=this.faker.number.float({min:0,max:t}),n=0;for(let{weight:i,value:o}of r)if(n+=i,a<n)return o;return r[r.length-1].value}arrayElements(r,t){if(r==null)throw new ue("Calling `faker.helpers.arrayElements()` without arguments is no longer supported.");if(r.length===0)return[];let a=this.rangeToNumber(t??{min:1,max:r.length});if(a>=r.length)return this.shuffle(r);if(a<=0)return[];let n=[...r],i=r.length,o=i-a,u,s;for(;i-- >o;)s=this.faker.number.int(i),u=n[s],n[s]=n[i],n[i]=u;return n.slice(o)}enumValue(r){let t=Object.keys(r).filter(n=>Number.isNaN(Number(n))),a=this.arrayElement(t);return r[a]}rangeToNumber(r){return typeof r=="number"?r:this.faker.number.int(r)}unique(r,t=[],a={}){V({deprecated:"faker.helpers.unique",proposed:"https://github.com/faker-js/faker/issues/1785#issuecomment-1407773744",since:"8.0",until:"9.0"});let{maxTime:n=50,maxRetries:i=50,exclude:o=[],store:u=this.uniqueStore}=a;return im(r,t,{...a,startTime:Date.now(),maxTime:n,maxRetries:i,currentIterations:0,exclude:o,store:u})}multiple(r,t={}){var a;let n=this.rangeToNumber((a=t.count)!=null?a:3);return n<=0?[]:Array.from({length:n},r)}},dD=class extends om{constructor(r){super(r),this.faker=r}fake(r){r=typeof r=="string"?r:this.arrayElement(r);let t=r.search(/{{[a-z]/),a=r.indexOf("}}",t);if(t===-1||a===-1)return r;let n=r.substring(t+2,a+2).replace("}}","").replace("{{",""),i=aD(n,this.faker),o=String(i),u=r.substring(0,t)+o+r.substring(a+2);return this.fake(u)}},pD=class extends Wt{int(r={}){typeof r=="number"&&(r={max:r});let{min:t=0,max:a=Number.MAX_SAFE_INTEGER}=r,n=Math.ceil(t),i=Math.floor(a);if(n===i)return n;if(i<n)throw a>=t?new ue(`No integer value between ${t} and ${a} found.`):new ue(`Max ${a} should be greater than min ${t}.`);let o=this.faker._randomizer.next();return Math.floor(o*(i+1-n)+n)}float(r={}){typeof r=="number"&&(r={max:r});let{min:t=0,max:a=1,fractionDigits:n,precision:i,multipleOf:o=i,multipleOf:u=i??(n==null?void 0:10**-n)}=r;if(i!=null&&V({deprecated:"faker.number.float({ precision })",proposed:"faker.number.float({ multipleOf })",since:"8.4",until:"9.0"}),a===t)return t;if(a<t)throw new ue(`Max ${a} should be greater than min ${t}.`);if(n!=null){if(o!=null)throw new ue("multipleOf and fractionDigits cannot be set at the same time.");if(!Number.isInteger(n))throw new ue("fractionDigits should be an integer.");if(n<0)throw new ue("fractionDigits should be greater than or equal to 0.")}if(u!=null){if(u<=0)throw new ue("multipleOf/precision should be greater than 0.");let s=Math.log10(u),l=u<1&&Number.isInteger(s)?10**-s:1/u;return this.int({min:t*l,max:a*l})/l}return this.faker._randomizer.next()*(a-t)+t}binary(r={}){typeof r=="number"&&(r={max:r});let{min:t=0,max:a=1}=r;return this.int({max:a,min:t}).toString(2)}octal(r={}){typeof r=="number"&&(r={max:r});let{min:t=0,max:a=7}=r;return this.int({max:a,min:t}).toString(8)}hex(r={}){typeof r=="number"&&(r={max:r});let{min:t=0,max:a=15}=r;return this.int({max:a,min:t}).toString(16)}bigInt(r={}){var t,a;(typeof r=="bigint"||typeof r=="number"||typeof r=="string"||typeof r=="boolean")&&(r={max:r});let n=BigInt((t=r.min)!=null?t:0),i=BigInt((a=r.max)!=null?a:n+BigInt(999999999999999));if(i===n)return n;if(i<n)throw new ue(`Max ${i} should be larger then min ${n}.`);let o=i-n,u=BigInt(this.faker.string.numeric({length:o.toString(10).length,allowLeadingZeros:!0}))%(o+BigInt(1));return n+u}},Xa=[..."ABCDEFGHIJKLMNOPQRSTUVWXYZ"],Za=[..."abcdefghijklmnopqrstuvwxyz"],Ml=[..."0123456789"],mD=class extends Wt{fromCharacters(r,t=1){if(t=this.faker.helpers.rangeToNumber(t),t<=0)return"";if(typeof r=="string"&&(r=[...r]),r.length===0)throw new ue("Unable to generate string: No characters to select from.");return this.faker.helpers.multiple(()=>this.faker.helpers.arrayElement(r),{count:t}).join("")}alpha(r={}){var t;typeof r=="number"&&(r={length:r});let a=this.faker.helpers.rangeToNumber((t=r.length)!=null?t:1);if(a<=0)return"";let{casing:n="mixed"}=r,{exclude:i=[]}=r;typeof i=="string"&&(i=[...i]);let o;switch(n){case"upper":o=[...Xa];break;case"lower":o=[...Za];break;case"mixed":default:o=[...Za,...Xa];break}return o=o.filter(u=>!i.includes(u)),this.fromCharacters(o,a)}alphanumeric(r={}){var t;typeof r=="number"&&(r={length:r});let a=this.faker.helpers.rangeToNumber((t=r.length)!=null?t:1);if(a<=0)return"";let{casing:n="mixed"}=r,{exclude:i=[]}=r;typeof i=="string"&&(i=[...i]);let o=[...Ml];switch(n){case"upper":o.push(...Xa);break;case"lower":o.push(...Za);break;case"mixed":default:o.push(...Za,...Xa);break}return o=o.filter(u=>!i.includes(u)),this.fromCharacters(o,a)}binary(r={}){var t;let{prefix:a="0b"}=r,n=a;return n+=this.fromCharacters(["0","1"],(t=r.length)!=null?t:1),n}octal(r={}){var t;let{prefix:a="0o"}=r,n=a;return n+=this.fromCharacters(["0","1","2","3","4","5","6","7"],(t=r.length)!=null?t:1),n}hexadecimal(r={}){var t;let{casing:a="mixed",prefix:n="0x"}=r,i=this.faker.helpers.rangeToNumber((t=r.length)!=null?t:1);if(i<=0)return n;let o=this.fromCharacters(["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","A","B","C","D","E","F"],i);return a==="upper"?o=o.toUpperCase():a==="lower"&&(o=o.toLowerCase()),`${n}${o}`}numeric(r={}){var t;typeof r=="number"&&(r={length:r});let a=this.faker.helpers.rangeToNumber((t=r.length)!=null?t:1);if(a<=0)return"";let{allowLeadingZeros:n=!0}=r,{exclude:i=[]}=r;typeof i=="string"&&(i=[...i]);let o=Ml.filter(s=>!i.includes(s));if(o.length===0||o.length===1&&!n&&o[0]==="0")throw new ue("Unable to generate numeric string, because all possible digits are excluded.");let u="";return!n&&!i.includes("0")&&(u+=this.faker.helpers.arrayElement(o.filter(s=>s!=="0"))),u+=this.fromCharacters(o,a-u.length),u}sample(r=10){r=this.faker.helpers.rangeToNumber(r);let t={min:33,max:125},a="";for(;a.length<r;)a+=String.fromCodePoint(this.faker.number.int(t));return a}uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/x/g,()=>this.faker.number.hex({min:0,max:15})).replace(/y/g,()=>this.faker.number.hex({min:8,max:11}))}nanoid(r=21){if(r=this.faker.helpers.rangeToNumber(r),r<=0)return"";let t=[{value:()=>this.alphanumeric(1),weight:62},{value:()=>this.faker.helpers.arrayElement(["_","-"]),weight:2}],a="";for(;a.length<r;){let n=this.faker.helpers.weightedArrayElement(t);a+=n()}return a}symbol(r=1){return this.fromCharacters(["!",'"',"#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","@","[","\\","]","^","_","`","{","|","}","~"],r)}},um=class{constructor(r={}){me(this,"_defaultRefDate",()=>new Date),me(this,"_randomizer"),me(this,"datatype",new eD(this)),me(this,"date",new nm(this)),me(this,"helpers",new om(this)),me(this,"number",new pD(this)),me(this,"string",new mD(this));let{randomizer:t=Zv()}=r;this._randomizer=t}get defaultRefDate(){return this._defaultRefDate}setDefaultRefDate(r=()=>new Date){typeof r=="function"?this._defaultRefDate=r:this._defaultRefDate=()=>new Date(r)}seed(r=Math.ceil(Math.random()*Number.MAX_SAFE_INTEGER)){return this._randomizer.seed(r),r}};new um;function FD(e){let r={};for(let t of e)for(let a in t){let n=t[a];r[a]===void 0?r[a]={...n}:r[a]={...n,...r[a]}}return r}var hD=class extends Pe{dog(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.dog)}cat(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.cat)}snake(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.snake)}bear(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.bear)}lion(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.lion)}cetacean(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.cetacean)}horse(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.horse)}bird(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.bird)}cow(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.cow)}fish(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.fish)}crocodilia(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.crocodilia)}insect(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.insect)}rabbit(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.rabbit)}rodent(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.rodent)}type(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.type)}},fD={0:[[1999999,2],[2279999,3],[2289999,4],[3689999,3],[3699999,4],[6389999,3],[6397999,4],[6399999,7],[6449999,3],[6459999,7],[6479999,3],[6489999,7],[6549999,3],[6559999,4],[6999999,3],[8499999,4],[8999999,5],[9499999,6],[9999999,7]],1:[[99999,3],[299999,2],[349999,3],[399999,4],[499999,3],[699999,2],[999999,4],[3979999,3],[5499999,4],[6499999,5],[6799999,4],[6859999,5],[7139999,4],[7169999,3],[7319999,4],[7399999,7],[7749999,5],[7753999,7],[7763999,5],[7764999,7],[7769999,5],[7782999,7],[7899999,5],[7999999,4],[8004999,5],[8049999,5],[8379999,5],[8384999,7],[8671999,5],[8675999,4],[8697999,5],[9159999,6],[9165059,7],[9168699,6],[9169079,7],[9195999,6],[9196549,7],[9729999,6],[9877999,4],[9911499,6],[9911999,7],[9989899,6],[9999999,7]]},yD=class extends Pe{department(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.department)}productName(){return`${this.productAdjective()} ${this.productMaterial()} ${this.product()}`}price(r={},t=1e3,a=2,n=""){typeof r=="number"&&(V({deprecated:"faker.commerce.price(min, max, dec, symbol)",proposed:"faker.commerce.price({ min, max, dec, symbol })",since:"8.0",until:"9.0"}),r={min:r,dec:a,max:t,symbol:n});let{dec:i=2,max:o=1e3,min:u=1,symbol:s=""}=r;if(u<0||o<0)return`${s}0`;let l=this.faker.number.int({min:u,max:o});return s+l.toFixed(i)}productAdjective(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_name.adjective)}productMaterial(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_name.material)}product(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_name.product)}productDescription(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_description)}isbn(r={}){var t;typeof r=="number"&&(r={variant:r});let{variant:a=13,separator:n="-"}=r,i="978",[o,u]=this.faker.helpers.objectEntry(fD),s=this.faker.string.numeric(8),l=Number.parseInt(s.slice(0,-1)),c=(t=u.find(([F])=>l<=F))==null?void 0:t[1];if(!c)throw new ue(`Unable to find a registrant length for the group ${o}`);let d=s.slice(0,c),p=s.slice(c),h=[i,o,d,p];a===10&&h.shift();let g=h.join(""),b=0;for(let F=0;F<a-1;F++){let D=a===10?F+1:F%2?3:1;b+=D*Number.parseInt(g[F])}return b=a===10?b%11:(10-b%10)%10,h.push(b===10?"X":b.toString()),h.join(n)}},gD=class extends Pe{suffixes(){return V({deprecated:"faker.company.suffixes",proposed:"faker.company.name",since:"8.0",until:"9.0"}),[...this.faker.definitions.company.suffix]}name(){return this.faker.helpers.fake(this.faker.definitions.company.name_pattern)}companySuffix(){return V({deprecated:"faker.company.companySuffix",proposed:"faker.company.name",since:"8.0",until:"9.0"}),this.faker.helpers.arrayElement(this.suffixes())}catchPhrase(){return[this.catchPhraseAdjective(),this.catchPhraseDescriptor(),this.catchPhraseNoun()].join(" ")}bs(){return V({deprecated:"faker.company.bs",proposed:"faker.company.buzzPhrase",since:"8.0",until:"9.0"}),this.buzzPhrase()}buzzPhrase(){return[this.buzzVerb(),this.buzzAdjective(),this.buzzNoun()].join(" ")}catchPhraseAdjective(){return this.faker.helpers.arrayElement(this.faker.definitions.company.adjective)}catchPhraseDescriptor(){return this.faker.helpers.arrayElement(this.faker.definitions.company.descriptor)}catchPhraseNoun(){return this.faker.helpers.arrayElement(this.faker.definitions.company.noun)}bsAdjective(){return V({deprecated:"faker.company.bsAdjective",proposed:"faker.company.buzzAdjective",since:"8.0",until:"9.0"}),this.buzzAdjective()}buzzAdjective(){return this.faker.helpers.arrayElement(this.faker.definitions.company.buzz_adjective)}bsBuzz(){return V({deprecated:"faker.company.bsBuzz",proposed:"faker.company.buzzVerb",since:"8.0",until:"9.0"}),this.buzzVerb()}buzzVerb(){return this.faker.helpers.arrayElement(this.faker.definitions.company.buzz_verb)}bsNoun(){return V({deprecated:"faker.company.bsNoun",proposed:"faker.company.buzzNoun",since:"8.0",until:"9.0"}),this.buzzNoun()}buzzNoun(){return this.faker.helpers.arrayElement(this.faker.definitions.company.buzz_noun)}},bD=class extends Pe{column(){return this.faker.helpers.arrayElement(this.faker.definitions.database.column)}type(){return this.faker.helpers.arrayElement(this.faker.definitions.database.type)}collation(){return this.faker.helpers.arrayElement(this.faker.definitions.database.collation)}engine(){return this.faker.helpers.arrayElement(this.faker.definitions.database.engine)}mongodbObjectId(){return this.faker.string.hexadecimal({length:24,casing:"lower",prefix:""})}},vD={alpha:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],formats:[{country:"AL",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"ALkk bbbs sssx cccc cccc cccc cccc"},{country:"AD",total:24,bban:[{type:"n",count:8},{type:"c",count:12}],format:"ADkk bbbb ssss cccc cccc cccc"},{country:"AT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"ATkk bbbb bccc cccc cccc"},{country:"AZ",total:28,bban:[{type:"a",count:4},{type:"n",count:20}],format:"AZkk bbbb cccc cccc cccc cccc cccc"},{country:"BH",total:22,bban:[{type:"a",count:4},{type:"c",count:14}],format:"BHkk bbbb cccc cccc cccc cc"},{country:"BE",total:16,bban:[{type:"n",count:3},{type:"n",count:9}],format:"BEkk bbbc cccc ccxx"},{country:"BA",total:20,bban:[{type:"n",count:6},{type:"n",count:10}],format:"BAkk bbbs sscc cccc ccxx"},{country:"BR",total:29,bban:[{type:"n",count:13},{type:"n",count:10},{type:"a",count:1},{type:"c",count:1}],format:"BRkk bbbb bbbb ssss sccc cccc ccct n"},{country:"BG",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"c",count:8}],format:"BGkk bbbb ssss ddcc cccc cc"},{country:"CR",total:22,bban:[{type:"n",count:1},{type:"n",count:3},{type:"n",count:14}],format:"CRkk xbbb cccc cccc cccc cc"},{country:"HR",total:21,bban:[{type:"n",count:7},{type:"n",count:10}],format:"HRkk bbbb bbbc cccc cccc c"},{country:"CY",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"CYkk bbbs ssss cccc cccc cccc cccc"},{country:"CZ",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"CZkk bbbb ssss sscc cccc cccc"},{country:"DK",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"DKkk bbbb cccc cccc cc"},{country:"DO",total:28,bban:[{type:"a",count:4},{type:"n",count:20}],format:"DOkk bbbb cccc cccc cccc cccc cccc"},{country:"TL",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"TLkk bbbc cccc cccc cccc cxx"},{country:"EE",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"EEkk bbss cccc cccc cccx"},{country:"FO",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"FOkk bbbb cccc cccc cx"},{country:"FI",total:18,bban:[{type:"n",count:6},{type:"n",count:8}],format:"FIkk bbbb bbcc cccc cx"},{country:"FR",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],format:"FRkk bbbb bggg ggcc cccc cccc cxx"},{country:"GE",total:22,bban:[{type:"a",count:2},{type:"n",count:16}],format:"GEkk bbcc cccc cccc cccc cc"},{country:"DE",total:22,bban:[{type:"n",count:8},{type:"n",count:10}],format:"DEkk bbbb bbbb cccc cccc cc"},{country:"GI",total:23,bban:[{type:"a",count:4},{type:"c",count:15}],format:"GIkk bbbb cccc cccc cccc ccc"},{country:"GR",total:27,bban:[{type:"n",count:7},{type:"c",count:16}],format:"GRkk bbbs sssc cccc cccc cccc ccc"},{country:"GL",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"GLkk bbbb cccc cccc cc"},{country:"GT",total:28,bban:[{type:"c",count:4},{type:"c",count:4},{type:"c",count:16}],format:"GTkk bbbb mmtt cccc cccc cccc cccc"},{country:"HU",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"HUkk bbbs sssk cccc cccc cccc cccx"},{country:"IS",total:26,bban:[{type:"n",count:6},{type:"n",count:16}],format:"ISkk bbbb sscc cccc iiii iiii ii"},{country:"IE",total:22,bban:[{type:"c",count:4},{type:"n",count:6},{type:"n",count:8}],format:"IEkk aaaa bbbb bbcc cccc cc"},{country:"IL",total:23,bban:[{type:"n",count:6},{type:"n",count:13}],format:"ILkk bbbn nncc cccc cccc ccc"},{country:"IT",total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"ITkk xaaa aabb bbbc cccc cccc ccc"},{country:"JO",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:18}],format:"JOkk bbbb nnnn cccc cccc cccc cccc cc"},{country:"KZ",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],format:"KZkk bbbc cccc cccc cccc"},{country:"XK",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"XKkk bbbb cccc cccc cccc"},{country:"KW",total:30,bban:[{type:"a",count:4},{type:"c",count:22}],format:"KWkk bbbb cccc cccc cccc cccc cccc cc"},{country:"LV",total:21,bban:[{type:"a",count:4},{type:"c",count:13}],format:"LVkk bbbb cccc cccc cccc c"},{country:"LB",total:28,bban:[{type:"n",count:4},{type:"c",count:20}],format:"LBkk bbbb cccc cccc cccc cccc cccc"},{country:"LI",total:21,bban:[{type:"n",count:5},{type:"c",count:12}],format:"LIkk bbbb bccc cccc cccc c"},{country:"LT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"LTkk bbbb bccc cccc cccc"},{country:"LU",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],format:"LUkk bbbc cccc cccc cccc"},{country:"MK",total:19,bban:[{type:"n",count:3},{type:"c",count:10},{type:"n",count:2}],format:"MKkk bbbc cccc cccc cxx"},{country:"MT",total:31,bban:[{type:"a",count:4},{type:"n",count:5},{type:"c",count:18}],format:"MTkk bbbb ssss sccc cccc cccc cccc ccc"},{country:"MR",total:27,bban:[{type:"n",count:10},{type:"n",count:13}],format:"MRkk bbbb bsss sscc cccc cccc cxx"},{country:"MU",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:15},{type:"a",count:3}],format:"MUkk bbbb bbss cccc cccc cccc 000d dd"},{country:"MC",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],format:"MCkk bbbb bsss sscc cccc cccc cxx"},{country:"MD",total:24,bban:[{type:"c",count:2},{type:"c",count:18}],format:"MDkk bbcc cccc cccc cccc cccc"},{country:"ME",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"MEkk bbbc cccc cccc cccc xx"},{country:"NL",total:18,bban:[{type:"a",count:4},{type:"n",count:10}],format:"NLkk bbbb cccc cccc cc"},{country:"NO",total:15,bban:[{type:"n",count:4},{type:"n",count:7}],format:"NOkk bbbb cccc ccx"},{country:"PK",total:24,bban:[{type:"a",count:4},{type:"n",count:16}],format:"PKkk bbbb cccc cccc cccc cccc"},{country:"PS",total:29,bban:[{type:"c",count:4},{type:"n",count:9},{type:"n",count:12}],format:"PSkk bbbb xxxx xxxx xccc cccc cccc c"},{country:"PL",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"PLkk bbbs sssx cccc cccc cccc cccc"},{country:"PT",total:25,bban:[{type:"n",count:8},{type:"n",count:13}],format:"PTkk bbbb ssss cccc cccc cccx x"},{country:"QA",total:29,bban:[{type:"a",count:4},{type:"c",count:21}],format:"QAkk bbbb cccc cccc cccc cccc cccc c"},{country:"RO",total:24,bban:[{type:"a",count:4},{type:"c",count:16}],format:"ROkk bbbb cccc cccc cccc cccc"},{country:"SM",total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"SMkk xaaa aabb bbbc cccc cccc ccc"},{country:"SA",total:24,bban:[{type:"n",count:2},{type:"c",count:18}],format:"SAkk bbcc cccc cccc cccc cccc"},{country:"RS",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"RSkk bbbc cccc cccc cccc xx"},{country:"SK",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"SKkk bbbb ssss sscc cccc cccc"},{country:"SI",total:19,bban:[{type:"n",count:5},{type:"n",count:10}],format:"SIkk bbss sccc cccc cxx"},{country:"ES",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"ESkk bbbb gggg xxcc cccc cccc"},{country:"SE",total:24,bban:[{type:"n",count:3},{type:"n",count:17}],format:"SEkk bbbc cccc cccc cccc cccc"},{country:"CH",total:21,bban:[{type:"n",count:5},{type:"c",count:12}],format:"CHkk bbbb bccc cccc cccc c"},{country:"TN",total:24,bban:[{type:"n",count:5},{type:"n",count:15}],format:"TNkk bbss sccc cccc cccc cccc"},{country:"TR",total:26,bban:[{type:"n",count:5},{type:"n",count:1},{type:"n",count:16}],format:"TRkk bbbb bxcc cccc cccc cccc cc"},{country:"AE",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"AEkk bbbc cccc cccc cccc ccc"},{country:"GB",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"n",count:8}],format:"GBkk bbbb ssss sscc cccc cc"},{country:"VG",total:24,bban:[{type:"a",count:4},{type:"n",count:16}],format:"VGkk bbbb cccc cccc cccc cccc"}],iso3166:["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW"],mod97:e=>{let r=0;for(let t of e)r=(r*10+ +t)%97;return r},pattern10:["01","02","03","04","05","06","07","08","09"],pattern100:["001","002","003","004","005","006","007","008","009"],toDigitString:e=>e.replace(/[A-Z]/gi,r=>{var t;return String(((t=r.toUpperCase().codePointAt(0))!=null?t:Number.NaN)-55)})},Nr=vD;function DD(e){let r="";for(let t=0;t<e.length;t+=4)r+=`${e.substring(t,t+4)} `;return r.trimEnd()}var ED=class extends Pe{account(r){return V({deprecated:"faker.finance.account",proposed:"faker.finance.accountNumber",since:"8.0",until:"9.0"}),this.accountNumber(r)}accountNumber(r={}){typeof r=="number"&&(r={length:r});let{length:t=8}=r;return this.faker.string.numeric({length:t,allowLeadingZeros:!0})}accountName(){return[this.faker.helpers.arrayElement(this.faker.definitions.finance.account_type),"Account"].join(" ")}routingNumber(){let r=this.faker.string.numeric({length:8,allowLeadingZeros:!0}),t=0;for(let a=0;a<r.length;a+=3)t+=Number(r[a])*3,t+=Number(r[a+1])*7,t+=Number(r[a+2])||0;return`${r}${Math.ceil(t/10)*10-t}`}mask(r,t,a){return V({deprecated:"faker.finance.mask",proposed:"faker.finance.maskedNumber",since:"8.0",until:"9.0"}),this.maskedNumber({length:r,parens:t,ellipsis:a})}maskedNumber(r={}){typeof r=="number"&&(r={length:r});let{ellipsis:t=!0,length:a=4,parens:n=!0}=r,i=this.faker.string.numeric({length:a});return t&&(i=`...${i}`),n&&(i=`(${i})`),i}amount(r={},t=1e3,a=2,n="",i=!1){typeof r=="number"&&(V({deprecated:"faker.finance.amount(min, max, dec, symbol, autoFormat)",proposed:"faker.finance.amount({ min, max, dec, symbol, autoFormat })",since:"8.0",until:"9.0"}),r={min:r});let{autoFormat:o=i,dec:u=a,max:s=t,min:l=0,symbol:c=n}=r,d=this.faker.number.float({max:s,min:l,fractionDigits:u}),p=o?d.toLocaleString(void 0,{minimumFractionDigits:u}):d.toFixed(u);return c+p}transactionType(){return this.faker.helpers.arrayElement(this.faker.definitions.finance.transaction_type)}currency(){return this.faker.helpers.arrayElement(this.faker.definitions.finance.currency)}currencyCode(){return this.currency().code}currencyName(){return this.currency().name}currencySymbol(){let r;do r=this.currency().symbol;while(r.length===0);return r}bitcoinAddress(){let r=this.faker.number.int({min:25,max:39}),t=this.faker.helpers.arrayElement(["1","3"]);return t+=this.faker.string.alphanumeric({length:r,casing:"mixed",exclude:"0OIl"}),t}litecoinAddress(){let r=this.faker.number.int({min:26,max:33});return this.faker.string.fromCharacters("LM3")+this.faker.string.fromCharacters("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",r-1)}creditCardNumber(r={}){typeof r=="string"&&(r={issuer:r});let{issuer:t=""}=r,a,n=this.faker.definitions.finance.credit_card,i=t.toLowerCase();if(i in n)a=this.faker.helpers.arrayElement(n[i]);else if(t.includes("#"))a=t;else{let o=this.faker.helpers.objectValue(n);a=this.faker.helpers.arrayElement(o)}return a=a.replace(/\//g,""),this.faker.helpers.replaceCreditCardSymbols(a)}creditCardCVV(){return this.faker.string.numeric({length:3,allowLeadingZeros:!0})}creditCardIssuer(){return this.faker.helpers.objectKey(this.faker.definitions.finance.credit_card)}pin(r={}){typeof r=="number"&&(r={length:r});let{length:t=4}=r;if(t<1)throw new ue("minimum length is 1");return this.faker.string.numeric({length:t,allowLeadingZeros:!0})}ethereumAddress(){return this.faker.string.hexadecimal({length:40,casing:"lower"})}iban(r={},t){typeof r=="boolean"&&(V({deprecated:"faker.finance.iban(formatted, countryCode)",proposed:"faker.finance.iban({ formatted, countryCode })",since:"8.0",until:"9.0"}),r={formatted:r});let{countryCode:a=t,formatted:n=!1}=r,i=a?Nr.formats.find(c=>c.country===a):this.faker.helpers.arrayElement(Nr.formats);if(!i)throw new ue(`Country code ${a} not supported.`);let o="",u=0;for(let c of i.bban){let d=c.count;for(u+=c.count;d>0;)c.type==="a"?o+=this.faker.helpers.arrayElement(Nr.alpha):c.type==="c"?this.faker.datatype.boolean(.8)?o+=this.faker.number.int(9):o+=this.faker.helpers.arrayElement(Nr.alpha):d>=3&&this.faker.datatype.boolean(.3)?this.faker.datatype.boolean()?(o+=this.faker.helpers.arrayElement(Nr.pattern100),d-=2):(o+=this.faker.helpers.arrayElement(Nr.pattern10),d--):o+=this.faker.number.int(9),d--;o=o.substring(0,u)}let s=98-Nr.mod97(Nr.toDigitString(`${o}${i.country}00`));s<10&&(s=`0${s}`);let l=`${i.country}${s}${o}`;return n?DD(l):l}bic(r={}){let{includeBranchCode:t=this.faker.datatype.boolean()}=r,a=this.faker.string.alpha({length:4,casing:"upper"}),n=this.faker.helpers.arrayElement(Nr.iso3166),i=this.faker.string.alphanumeric({length:2,casing:"upper"}),o=t?this.faker.datatype.boolean()?this.faker.string.alphanumeric({length:3,casing:"upper"}):"XXX":"";return`${a}${n}${i}${o}`}transactionDescription(){let r=this.amount(),t=this.faker.company.name(),a=this.transactionType(),n=this.accountNumber(),i=this.maskedNumber(),o=this.currencyCode();return`${a} transaction at ${t} using card ending with ***${i} for ${o} ${r} in account ***${n}`}},kD=" ",AD=class extends Pe{branch(){let r=this.faker.hacker.noun().replace(" ","-"),t=this.faker.hacker.verb().replace(" ","-");return`${r}-${t}`}commitEntry(r={}){let{merge:t=this.faker.datatype.boolean({probability:.2}),eol:a="CRLF",refDate:n}=r,i=[`commit ${this.faker.git.commitSha()}`];t&&i.push(`Merge: ${this.commitSha({length:7})} ${this.commitSha({length:7})}`);let o=this.faker.person.firstName(),u=this.faker.person.lastName(),s=this.faker.person.fullName({firstName:o,lastName:u}),l=this.faker.internet.userName({firstName:o,lastName:u}),c=this.faker.helpers.arrayElement([s,l]),d=this.faker.internet.email({firstName:o,lastName:u});c=c.replace(/^[.,:;"\\']|[<>\n]|[.,:;"\\']$/g,""),i.push(`Author: ${c} <${d}>`,`Date: ${this.commitDate({refDate:n})}`,"",`${kD.repeat(4)}${this.commitMessage()}`,"");let p=a==="CRLF"?`\r
`:`
`;return i.join(p)}commitMessage(){return`${this.faker.hacker.verb()} ${this.faker.hacker.adjective()} ${this.faker.hacker.noun()}`}commitDate(r={}){let{refDate:t=this.faker.defaultRefDate()}=r,a=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],n=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],i=this.faker.date.recent({days:1,refDate:t}),o=a[i.getUTCDay()],u=n[i.getUTCMonth()],s=i.getUTCDate(),l=i.getUTCHours().toString().padStart(2,"0"),c=i.getUTCMinutes().toString().padStart(2,"0"),d=i.getUTCSeconds().toString().padStart(2,"0"),p=i.getUTCFullYear(),h=this.faker.number.int({min:-11,max:12}),g=Math.abs(h).toString().padStart(2,"0"),b="00",F=h>=0?"+":"-";return`${o} ${u} ${s} ${l}:${c}:${d} ${p} ${F}${g}${b}`}commitSha(r={}){let{length:t=40}=r;return this.faker.string.hexadecimal({length:t,casing:"lower",prefix:""})}shortSha(){return V({deprecated:"faker.git.shortSha()",proposed:"faker.git.commitSha({ length: 7 })",since:"8.0",until:"9.0"}),this.commitSha({length:7})}},wD=class extends Pe{abbreviation(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.abbreviation)}adjective(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.adjective)}noun(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.noun)}verb(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.verb)}ingverb(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.ingverb)}phrase(){let e={abbreviation:this.abbreviation,adjective:this.adjective,ingverb:this.ingverb,noun:this.noun,verb:this.verb},r=this.faker.helpers.arrayElement(this.faker.definitions.hacker.phrase);return this.faker.helpers.mustache(r,e)}},CD=class{constructor(r){this.faker=r}image(r,t,a,n){return V({deprecated:"faker.lorempicsum.image",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),this.imageUrl(r,t,a,n)}imageGrayscale(r,t,a){return V({deprecated:"faker.lorempicsum.imageGrayscale",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),this.imageUrl(r,t,a)}imageBlurred(r,t,a){return V({deprecated:"faker.lorempicsum.imageBlurred",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),this.imageUrl(r,t,void 0,a)}imageRandomSeeded(r,t,a,n,i){return V({deprecated:"faker.lorempicsum.imageRandomSeeded",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),this.imageUrl(r,t,a,n,i)}imageUrl(r,t,a,n,i){V({deprecated:"faker.lorempicsum.imageUrl",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),r=r||640,t=t||480;let o="https://picsum.photos";return i&&(o+=`/seed/${i}`),o+=`/${r}/${t}`,a&&n?`${o}?grayscale&blur=${n}`:a?`${o}?grayscale`:n?`${o}?blur=${n}`:o}},SD=class sm{constructor(r){this.faker=r;for(let t of Object.getOwnPropertyNames(sm.prototype))t==="constructor"||typeof this[t]!="function"||(this[t]=this[t].bind(this))}imageUrl(r,t,a,n,i,o){V({deprecated:"faker.placeholder.imageUrl",proposed:"faker.image.urlPlaceholder",since:"8.0",until:"9.0"}),r=r||640,t=t||r;let u="https://via.placeholder.com";if(u+=`/${r}x${t}`,i!=null&&(u+=`/${i.replace("#","").toUpperCase()}`,o!=null&&(u+=`/${o.replace("#","").toUpperCase()}`)),n!=null&&(u+=`.${n}`),a!=null){let s=new URLSearchParams({text:a});u+=`?${s.toString()}`}return u}randomUrl(r,t,a){return V({deprecated:"faker.placeholder.randomUrl",proposed:"faker.image.urlPlaceholder",since:"8.0",until:"9.0"}),this.imageUrl(r,t,this.faker.lorem.word(),a,this.faker.color.rgb({casing:"upper",prefix:""}),this.faker.color.rgb({casing:"upper",prefix:""}))}},TD=class{constructor(r){this.faker=r}image(r,t,a){return V({deprecated:"faker.unsplash.image",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(r,t,void 0,a)}imageUrl(r,t,a,n){V({deprecated:"faker.unsplash.imageUrl",proposed:"faker.image.url",since:"8.0",until:"9.0"}),r=r||640,t=t||480;let i="https://source.unsplash.com";return a!=null&&(i+=`/category/${a}`),i+=`/${r}x${t}`,n!=null&&/^([A-Za-z0-9].+,[A-Za-z0-9]+)$|^([A-Za-z0-9]+)$/.test(n)&&(i+=`?${n}`),i}food(r,t,a){return V({deprecated:"faker.unsplash.food",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(r,t,"food",a)}people(r,t,a){return V({deprecated:"faker.unsplash.people",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(r,t,"people",a)}nature(r,t,a){return V({deprecated:"faker.unsplash.nature",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(r,t,"nature",a)}technology(r,t,a){return V({deprecated:"faker.unsplash.technology",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(r,t,"technology",a)}objects(r,t,a){return V({deprecated:"faker.unsplash.objects",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(r,t,"objects",a)}buildings(r,t,a){return V({deprecated:"faker.unsplash.buildings",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(r,t,"buildings",a)}},BD=class extends Pe{constructor(e){super(e),me(this,"unsplash"),me(this,"lorempicsum"),me(this,"placeholder"),this.unsplash=new TD(this.faker),this.lorempicsum=new CD(this.faker),this.placeholder=new SD(this.faker)}avatar(){return this.faker.helpers.arrayElement([this.avatarLegacy,this.avatarGitHub])()}avatarGitHub(){return`https://avatars.githubusercontent.com/u/${this.faker.number.int(1e8)}`}avatarLegacy(){return`https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/${this.faker.number.int(1249)}.jpg`}url(e={}){let{width:r=640,height:t=480}=e;return this.faker.helpers.arrayElement([this.urlLoremFlickr,this.urlPicsumPhotos])({width:r,height:t})}urlLoremFlickr(e={}){let{width:r=640,height:t=480,category:a}=e;return`https://loremflickr.com/${r}/${t}${a==null?"":`/${a}`}?lock=${this.faker.number.int()}`}urlPicsumPhotos(e={}){let{width:r=640,height:t=480,grayscale:a=!1,blur:n}=e,i=`https://picsum.photos/seed/${this.faker.string.alphanumeric({length:{min:5,max:10}})}/${r}/${t}`,o=typeof n=="number"&&n>=1&&n<=10;return(a||o)&&(i+="?",a&&(i+="grayscale"),a&&o&&(i+="&"),o&&(i+=`blur=${n}`)),i}urlPlaceholder(e={}){let{width:r=this.faker.number.int({min:1,max:3999}),height:t=this.faker.number.int({min:1,max:3999}),backgroundColor:a=this.faker.color.rgb({format:"hex",prefix:""}),textColor:n=this.faker.color.rgb({format:"hex",prefix:""}),format:i=this.faker.helpers.arrayElement(["gif","jpeg","jpg","png","webp"]),text:o=this.faker.lorem.words()}=e,u="https://via.placeholder.com";return u+=`/${r}`,u+=`x${t}`,u+=`/${a}`,u+=`/${n}`,u+=`.${i}`,u+=`?text=${encodeURIComponent(o)}`,u}dataUri(e={}){let{width:r=640,height:t=480,color:a=this.faker.color.rgb(),type:n="svg-uri"}=e,i=`<svg xmlns="http://www.w3.org/2000/svg" version="1.1" baseProfile="full" width="${r}" height="${t}"><rect width="100%" height="100%" fill="${a}"/><text x="${r/2}" y="${t/2}" font-size="20" alignment-baseline="middle" text-anchor="middle" fill="white">${r}x${t}</text></svg>`;return n==="svg-uri"?`data:image/svg+xml;charset=UTF-8,${encodeURIComponent(i)}`:`data:image/svg+xml;base64,${Buffer.from(i).toString("base64")}`}image(e,r,t){V({deprecated:"faker.image.image",proposed:"faker.image.url",since:"8.0",until:"9.0"});let a=["abstract","animals","business","cats","city","food","nightlife","fashion","people","nature","sports","technics","transport"];return this[this.faker.helpers.arrayElement(a)](e,r,t)}imageUrl(e,r,t,a){V({deprecated:"faker.image.imageUrl",proposed:"faker.image.url",since:"8.0",until:"9.0"}),e=e||640,r=r||480;let n=`https://loremflickr.com/${e}/${r}`;return t!=null&&(n+=`/${t}`),a&&(n+=`?lock=${this.faker.number.int()}`),n}abstract(e,r,t){return V({deprecated:"faker.image.abstract",proposed:"faker.image.urlLoremFlickr({ category: 'abstract' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"abstract",t)}animals(e,r,t){return V({deprecated:"faker.image.animals",proposed:"faker.image.urlLoremFlickr({ category: 'animals' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"animals",t)}business(e,r,t){return V({deprecated:"faker.image.business",proposed:"faker.image.urlLoremFlickr({ category: 'business' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"business",t)}cats(e,r,t){return V({deprecated:"faker.image.cats",proposed:"faker.image.urlLoremFlickr({ category: 'cats' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"cats",t)}city(e,r,t){return V({deprecated:"faker.image.city",proposed:"faker.image.urlLoremFlickr({ category: 'city' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"city",t)}food(e,r,t){return V({deprecated:"faker.image.food",proposed:"faker.image.urlLoremFlickr({ category: 'food' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"food",t)}nightlife(e,r,t){return V({deprecated:"faker.image.nightlife",proposed:"faker.image.urlLoremFlickr({ category: 'nightlife' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"nightlife",t)}fashion(e,r,t){return V({deprecated:"faker.image.fashion",proposed:"faker.image.urlLoremFlickr({ category: 'fashion' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"fashion",t)}people(e,r,t){return V({deprecated:"faker.image.people",proposed:"faker.image.urlLoremFlickr({ category: 'people' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"people",t)}nature(e,r,t){return V({deprecated:"faker.image.nature",proposed:"faker.image.urlLoremFlickr({ category: 'nature' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"nature",t)}sports(e,r,t){return V({deprecated:"faker.image.sports",proposed:"faker.image.urlLoremFlickr({ category: 'sports' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"sports",t)}technics(e,r,t){return V({deprecated:"faker.image.technics",proposed:"faker.image.urlLoremFlickr({ category: 'technics' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"technics",t)}transport(e,r,t){return V({deprecated:"faker.image.transport",proposed:"faker.image.urlLoremFlickr({ category: 'transport' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,r,"transport",t)}},ND=Object.fromEntries([["А","A"],["а","a"],["Б","B"],["б","b"],["В","V"],["в","v"],["Г","G"],["г","g"],["Д","D"],["д","d"],["ъе","ye"],["Ъе","Ye"],["ъЕ","yE"],["ЪЕ","YE"],["Е","E"],["е","e"],["Ё","Yo"],["ё","yo"],["Ж","Zh"],["ж","zh"],["З","Z"],["з","z"],["И","I"],["и","i"],["ый","iy"],["Ый","Iy"],["ЫЙ","IY"],["ыЙ","iY"],["Й","Y"],["й","y"],["К","K"],["к","k"],["Л","L"],["л","l"],["М","M"],["м","m"],["Н","N"],["н","n"],["О","O"],["о","o"],["П","P"],["п","p"],["Р","R"],["р","r"],["С","S"],["с","s"],["Т","T"],["т","t"],["У","U"],["у","u"],["Ф","F"],["ф","f"],["Х","Kh"],["х","kh"],["Ц","Ts"],["ц","ts"],["Ч","Ch"],["ч","ch"],["Ш","Sh"],["ш","sh"],["Щ","Sch"],["щ","sch"],["Ъ",""],["ъ",""],["Ы","Y"],["ы","y"],["Ь",""],["ь",""],["Э","E"],["э","e"],["Ю","Yu"],["ю","yu"],["Я","Ya"],["я","ya"]]),RD=Object.fromEntries([["α","a"],["β","v"],["γ","g"],["δ","d"],["ε","e"],["ζ","z"],["η","i"],["θ","th"],["ι","i"],["κ","k"],["λ","l"],["μ","m"],["ν","n"],["ξ","ks"],["ο","o"],["π","p"],["ρ","r"],["σ","s"],["τ","t"],["υ","y"],["φ","f"],["χ","x"],["ψ","ps"],["ω","o"],["ά","a"],["έ","e"],["ί","i"],["ό","o"],["ύ","y"],["ή","i"],["ώ","o"],["ς","s"],["ϊ","i"],["ΰ","y"],["ϋ","y"],["ΐ","i"],["Α","A"],["Β","B"],["Γ","G"],["Δ","D"],["Ε","E"],["Ζ","Z"],["Η","I"],["Θ","TH"],["Ι","I"],["Κ","K"],["Λ","L"],["Μ","M"],["Ν","N"],["Ξ","KS"],["Ο","O"],["Π","P"],["Ρ","R"],["Σ","S"],["Τ","T"],["Υ","Y"],["Φ","F"],["Χ","X"],["Ψ","PS"],["Ω","O"],["Ά","A"],["Έ","E"],["Ί","I"],["Ό","O"],["Ύ","Y"],["Ή","I"],["Ώ","O"],["Ϊ","I"],["Ϋ","Y"]]),LD=Object.fromEntries([["ء","e"],["آ","a"],["أ","a"],["ؤ","w"],["إ","i"],["ئ","y"],["ا","a"],["ب","b"],["ة","t"],["ت","t"],["ث","th"],["ج","j"],["ح","h"],["خ","kh"],["د","d"],["ذ","dh"],["ر","r"],["ز","z"],["س","s"],["ش","sh"],["ص","s"],["ض","d"],["ط","t"],["ظ","z"],["ع","e"],["غ","gh"],["ـ","_"],["ف","f"],["ق","q"],["ك","k"],["ل","l"],["م","m"],["ن","n"],["ه","h"],["و","w"],["ى","a"],["ي","y"],["َ‎","a"],["ُ","u"],["ِ‎","i"]]),MD=Object.fromEntries([["ա","a"],["Ա","A"],["բ","b"],["Բ","B"],["գ","g"],["Գ","G"],["դ","d"],["Դ","D"],["ե","ye"],["Ե","Ye"],["զ","z"],["Զ","Z"],["է","e"],["Է","E"],["ը","y"],["Ը","Y"],["թ","t"],["Թ","T"],["ժ","zh"],["Ժ","Zh"],["ի","i"],["Ի","I"],["լ","l"],["Լ","L"],["խ","kh"],["Խ","Kh"],["ծ","ts"],["Ծ","Ts"],["կ","k"],["Կ","K"],["հ","h"],["Հ","H"],["ձ","dz"],["Ձ","Dz"],["ղ","gh"],["Ղ","Gh"],["ճ","tch"],["Ճ","Tch"],["մ","m"],["Մ","M"],["յ","y"],["Յ","Y"],["ն","n"],["Ն","N"],["շ","sh"],["Շ","Sh"],["ո","vo"],["Ո","Vo"],["չ","ch"],["Չ","Ch"],["պ","p"],["Պ","P"],["ջ","j"],["Ջ","J"],["ռ","r"],["Ռ","R"],["ս","s"],["Ս","S"],["վ","v"],["Վ","V"],["տ","t"],["Տ","T"],["ր","r"],["Ր","R"],["ց","c"],["Ց","C"],["ու","u"],["ՈՒ","U"],["Ու","U"],["փ","p"],["Փ","P"],["ք","q"],["Ք","Q"],["օ","o"],["Օ","O"],["ֆ","f"],["Ֆ","F"],["և","yev"]]),ID=Object.fromEntries([["چ","ch"],["ک","k"],["گ","g"],["پ","p"],["ژ","zh"],["ی","y"]]),Il={...ND,...RD,...LD,...ID,...MD};function xD(e){let r=()=>e.helpers.arrayElement(["AB","AF","AN","AR","AS","AZ","BE","BG","BN","BO","BR","BS","CA","CE","CO","CS","CU","CY","DA","DE","EL","EN","EO","ES","ET","EU","FA","FI","FJ","FO","FR","FY","GA","GD","GL","GV","HE","HI","HR","HT","HU","HY","ID","IS","IT","JA","JV","KA","KG","KO","KU","KW","KY","LA","LB","LI","LN","LT","LV","MG","MK","MN","MO","MS","MT","MY","NB","NE","NL","NN","NO","OC","PL","PT","RM","RO","RU","SC","SE","SK","SL","SO","SQ","SR","SV","SW","TK","TR","TY","UK","UR","UZ","VI","VO","YI","ZH"]),t=()=>{let l={chrome:["win","mac","lin"],firefox:["win","mac","lin"],opera:["win","mac","lin"],safari:["win","mac"],iexplorer:["win"]},c=e.helpers.objectKey(l),d=e.helpers.arrayElement(l[c]);return[c,d]},a=l=>e.helpers.arrayElement({lin:["i686","x86_64"],mac:["Intel","PPC","U; Intel","U; PPC"],win:["","WOW64","Win64; x64"]}[l]),n=l=>{let c="";for(let d=0;d<l;d++)c+=`.${e.string.numeric({allowLeadingZeros:!0})}`;return c},i={net(){return[e.number.int({min:1,max:4}),e.number.int(9),e.number.int({min:1e4,max:99999}),e.number.int(9)].join(".")},nt(){return[e.number.int({min:5,max:6}),e.number.int(3)].join(".")},ie(){return e.number.int({min:7,max:11})},trident(){return[e.number.int({min:3,max:7}),e.number.int(1)].join(".")},osx(l){return[10,e.number.int({min:5,max:10}),e.number.int(9)].join(l||".")},chrome(){return[e.number.int({min:13,max:39}),0,e.number.int({min:800,max:899}),0].join(".")},presto(){return`2.9.${e.number.int({min:160,max:190})}`},presto2(){return`${e.number.int({min:10,max:12})}.00`},safari(){return[e.number.int({min:531,max:538}),e.number.int(2),e.number.int(2)].join(".")}},o={firefox(l){let c=`${e.number.int({min:5,max:15})}${n(2)}`,d=`Gecko/20100101 Firefox/${c}`,p=a(l);return`Mozilla/5.0 ${l==="win"?`(Windows NT ${i.nt()}${p?`; ${p}`:""}`:l==="mac"?`(Macintosh; ${p} Mac OS X ${i.osx()}`:`(X11; Linux ${p}`}; rv:${c.slice(0,-2)}) ${d}`},iexplorer(){let l=i.ie();return l>=11?`Mozilla/5.0 (Windows NT 6.${e.number.int({min:1,max:3})}; Trident/7.0; ${e.datatype.boolean()?"Touch; ":""}rv:11.0) like Gecko`:`Mozilla/5.0 (compatible; MSIE ${l}.0; Windows NT ${i.nt()}; Trident/${i.trident()}${e.datatype.boolean()?`; .NET CLR ${i.net()}`:""})`},opera(l){let c=` Presto/${i.presto()} Version/${i.presto2()})`,d=l==="win"?`(Windows NT ${i.nt()}; U; ${r()}${c}`:l==="lin"?`(X11; Linux ${a(l)}; U; ${r()}${c}`:`(Macintosh; Intel Mac OS X ${i.osx()} U; ${r()} Presto/${i.presto()} Version/${i.presto2()})`;return`Opera/${e.number.int({min:9,max:14})}.${e.number.int(99)} ${d}`},safari(l){let c=i.safari(),d=`${e.number.int({min:4,max:7})}.${e.number.int(1)}.${e.number.int(10)}`;return`Mozilla/5.0 ${l==="mac"?`(Macintosh; ${a("mac")} Mac OS X ${i.osx("_")} rv:${e.number.int({min:2,max:6})}.0; ${r()}) `:`(Windows; U; Windows NT ${i.nt()})`}AppleWebKit/${c} (KHTML, like Gecko) Version/${d} Safari/${c}`},chrome(l){let c=i.safari();return`Mozilla/5.0 ${l==="mac"?`(Macintosh; ${a("mac")} Mac OS X ${i.osx("_")}) `:l==="win"?`(Windows; U; Windows NT ${i.nt()})`:`(X11; Linux ${a(l)}`} AppleWebKit/${c} (KHTML, like Gecko) Chrome/${i.chrome()} Safari/${c}`}},[u,s]=t();return o[u](s)}var OD=class extends Pe{avatar(){return V({deprecated:"faker.internet.avatar()",proposed:"faker.image.avatarLegacy() or faker.image.avatar()",since:"8.4",until:"9.0"}),this.faker.image.avatarLegacy()}email(r={},t,a,n){var i;(typeof r=="string"||t!=null||a!=null||n!=null)&&V({deprecated:"faker.internet.email(firstName, lastName, provider, options)",proposed:"faker.internet.email({ firstName, lastName, provider, ... })",since:"8.0",until:"9.0"}),typeof r=="string"&&(r={firstName:r});let{firstName:o,lastName:u=t,provider:s=a??this.faker.helpers.arrayElement(this.faker.definitions.internet.free_email),allowSpecialCharacters:l=(i=n?.allowSpecialCharacters)!=null?i:!1}=r,c=this.userName({firstName:o,lastName:u});if(c=c.replace(/[^A-Za-z0-9._+-]+/g,""),c=c.substring(0,50),l){let d=[..."._-"],p=[...".!#$%&'*+-/=?^_`{|}~"];c=c.replace(this.faker.helpers.arrayElement(d),this.faker.helpers.arrayElement(p))}return c=c.replace(/\.{2,}/g,"."),c=c.replace(/^\./,""),c=c.replace(/\.$/,""),`${c}@${s}`}exampleEmail(r={},t,a){var n;(typeof r=="string"||t!=null||a!=null)&&V({deprecated:"faker.internet.exampleEmail(firstName, lastName, options)",proposed:"faker.internet.exampleEmail({ firstName, lastName, ... })",since:"8.0",until:"9.0"}),typeof r=="string"&&(r={firstName:r});let{firstName:i,lastName:o=t,allowSpecialCharacters:u=(n=a?.allowSpecialCharacters)!=null?n:!1}=r,s=this.faker.helpers.arrayElement(this.faker.definitions.internet.example_email);return this.email({firstName:i,lastName:o,provider:s,allowSpecialCharacters:u})}userName(r={},t){(typeof r=="string"||t!=null)&&V({deprecated:"faker.internet.userName(firstName, lastName)",proposed:"faker.internet.userName({ firstName, lastName })",since:"8.0",until:"9.0"}),typeof r=="string"&&(r={firstName:r});let{firstName:a=this.faker.person.firstName(),lastName:n=t??this.faker.person.lastName(),lastName:i=t}=r,o,u=this.faker.number.int(i?1:2),s=this.faker.helpers.arrayElement([".","_"]);switch(u){case 0:o=`${a}${s}${n}${this.faker.number.int(99)}`;break;case 1:o=`${a}${s}${n}`;break;case 2:default:o=`${a}${this.faker.number.int(99)}`;break}return o=o.normalize("NFKD").replace(/[\u0300-\u036F]/g,""),o=[...o].map(l=>{var c;if(Il[l])return Il[l];let d=(c=l.codePointAt(0))!=null?c:Number.NaN;return d<128?l:d.toString(36)}).join(""),o=o.toString().replace(/'/g,""),o=o.replace(/ /g,""),o}displayName(r={},t){(typeof r=="string"||t!=null)&&V({deprecated:"faker.internet.displayName(firstName, lastName)",proposed:"faker.internet.displayName({ firstName, lastName })",since:"8.0",until:"9.0"}),typeof r=="string"&&(r={firstName:r});let{firstName:a=this.faker.person.firstName(),lastName:n=t??this.faker.person.lastName()}=r,i;switch(this.faker.number.int(2)){case 0:i=`${a}${this.faker.number.int(99)}`;break;case 1:i=a+this.faker.helpers.arrayElement([".","_"])+n;break;case 2:default:i=`${a}${this.faker.helpers.arrayElement([".","_"])}${n}${this.faker.number.int(99)}`;break}return i=i.toString().replace(/'/g,""),i=i.replace(/ /g,""),i}protocol(){let r=["http","https"];return this.faker.helpers.arrayElement(r)}httpMethod(){let r=["GET","POST","PUT","DELETE","PATCH"];return this.faker.helpers.arrayElement(r)}httpStatusCode(r={}){let{types:t=Object.keys(this.faker.definitions.internet.http_status_code)}=r,a=this.faker.helpers.arrayElement(t);return this.faker.helpers.arrayElement(this.faker.definitions.internet.http_status_code[a])}url(r={}){let{appendSlash:t=this.faker.datatype.boolean(),protocol:a="https"}=r;return`${a}://${this.domainName()}${t?"/":""}`}domainName(){return`${this.domainWord()}.${this.domainSuffix()}`}domainSuffix(){return this.faker.helpers.arrayElement(this.faker.definitions.internet.domain_suffix)}domainWord(){return this.faker.helpers.slugify(`${this.faker.word.adjective()}-${this.faker.word.noun()}`).toLowerCase()}ip(){return this.faker.datatype.boolean()?this.ipv4():this.ipv6()}ipv4(){return Array.from({length:4},()=>this.faker.number.int(255)).join(".")}ipv6(){return Array.from({length:8},()=>this.faker.string.hexadecimal({length:4,casing:"lower",prefix:""})).join(":")}port(){return this.faker.number.int(65535)}userAgent(){return xD(this.faker)}color(r={},t,a){(typeof r=="number"||a!=null||t!=null)&&V({deprecated:"faker.internet.color(redBase, greenBase, blueBase)",proposed:"faker.internet.color({ redBase, greenBase, blueBase })",since:"8.0",until:"9.0"}),typeof r=="number"&&(r={redBase:r});let{redBase:n=0,greenBase:i=t??0,blueBase:o=a??0}=r,u=d=>Math.floor((this.faker.number.int(256)+d)/2).toString(16).padStart(2,"0"),s=u(n),l=u(i),c=u(o);return`#${s}${l}${c}`}mac(r={}){typeof r=="string"&&(r={separator:r});let{separator:t=":"}=r,a,n="";for([":","-",""].includes(t)||(t=":"),a=0;a<12;a++)n+=this.faker.number.hex(15),a%2===1&&a!==11&&(n+=t);return n}password(r={},t,a,n){let i=/[aeiouAEIOU]$/,o=/[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/,u=(p,h,g,b)=>{if(b.length>=p)return b;h&&(g=o.test(b)?i:o);let F=this.faker.number.int(94)+33,D=String.fromCodePoint(F);return h&&(D=D.toLowerCase()),g.test(D)?u(p,h,g,b+D):u(p,h,g,b)};(typeof r=="string"||t!=null||a!=null||n!=null)&&V({deprecated:"faker.internet.password(length, memorable, pattern, prefix)",proposed:"faker.internet.password({ length, memorable, pattern, prefix })",since:"8.0",until:"9.0"}),typeof r=="number"&&(r={length:r});let{length:s=15,memorable:l=t??!1,pattern:c=a??/\w/,prefix:d=n??""}=r;return u(s,l,c,d)}emoji(r={}){let{types:t=Object.keys(this.faker.definitions.internet.emoji)}=r,a=this.faker.helpers.arrayElement(t);return this.faker.helpers.arrayElement(this.faker.definitions.internet.emoji[a])}},_D=class extends Pe{zipCode(e={}){typeof e=="string"&&(e={format:e});let{state:r}=e;if(r){let a=this.faker.definitions.location.postcode_by_state[r];if(a)return this.faker.helpers.fake(a);throw new ue(`No zip code definition found for state "${r}"`)}let{format:t=this.faker.definitions.location.postcode}=e;return typeof t=="string"&&(t=[t]),t=this.faker.helpers.arrayElement(t),this.faker.helpers.replaceSymbols(t)}zipCodeByState(e={}){V({deprecated:"faker.location.zipCodeByState",proposed:"faker.location.zipCode({ state })",since:"8.0",until:"9.0"}),typeof e=="string"&&(e={state:e});let{state:r}=e;return this.zipCode({state:r})}city(){return this.faker.helpers.fake(this.faker.definitions.location.city_pattern)}cityName(){return V({deprecated:"faker.location.cityName",proposed:"faker.location.city",since:"8.0",until:"9.0"}),this.faker.helpers.arrayElement(this.faker.definitions.location.city_name)}buildingNumber(){return this.faker.helpers.arrayElement(this.faker.definitions.location.building_number).replace(/#+/g,e=>this.faker.string.numeric({length:e.length,allowLeadingZeros:!1}))}street(){return this.faker.helpers.fake(this.faker.definitions.location.street_pattern)}streetName(){return V({deprecated:"faker.location.streetName",proposed:"faker.location.street",since:"8.0",until:"9.0"}),this.faker.helpers.arrayElement(this.faker.definitions.location.street_name)}streetAddress(e={}){typeof e=="boolean"&&(e={useFullAddress:e});let{useFullAddress:r}=e,t=this.faker.definitions.location.street_address[r?"full":"normal"];return this.faker.helpers.fake(t)}secondaryAddress(){return this.faker.helpers.arrayElement(this.faker.definitions.location.secondary_address).replace(/#+/g,e=>this.faker.string.numeric({length:e.length,allowLeadingZeros:!1}))}county(){return this.faker.helpers.arrayElement(this.faker.definitions.location.county)}country(){return this.faker.helpers.arrayElement(this.faker.definitions.location.country)}countryCode(e={}){typeof e=="string"&&(e={variant:e});let{variant:r="alpha-2"}=e,t=(()=>{switch(r){case"numeric":return"numeric";case"alpha-3":return"alpha3";case"alpha-2":default:return"alpha2"}})();return this.faker.helpers.arrayElement(this.faker.definitions.location.country_code)[t]}state(e={}){let{abbreviated:r=!1}=e,t=r?this.faker.definitions.location.state_abbr:this.faker.definitions.location.state;return this.faker.helpers.arrayElement(t)}stateAbbr(){return V({deprecated:"faker.location.stateAbbr()",proposed:"faker.location.state({ abbreviated: true })",since:"8.0",until:"9.0"}),this.state({abbreviated:!0})}latitude(e={},r=-90,t=4){typeof e=="number"&&(V({deprecated:"faker.location.latitude(max, min, precision)",proposed:"faker.location.latitude({ max, min, precision })",since:"8.0",until:"9.0"}),e={max:e});let{max:a=90,min:n=r,precision:i=t}=e;return this.faker.number.float({min:n,max:a,fractionDigits:i})}longitude(e={},r=-180,t=4){typeof e=="number"&&(V({deprecated:"faker.location.longitude(max, min, precision)",proposed:"faker.location.longitude({ max, min, precision })",since:"8.0",until:"9.0"}),e={max:e});let{max:a=180,min:n=r,precision:i=t}=e;return this.faker.number.float({max:a,min:n,fractionDigits:i})}direction(e={}){typeof e=="boolean"&&(V({deprecated:"faker.location.direction(abbreviated)",proposed:"faker.location.direction({ abbreviated })",since:"8.0",until:"9.0"}),e={abbreviated:e});let{abbreviated:r=!1}=e;return r?this.faker.helpers.arrayElement(this.faker.definitions.location.direction_abbr):this.faker.helpers.arrayElement(this.faker.definitions.location.direction)}cardinalDirection(e={}){typeof e=="boolean"&&(V({deprecated:"faker.location.cardinalDirection(abbreviated)",proposed:"faker.location.cardinalDirection({ abbreviated })",since:"8.0",until:"9.0"}),e={abbreviated:e});let{abbreviated:r=!1}=e;return r?this.faker.helpers.arrayElement(this.faker.definitions.location.direction_abbr.slice(0,4)):this.faker.helpers.arrayElement(this.faker.definitions.location.direction.slice(0,4))}ordinalDirection(e={}){typeof e=="boolean"&&(V({deprecated:"faker.location.ordinalDirection(abbreviated)",proposed:"faker.location.ordinalDirection({ abbreviated })",since:"8.0",until:"9.0"}),e={abbreviated:e});let{abbreviated:r=!1}=e;return r?this.faker.helpers.arrayElement(this.faker.definitions.location.direction_abbr.slice(4,8)):this.faker.helpers.arrayElement(this.faker.definitions.location.direction.slice(4,8))}nearbyGPSCoordinate(e={},r=10,t=!1){Array.isArray(e)&&(V({deprecated:"faker.location.nearbyGPSCoordinate(coordinate, radius, isMetric)",proposed:"faker.location.nearbyGPSCoordinate({ origin, radius, isMetric })",since:"8.0",until:"9.0"}),e={origin:e});let{origin:a,radius:n=r,isMetric:i=t}=e;if(a==null)return[this.latitude(),this.longitude()];let o=this.faker.number.float({max:2*Math.PI,fractionDigits:5}),u=i?n:n*1.60934,s=this.faker.number.float({max:u,fractionDigits:3})*.995,l=4e4/360,c=s/l,d=[a[0]+Math.sin(o)*c,a[1]+Math.cos(o)*c];return d[0]=d[0]%180,(d[0]<-90||d[0]>90)&&(d[0]=Math.sign(d[0])*180-d[0],d[1]+=180),d[1]=(d[1]%360+540)%360-180,[d[0],d[1]]}timeZone(){return this.faker.helpers.arrayElement(this.faker.definitions.location.time_zone)}};function PD(e,r,t=a=>a){let a={};for(let n of e){let i=r(n);a[i]===void 0&&(a[i]=[]),a[i].push(t(n))}return a}var qi={fail:()=>{throw new ue("No words found that match the given length.")},closest:(e,r)=>{let t=PD(e,u=>u.length),a=Object.keys(t).map(Number),n=Math.min(...a),i=Math.max(...a),o=Math.min(r.min-n,i-r.max);return e.filter(u=>u.length===r.min-o||u.length===r.max+o)},shortest:e=>{let r=Math.min(...e.map(t=>t.length));return e.filter(t=>t.length===r)},longest:e=>{let r=Math.max(...e.map(t=>t.length));return e.filter(t=>t.length===r)},"any-length":e=>[...e]};function jr(e){let{wordList:r,length:t,strategy:a="any-length"}=e;if(t){let n=typeof t=="number"?o=>o.length===t:o=>o.length>=t.min&&o.length<=t.max,i=r.filter(n);return i.length>0?i:typeof t=="number"?qi[a](r,{min:t,max:t}):qi[a](r,t)}else if(a==="shortest"||a==="longest")return qi[a](r);return[...r]}var GD=class extends Pe{word(e={}){let r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement(jr({...r,wordList:this.faker.definitions.lorem.words}))}words(e=3){return this.faker.helpers.multiple(()=>this.word(),{count:e}).join(" ")}sentence(e={min:3,max:10}){let r=this.words(e);return`${r.charAt(0).toUpperCase()+r.substring(1)}.`}slug(e=3){let r=this.words(e);return this.faker.helpers.slugify(r)}sentences(e={min:2,max:6},r=" "){return this.faker.helpers.multiple(()=>this.sentence(),{count:e}).join(r)}paragraph(e=3){return this.sentences(e)}paragraphs(e=3,r=`
`){return this.faker.helpers.multiple(()=>this.paragraph(),{count:e}).join(r)}text(){let e=["sentence","sentences","paragraph","paragraphs","lines"],r=this.faker.helpers.arrayElement(e);return this[r]()}lines(e={min:1,max:5}){return this.sentences(e,`
`)}},HD=class extends Pe{genre(){return this.faker.helpers.arrayElement(this.faker.definitions.music.genre)}songName(){return this.faker.helpers.arrayElement(this.faker.definitions.music.song_name)}},jD=class extends Pe{number(e){return e!=null&&V({deprecated:"faker.phone.number(format)",proposed:"faker.phone.number(), faker.string.numeric() or faker.helpers.fromRegExp()",since:"8.1",until:"9.0"}),e=e??this.faker.helpers.arrayElement(this.faker.definitions.phone_number.formats),po(this.faker,e)}imei(){return this.faker.helpers.replaceCreditCardSymbols("##-######-######-L","#")}},$D=class extends Pe{word(){V({deprecated:"faker.random.word()",proposed:"faker.lorem.word() or faker.word.sample()",since:"8.0",until:"9.0"});let e=[()=>this.faker.location.cardinalDirection(),this.faker.location.country,this.faker.location.county,()=>this.faker.location.direction(),()=>this.faker.location.ordinalDirection(),this.faker.location.state,this.faker.location.street,this.faker.color.human,this.faker.commerce.department,this.faker.commerce.product,this.faker.commerce.productAdjective,this.faker.commerce.productMaterial,this.faker.commerce.productName,this.faker.company.buzzAdjective,this.faker.company.buzzNoun,this.faker.company.buzzVerb,this.faker.company.catchPhraseAdjective,this.faker.company.catchPhraseDescriptor,this.faker.company.catchPhraseNoun,this.faker.finance.accountName,this.faker.finance.currencyName,this.faker.finance.transactionType,this.faker.hacker.abbreviation,this.faker.hacker.adjective,this.faker.hacker.ingverb,this.faker.hacker.noun,this.faker.hacker.verb,this.faker.lorem.word,this.faker.music.genre,this.faker.person.gender,this.faker.person.jobArea,this.faker.person.jobDescriptor,this.faker.person.jobTitle,this.faker.person.jobType,this.faker.person.sex,()=>this.faker.science.chemicalElement().name,()=>this.faker.science.unit().name,this.faker.vehicle.bicycle,this.faker.vehicle.color,this.faker.vehicle.fuel,this.faker.vehicle.manufacturer,this.faker.vehicle.type,this.faker.word.adjective,this.faker.word.adverb,this.faker.word.conjunction,this.faker.word.interjection,this.faker.word.noun,this.faker.word.preposition,this.faker.word.verb],r=["!","#","%","&","*",")","(","+","=",".","<",">","{","}","[","]",":",";","'",'"',"_","-"],t="",a=0;do{let n=this.faker.helpers.arrayElement(e);try{t=n()}catch{if(a++,a>100)throw new ue("No matching word data available for the current locale");continue}}while(!t||r.some(n=>t.includes(n)));return this.faker.helpers.arrayElement(t.split(" "))}words(e={min:1,max:3}){return V({deprecated:"faker.random.words()",proposed:"faker.lorem.words() or faker.word.words()",since:"8.0",until:"9.0"}),this.faker.helpers.multiple(this.word,{count:e}).join(" ")}locale(){throw new ue("This method has been removed. Please use `faker.helpers.objectKey(allLocales/allFakers)` instead.")}alpha(e={}){return V({deprecated:"faker.random.alpha()",proposed:"faker.string.alpha()",since:"8.0",until:"9.0"}),typeof e=="number"?this.faker.string.alpha(e):this.faker.string.alpha({length:e.count,casing:e.casing,exclude:e.bannedChars})}alphaNumeric(e=1,r={}){return V({deprecated:"faker.random.alphaNumeric()",proposed:"faker.string.alphanumeric()",since:"8.0",until:"9.0"}),this.faker.string.alphanumeric({length:e,exclude:r.bannedChars,casing:r.casing})}numeric(e=1,r={}){return V({deprecated:"faker.random.numeric()",proposed:"faker.string.numeric()",since:"8.0",until:"9.0"}),this.faker.string.numeric({length:e,allowLeadingZeros:r.allowLeadingZeros,exclude:r.bannedDigits})}},WD=class extends Pe{chemicalElement(){return this.faker.helpers.arrayElement(this.faker.definitions.science.chemicalElement)}unit(){return this.faker.helpers.arrayElement(this.faker.definitions.science.unit)}},VD=["video","audio","image","text","application"],UD=["application/pdf","audio/mpeg","audio/wav","image/png","image/jpeg","image/gif","video/mp4","video/mpeg","text/html"],zD=["en","wl","ww"],xl={index:"o",slot:"s",mac:"x",pci:"p"},qD=["SUN","MON","TUE","WED","THU","FRI","SAT"],KD=class extends Pe{fileName(e={}){let{extensionCount:r=1}=e,t=this.faker.word.words().toLowerCase().replace(/\W/g,"_"),a=this.faker.helpers.multiple(()=>this.fileExt(),{count:r}).join(".");return a.length===0?t:`${t}.${a}`}commonFileName(e){return`${this.fileName({extensionCount:0})}.${e||this.commonFileExt()}`}mimeType(){let e=Object.keys(this.faker.definitions.system.mimeTypes);return this.faker.helpers.arrayElement(e)}commonFileType(){return this.faker.helpers.arrayElement(VD)}commonFileExt(){return this.fileExt(this.faker.helpers.arrayElement(UD))}fileType(){let e=this.faker.definitions.system.mimeTypes,r=new Set(Object.keys(e).map(t=>t.split("/")[0]));return this.faker.helpers.arrayElement([...r])}fileExt(e){let r=this.faker.definitions.system.mimeTypes;if(typeof e=="string")return this.faker.helpers.arrayElement(r[e].extensions);let t=new Set(Object.values(r).flatMap(({extensions:a})=>a));return this.faker.helpers.arrayElement([...t])}directoryPath(){let e=this.faker.definitions.system.directoryPaths;return this.faker.helpers.arrayElement(e)}filePath(){return`${this.directoryPath()}/${this.fileName()}`}semver(){return[this.faker.number.int(9),this.faker.number.int(9),this.faker.number.int(9)].join(".")}networkInterface(e={}){var r,t,a,n,i;let{interfaceType:o=this.faker.helpers.arrayElement(zD),interfaceSchema:u=this.faker.helpers.objectKey(xl)}=e,s,l="",c=()=>this.faker.string.numeric({allowLeadingZeros:!0});switch(u){case"index":s=c();break;case"slot":s=`${c()}${(r=this.faker.helpers.maybe(()=>`f${c()}`))!=null?r:""}${(t=this.faker.helpers.maybe(()=>`d${c()}`))!=null?t:""}`;break;case"mac":s=this.faker.internet.mac("");break;case"pci":l=(a=this.faker.helpers.maybe(()=>`P${c()}`))!=null?a:"",s=`${c()}s${c()}${(n=this.faker.helpers.maybe(()=>`f${c()}`))!=null?n:""}${(i=this.faker.helpers.maybe(()=>`d${c()}`))!=null?i:""}`;break}return`${l}${o}${xl[u]}${s}`}cron(e={}){let{includeYear:r=!1,includeNonStandard:t=!1}=e,a=[this.faker.number.int(59),"*"],n=[this.faker.number.int(23),"*"],i=[this.faker.number.int({min:1,max:31}),"*","?"],o=[this.faker.number.int({min:1,max:12}),"*"],u=[this.faker.number.int(6),this.faker.helpers.arrayElement(qD),"*","?"],s=[this.faker.number.int({min:1970,max:2099}),"*"],l=this.faker.helpers.arrayElement(a),c=this.faker.helpers.arrayElement(n),d=this.faker.helpers.arrayElement(i),p=this.faker.helpers.arrayElement(o),h=this.faker.helpers.arrayElement(u),g=this.faker.helpers.arrayElement(s),b=`${l} ${c} ${d} ${p} ${h}`;r&&(b+=` ${g}`);let F=["@annually","@daily","@hourly","@monthly","@reboot","@weekly","@yearly"];return!t||this.faker.datatype.boolean()?b:this.faker.helpers.arrayElement(F)}},JD=class extends Pe{vehicle(){return`${this.manufacturer()} ${this.model()}`}manufacturer(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.manufacturer)}model(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.model)}type(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.type)}fuel(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.fuel)}vin(){let e=["o","i","q","O","I","Q"];return`${this.faker.string.alphanumeric({length:10,casing:"upper",exclude:e})}${this.faker.string.alpha({length:1,casing:"upper",exclude:e})}${this.faker.string.alphanumeric({length:1,casing:"upper",exclude:e})}${this.faker.number.int({min:1e4,max:99999})}`}color(){return this.faker.color.human()}vrm(){return`${this.faker.string.alpha({length:2,casing:"upper"})}${this.faker.string.numeric({length:2,allowLeadingZeros:!0})}${this.faker.string.alpha({length:3,casing:"upper"})}`}bicycle(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.bicycle_type)}},YD=class extends Pe{adjective(e={}){let r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement(jr({...r,wordList:this.faker.definitions.word.adjective}))}adverb(e={}){let r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement(jr({...r,wordList:this.faker.definitions.word.adverb}))}conjunction(e={}){let r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement(jr({...r,wordList:this.faker.definitions.word.conjunction}))}interjection(e={}){let r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement(jr({...r,wordList:this.faker.definitions.word.interjection}))}noun(e={}){let r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement(jr({...r,wordList:this.faker.definitions.word.noun}))}preposition(e={}){let r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement(jr({...r,wordList:this.faker.definitions.word.preposition}))}verb(e={}){let r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement(jr({...r,wordList:this.faker.definitions.word.verb}))}sample(e={}){let r=this.faker.helpers.shuffle([this.adjective,this.adverb,this.conjunction,this.interjection,this.noun,this.preposition,this.verb]);for(let t of r)try{return t(e)}catch{continue}throw new ue("No matching word data available for the current locale")}words(e={}){typeof e=="number"&&(e={count:e});let{count:r={min:1,max:3}}=e;return this.faker.helpers.multiple(()=>this.sample(),{count:r}).join(" ")}},QD=class extends um{constructor(e){super({randomizer:e.randomizer}),me(this,"rawDefinitions"),me(this,"definitions"),me(this,"random",new $D(this)),me(this,"airline",new Uv(this)),me(this,"animal",new hD(this)),me(this,"color",new Kv(this)),me(this,"commerce",new yD(this)),me(this,"company",new gD(this)),me(this,"database",new bD(this)),me(this,"date",new rD(this)),me(this,"finance",new ED(this)),me(this,"git",new AD(this)),me(this,"hacker",new wD(this)),me(this,"helpers",new dD(this)),me(this,"image",new BD(this)),me(this,"internet",new OD(this)),me(this,"location",new _D(this)),me(this,"lorem",new GD(this)),me(this,"music",new HD(this)),me(this,"person",new Qv(this)),me(this,"phone",new jD(this)),me(this,"science",new WD(this)),me(this,"system",new KD(this)),me(this,"vehicle",new JD(this)),me(this,"word",new YD(this));let{locales:r}=e;if(r!=null){V({deprecated:"new Faker({ locales: {a, b}, locale: 'a', localeFallback: 'b' })",proposed:"new Faker({ locale: [a, b, ...] }) or new Faker({ locale: a })",since:"8.0",until:"9.0"});let{locale:a="en",localeFallback:n="en"}=e;e={locale:[r[a],r[n]]}}let{locale:t}=e;if(Array.isArray(t)){if(t.length===0)throw new ue("The locale option must contain at least one locale definition.");t=FD(t)}this.rawDefinitions=t,this.definitions=Jv(this.rawDefinitions)}get address(){return V({deprecated:"faker.address",proposed:"faker.location",since:"8.0",until:"10.0"}),this.location}get name(){return V({deprecated:"faker.name",proposed:"faker.person",since:"8.0",until:"10.0"}),this.person}getMetadata(){var e;return(e=this.rawDefinitions.metadata)!=null?e:{}}get locales(){throw new ue("The locales property has been removed. Please use the constructor instead.")}set locales(e){throw new ue("The locales property has been removed. Please use the constructor instead.")}get locale(){throw new ue("The locale property has been removed. Please use the constructor instead.")}set locale(e){throw new ue("The locale property has been removed. Please use the constructor instead.")}get localeFallback(){throw new ue("The localeFallback property has been removed. Please use the constructor instead.")}set localeFallback(e){throw new ue("The localeFallback property has been removed. Please use the constructor instead.")}setLocale(){throw new ue("This method has been removed. Please use the constructor instead.")}},XD=["CIE 1931 XYZ","CIEUVW","Uniform Color Spaces (UCSs)","CIELUV","CIELAB","HSLuv","sRGB","Adobe RGB","Adobe Wide Gamut RGB","Rec. 2100","ProPhoto RGB Color Space","scRGB","DCI-P3","Display-P3","Rec. 601","Rec. 709","Academy Color Encoding System (ACES)","Rec. 2020","YPbPr","YDbDr","YIQ","xvYCC","sYCC","HSV","HSL","HWB","RGBA","HSLA","LCh","CMY","CMYK","Munsell Color System","Natural Color System (NSC)","Pantone Matching System (PMS)","RAL","Federal Standard 595C","British Standard Colour (BS)","HKS","LMS","RG","RGK"],ZD={space:XD},eE=ZD,rE=["utf8_unicode_ci","utf8_general_ci","utf8_bin","ascii_bin","ascii_general_ci","cp1250_bin","cp1250_general_ci"],tE=["InnoDB","MyISAM","MEMORY","CSV","BLACKHOLE","ARCHIVE"],aE=["int","varchar","text","date","datetime","tinyint","time","timestamp","smallint","mediumint","bigint","decimal","float","double","real","bit","boolean","serial","blob","binary","enum","set","geometry","point"],nE={collation:rE,engine:tE,type:aE},iE=nE,oE=["ADP","AGP","AI","API","ASCII","CLI","COM","CSS","DNS","DRAM","EXE","FTP","GB","HDD","HEX","HTTP","IB","IP","JBOD","JSON","OCR","PCI","PNG","RAM","RSS","SAS","SCSI","SDD","SMS","SMTP","SQL","SSD","SSL","TCP","THX","TLS","UDP","USB","UTF8","VGA","XML","XSS"],uE={abbreviation:oE},sE=uE,lE={smiley:["😀","😃","😄","😁","😆","😅","🤣","😂","🙂","🙃","😉","😊","😇","🥰","😍","🤩","😘","😗","☺️","😚","😙","🥲","😋","😛","😜","🤪","😝","🤑","🤗","🤭","🤫","🤔","🤐","🤨","😐","😑","😶","😶‍🌫️","😏","😒","🙄","😬","😮‍💨","🤥","😌","😔","😪","🤤","😴","😷","🤒","🤕","🤢","🤮","🤧","🥵","🥶","🥴","😵","😵‍💫","🤯","🤠","🥳","🥸","😎","🤓","🧐","😕","😟","🙁","☹️","😮","😯","😲","😳","🥺","😦","😧","😨","😰","😥","😢","😭","😱","😖","😣","😞","😓","😩","😫","🥱","😤","😡","😠","🤬","😈","👿","💀","☠️","💩","🤡","👹","👺","👻","👽","👾","🤖","😺","😸","😹","😻","😼","😽","🙀","😿","😾","🙈","🙉","🙊","💋","💌","💘","💝","💖","💗","💓","💞","💕","💟","❣️","💔","❤️‍🔥","❤️‍🩹","❤️","🧡","💛","💚","💙","💜","🤎","🖤","🤍","💯","💢","💥","💫","💦","💨","🕳️","💣","💬","👁️‍🗨️","🗨️","🗯️","💭","💤"],body:["👋","👋🏻","👋🏼","👋🏽","👋🏾","👋🏿","🤚","🤚🏻","🤚🏼","🤚🏽","🤚🏾","🤚🏿","🖐️","🖐🏻","🖐🏼","🖐🏽","🖐🏾","🖐🏿","✋","✋🏻","✋🏼","✋🏽","✋🏾","✋🏿","🖖","🖖🏻","🖖🏼","🖖🏽","🖖🏾","🖖🏿","👌","👌🏻","👌🏼","👌🏽","👌🏾","👌🏿","🤌","🤌🏻","🤌🏼","🤌🏽","🤌🏾","🤌🏿","🤏","🤏🏻","🤏🏼","🤏🏽","🤏🏾","🤏🏿","✌️","✌🏻","✌🏼","✌🏽","✌🏾","✌🏿","🤞","🤞🏻","🤞🏼","🤞🏽","🤞🏾","🤞🏿","🤟","🤟🏻","🤟🏼","🤟🏽","🤟🏾","🤟🏿","🤘","🤘🏻","🤘🏼","🤘🏽","🤘🏾","🤘🏿","🤙","🤙🏻","🤙🏼","🤙🏽","🤙🏾","🤙🏿","👈","👈🏻","👈🏼","👈🏽","👈🏾","👈🏿","👉","👉🏻","👉🏼","👉🏽","👉🏾","👉🏿","👆","👆🏻","👆🏼","👆🏽","👆🏾","👆🏿","🖕","🖕🏻","🖕🏼","🖕🏽","🖕🏾","🖕🏿","👇","👇🏻","👇🏼","👇🏽","👇🏾","👇🏿","☝️","☝🏻","☝🏼","☝🏽","☝🏾","☝🏿","👍","👍🏻","👍🏼","👍🏽","👍🏾","👍🏿","👎","👎🏻","👎🏼","👎🏽","👎🏾","👎🏿","✊","✊🏻","✊🏼","✊🏽","✊🏾","✊🏿","👊","👊🏻","👊🏼","👊🏽","👊🏾","👊🏿","🤛","🤛🏻","🤛🏼","🤛🏽","🤛🏾","🤛🏿","🤜","🤜🏻","🤜🏼","🤜🏽","🤜🏾","🤜🏿","👏","👏🏻","👏🏼","👏🏽","👏🏾","👏🏿","🙌","🙌🏻","🙌🏼","🙌🏽","🙌🏾","🙌🏿","👐","👐🏻","👐🏼","👐🏽","👐🏾","👐🏿","🤲","🤲🏻","🤲🏼","🤲🏽","🤲🏾","🤲🏿","🤝","🙏","🙏🏻","🙏🏼","🙏🏽","🙏🏾","🙏🏿","✍️","✍🏻","✍🏼","✍🏽","✍🏾","✍🏿","💅","💅🏻","💅🏼","💅🏽","💅🏾","💅🏿","🤳","🤳🏻","🤳🏼","🤳🏽","🤳🏾","🤳🏿","💪","💪🏻","💪🏼","💪🏽","💪🏾","💪🏿","🦾","🦿","🦵","🦵🏻","🦵🏼","🦵🏽","🦵🏾","🦵🏿","🦶","🦶🏻","🦶🏼","🦶🏽","🦶🏾","🦶🏿","👂","👂🏻","👂🏼","👂🏽","👂🏾","👂🏿","🦻","🦻🏻","🦻🏼","🦻🏽","🦻🏾","🦻🏿","👃","👃🏻","👃🏼","👃🏽","👃🏾","👃🏿","🧠","🫀","🫁","🦷","🦴","👀","👁️","👅","👄"],person:["👶","👶🏻","👶🏼","👶🏽","👶🏾","👶🏿","🧒","🧒🏻","🧒🏼","🧒🏽","🧒🏾","🧒🏿","👦","👦🏻","👦🏼","👦🏽","👦🏾","👦🏿","👧","👧🏻","👧🏼","👧🏽","👧🏾","👧🏿","🧑","🧑🏻","🧑🏼","🧑🏽","🧑🏾","🧑🏿","👱","👱🏻","👱🏼","👱🏽","👱🏾","👱🏿","👨","👨🏻","👨🏼","👨🏽","👨🏾","👨🏿","🧔","🧔🏻","🧔🏼","🧔🏽","🧔🏾","🧔🏿","🧔‍♂️","🧔🏻‍♂️","🧔🏼‍♂️","🧔🏽‍♂️","🧔🏾‍♂️","🧔🏿‍♂️","🧔‍♀️","🧔🏻‍♀️","🧔🏼‍♀️","🧔🏽‍♀️","🧔🏾‍♀️","🧔🏿‍♀️","👨‍🦰","👨🏻‍🦰","👨🏼‍🦰","👨🏽‍🦰","👨🏾‍🦰","👨🏿‍🦰","👨‍🦱","👨🏻‍🦱","👨🏼‍🦱","👨🏽‍🦱","👨🏾‍🦱","👨🏿‍🦱","👨‍🦳","👨🏻‍🦳","👨🏼‍🦳","👨🏽‍🦳","👨🏾‍🦳","👨🏿‍🦳","👨‍🦲","👨🏻‍🦲","👨🏼‍🦲","👨🏽‍🦲","👨🏾‍🦲","👨🏿‍🦲","👩","👩🏻","👩🏼","👩🏽","👩🏾","👩🏿","👩‍🦰","👩🏻‍🦰","👩🏼‍🦰","👩🏽‍🦰","👩🏾‍🦰","👩🏿‍🦰","🧑‍🦰","🧑🏻‍🦰","🧑🏼‍🦰","🧑🏽‍🦰","🧑🏾‍🦰","🧑🏿‍🦰","👩‍🦱","👩🏻‍🦱","👩🏼‍🦱","👩🏽‍🦱","👩🏾‍🦱","👩🏿‍🦱","🧑‍🦱","🧑🏻‍🦱","🧑🏼‍🦱","🧑🏽‍🦱","🧑🏾‍🦱","🧑🏿‍🦱","👩‍🦳","👩🏻‍🦳","👩🏼‍🦳","👩🏽‍🦳","👩🏾‍🦳","👩🏿‍🦳","🧑‍🦳","🧑🏻‍🦳","🧑🏼‍🦳","🧑🏽‍🦳","🧑🏾‍🦳","🧑🏿‍🦳","👩‍🦲","👩🏻‍🦲","👩🏼‍🦲","👩🏽‍🦲","👩🏾‍🦲","👩🏿‍🦲","🧑‍🦲","🧑🏻‍🦲","🧑🏼‍🦲","🧑🏽‍🦲","🧑🏾‍🦲","🧑🏿‍🦲","👱‍♀️","👱🏻‍♀️","👱🏼‍♀️","👱🏽‍♀️","👱🏾‍♀️","👱🏿‍♀️","👱‍♂️","👱🏻‍♂️","👱🏼‍♂️","👱🏽‍♂️","👱🏾‍♂️","👱🏿‍♂️","🧓","🧓🏻","🧓🏼","🧓🏽","🧓🏾","🧓🏿","👴","👴🏻","👴🏼","👴🏽","👴🏾","👴🏿","👵","👵🏻","👵🏼","👵🏽","👵🏾","👵🏿","🙍","🙍🏻","🙍🏼","🙍🏽","🙍🏾","🙍🏿","🙍‍♂️","🙍🏻‍♂️","🙍🏼‍♂️","🙍🏽‍♂️","🙍🏾‍♂️","🙍🏿‍♂️","🙍‍♀️","🙍🏻‍♀️","🙍🏼‍♀️","🙍🏽‍♀️","🙍🏾‍♀️","🙍🏿‍♀️","🙎","🙎🏻","🙎🏼","🙎🏽","🙎🏾","🙎🏿","🙎‍♂️","🙎🏻‍♂️","🙎🏼‍♂️","🙎🏽‍♂️","🙎🏾‍♂️","🙎🏿‍♂️","🙎‍♀️","🙎🏻‍♀️","🙎🏼‍♀️","🙎🏽‍♀️","🙎🏾‍♀️","🙎🏿‍♀️","🙅","🙅🏻","🙅🏼","🙅🏽","🙅🏾","🙅🏿","🙅‍♂️","🙅🏻‍♂️","🙅🏼‍♂️","🙅🏽‍♂️","🙅🏾‍♂️","🙅🏿‍♂️","🙅‍♀️","🙅🏻‍♀️","🙅🏼‍♀️","🙅🏽‍♀️","🙅🏾‍♀️","🙅🏿‍♀️","🙆","🙆🏻","🙆🏼","🙆🏽","🙆🏾","🙆🏿","🙆‍♂️","🙆🏻‍♂️","🙆🏼‍♂️","🙆🏽‍♂️","🙆🏾‍♂️","🙆🏿‍♂️","🙆‍♀️","🙆🏻‍♀️","🙆🏼‍♀️","🙆🏽‍♀️","🙆🏾‍♀️","🙆🏿‍♀️","💁","💁🏻","💁🏼","💁🏽","💁🏾","💁🏿","💁‍♂️","💁🏻‍♂️","💁🏼‍♂️","💁🏽‍♂️","💁🏾‍♂️","💁🏿‍♂️","💁‍♀️","💁🏻‍♀️","💁🏼‍♀️","💁🏽‍♀️","💁🏾‍♀️","💁🏿‍♀️","🙋","🙋🏻","🙋🏼","🙋🏽","🙋🏾","🙋🏿","🙋‍♂️","🙋🏻‍♂️","🙋🏼‍♂️","🙋🏽‍♂️","🙋🏾‍♂️","🙋🏿‍♂️","🙋‍♀️","🙋🏻‍♀️","🙋🏼‍♀️","🙋🏽‍♀️","🙋🏾‍♀️","🙋🏿‍♀️","🧏","🧏🏻","🧏🏼","🧏🏽","🧏🏾","🧏🏿","🧏‍♂️","🧏🏻‍♂️","🧏🏼‍♂️","🧏🏽‍♂️","🧏🏾‍♂️","🧏🏿‍♂️","🧏‍♀️","🧏🏻‍♀️","🧏🏼‍♀️","🧏🏽‍♀️","🧏🏾‍♀️","🧏🏿‍♀️","🙇","🙇🏻","🙇🏼","🙇🏽","🙇🏾","🙇🏿","🙇‍♂️","🙇🏻‍♂️","🙇🏼‍♂️","🙇🏽‍♂️","🙇🏾‍♂️","🙇🏿‍♂️","🙇‍♀️","🙇🏻‍♀️","🙇🏼‍♀️","🙇🏽‍♀️","🙇🏾‍♀️","🙇🏿‍♀️","🤦","🤦🏻","🤦🏼","🤦🏽","🤦🏾","🤦🏿","🤦‍♂️","🤦🏻‍♂️","🤦🏼‍♂️","🤦🏽‍♂️","🤦🏾‍♂️","🤦🏿‍♂️","🤦‍♀️","🤦🏻‍♀️","🤦🏼‍♀️","🤦🏽‍♀️","🤦🏾‍♀️","🤦🏿‍♀️","🤷","🤷🏻","🤷🏼","🤷🏽","🤷🏾","🤷🏿","🤷‍♂️","🤷🏻‍♂️","🤷🏼‍♂️","🤷🏽‍♂️","🤷🏾‍♂️","🤷🏿‍♂️","🤷‍♀️","🤷🏻‍♀️","🤷🏼‍♀️","🤷🏽‍♀️","🤷🏾‍♀️","🤷🏿‍♀️","🧑‍⚕️","🧑🏻‍⚕️","🧑🏼‍⚕️","🧑🏽‍⚕️","🧑🏾‍⚕️","🧑🏿‍⚕️","👨‍⚕️","👨🏻‍⚕️","👨🏼‍⚕️","👨🏽‍⚕️","👨🏾‍⚕️","👨🏿‍⚕️","👩‍⚕️","👩🏻‍⚕️","👩🏼‍⚕️","👩🏽‍⚕️","👩🏾‍⚕️","👩🏿‍⚕️","🧑‍🎓","🧑🏻‍🎓","🧑🏼‍🎓","🧑🏽‍🎓","🧑🏾‍🎓","🧑🏿‍🎓","👨‍🎓","👨🏻‍🎓","👨🏼‍🎓","👨🏽‍🎓","👨🏾‍🎓","👨🏿‍🎓","👩‍🎓","👩🏻‍🎓","👩🏼‍🎓","👩🏽‍🎓","👩🏾‍🎓","👩🏿‍🎓","🧑‍🏫","🧑🏻‍🏫","🧑🏼‍🏫","🧑🏽‍🏫","🧑🏾‍🏫","🧑🏿‍🏫","👨‍🏫","👨🏻‍🏫","👨🏼‍🏫","👨🏽‍🏫","👨🏾‍🏫","👨🏿‍🏫","👩‍🏫","👩🏻‍🏫","👩🏼‍🏫","👩🏽‍🏫","👩🏾‍🏫","👩🏿‍🏫","🧑‍⚖️","🧑🏻‍⚖️","🧑🏼‍⚖️","🧑🏽‍⚖️","🧑🏾‍⚖️","🧑🏿‍⚖️","👨‍⚖️","👨🏻‍⚖️","👨🏼‍⚖️","👨🏽‍⚖️","👨🏾‍⚖️","👨🏿‍⚖️","👩‍⚖️","👩🏻‍⚖️","👩🏼‍⚖️","👩🏽‍⚖️","👩🏾‍⚖️","👩🏿‍⚖️","🧑‍🌾","🧑🏻‍🌾","🧑🏼‍🌾","🧑🏽‍🌾","🧑🏾‍🌾","🧑🏿‍🌾","👨‍🌾","👨🏻‍🌾","👨🏼‍🌾","👨🏽‍🌾","👨🏾‍🌾","👨🏿‍🌾","👩‍🌾","👩🏻‍🌾","👩🏼‍🌾","👩🏽‍🌾","👩🏾‍🌾","👩🏿‍🌾","🧑‍🍳","🧑🏻‍🍳","🧑🏼‍🍳","🧑🏽‍🍳","🧑🏾‍🍳","🧑🏿‍🍳","👨‍🍳","👨🏻‍🍳","👨🏼‍🍳","👨🏽‍🍳","👨🏾‍🍳","👨🏿‍🍳","👩‍🍳","👩🏻‍🍳","👩🏼‍🍳","👩🏽‍🍳","👩🏾‍🍳","👩🏿‍🍳","🧑‍🔧","🧑🏻‍🔧","🧑🏼‍🔧","🧑🏽‍🔧","🧑🏾‍🔧","🧑🏿‍🔧","👨‍🔧","👨🏻‍🔧","👨🏼‍🔧","👨🏽‍🔧","👨🏾‍🔧","👨🏿‍🔧","👩‍🔧","👩🏻‍🔧","👩🏼‍🔧","👩🏽‍🔧","👩🏾‍🔧","👩🏿‍🔧","🧑‍🏭","🧑🏻‍🏭","🧑🏼‍🏭","🧑🏽‍🏭","🧑🏾‍🏭","🧑🏿‍🏭","👨‍🏭","👨🏻‍🏭","👨🏼‍🏭","👨🏽‍🏭","👨🏾‍🏭","👨🏿‍🏭","👩‍🏭","👩🏻‍🏭","👩🏼‍🏭","👩🏽‍🏭","👩🏾‍🏭","👩🏿‍🏭","🧑‍💼","🧑🏻‍💼","🧑🏼‍💼","🧑🏽‍💼","🧑🏾‍💼","🧑🏿‍💼","👨‍💼","👨🏻‍💼","👨🏼‍💼","👨🏽‍💼","👨🏾‍💼","👨🏿‍💼","👩‍💼","👩🏻‍💼","👩🏼‍💼","👩🏽‍💼","👩🏾‍💼","👩🏿‍💼","🧑‍🔬","🧑🏻‍🔬","🧑🏼‍🔬","🧑🏽‍🔬","🧑🏾‍🔬","🧑🏿‍🔬","👨‍🔬","👨🏻‍🔬","👨🏼‍🔬","👨🏽‍🔬","👨🏾‍🔬","👨🏿‍🔬","👩‍🔬","👩🏻‍🔬","👩🏼‍🔬","👩🏽‍🔬","👩🏾‍🔬","👩🏿‍🔬","🧑‍💻","🧑🏻‍💻","🧑🏼‍💻","🧑🏽‍💻","🧑🏾‍💻","🧑🏿‍💻","👨‍💻","👨🏻‍💻","👨🏼‍💻","👨🏽‍💻","👨🏾‍💻","👨🏿‍💻","👩‍💻","👩🏻‍💻","👩🏼‍💻","👩🏽‍💻","👩🏾‍💻","👩🏿‍💻","🧑‍🎤","🧑🏻‍🎤","🧑🏼‍🎤","🧑🏽‍🎤","🧑🏾‍🎤","🧑🏿‍🎤","👨‍🎤","👨🏻‍🎤","👨🏼‍🎤","👨🏽‍🎤","👨🏾‍🎤","👨🏿‍🎤","👩‍🎤","👩🏻‍🎤","👩🏼‍🎤","👩🏽‍🎤","👩🏾‍🎤","👩🏿‍🎤","🧑‍🎨","🧑🏻‍🎨","🧑🏼‍🎨","🧑🏽‍🎨","🧑🏾‍🎨","🧑🏿‍🎨","👨‍🎨","👨🏻‍🎨","👨🏼‍🎨","👨🏽‍🎨","👨🏾‍🎨","👨🏿‍🎨","👩‍🎨","👩🏻‍🎨","👩🏼‍🎨","👩🏽‍🎨","👩🏾‍🎨","👩🏿‍🎨","🧑‍✈️","🧑🏻‍✈️","🧑🏼‍✈️","🧑🏽‍✈️","🧑🏾‍✈️","🧑🏿‍✈️","👨‍✈️","👨🏻‍✈️","👨🏼‍✈️","👨🏽‍✈️","👨🏾‍✈️","👨🏿‍✈️","👩‍✈️","👩🏻‍✈️","👩🏼‍✈️","👩🏽‍✈️","👩🏾‍✈️","👩🏿‍✈️","🧑‍🚀","🧑🏻‍🚀","🧑🏼‍🚀","🧑🏽‍🚀","🧑🏾‍🚀","🧑🏿‍🚀","👨‍🚀","👨🏻‍🚀","👨🏼‍🚀","👨🏽‍🚀","👨🏾‍🚀","👨🏿‍🚀","👩‍🚀","👩🏻‍🚀","👩🏼‍🚀","👩🏽‍🚀","👩🏾‍🚀","👩🏿‍🚀","🧑‍🚒","🧑🏻‍🚒","🧑🏼‍🚒","🧑🏽‍🚒","🧑🏾‍🚒","🧑🏿‍🚒","👨‍🚒","👨🏻‍🚒","👨🏼‍🚒","👨🏽‍🚒","👨🏾‍🚒","👨🏿‍🚒","👩‍🚒","👩🏻‍🚒","👩🏼‍🚒","👩🏽‍🚒","👩🏾‍🚒","👩🏿‍🚒","👮","👮🏻","👮🏼","👮🏽","👮🏾","👮🏿","👮‍♂️","👮🏻‍♂️","👮🏼‍♂️","👮🏽‍♂️","👮🏾‍♂️","👮🏿‍♂️","👮‍♀️","👮🏻‍♀️","👮🏼‍♀️","👮🏽‍♀️","👮🏾‍♀️","👮🏿‍♀️","🕵️","🕵🏻","🕵🏼","🕵🏽","🕵🏾","🕵🏿","🕵️‍♂️","🕵🏻‍♂️","🕵🏼‍♂️","🕵🏽‍♂️","🕵🏾‍♂️","🕵🏿‍♂️","🕵️‍♀️","🕵🏻‍♀️","🕵🏼‍♀️","🕵🏽‍♀️","🕵🏾‍♀️","🕵🏿‍♀️","💂","💂🏻","💂🏼","💂🏽","💂🏾","💂🏿","💂‍♂️","💂🏻‍♂️","💂🏼‍♂️","💂🏽‍♂️","💂🏾‍♂️","💂🏿‍♂️","💂‍♀️","💂🏻‍♀️","💂🏼‍♀️","💂🏽‍♀️","💂🏾‍♀️","💂🏿‍♀️","🥷","🥷🏻","🥷🏼","🥷🏽","🥷🏾","🥷🏿","👷","👷🏻","👷🏼","👷🏽","👷🏾","👷🏿","👷‍♂️","👷🏻‍♂️","👷🏼‍♂️","👷🏽‍♂️","👷🏾‍♂️","👷🏿‍♂️","👷‍♀️","👷🏻‍♀️","👷🏼‍♀️","👷🏽‍♀️","👷🏾‍♀️","👷🏿‍♀️","🤴","🤴🏻","🤴🏼","🤴🏽","🤴🏾","🤴🏿","👸","👸🏻","👸🏼","👸🏽","👸🏾","👸🏿","👳","👳🏻","👳🏼","👳🏽","👳🏾","👳🏿","👳‍♂️","👳🏻‍♂️","👳🏼‍♂️","👳🏽‍♂️","👳🏾‍♂️","👳🏿‍♂️","👳‍♀️","👳🏻‍♀️","👳🏼‍♀️","👳🏽‍♀️","👳🏾‍♀️","👳🏿‍♀️","👲","👲🏻","👲🏼","👲🏽","👲🏾","👲🏿","🧕","🧕🏻","🧕🏼","🧕🏽","🧕🏾","🧕🏿","🤵","🤵🏻","🤵🏼","🤵🏽","🤵🏾","🤵🏿","🤵‍♂️","🤵🏻‍♂️","🤵🏼‍♂️","🤵🏽‍♂️","🤵🏾‍♂️","🤵🏿‍♂️","🤵‍♀️","🤵🏻‍♀️","🤵🏼‍♀️","🤵🏽‍♀️","🤵🏾‍♀️","🤵🏿‍♀️","👰","👰🏻","👰🏼","👰🏽","👰🏾","👰🏿","👰‍♂️","👰🏻‍♂️","👰🏼‍♂️","👰🏽‍♂️","👰🏾‍♂️","👰🏿‍♂️","👰‍♀️","👰🏻‍♀️","👰🏼‍♀️","👰🏽‍♀️","👰🏾‍♀️","👰🏿‍♀️","🤰","🤰🏻","🤰🏼","🤰🏽","🤰🏾","🤰🏿","🤱","🤱🏻","🤱🏼","🤱🏽","🤱🏾","🤱🏿","👩‍🍼","👩🏻‍🍼","👩🏼‍🍼","👩🏽‍🍼","👩🏾‍🍼","👩🏿‍🍼","👨‍🍼","👨🏻‍🍼","👨🏼‍🍼","👨🏽‍🍼","👨🏾‍🍼","👨🏿‍🍼","🧑‍🍼","🧑🏻‍🍼","🧑🏼‍🍼","🧑🏽‍🍼","🧑🏾‍🍼","🧑🏿‍🍼","👼","👼🏻","👼🏼","👼🏽","👼🏾","👼🏿","🎅","🎅🏻","🎅🏼","🎅🏽","🎅🏾","🎅🏿","🤶","🤶🏻","🤶🏼","🤶🏽","🤶🏾","🤶🏿","🧑‍🎄","🧑🏻‍🎄","🧑🏼‍🎄","🧑🏽‍🎄","🧑🏾‍🎄","🧑🏿‍🎄","🦸","🦸🏻","🦸🏼","🦸🏽","🦸🏾","🦸🏿","🦸‍♂️","🦸🏻‍♂️","🦸🏼‍♂️","🦸🏽‍♂️","🦸🏾‍♂️","🦸🏿‍♂️","🦸‍♀️","🦸🏻‍♀️","🦸🏼‍♀️","🦸🏽‍♀️","🦸🏾‍♀️","🦸🏿‍♀️","🦹","🦹🏻","🦹🏼","🦹🏽","🦹🏾","🦹🏿","🦹‍♂️","🦹🏻‍♂️","🦹🏼‍♂️","🦹🏽‍♂️","🦹🏾‍♂️","🦹🏿‍♂️","🦹‍♀️","🦹🏻‍♀️","🦹🏼‍♀️","🦹🏽‍♀️","🦹🏾‍♀️","🦹🏿‍♀️","🧙","🧙🏻","🧙🏼","🧙🏽","🧙🏾","🧙🏿","🧙‍♂️","🧙🏻‍♂️","🧙🏼‍♂️","🧙🏽‍♂️","🧙🏾‍♂️","🧙🏿‍♂️","🧙‍♀️","🧙🏻‍♀️","🧙🏼‍♀️","🧙🏽‍♀️","🧙🏾‍♀️","🧙🏿‍♀️","🧚","🧚🏻","🧚🏼","🧚🏽","🧚🏾","🧚🏿","🧚‍♂️","🧚🏻‍♂️","🧚🏼‍♂️","🧚🏽‍♂️","🧚🏾‍♂️","🧚🏿‍♂️","🧚‍♀️","🧚🏻‍♀️","🧚🏼‍♀️","🧚🏽‍♀️","🧚🏾‍♀️","🧚🏿‍♀️","🧛","🧛🏻","🧛🏼","🧛🏽","🧛🏾","🧛🏿","🧛‍♂️","🧛🏻‍♂️","🧛🏼‍♂️","🧛🏽‍♂️","🧛🏾‍♂️","🧛🏿‍♂️","🧛‍♀️","🧛🏻‍♀️","🧛🏼‍♀️","🧛🏽‍♀️","🧛🏾‍♀️","🧛🏿‍♀️","🧜","🧜🏻","🧜🏼","🧜🏽","🧜🏾","🧜🏿","🧜‍♂️","🧜🏻‍♂️","🧜🏼‍♂️","🧜🏽‍♂️","🧜🏾‍♂️","🧜🏿‍♂️","🧜‍♀️","🧜🏻‍♀️","🧜🏼‍♀️","🧜🏽‍♀️","🧜🏾‍♀️","🧜🏿‍♀️","🧝","🧝🏻","🧝🏼","🧝🏽","🧝🏾","🧝🏿","🧝‍♂️","🧝🏻‍♂️","🧝🏼‍♂️","🧝🏽‍♂️","🧝🏾‍♂️","🧝🏿‍♂️","🧝‍♀️","🧝🏻‍♀️","🧝🏼‍♀️","🧝🏽‍♀️","🧝🏾‍♀️","🧝🏿‍♀️","🧞","🧞‍♂️","🧞‍♀️","🧟","🧟‍♂️","🧟‍♀️","💆","💆🏻","💆🏼","💆🏽","💆🏾","💆🏿","💆‍♂️","💆🏻‍♂️","💆🏼‍♂️","💆🏽‍♂️","💆🏾‍♂️","💆🏿‍♂️","💆‍♀️","💆🏻‍♀️","💆🏼‍♀️","💆🏽‍♀️","💆🏾‍♀️","💆🏿‍♀️","💇","💇🏻","💇🏼","💇🏽","💇🏾","💇🏿","💇‍♂️","💇🏻‍♂️","💇🏼‍♂️","💇🏽‍♂️","💇🏾‍♂️","💇🏿‍♂️","💇‍♀️","💇🏻‍♀️","💇🏼‍♀️","💇🏽‍♀️","💇🏾‍♀️","💇🏿‍♀️","🚶","🚶🏻","🚶🏼","🚶🏽","🚶🏾","🚶🏿","🚶‍♂️","🚶🏻‍♂️","🚶🏼‍♂️","🚶🏽‍♂️","🚶🏾‍♂️","🚶🏿‍♂️","🚶‍♀️","🚶🏻‍♀️","🚶🏼‍♀️","🚶🏽‍♀️","🚶🏾‍♀️","🚶🏿‍♀️","🧍","🧍🏻","🧍🏼","🧍🏽","🧍🏾","🧍🏿","🧍‍♂️","🧍🏻‍♂️","🧍🏼‍♂️","🧍🏽‍♂️","🧍🏾‍♂️","🧍🏿‍♂️","🧍‍♀️","🧍🏻‍♀️","🧍🏼‍♀️","🧍🏽‍♀️","🧍🏾‍♀️","🧍🏿‍♀️","🧎","🧎🏻","🧎🏼","🧎🏽","🧎🏾","🧎🏿","🧎‍♂️","🧎🏻‍♂️","🧎🏼‍♂️","🧎🏽‍♂️","🧎🏾‍♂️","🧎🏿‍♂️","🧎‍♀️","🧎🏻‍♀️","🧎🏼‍♀️","🧎🏽‍♀️","🧎🏾‍♀️","🧎🏿‍♀️","🧑‍🦯","🧑🏻‍🦯","🧑🏼‍🦯","🧑🏽‍🦯","🧑🏾‍🦯","🧑🏿‍🦯","👨‍🦯","👨🏻‍🦯","👨🏼‍🦯","👨🏽‍🦯","👨🏾‍🦯","👨🏿‍🦯","👩‍🦯","👩🏻‍🦯","👩🏼‍🦯","👩🏽‍🦯","👩🏾‍🦯","👩🏿‍🦯","🧑‍🦼","🧑🏻‍🦼","🧑🏼‍🦼","🧑🏽‍🦼","🧑🏾‍🦼","🧑🏿‍🦼","👨‍🦼","👨🏻‍🦼","👨🏼‍🦼","👨🏽‍🦼","👨🏾‍🦼","👨🏿‍🦼","👩‍🦼","👩🏻‍🦼","👩🏼‍🦼","👩🏽‍🦼","👩🏾‍🦼","👩🏿‍🦼","🧑‍🦽","🧑🏻‍🦽","🧑🏼‍🦽","🧑🏽‍🦽","🧑🏾‍🦽","🧑🏿‍🦽","👨‍🦽","👨🏻‍🦽","👨🏼‍🦽","👨🏽‍🦽","👨🏾‍🦽","👨🏿‍🦽","👩‍🦽","👩🏻‍🦽","👩🏼‍🦽","👩🏽‍🦽","👩🏾‍🦽","👩🏿‍🦽","🏃","🏃🏻","🏃🏼","🏃🏽","🏃🏾","🏃🏿","🏃‍♂️","🏃🏻‍♂️","🏃🏼‍♂️","🏃🏽‍♂️","🏃🏾‍♂️","🏃🏿‍♂️","🏃‍♀️","🏃🏻‍♀️","🏃🏼‍♀️","🏃🏽‍♀️","🏃🏾‍♀️","🏃🏿‍♀️","💃","💃🏻","💃🏼","💃🏽","💃🏾","💃🏿","🕺","🕺🏻","🕺🏼","🕺🏽","🕺🏾","🕺🏿","🕴️","🕴🏻","🕴🏼","🕴🏽","🕴🏾","🕴🏿","👯","👯‍♂️","👯‍♀️","🧖","🧖🏻","🧖🏼","🧖🏽","🧖🏾","🧖🏿","🧖‍♂️","🧖🏻‍♂️","🧖🏼‍♂️","🧖🏽‍♂️","🧖🏾‍♂️","🧖🏿‍♂️","🧖‍♀️","🧖🏻‍♀️","🧖🏼‍♀️","🧖🏽‍♀️","🧖🏾‍♀️","🧖🏿‍♀️","🧗","🧗🏻","🧗🏼","🧗🏽","🧗🏾","🧗🏿","🧗‍♂️","🧗🏻‍♂️","🧗🏼‍♂️","🧗🏽‍♂️","🧗🏾‍♂️","🧗🏿‍♂️","🧗‍♀️","🧗🏻‍♀️","🧗🏼‍♀️","🧗🏽‍♀️","🧗🏾‍♀️","🧗🏿‍♀️","🤺","🏇","🏇🏻","🏇🏼","🏇🏽","🏇🏾","🏇🏿","⛷️","🏂","🏂🏻","🏂🏼","🏂🏽","🏂🏾","🏂🏿","🏌️","🏌🏻","🏌🏼","🏌🏽","🏌🏾","🏌🏿","🏌️‍♂️","🏌🏻‍♂️","🏌🏼‍♂️","🏌🏽‍♂️","🏌🏾‍♂️","🏌🏿‍♂️","🏌️‍♀️","🏌🏻‍♀️","🏌🏼‍♀️","🏌🏽‍♀️","🏌🏾‍♀️","🏌🏿‍♀️","🏄","🏄🏻","🏄🏼","🏄🏽","🏄🏾","🏄🏿","🏄‍♂️","🏄🏻‍♂️","🏄🏼‍♂️","🏄🏽‍♂️","🏄🏾‍♂️","🏄🏿‍♂️","🏄‍♀️","🏄🏻‍♀️","🏄🏼‍♀️","🏄🏽‍♀️","🏄🏾‍♀️","🏄🏿‍♀️","🚣","🚣🏻","🚣🏼","🚣🏽","🚣🏾","🚣🏿","🚣‍♂️","🚣🏻‍♂️","🚣🏼‍♂️","🚣🏽‍♂️","🚣🏾‍♂️","🚣🏿‍♂️","🚣‍♀️","🚣🏻‍♀️","🚣🏼‍♀️","🚣🏽‍♀️","🚣🏾‍♀️","🚣🏿‍♀️","🏊","🏊🏻","🏊🏼","🏊🏽","🏊🏾","🏊🏿","🏊‍♂️","🏊🏻‍♂️","🏊🏼‍♂️","🏊🏽‍♂️","🏊🏾‍♂️","🏊🏿‍♂️","🏊‍♀️","🏊🏻‍♀️","🏊🏼‍♀️","🏊🏽‍♀️","🏊🏾‍♀️","🏊🏿‍♀️","⛹️","⛹🏻","⛹🏼","⛹🏽","⛹🏾","⛹🏿","⛹️‍♂️","⛹🏻‍♂️","⛹🏼‍♂️","⛹🏽‍♂️","⛹🏾‍♂️","⛹🏿‍♂️","⛹️‍♀️","⛹🏻‍♀️","⛹🏼‍♀️","⛹🏽‍♀️","⛹🏾‍♀️","⛹🏿‍♀️","🏋️","🏋🏻","🏋🏼","🏋🏽","🏋🏾","🏋🏿","🏋️‍♂️","🏋🏻‍♂️","🏋🏼‍♂️","🏋🏽‍♂️","🏋🏾‍♂️","🏋🏿‍♂️","🏋️‍♀️","🏋🏻‍♀️","🏋🏼‍♀️","🏋🏽‍♀️","🏋🏾‍♀️","🏋🏿‍♀️","🚴","🚴🏻","🚴🏼","🚴🏽","🚴🏾","🚴🏿","🚴‍♂️","🚴🏻‍♂️","🚴🏼‍♂️","🚴🏽‍♂️","🚴🏾‍♂️","🚴🏿‍♂️","🚴‍♀️","🚴🏻‍♀️","🚴🏼‍♀️","🚴🏽‍♀️","🚴🏾‍♀️","🚴🏿‍♀️","🚵","🚵🏻","🚵🏼","🚵🏽","🚵🏾","🚵🏿","🚵‍♂️","🚵🏻‍♂️","🚵🏼‍♂️","🚵🏽‍♂️","🚵🏾‍♂️","🚵🏿‍♂️","🚵‍♀️","🚵🏻‍♀️","🚵🏼‍♀️","🚵🏽‍♀️","🚵🏾‍♀️","🚵🏿‍♀️","🤸","🤸🏻","🤸🏼","🤸🏽","🤸🏾","🤸🏿","🤸‍♂️","🤸🏻‍♂️","🤸🏼‍♂️","🤸🏽‍♂️","🤸🏾‍♂️","🤸🏿‍♂️","🤸‍♀️","🤸🏻‍♀️","🤸🏼‍♀️","🤸🏽‍♀️","🤸🏾‍♀️","🤸🏿‍♀️","🤼","🤼‍♂️","🤼‍♀️","🤽","🤽🏻","🤽🏼","🤽🏽","🤽🏾","🤽🏿","🤽‍♂️","🤽🏻‍♂️","🤽🏼‍♂️","🤽🏽‍♂️","🤽🏾‍♂️","🤽🏿‍♂️","🤽‍♀️","🤽🏻‍♀️","🤽🏼‍♀️","🤽🏽‍♀️","🤽🏾‍♀️","🤽🏿‍♀️","🤾","🤾🏻","🤾🏼","🤾🏽","🤾🏾","🤾🏿","🤾‍♂️","🤾🏻‍♂️","🤾🏼‍♂️","🤾🏽‍♂️","🤾🏾‍♂️","🤾🏿‍♂️","🤾‍♀️","🤾🏻‍♀️","🤾🏼‍♀️","🤾🏽‍♀️","🤾🏾‍♀️","🤾🏿‍♀️","🤹","🤹🏻","🤹🏼","🤹🏽","🤹🏾","🤹🏿","🤹‍♂️","🤹🏻‍♂️","🤹🏼‍♂️","🤹🏽‍♂️","🤹🏾‍♂️","🤹🏿‍♂️","🤹‍♀️","🤹🏻‍♀️","🤹🏼‍♀️","🤹🏽‍♀️","🤹🏾‍♀️","🤹🏿‍♀️","🧘","🧘🏻","🧘🏼","🧘🏽","🧘🏾","🧘🏿","🧘‍♂️","🧘🏻‍♂️","🧘🏼‍♂️","🧘🏽‍♂️","🧘🏾‍♂️","🧘🏿‍♂️","🧘‍♀️","🧘🏻‍♀️","🧘🏼‍♀️","🧘🏽‍♀️","🧘🏾‍♀️","🧘🏿‍♀️","🛀","🛀🏻","🛀🏼","🛀🏽","🛀🏾","🛀🏿","🛌","🛌🏻","🛌🏼","🛌🏽","🛌🏾","🛌🏿","🧑‍🤝‍🧑","🧑🏻‍🤝‍🧑🏻","🧑🏻‍🤝‍🧑🏼","🧑🏻‍🤝‍🧑🏽","🧑🏻‍🤝‍🧑🏾","🧑🏻‍🤝‍🧑🏿","🧑🏼‍🤝‍🧑🏻","🧑🏼‍🤝‍🧑🏼","🧑🏼‍🤝‍🧑🏽","🧑🏼‍🤝‍🧑🏾","🧑🏼‍🤝‍🧑🏿","🧑🏽‍🤝‍🧑🏻","🧑🏽‍🤝‍🧑🏼","🧑🏽‍🤝‍🧑🏽","🧑🏽‍🤝‍🧑🏾","🧑🏽‍🤝‍🧑🏿","🧑🏾‍🤝‍🧑🏻","🧑🏾‍🤝‍🧑🏼","🧑🏾‍🤝‍🧑🏽","🧑🏾‍🤝‍🧑🏾","🧑🏾‍🤝‍🧑🏿","🧑🏿‍🤝‍🧑🏻","🧑🏿‍🤝‍🧑🏼","🧑🏿‍🤝‍🧑🏽","🧑🏿‍🤝‍🧑🏾","🧑🏿‍🤝‍🧑🏿","👭","👭🏻","👩🏻‍🤝‍👩🏼","👩🏻‍🤝‍👩🏽","👩🏻‍🤝‍👩🏾","👩🏻‍🤝‍👩🏿","👩🏼‍🤝‍👩🏻","👭🏼","👩🏼‍🤝‍👩🏽","👩🏼‍🤝‍👩🏾","👩🏼‍🤝‍👩🏿","👩🏽‍🤝‍👩🏻","👩🏽‍🤝‍👩🏼","👭🏽","👩🏽‍🤝‍👩🏾","👩🏽‍🤝‍👩🏿","👩🏾‍🤝‍👩🏻","👩🏾‍🤝‍👩🏼","👩🏾‍🤝‍👩🏽","👭🏾","👩🏾‍🤝‍👩🏿","👩🏿‍🤝‍👩🏻","👩🏿‍🤝‍👩🏼","👩🏿‍🤝‍👩🏽","👩🏿‍🤝‍👩🏾","👭🏿","👫","👫🏻","👩🏻‍🤝‍👨🏼","👩🏻‍🤝‍👨🏽","👩🏻‍🤝‍👨🏾","👩🏻‍🤝‍👨🏿","👩🏼‍🤝‍👨🏻","👫🏼","👩🏼‍🤝‍👨🏽","👩🏼‍🤝‍👨🏾","👩🏼‍🤝‍👨🏿","👩🏽‍🤝‍👨🏻","👩🏽‍🤝‍👨🏼","👫🏽","👩🏽‍🤝‍👨🏾","👩🏽‍🤝‍👨🏿","👩🏾‍🤝‍👨🏻","👩🏾‍🤝‍👨🏼","👩🏾‍🤝‍👨🏽","👫🏾","👩🏾‍🤝‍👨🏿","👩🏿‍🤝‍👨🏻","👩🏿‍🤝‍👨🏼","👩🏿‍🤝‍👨🏽","👩🏿‍🤝‍👨🏾","👫🏿","👬","👬🏻","👨🏻‍🤝‍👨🏼","👨🏻‍🤝‍👨🏽","👨🏻‍🤝‍👨🏾","👨🏻‍🤝‍👨🏿","👨🏼‍🤝‍👨🏻","👬🏼","👨🏼‍🤝‍👨🏽","👨🏼‍🤝‍👨🏾","👨🏼‍🤝‍👨🏿","👨🏽‍🤝‍👨🏻","👨🏽‍🤝‍👨🏼","👬🏽","👨🏽‍🤝‍👨🏾","👨🏽‍🤝‍👨🏿","👨🏾‍🤝‍👨🏻","👨🏾‍🤝‍👨🏼","👨🏾‍🤝‍👨🏽","👬🏾","👨🏾‍🤝‍👨🏿","👨🏿‍🤝‍👨🏻","👨🏿‍🤝‍👨🏼","👨🏿‍🤝‍👨🏽","👨🏿‍🤝‍👨🏾","👬🏿","💏","💏🏻","💏🏼","💏🏽","💏🏾","💏🏿","🧑🏻‍❤️‍💋‍🧑🏼","🧑🏻‍❤️‍💋‍🧑🏽","🧑🏻‍❤️‍💋‍🧑🏾","🧑🏻‍❤️‍💋‍🧑🏿","🧑🏼‍❤️‍💋‍🧑🏻","🧑🏼‍❤️‍💋‍🧑🏽","🧑🏼‍❤️‍💋‍🧑🏾","🧑🏼‍❤️‍💋‍🧑🏿","🧑🏽‍❤️‍💋‍🧑🏻","🧑🏽‍❤️‍💋‍🧑🏼","🧑🏽‍❤️‍💋‍🧑🏾","🧑🏽‍❤️‍💋‍🧑🏿","🧑🏾‍❤️‍💋‍🧑🏻","🧑🏾‍❤️‍💋‍🧑🏼","🧑🏾‍❤️‍💋‍🧑🏽","🧑🏾‍❤️‍💋‍🧑🏿","🧑🏿‍❤️‍💋‍🧑🏻","🧑🏿‍❤️‍💋‍🧑🏼","🧑🏿‍❤️‍💋‍🧑🏽","🧑🏿‍❤️‍💋‍🧑🏾","👩‍❤️‍💋‍👨","👩🏻‍❤️‍💋‍👨🏻","👩🏻‍❤️‍💋‍👨🏼","👩🏻‍❤️‍💋‍👨🏽","👩🏻‍❤️‍💋‍👨🏾","👩🏻‍❤️‍💋‍👨🏿","👩🏼‍❤️‍💋‍👨🏻","👩🏼‍❤️‍💋‍👨🏼","👩🏼‍❤️‍💋‍👨🏽","👩🏼‍❤️‍💋‍👨🏾","👩🏼‍❤️‍💋‍👨🏿","👩🏽‍❤️‍💋‍👨🏻","👩🏽‍❤️‍💋‍👨🏼","👩🏽‍❤️‍💋‍👨🏽","👩🏽‍❤️‍💋‍👨🏾","👩🏽‍❤️‍💋‍👨🏿","👩🏾‍❤️‍💋‍👨🏻","👩🏾‍❤️‍💋‍👨🏼","👩🏾‍❤️‍💋‍👨🏽","👩🏾‍❤️‍💋‍👨🏾","👩🏾‍❤️‍💋‍👨🏿","👩🏿‍❤️‍💋‍👨🏻","👩🏿‍❤️‍💋‍👨🏼","👩🏿‍❤️‍💋‍👨🏽","👩🏿‍❤️‍💋‍👨🏾","👩🏿‍❤️‍💋‍👨🏿","👨‍❤️‍💋‍👨","👨🏻‍❤️‍💋‍👨🏻","👨🏻‍❤️‍💋‍👨🏼","👨🏻‍❤️‍💋‍👨🏽","👨🏻‍❤️‍💋‍👨🏾","👨🏻‍❤️‍💋‍👨🏿","👨🏼‍❤️‍💋‍👨🏻","👨🏼‍❤️‍💋‍👨🏼","👨🏼‍❤️‍💋‍👨🏽","👨🏼‍❤️‍💋‍👨🏾","👨🏼‍❤️‍💋‍👨🏿","👨🏽‍❤️‍💋‍👨🏻","👨🏽‍❤️‍💋‍👨🏼","👨🏽‍❤️‍💋‍👨🏽","👨🏽‍❤️‍💋‍👨🏾","👨🏽‍❤️‍💋‍👨🏿","👨🏾‍❤️‍💋‍👨🏻","👨🏾‍❤️‍💋‍👨🏼","👨🏾‍❤️‍💋‍👨🏽","👨🏾‍❤️‍💋‍👨🏾","👨🏾‍❤️‍💋‍👨🏿","👨🏿‍❤️‍💋‍👨🏻","👨🏿‍❤️‍💋‍👨🏼","👨🏿‍❤️‍💋‍👨🏽","👨🏿‍❤️‍💋‍👨🏾","👨🏿‍❤️‍💋‍👨🏿","👩‍❤️‍💋‍👩","👩🏻‍❤️‍💋‍👩🏻","👩🏻‍❤️‍💋‍👩🏼","👩🏻‍❤️‍💋‍👩🏽","👩🏻‍❤️‍💋‍👩🏾","👩🏻‍❤️‍💋‍👩🏿","👩🏼‍❤️‍💋‍👩🏻","👩🏼‍❤️‍💋‍👩🏼","👩🏼‍❤️‍💋‍👩🏽","👩🏼‍❤️‍💋‍👩🏾","👩🏼‍❤️‍💋‍👩🏿","👩🏽‍❤️‍💋‍👩🏻","👩🏽‍❤️‍💋‍👩🏼","👩🏽‍❤️‍💋‍👩🏽","👩🏽‍❤️‍💋‍👩🏾","👩🏽‍❤️‍💋‍👩🏿","👩🏾‍❤️‍💋‍👩🏻","👩🏾‍❤️‍💋‍👩🏼","👩🏾‍❤️‍💋‍👩🏽","👩🏾‍❤️‍💋‍👩🏾","👩🏾‍❤️‍💋‍👩🏿","👩🏿‍❤️‍💋‍👩🏻","👩🏿‍❤️‍💋‍👩🏼","👩🏿‍❤️‍💋‍👩🏽","👩🏿‍❤️‍💋‍👩🏾","👩🏿‍❤️‍💋‍👩🏿","💑","💑🏻","💑🏼","💑🏽","💑🏾","💑🏿","🧑🏻‍❤️‍🧑🏼","🧑🏻‍❤️‍🧑🏽","🧑🏻‍❤️‍🧑🏾","🧑🏻‍❤️‍🧑🏿","🧑🏼‍❤️‍🧑🏻","🧑🏼‍❤️‍🧑🏽","🧑🏼‍❤️‍🧑🏾","🧑🏼‍❤️‍🧑🏿","🧑🏽‍❤️‍🧑🏻","🧑🏽‍❤️‍🧑🏼","🧑🏽‍❤️‍🧑🏾","🧑🏽‍❤️‍🧑🏿","🧑🏾‍❤️‍🧑🏻","🧑🏾‍❤️‍🧑🏼","🧑🏾‍❤️‍🧑🏽","🧑🏾‍❤️‍🧑🏿","🧑🏿‍❤️‍🧑🏻","🧑🏿‍❤️‍🧑🏼","🧑🏿‍❤️‍🧑🏽","🧑🏿‍❤️‍🧑🏾","👩‍❤️‍👨","👩🏻‍❤️‍👨🏻","👩🏻‍❤️‍👨🏼","👩🏻‍❤️‍👨🏽","👩🏻‍❤️‍👨🏾","👩🏻‍❤️‍👨🏿","👩🏼‍❤️‍👨🏻","👩🏼‍❤️‍👨🏼","👩🏼‍❤️‍👨🏽","👩🏼‍❤️‍👨🏾","👩🏼‍❤️‍👨🏿","👩🏽‍❤️‍👨🏻","👩🏽‍❤️‍👨🏼","👩🏽‍❤️‍👨🏽","👩🏽‍❤️‍👨🏾","👩🏽‍❤️‍👨🏿","👩🏾‍❤️‍👨🏻","👩🏾‍❤️‍👨🏼","👩🏾‍❤️‍👨🏽","👩🏾‍❤️‍👨🏾","👩🏾‍❤️‍👨🏿","👩🏿‍❤️‍👨🏻","👩🏿‍❤️‍👨🏼","👩🏿‍❤️‍👨🏽","👩🏿‍❤️‍👨🏾","👩🏿‍❤️‍👨🏿","👨‍❤️‍👨","👨🏻‍❤️‍👨🏻","👨🏻‍❤️‍👨🏼","👨🏻‍❤️‍👨🏽","👨🏻‍❤️‍👨🏾","👨🏻‍❤️‍👨🏿","👨🏼‍❤️‍👨🏻","👨🏼‍❤️‍👨🏼","👨🏼‍❤️‍👨🏽","👨🏼‍❤️‍👨🏾","👨🏼‍❤️‍👨🏿","👨🏽‍❤️‍👨🏻","👨🏽‍❤️‍👨🏼","👨🏽‍❤️‍👨🏽","👨🏽‍❤️‍👨🏾","👨🏽‍❤️‍👨🏿","👨🏾‍❤️‍👨🏻","👨🏾‍❤️‍👨🏼","👨🏾‍❤️‍👨🏽","👨🏾‍❤️‍👨🏾","👨🏾‍❤️‍👨🏿","👨🏿‍❤️‍👨🏻","👨🏿‍❤️‍👨🏼","👨🏿‍❤️‍👨🏽","👨🏿‍❤️‍👨🏾","👨🏿‍❤️‍👨🏿","👩‍❤️‍👩","👩🏻‍❤️‍👩🏻","👩🏻‍❤️‍👩🏼","👩🏻‍❤️‍👩🏽","👩🏻‍❤️‍👩🏾","👩🏻‍❤️‍👩🏿","👩🏼‍❤️‍👩🏻","👩🏼‍❤️‍👩🏼","👩🏼‍❤️‍👩🏽","👩🏼‍❤️‍👩🏾","👩🏼‍❤️‍👩🏿","👩🏽‍❤️‍👩🏻","👩🏽‍❤️‍👩🏼","👩🏽‍❤️‍👩🏽","👩🏽‍❤️‍👩🏾","👩🏽‍❤️‍👩🏿","👩🏾‍❤️‍👩🏻","👩🏾‍❤️‍👩🏼","👩🏾‍❤️‍👩🏽","👩🏾‍❤️‍👩🏾","👩🏾‍❤️‍👩🏿","👩🏿‍❤️‍👩🏻","👩🏿‍❤️‍👩🏼","👩🏿‍❤️‍👩🏽","👩🏿‍❤️‍👩🏾","👩🏿‍❤️‍👩🏿","👪","👨‍👩‍👦","👨‍👩‍👧","👨‍👩‍👧‍👦","👨‍👩‍👦‍👦","👨‍👩‍👧‍👧","👨‍👨‍👦","👨‍👨‍👧","👨‍👨‍👧‍👦","👨‍👨‍👦‍👦","👨‍👨‍👧‍👧","👩‍👩‍👦","👩‍👩‍👧","👩‍👩‍👧‍👦","👩‍👩‍👦‍👦","👩‍👩‍👧‍👧","👨‍👦","👨‍👦‍👦","👨‍👧","👨‍👧‍👦","👨‍👧‍👧","👩‍👦","👩‍👦‍👦","👩‍👧","👩‍👧‍👦","👩‍👧‍👧","🗣️","👤","👥","🫂","👣"],nature:["🐵","🐒","🦍","🦧","🐶","🐕","🦮","🐕‍🦺","🐩","🐺","🦊","🦝","🐱","🐈","🐈‍⬛","🦁","🐯","🐅","🐆","🐴","🐎","🦄","🦓","🦌","🦬","🐮","🐂","🐃","🐄","🐷","🐖","🐗","🐽","🐏","🐑","🐐","🐪","🐫","🦙","🦒","🐘","🦣","🦏","🦛","🐭","🐁","🐀","🐹","🐰","🐇","🐿️","🦫","🦔","🦇","🐻","🐻‍❄️","🐨","🐼","🦥","🦦","🦨","🦘","🦡","🐾","🦃","🐔","🐓","🐣","🐤","🐥","🐦","🐧","🕊️","🦅","🦆","🦢","🦉","🦤","🪶","🦩","🦚","🦜","🐸","🐊","🐢","🦎","🐍","🐲","🐉","🦕","🦖","🐳","🐋","🐬","🦭","🐟","🐠","🐡","🦈","🐙","🐚","🐌","🦋","🐛","🐜","🐝","🪲","🐞","🦗","🪳","🕷️","🕸️","🦂","🦟","🪰","🪱","🦠","💐","🌸","💮","🏵️","🌹","🥀","🌺","🌻","🌼","🌷","🌱","🪴","🌲","🌳","🌴","🌵","🌾","🌿","☘️","🍀","🍁","🍂","🍃"],food:["🍇","🍈","🍉","🍊","🍋","🍌","🍍","🥭","🍎","🍏","🍐","🍑","🍒","🍓","🫐","🥝","🍅","🫒","🥥","🥑","🍆","🥔","🥕","🌽","🌶️","🫑","🥒","🥬","🥦","🧄","🧅","🍄","🥜","🌰","🍞","🥐","🥖","🫓","🥨","🥯","🥞","🧇","🧀","🍖","🍗","🥩","🥓","🍔","🍟","🍕","🌭","🥪","🌮","🌯","🫔","🥙","🧆","🥚","🍳","🥘","🍲","🫕","🥣","🥗","🍿","🧈","🧂","🥫","🍱","🍘","🍙","🍚","🍛","🍜","🍝","🍠","🍢","🍣","🍤","🍥","🥮","🍡","🥟","🥠","🥡","🦀","🦞","🦐","🦑","🦪","🍦","🍧","🍨","🍩","🍪","🎂","🍰","🧁","🥧","🍫","🍬","🍭","🍮","🍯","🍼","🥛","☕","🫖","🍵","🍶","🍾","🍷","🍸","🍹","🍺","🍻","🥂","🥃","🥤","🧋","🧃","🧉","🧊","🥢","🍽️","🍴","🥄","🔪","🏺"],travel:["🌍","🌎","🌏","🌐","🗺️","🗾","🧭","🏔️","⛰️","🌋","🗻","🏕️","🏖️","🏜️","🏝️","🏞️","🏟️","🏛️","🏗️","🧱","🪨","🪵","🛖","🏘️","🏚️","🏠","🏡","🏢","🏣","🏤","🏥","🏦","🏨","🏩","🏪","🏫","🏬","🏭","🏯","🏰","💒","🗼","🗽","⛪","🕌","🛕","🕍","⛩️","🕋","⛲","⛺","🌁","🌃","🏙️","🌄","🌅","🌆","🌇","🌉","♨️","🎠","🎡","🎢","💈","🎪","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚝","🚞","🚋","🚌","🚍","🚎","🚐","🚑","🚒","🚓","🚔","🚕","🚖","🚗","🚘","🚙","🛻","🚚","🚛","🚜","🏎️","🏍️","🛵","🦽","🦼","🛺","🚲","🛴","🛹","🛼","🚏","🛣️","🛤️","🛢️","⛽","🚨","🚥","🚦","🛑","🚧","⚓","⛵","🛶","🚤","🛳️","⛴️","🛥️","🚢","✈️","🛩️","🛫","🛬","🪂","💺","🚁","🚟","🚠","🚡","🛰️","🚀","🛸","🛎️","🧳","⌛","⏳","⌚","⏰","⏱️","⏲️","🕰️","🕛","🕧","🕐","🕜","🕑","🕝","🕒","🕞","🕓","🕟","🕔","🕠","🕕","🕡","🕖","🕢","🕗","🕣","🕘","🕤","🕙","🕥","🕚","🕦","🌑","🌒","🌓","🌔","🌕","🌖","🌗","🌘","🌙","🌚","🌛","🌜","🌡️","☀️","🌝","🌞","🪐","⭐","🌟","🌠","🌌","☁️","⛅","⛈️","🌤️","🌥️","🌦️","🌧️","🌨️","🌩️","🌪️","🌫️","🌬️","🌀","🌈","🌂","☂️","☔","⛱️","⚡","❄️","☃️","⛄","☄️","🔥","💧","🌊"],activity:["🎃","🎄","🎆","🎇","🧨","✨","🎈","🎉","🎊","🎋","🎍","🎎","🎏","🎐","🎑","🧧","🎀","🎁","🎗️","🎟️","🎫","🎖️","🏆","🏅","🥇","🥈","🥉","⚽","⚾","🥎","🏀","🏐","🏈","🏉","🎾","🥏","🎳","🏏","🏑","🏒","🥍","🏓","🏸","🥊","🥋","🥅","⛳","⛸️","🎣","🤿","🎽","🎿","🛷","🥌","🎯","🪀","🪁","🎱","🔮","🪄","🧿","🎮","🕹️","🎰","🎲","🧩","🧸","🪅","🪆","♠️","♥️","♦️","♣️","♟️","🃏","🀄","🎴","🎭","🖼️","🎨","🧵","🪡","🧶","🪢"],object:["👓","🕶️","🥽","🥼","🦺","👔","👕","👖","🧣","🧤","🧥","🧦","👗","👘","🥻","🩱","🩲","🩳","👙","👚","👛","👜","👝","🛍️","🎒","🩴","👞","👟","🥾","🥿","👠","👡","🩰","👢","👑","👒","🎩","🎓","🧢","🪖","⛑️","📿","💄","💍","💎","🔇","🔈","🔉","🔊","📢","📣","📯","🔔","🔕","🎼","🎵","🎶","🎙️","🎚️","🎛️","🎤","🎧","📻","🎷","🪗","🎸","🎹","🎺","🎻","🪕","🥁","🪘","📱","📲","☎️","📞","📟","📠","🔋","🔌","💻","🖥️","🖨️","⌨️","🖱️","🖲️","💽","💾","💿","📀","🧮","🎥","🎞️","📽️","🎬","📺","📷","📸","📹","📼","🔍","🔎","🕯️","💡","🔦","🏮","🪔","📔","📕","📖","📗","📘","📙","📚","📓","📒","📃","📜","📄","📰","🗞️","📑","🔖","🏷️","💰","🪙","💴","💵","💶","💷","💸","💳","🧾","💹","✉️","📧","📨","📩","📤","📥","📦","📫","📪","📬","📭","📮","🗳️","✏️","✒️","🖋️","🖊️","🖌️","🖍️","📝","💼","📁","📂","🗂️","📅","📆","🗒️","🗓️","📇","📈","📉","📊","📋","📌","📍","📎","🖇️","📏","📐","✂️","🗃️","🗄️","🗑️","🔒","🔓","🔏","🔐","🔑","🗝️","🔨","🪓","⛏️","⚒️","🛠️","🗡️","⚔️","🔫","🪃","🏹","🛡️","🪚","🔧","🪛","🔩","⚙️","🗜️","⚖️","🦯","🔗","⛓️","🪝","🧰","🧲","🪜","⚗️","🧪","🧫","🧬","🔬","🔭","📡","💉","🩸","💊","🩹","🩺","🚪","🛗","🪞","🪟","🛏️","🛋️","🪑","🚽","🪠","🚿","🛁","🪤","🪒","🧴","🧷","🧹","🧺","🧻","🪣","🧼","🪥","🧽","🧯","🛒","🚬","⚰️","🪦","⚱️","🗿","🪧"],symbol:["🏧","🚮","🚰","♿","🚹","🚺","🚻","🚼","🚾","🛂","🛃","🛄","🛅","⚠️","🚸","⛔","🚫","🚳","🚭","🚯","🚱","🚷","📵","🔞","☢️","☣️","⬆️","↗️","➡️","↘️","⬇️","↙️","⬅️","↖️","↕️","↔️","↩️","↪️","⤴️","⤵️","🔃","🔄","🔙","🔚","🔛","🔜","🔝","🛐","⚛️","🕉️","✡️","☸️","☯️","✝️","☦️","☪️","☮️","🕎","🔯","♈","♉","♊","♋","♌","♍","♎","♏","♐","♑","♒","♓","⛎","🔀","🔁","🔂","▶️","⏩","⏭️","⏯️","◀️","⏪","⏮️","🔼","⏫","🔽","⏬","⏸️","⏹️","⏺️","⏏️","🎦","🔅","🔆","📶","📳","📴","♀️","♂️","⚧️","✖️","➕","➖","➗","♾️","‼️","⁉️","❓","❔","❕","❗","〰️","💱","💲","⚕️","♻️","⚜️","🔱","📛","🔰","⭕","✅","☑️","✔️","❌","❎","➰","➿","〽️","✳️","✴️","❇️","©️","®️","™️","#️⃣","*️⃣","0️⃣","1️⃣","2️⃣","3️⃣","4️⃣","5️⃣","6️⃣","7️⃣","8️⃣","9️⃣","🔟","🔠","🔡","🔢","🔣","🔤","🅰️","🆎","🅱️","🆑","🆒","🆓","ℹ️","🆔","Ⓜ️","🆕","🆖","🅾️","🆗","🅿️","🆘","🆙","🆚","🈁","🈂️","🈷️","🈶","🈯","🉐","🈹","🈚","🈲","🉑","🈸","🈴","🈳","㊗️","㊙️","🈺","🈵","🔴","🟠","🟡","🟢","🔵","🟣","🟤","⚫","⚪","🟥","🟧","🟨","🟩","🟦","🟪","🟫","⬛","⬜","◼️","◻️","◾","◽","▪️","▫️","🔶","🔷","🔸","🔹","🔺","🔻","💠","🔘","🔳","🔲"],flag:["🏁","🚩","🎌","🏴","🏳️","🏳️‍🌈","🏳️‍⚧️","🏴‍☠️","🇦🇨","🇦🇩","🇦🇪","🇦🇫","🇦🇬","🇦🇮","🇦🇱","🇦🇲","🇦🇴","🇦🇶","🇦🇷","🇦🇸","🇦🇹","🇦🇺","🇦🇼","🇦🇽","🇦🇿","🇧🇦","🇧🇧","🇧🇩","🇧🇪","🇧🇫","🇧🇬","🇧🇭","🇧🇮","🇧🇯","🇧🇱","🇧🇲","🇧🇳","🇧🇴","🇧🇶","🇧🇷","🇧🇸","🇧🇹","🇧🇻","🇧🇼","🇧🇾","🇧🇿","🇨🇦","🇨🇨","🇨🇩","🇨🇫","🇨🇬","🇨🇭","🇨🇮","🇨🇰","🇨🇱","🇨🇲","🇨🇳","🇨🇴","🇨🇵","🇨🇷","🇨🇺","🇨🇻","🇨🇼","🇨🇽","🇨🇾","🇨🇿","🇩🇪","🇩🇬","🇩🇯","🇩🇰","🇩🇲","🇩🇴","🇩🇿","🇪🇦","🇪🇨","🇪🇪","🇪🇬","🇪🇭","🇪🇷","🇪🇸","🇪🇹","🇪🇺","🇫🇮","🇫🇯","🇫🇰","🇫🇲","🇫🇴","🇫🇷","🇬🇦","🇬🇧","🇬🇩","🇬🇪","🇬🇫","🇬🇬","🇬🇭","🇬🇮","🇬🇱","🇬🇲","🇬🇳","🇬🇵","🇬🇶","🇬🇷","🇬🇸","🇬🇹","🇬🇺","🇬🇼","🇬🇾","🇭🇰","🇭🇲","🇭🇳","🇭🇷","🇭🇹","🇭🇺","🇮🇨","🇮🇩","🇮🇪","🇮🇱","🇮🇲","🇮🇳","🇮🇴","🇮🇶","🇮🇷","🇮🇸","🇮🇹","🇯🇪","🇯🇲","🇯🇴","🇯🇵","🇰🇪","🇰🇬","🇰🇭","🇰🇮","🇰🇲","🇰🇳","🇰🇵","🇰🇷","🇰🇼","🇰🇾","🇰🇿","🇱🇦","🇱🇧","🇱🇨","🇱🇮","🇱🇰","🇱🇷","🇱🇸","🇱🇹","🇱🇺","🇱🇻","🇱🇾","🇲🇦","🇲🇨","🇲🇩","🇲🇪","🇲🇫","🇲🇬","🇲🇭","🇲🇰","🇲🇱","🇲🇲","🇲🇳","🇲🇴","🇲🇵","🇲🇶","🇲🇷","🇲🇸","🇲🇹","🇲🇺","🇲🇻","🇲🇼","🇲🇽","🇲🇾","🇲🇿","🇳🇦","🇳🇨","🇳🇪","🇳🇫","🇳🇬","🇳🇮","🇳🇱","🇳🇴","🇳🇵","🇳🇷","🇳🇺","🇳🇿","🇴🇲","🇵🇦","🇵🇪","🇵🇫","🇵🇬","🇵🇭","🇵🇰","🇵🇱","🇵🇲","🇵🇳","🇵🇷","🇵🇸","🇵🇹","🇵🇼","🇵🇾","🇶🇦","🇷🇪","🇷🇴","🇷🇸","🇷🇺","🇷🇼","🇸🇦","🇸🇧","🇸🇨","🇸🇩","🇸🇪","🇸🇬","🇸🇭","🇸🇮","🇸🇯","🇸🇰","🇸🇱","🇸🇲","🇸🇳","🇸🇴","🇸🇷","🇸🇸","🇸🇹","🇸🇻","🇸🇽","🇸🇾","🇸🇿","🇹🇦","🇹🇨","🇹🇩","🇹🇫","🇹🇬","🇹🇭","🇹🇯","🇹🇰","🇹🇱","🇹🇲","🇹🇳","🇹🇴","🇹🇷","🇹🇹","🇹🇻","🇹🇼","🇹🇿","🇺🇦","🇺🇬","🇺🇲","🇺🇳","🇺🇸","🇺🇾","🇺🇿","🇻🇦","🇻🇨","🇻🇪","🇻🇬","🇻🇮","🇻🇳","🇻🇺","🇼🇫","🇼🇸","🇽🇰","🇾🇪","🇾🇹","🇿🇦","🇿🇲","🇿🇼"]},cE={informational:[100,101,102,103],success:[200,201,202,203,204,205,206,207,208,226],redirection:[300,301,302,303,304,305,306,307,308],clientError:[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,421,422,423,424,425,426,428,429,431,451],serverError:[500,501,502,503,504,505,506,507,508,510,511]},dE={emoji:lE,http_status_code:cE},pE=dE,mE=[{alpha2:"AD",alpha3:"AND",numeric:"020"},{alpha2:"AE",alpha3:"ARE",numeric:"784"},{alpha2:"AF",alpha3:"AFG",numeric:"004"},{alpha2:"AG",alpha3:"ATG",numeric:"028"},{alpha2:"AI",alpha3:"AIA",numeric:"660"},{alpha2:"AL",alpha3:"ALB",numeric:"008"},{alpha2:"AM",alpha3:"ARM",numeric:"051"},{alpha2:"AO",alpha3:"AGO",numeric:"024"},{alpha2:"AQ",alpha3:"ATA",numeric:"010"},{alpha2:"AR",alpha3:"ARG",numeric:"032"},{alpha2:"AS",alpha3:"ASM",numeric:"016"},{alpha2:"AT",alpha3:"AUT",numeric:"040"},{alpha2:"AU",alpha3:"AUS",numeric:"036"},{alpha2:"AW",alpha3:"ABW",numeric:"533"},{alpha2:"AX",alpha3:"ALA",numeric:"248"},{alpha2:"AZ",alpha3:"AZE",numeric:"031"},{alpha2:"BA",alpha3:"BIH",numeric:"070"},{alpha2:"BB",alpha3:"BRB",numeric:"052"},{alpha2:"BD",alpha3:"BGD",numeric:"050"},{alpha2:"BE",alpha3:"BEL",numeric:"056"},{alpha2:"BF",alpha3:"BFA",numeric:"854"},{alpha2:"BG",alpha3:"BGR",numeric:"100"},{alpha2:"BH",alpha3:"BHR",numeric:"048"},{alpha2:"BI",alpha3:"BDI",numeric:"108"},{alpha2:"BJ",alpha3:"BEN",numeric:"204"},{alpha2:"BL",alpha3:"BLM",numeric:"652"},{alpha2:"BM",alpha3:"BMU",numeric:"060"},{alpha2:"BN",alpha3:"BRN",numeric:"096"},{alpha2:"BO",alpha3:"BOL",numeric:"068"},{alpha2:"BQ",alpha3:"BES",numeric:"535"},{alpha2:"BR",alpha3:"BRA",numeric:"076"},{alpha2:"BS",alpha3:"BHS",numeric:"044"},{alpha2:"BT",alpha3:"BTN",numeric:"064"},{alpha2:"BV",alpha3:"BVT",numeric:"074"},{alpha2:"BW",alpha3:"BWA",numeric:"072"},{alpha2:"BY",alpha3:"BLR",numeric:"112"},{alpha2:"BZ",alpha3:"BLZ",numeric:"084"},{alpha2:"CA",alpha3:"CAN",numeric:"124"},{alpha2:"CC",alpha3:"CCK",numeric:"166"},{alpha2:"CD",alpha3:"COD",numeric:"180"},{alpha2:"CF",alpha3:"CAF",numeric:"140"},{alpha2:"CG",alpha3:"COG",numeric:"178"},{alpha2:"CH",alpha3:"CHE",numeric:"756"},{alpha2:"CI",alpha3:"CIV",numeric:"384"},{alpha2:"CK",alpha3:"COK",numeric:"184"},{alpha2:"CL",alpha3:"CHL",numeric:"152"},{alpha2:"CM",alpha3:"CMR",numeric:"120"},{alpha2:"CN",alpha3:"CHN",numeric:"156"},{alpha2:"CO",alpha3:"COL",numeric:"170"},{alpha2:"CR",alpha3:"CRI",numeric:"188"},{alpha2:"CU",alpha3:"CUB",numeric:"192"},{alpha2:"CV",alpha3:"CPV",numeric:"132"},{alpha2:"CW",alpha3:"CUW",numeric:"531"},{alpha2:"CX",alpha3:"CXR",numeric:"162"},{alpha2:"CY",alpha3:"CYP",numeric:"196"},{alpha2:"CZ",alpha3:"CZE",numeric:"203"},{alpha2:"DE",alpha3:"DEU",numeric:"276"},{alpha2:"DJ",alpha3:"DJI",numeric:"262"},{alpha2:"DK",alpha3:"DNK",numeric:"208"},{alpha2:"DM",alpha3:"DMA",numeric:"212"},{alpha2:"DO",alpha3:"DOM",numeric:"214"},{alpha2:"DZ",alpha3:"DZA",numeric:"012"},{alpha2:"EC",alpha3:"ECU",numeric:"218"},{alpha2:"EE",alpha3:"EST",numeric:"233"},{alpha2:"EG",alpha3:"EGY",numeric:"818"},{alpha2:"EH",alpha3:"ESH",numeric:"732"},{alpha2:"ER",alpha3:"ERI",numeric:"232"},{alpha2:"ES",alpha3:"ESP",numeric:"724"},{alpha2:"ET",alpha3:"ETH",numeric:"231"},{alpha2:"FI",alpha3:"FIN",numeric:"246"},{alpha2:"FJ",alpha3:"FJI",numeric:"242"},{alpha2:"FK",alpha3:"FLK",numeric:"238"},{alpha2:"FM",alpha3:"FSM",numeric:"583"},{alpha2:"FO",alpha3:"FRO",numeric:"234"},{alpha2:"FR",alpha3:"FRA",numeric:"250"},{alpha2:"GA",alpha3:"GAB",numeric:"266"},{alpha2:"GB",alpha3:"GBR",numeric:"826"},{alpha2:"GD",alpha3:"GRD",numeric:"308"},{alpha2:"GE",alpha3:"GEO",numeric:"268"},{alpha2:"GF",alpha3:"GUF",numeric:"254"},{alpha2:"GG",alpha3:"GGY",numeric:"831"},{alpha2:"GH",alpha3:"GHA",numeric:"288"},{alpha2:"GI",alpha3:"GIB",numeric:"292"},{alpha2:"GL",alpha3:"GRL",numeric:"304"},{alpha2:"GM",alpha3:"GMB",numeric:"270"},{alpha2:"GN",alpha3:"GIN",numeric:"324"},{alpha2:"GP",alpha3:"GLP",numeric:"312"},{alpha2:"GQ",alpha3:"GNQ",numeric:"226"},{alpha2:"GR",alpha3:"GRC",numeric:"300"},{alpha2:"GS",alpha3:"SGS",numeric:"239"},{alpha2:"GT",alpha3:"GTM",numeric:"320"},{alpha2:"GU",alpha3:"GUM",numeric:"316"},{alpha2:"GW",alpha3:"GNB",numeric:"624"},{alpha2:"GY",alpha3:"GUY",numeric:"328"},{alpha2:"HK",alpha3:"HKG",numeric:"344"},{alpha2:"HM",alpha3:"HMD",numeric:"334"},{alpha2:"HN",alpha3:"HND",numeric:"340"},{alpha2:"HR",alpha3:"HRV",numeric:"191"},{alpha2:"HT",alpha3:"HTI",numeric:"332"},{alpha2:"HU",alpha3:"HUN",numeric:"348"},{alpha2:"ID",alpha3:"IDN",numeric:"360"},{alpha2:"IE",alpha3:"IRL",numeric:"372"},{alpha2:"IL",alpha3:"ISR",numeric:"376"},{alpha2:"IM",alpha3:"IMN",numeric:"833"},{alpha2:"IN",alpha3:"IND",numeric:"356"},{alpha2:"IO",alpha3:"IOT",numeric:"086"},{alpha2:"IQ",alpha3:"IRQ",numeric:"368"},{alpha2:"IR",alpha3:"IRN",numeric:"364"},{alpha2:"IS",alpha3:"ISL",numeric:"352"},{alpha2:"IT",alpha3:"ITA",numeric:"380"},{alpha2:"JE",alpha3:"JEY",numeric:"832"},{alpha2:"JM",alpha3:"JAM",numeric:"388"},{alpha2:"JO",alpha3:"JOR",numeric:"400"},{alpha2:"JP",alpha3:"JPN",numeric:"392"},{alpha2:"KE",alpha3:"KEN",numeric:"404"},{alpha2:"KG",alpha3:"KGZ",numeric:"417"},{alpha2:"KH",alpha3:"KHM",numeric:"116"},{alpha2:"KI",alpha3:"KIR",numeric:"296"},{alpha2:"KM",alpha3:"COM",numeric:"174"},{alpha2:"KN",alpha3:"KNA",numeric:"659"},{alpha2:"KP",alpha3:"PRK",numeric:"408"},{alpha2:"KR",alpha3:"KOR",numeric:"410"},{alpha2:"KW",alpha3:"KWT",numeric:"414"},{alpha2:"KY",alpha3:"CYM",numeric:"136"},{alpha2:"KZ",alpha3:"KAZ",numeric:"398"},{alpha2:"LA",alpha3:"LAO",numeric:"418"},{alpha2:"LB",alpha3:"LBN",numeric:"422"},{alpha2:"LC",alpha3:"LCA",numeric:"662"},{alpha2:"LI",alpha3:"LIE",numeric:"438"},{alpha2:"LK",alpha3:"LKA",numeric:"144"},{alpha2:"LR",alpha3:"LBR",numeric:"430"},{alpha2:"LS",alpha3:"LSO",numeric:"426"},{alpha2:"LT",alpha3:"LTU",numeric:"440"},{alpha2:"LU",alpha3:"LUX",numeric:"442"},{alpha2:"LV",alpha3:"LVA",numeric:"428"},{alpha2:"LY",alpha3:"LBY",numeric:"434"},{alpha2:"MA",alpha3:"MAR",numeric:"504"},{alpha2:"MC",alpha3:"MCO",numeric:"492"},{alpha2:"MD",alpha3:"MDA",numeric:"498"},{alpha2:"ME",alpha3:"MNE",numeric:"499"},{alpha2:"MF",alpha3:"MAF",numeric:"663"},{alpha2:"MG",alpha3:"MDG",numeric:"450"},{alpha2:"MH",alpha3:"MHL",numeric:"584"},{alpha2:"MK",alpha3:"MKD",numeric:"807"},{alpha2:"ML",alpha3:"MLI",numeric:"466"},{alpha2:"MM",alpha3:"MMR",numeric:"104"},{alpha2:"MN",alpha3:"MNG",numeric:"496"},{alpha2:"MO",alpha3:"MAC",numeric:"446"},{alpha2:"MP",alpha3:"MNP",numeric:"580"},{alpha2:"MQ",alpha3:"MTQ",numeric:"474"},{alpha2:"MR",alpha3:"MRT",numeric:"478"},{alpha2:"MS",alpha3:"MSR",numeric:"500"},{alpha2:"MT",alpha3:"MLT",numeric:"470"},{alpha2:"MU",alpha3:"MUS",numeric:"480"},{alpha2:"MV",alpha3:"MDV",numeric:"462"},{alpha2:"MW",alpha3:"MWI",numeric:"454"},{alpha2:"MX",alpha3:"MEX",numeric:"484"},{alpha2:"MY",alpha3:"MYS",numeric:"458"},{alpha2:"MZ",alpha3:"MOZ",numeric:"508"},{alpha2:"NA",alpha3:"NAM",numeric:"516"},{alpha2:"NC",alpha3:"NCL",numeric:"540"},{alpha2:"NE",alpha3:"NER",numeric:"562"},{alpha2:"NF",alpha3:"NFK",numeric:"574"},{alpha2:"NG",alpha3:"NGA",numeric:"566"},{alpha2:"NI",alpha3:"NIC",numeric:"558"},{alpha2:"NL",alpha3:"NLD",numeric:"528"},{alpha2:"NO",alpha3:"NOR",numeric:"578"},{alpha2:"NP",alpha3:"NPL",numeric:"524"},{alpha2:"NR",alpha3:"NRU",numeric:"520"},{alpha2:"NU",alpha3:"NIU",numeric:"570"},{alpha2:"NZ",alpha3:"NZL",numeric:"554"},{alpha2:"OM",alpha3:"OMN",numeric:"512"},{alpha2:"PA",alpha3:"PAN",numeric:"591"},{alpha2:"PE",alpha3:"PER",numeric:"604"},{alpha2:"PF",alpha3:"PYF",numeric:"258"},{alpha2:"PG",alpha3:"PNG",numeric:"598"},{alpha2:"PH",alpha3:"PHL",numeric:"608"},{alpha2:"PK",alpha3:"PAK",numeric:"586"},{alpha2:"PL",alpha3:"POL",numeric:"616"},{alpha2:"PM",alpha3:"SPM",numeric:"666"},{alpha2:"PN",alpha3:"PCN",numeric:"612"},{alpha2:"PR",alpha3:"PRI",numeric:"630"},{alpha2:"PS",alpha3:"PSE",numeric:"275"},{alpha2:"PT",alpha3:"PRT",numeric:"620"},{alpha2:"PW",alpha3:"PLW",numeric:"585"},{alpha2:"PY",alpha3:"PRY",numeric:"600"},{alpha2:"QA",alpha3:"QAT",numeric:"634"},{alpha2:"RE",alpha3:"REU",numeric:"638"},{alpha2:"RO",alpha3:"ROU",numeric:"642"},{alpha2:"RS",alpha3:"SRB",numeric:"688"},{alpha2:"RU",alpha3:"RUS",numeric:"643"},{alpha2:"RW",alpha3:"RWA",numeric:"646"},{alpha2:"SA",alpha3:"SAU",numeric:"682"},{alpha2:"SB",alpha3:"SLB",numeric:"090"},{alpha2:"SC",alpha3:"SYC",numeric:"690"},{alpha2:"SD",alpha3:"SDN",numeric:"729"},{alpha2:"SE",alpha3:"SWE",numeric:"752"},{alpha2:"SG",alpha3:"SGP",numeric:"702"},{alpha2:"SH",alpha3:"SHN",numeric:"654"},{alpha2:"SI",alpha3:"SVN",numeric:"705"},{alpha2:"SJ",alpha3:"SJM",numeric:"744"},{alpha2:"SK",alpha3:"SVK",numeric:"703"},{alpha2:"SL",alpha3:"SLE",numeric:"694"},{alpha2:"SM",alpha3:"SMR",numeric:"674"},{alpha2:"SN",alpha3:"SEN",numeric:"686"},{alpha2:"SO",alpha3:"SOM",numeric:"706"},{alpha2:"SR",alpha3:"SUR",numeric:"740"},{alpha2:"SS",alpha3:"SSD",numeric:"728"},{alpha2:"ST",alpha3:"STP",numeric:"678"},{alpha2:"SV",alpha3:"SLV",numeric:"222"},{alpha2:"SX",alpha3:"SXM",numeric:"534"},{alpha2:"SY",alpha3:"SYR",numeric:"760"},{alpha2:"SZ",alpha3:"SWZ",numeric:"748"},{alpha2:"TC",alpha3:"TCA",numeric:"796"},{alpha2:"TD",alpha3:"TCD",numeric:"148"},{alpha2:"TF",alpha3:"ATF",numeric:"260"},{alpha2:"TG",alpha3:"TGO",numeric:"768"},{alpha2:"TH",alpha3:"THA",numeric:"764"},{alpha2:"TJ",alpha3:"TJK",numeric:"762"},{alpha2:"TK",alpha3:"TKL",numeric:"772"},{alpha2:"TL",alpha3:"TLS",numeric:"626"},{alpha2:"TM",alpha3:"TKM",numeric:"795"},{alpha2:"TN",alpha3:"TUN",numeric:"788"},{alpha2:"TO",alpha3:"TON",numeric:"776"},{alpha2:"TR",alpha3:"TUR",numeric:"792"},{alpha2:"TT",alpha3:"TTO",numeric:"780"},{alpha2:"TV",alpha3:"TUV",numeric:"798"},{alpha2:"TW",alpha3:"TWN",numeric:"158"},{alpha2:"TZ",alpha3:"TZA",numeric:"834"},{alpha2:"UA",alpha3:"UKR",numeric:"804"},{alpha2:"UG",alpha3:"UGA",numeric:"800"},{alpha2:"UM",alpha3:"UMI",numeric:"581"},{alpha2:"US",alpha3:"USA",numeric:"840"},{alpha2:"UY",alpha3:"URY",numeric:"858"},{alpha2:"UZ",alpha3:"UZB",numeric:"860"},{alpha2:"VA",alpha3:"VAT",numeric:"336"},{alpha2:"VC",alpha3:"VCT",numeric:"670"},{alpha2:"VE",alpha3:"VEN",numeric:"862"},{alpha2:"VG",alpha3:"VGB",numeric:"092"},{alpha2:"VI",alpha3:"VIR",numeric:"850"},{alpha2:"VN",alpha3:"VNM",numeric:"704"},{alpha2:"VU",alpha3:"VUT",numeric:"548"},{alpha2:"WF",alpha3:"WLF",numeric:"876"},{alpha2:"WS",alpha3:"WSM",numeric:"882"},{alpha2:"YE",alpha3:"YEM",numeric:"887"},{alpha2:"YT",alpha3:"MYT",numeric:"175"},{alpha2:"ZA",alpha3:"ZAF",numeric:"710"},{alpha2:"ZM",alpha3:"ZMB",numeric:"894"},{alpha2:"ZW",alpha3:"ZWE",numeric:"716"}],FE=["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Fort_Nelson","America/Fortaleza","America/Glace_Bay","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Inuvik","America/Iqaluit","America/Jamaica","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montserrat","America/Nassau","America/New_York","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Nuuk","America/Ojinaga","America/Panama","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Chita","Asia/Choibalsan","Asia/Colombo","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kathmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qostanay","Asia/Qyzylorda","Asia/Riyadh","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ulaanbaatar","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faroe","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/Perth","Australia/Sydney","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kirov","Europe/Kyiv","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Ulyanovsk","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zurich","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Kanton","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Wake","Pacific/Wallis"],hE={country_code:mE,time_zone:FE},fE=hE,yE={title:"Base",code:"base"},gE=yE,bE=["/Applications","/bin","/boot","/boot/defaults","/dev","/etc","/etc/defaults","/etc/mail","/etc/namedb","/etc/periodic","/etc/ppp","/home","/home/user","/home/user/dir","/lib","/Library","/lost+found","/media","/mnt","/net","/Network","/opt","/opt/bin","/opt/include","/opt/lib","/opt/sbin","/opt/share","/private","/private/tmp","/private/var","/proc","/rescue","/root","/sbin","/selinux","/srv","/sys","/System","/tmp","/Users","/usr","/usr/X11R6","/usr/bin","/usr/include","/usr/lib","/usr/libdata","/usr/libexec","/usr/local/bin","/usr/local/src","/usr/obj","/usr/ports","/usr/sbin","/usr/share","/usr/src","/var","/var/log","/var/mail","/var/spool","/var/tmp","/var/yp"],vE={"application/epub+zip":{extensions:["epub"]},"application/gzip":{extensions:["gz"]},"application/java-archive":{extensions:["jar","war","ear"]},"application/json":{extensions:["json","map"]},"application/ld+json":{extensions:["jsonld"]},"application/msword":{extensions:["doc","dot"]},"application/octet-stream":{extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/ogg":{extensions:["ogx"]},"application/pdf":{extensions:["pdf"]},"application/rtf":{extensions:["rtf"]},"application/vnd.amazon.ebook":{extensions:["azw"]},"application/vnd.apple.installer+xml":{extensions:["mpkg"]},"application/vnd.mozilla.xul+xml":{extensions:["xul"]},"application/vnd.ms-excel":{extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-fontobject":{extensions:["eot"]},"application/vnd.ms-powerpoint":{extensions:["ppt","pps","pot"]},"application/vnd.oasis.opendocument.presentation":{extensions:["odp"]},"application/vnd.oasis.opendocument.spreadsheet":{extensions:["ods"]},"application/vnd.oasis.opendocument.text":{extensions:["odt"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{extensions:["docx"]},"application/vnd.rar":{extensions:["rar"]},"application/vnd.visio":{extensions:["vsd","vst","vss","vsw"]},"application/x-7z-compressed":{extensions:["7z"]},"application/x-abiword":{extensions:["abw"]},"application/x-bzip":{extensions:["bz"]},"application/x-bzip2":{extensions:["bz2","boz"]},"application/x-csh":{extensions:["csh"]},"application/x-freearc":{extensions:["arc"]},"application/x-httpd-php":{extensions:["php"]},"application/x-sh":{extensions:["sh"]},"application/x-tar":{extensions:["tar"]},"application/xhtml+xml":{extensions:["xhtml","xht"]},"application/xml":{extensions:["xml","xsl","xsd","rng"]},"application/zip":{extensions:["zip"]},"audio/3gpp":{extensions:["3gpp"]},"audio/3gpp2":{extensions:["3g2"]},"audio/aac":{extensions:["aac"]},"audio/midi":{extensions:["mid","midi","kar","rmi"]},"audio/mpeg":{extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/ogg":{extensions:["oga","ogg","spx","opus"]},"audio/opus":{extensions:["opus"]},"audio/wav":{extensions:["wav"]},"audio/webm":{extensions:["weba"]},"font/otf":{extensions:["otf"]},"font/ttf":{extensions:["ttf"]},"font/woff":{extensions:["woff"]},"font/woff2":{extensions:["woff2"]},"image/avif":{extensions:["avif"]},"image/bmp":{extensions:["bmp"]},"image/gif":{extensions:["gif"]},"image/jpeg":{extensions:["jpeg","jpg","jpe"]},"image/png":{extensions:["png"]},"image/svg+xml":{extensions:["svg","svgz"]},"image/tiff":{extensions:["tif","tiff"]},"image/vnd.microsoft.icon":{extensions:["ico"]},"image/webp":{extensions:["webp"]},"text/calendar":{extensions:["ics","ifb"]},"text/css":{extensions:["css"]},"text/csv":{extensions:["csv"]},"text/html":{extensions:["html","htm","shtml"]},"text/javascript":{extensions:["js","mjs"]},"text/plain":{extensions:["txt","text","conf","def","list","log","in","ini"]},"video/3gpp":{extensions:["3gp","3gpp"]},"video/3gpp2":{extensions:["3g2"]},"video/mp2t":{extensions:["ts"]},"video/mp4":{extensions:["mp4","mp4v","mpg4"]},"video/mpeg":{extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/ogg":{extensions:["ogv"]},"video/webm":{extensions:["webm"]},"video/x-msvideo":{extensions:["avi"]}},DE={directoryPaths:bE,mimeTypes:vE},EE=DE,kE={color:eE,database:iE,hacker:sE,internet:pE,location:fE,metadata:gE,system:EE},AE=kE,wE=["beige","grønn","grå","gul","hvit","indigo","karmin","blå","lilla","limegrønn","magenta","oransje","rosa","rød","smaragdgrønn","svart","turkis"],CE={human:wE},SE=CE,TE=["Barn","Bøker","Dagligvarer","Datamaskiner","Elektronikk","Filmer","Hage og utemiljø","Helse","Hjem","Klær","Leker","Musikk","Sko","Skjønnhet","Spill","Smykker","Sport","Verktøy"],BE={department:TE},NE=BE,RE=["{{person.last_name}} {{company.suffix}}","{{person.last_name}}-{{person.last_name}}","{{person.last_name}}, {{person.last_name}} og {{person.last_name}}"],LE=["Gruppen","AS","ASA","BA","RFH","og Sønner"],ME={name_pattern:RE,suffix:LE},IE=ME,xE=["no","com","net","org"],OE={domain_suffix:xE},_E=OE,PE=["#","##"],GE=["Fet","Gjes","Høy","Inn","Fager","Lille","Lo","Mal","Nord","Nær","Sand","Sme","Stav","Stor","Tand","Ut","Vest"],HE=["{{location.city_name}}{{location.city_suffix}}"],jE=["berg","borg","by","bø","dal","eid","fjell","fjord","foss","grunn","hamn","havn","helle","mark","nes","odden","sand","sjøen","stad","strand","strøm","sund","vik","vær","våg","ø","øy","ås"],$E=["sgate","svei","s Gate","s Vei","gata","veien"],WE=["Norge"],VE=["####","0###"],UE=["Leil. ###","Oppgang A","Oppgang B"],zE=[""],qE={normal:"{{location.street}} {{location.buildingNumber}}",full:"{{location.street}} {{location.buildingNumber}} {{location.secondaryAddress}}"},KE=["Eike","Bjørke","Gran","Vass","Furu","Litj","Lille","Høy","Fosse","Elve","Ku","Konvall","Soldugg","Hestemyr","Granitt","Hegge","Rogne","Fiol","Sol","Ting","Malm","Klokker","Preste","Dam","Geiterygg","Bekke","Berg","Kirke","Kors","Bru","Blåveis","Torg","Sjø"],JE=["{{location.street_name}}{{location.street_suffix}}","{{location.street_prefix}} {{location.street_name}}{{location.street_suffix}}","{{person.first_name}}{{location.common_street_suffix}}","{{person.last_name}}{{location.common_street_suffix}}"],YE=["Øvre","Nedre","Søndre","Gamle","Østre","Vestre"],QE=["alléen","bakken","berget","bråten","eggen","engen","ekra","faret","flata","gata","gjerdet","grenda","gropa","hagen","haugen","havna","holtet","høgda","jordet","kollen","kroken","lia","lunden","lyngen","løkka","marka","moen","myra","plassen","ringen","roa","røa","skogen","skrenten","spranget","stien","stranda","stubben","stykket","svingen","tjernet","toppen","tunet","vollen","vika","åsen"],XE={building_number:PE,city_name:GE,city_pattern:HE,city_suffix:jE,common_street_suffix:$E,default_country:WE,postcode:VE,secondary_address:UE,state:zE,street_address:qE,street_name:KE,street_pattern:JE,street_prefix:YE,street_suffix:QE},ZE=XE,ek={title:"Norwegian (Norway)",code:"nb_NO",country:"NO",language:"nb",endonym:"Norsk bokmål (Norge)",dir:"ltr",script:"Latn"},rk=ek,tk=["Emma","Sara","Thea","Ida","Julie","Nora","Emilie","Ingrid","Hanna","Maria","Sofie","Anna","Malin","Amalie","Vilde","Frida","Andrea","Tuva","Victoria","Mia","Karoline","Mathilde","Martine","Linnea","Marte","Hedda","Marie","Helene","Silje","Leah","Maja","Elise","Oda","Kristine","Aurora","Kaja","Camilla","Mari","Maren","Mina","Selma","Jenny","Celine","Eline","Sunniva","Natalie","Tiril","Synne","Sandra","Madeleine"],lm=["Dr.","Prof."],ak=["Emma","Sara","Thea","Ida","Julie","Nora","Emilie","Ingrid","Hanna","Maria","Sofie","Anna","Malin","Amalie","Vilde","Frida","Andrea","Tuva","Victoria","Mia","Karoline","Mathilde","Martine","Linnea","Marte","Hedda","Marie","Helene","Silje","Leah","Maja","Elise","Oda","Kristine","Aurora","Kaja","Camilla","Mari","Maren","Mina","Selma","Jenny","Celine","Eline","Sunniva","Natalie","Tiril","Synne","Sandra","Madeleine","Markus","Mathias","Kristian","Jonas","Andreas","Alexander","Martin","Sander","Daniel","Magnus","Henrik","Tobias","Kristoffer","Emil","Adrian","Sebastian","Marius","Elias","Fredrik","Thomas","Sondre","Benjamin","Jakob","Oliver","Lucas","Oskar","Nikolai","Filip","Mats","William","Erik","Simen","Ole","Eirik","Isak","Kasper","Noah","Lars","Joakim","Johannes","Håkon","Sindre","Jørgen","Herman","Anders","Jonathan","Even","Theodor","Mikkel","Aksel"],nk=["Johansen","Hansen","Andersen","Kristiansen","Larsen","Olsen","Solberg","Andresen","Pedersen","Nilsen","Berg","Halvorsen","Karlsen","Svendsen","Jensen","Haugen","Martinsen","Eriksen","Sørensen","Johnsen","Myhrer","Johannessen","Nielsen","Hagen","Pettersen","Bakke","Skuterud","Løken","Gundersen","Strand","Jørgensen","Kvarme","Røed","Sæther","Stensrud","Moe","Kristoffersen","Jakobsen","Holm","Aas","Lie","Moen","Andreassen","Vedvik","Nguyen","Jacobsen","Torgersen","Ruud","Krogh","Christiansen","Bjerke","Aalerud","Borge","Sørlie","Berge","Østli","Ødegård","Torp","Henriksen","Haukelidsæter","Fjeld","Danielsen","Aasen","Fredriksen","Dahl","Berntsen","Arnesen","Wold","Thoresen","Solheim","Skoglund","Bakken","Amundsen","Solli","Smogeli","Kristensen","Glosli","Fossum","Evensen","Eide","Carlsen","Østby","Vegge","Tangen","Smedsrud","Olstad","Lunde","Kleven","Huseby","Bjørnstad","Ryan","Rasmussen","Nygård","Nordskaug","Nordby","Mathisen","Hopland","Gran","Finstad","Edvardsen"],ik=[{value:"{{person.last_name}}",weight:8},{value:"{{person.last_name}} {{person.last_name}}",weight:2}],ok=["Markus","Mathias","Kristian","Jonas","Andreas","Alexander","Martin","Sander","Daniel","Magnus","Henrik","Tobias","Kristoffer","Emil","Adrian","Sebastian","Marius","Elias","Fredrik","Thomas","Sondre","Benjamin","Jakob","Oliver","Lucas","Oskar","Nikolai","Filip","Mats","William","Erik","Simen","Ole","Eirik","Isak","Kasper","Noah","Lars","Joakim","Johannes","Håkon","Sindre","Jørgen","Herman","Anders","Jonathan","Even","Theodor","Mikkel","Aksel"],cm=["Dr.","Prof."],uk=[{value:"{{person.prefix}} {{person.firstName}} {{person.lastName}}",weight:1},{value:"{{person.firstName}} {{person.lastName}} {{person.suffix}}",weight:1},{value:"{{person.firstName}} {{person.lastName}}",weight:9}],sk=Xp(lm,cm),lk=["Jr.","Sr.","I","II","III","IV","V"],ck={female_first_name:tk,female_prefix:lm,first_name:ak,last_name:nk,last_name_pattern:ik,male_first_name:ok,male_prefix:cm,name:uk,prefix:sk,suffix:lk},dk=ck,pk=["########","## ## ## ##","### ## ###","+47 ## ## ## ##"],mk={formats:pk},Fk=mk,hk=Object.freeze([{symbol:"H",name:"Hydrogen",atomicNumber:1},{symbol:"He",name:"Helium",atomicNumber:2},{symbol:"Li",name:"Litium",atomicNumber:3},{symbol:"Be",name:"Beryllium",atomicNumber:4},{symbol:"B",name:"Bor",atomicNumber:5},{symbol:"C",name:"Karbon",atomicNumber:6},{symbol:"N",name:"Nitrogen",atomicNumber:7},{symbol:"O",name:"Oksygen",atomicNumber:8},{symbol:"F",name:"Fluor",atomicNumber:9},{symbol:"Ne",name:"Neon",atomicNumber:10},{symbol:"Na",name:"Natrium",atomicNumber:11},{symbol:"Mg",name:"Magnesium",atomicNumber:12},{symbol:"Al",name:"Aluminium",atomicNumber:13},{symbol:"Si",name:"Silisium",atomicNumber:14},{symbol:"P",name:"Fosfor",atomicNumber:15},{symbol:"S",name:"Svovel",atomicNumber:16},{symbol:"Cl",name:"Klor",atomicNumber:17},{symbol:"Ar",name:"Argon",atomicNumber:18},{symbol:"K",name:"Kalium",atomicNumber:19},{symbol:"Ca",name:"Kalsium",atomicNumber:20},{symbol:"Sc",name:"Scandium",atomicNumber:21},{symbol:"Ti",name:"Titan",atomicNumber:22},{symbol:"V",name:"Vanadium",atomicNumber:23},{symbol:"Cr",name:"Krom",atomicNumber:24},{symbol:"Mn",name:"Mangan",atomicNumber:25},{symbol:"Fe",name:"Jern",atomicNumber:26},{symbol:"Co",name:"Kobolt",atomicNumber:27},{symbol:"Ni",name:"Nikkel",atomicNumber:28},{symbol:"Cu",name:"Kobber",atomicNumber:29},{symbol:"Zn",name:"Sink",atomicNumber:30},{symbol:"Ga",name:"Gallium",atomicNumber:31},{symbol:"Ge",name:"Germanium",atomicNumber:32},{symbol:"As",name:"Arsen",atomicNumber:33},{symbol:"Se",name:"Selen",atomicNumber:34},{symbol:"Br",name:"Brom",atomicNumber:35},{symbol:"Kr",name:"Krypton",atomicNumber:36},{symbol:"Rb",name:"Rubidium",atomicNumber:37},{symbol:"Sr",name:"Strontium",atomicNumber:38},{symbol:"Y",name:"Yttrium",atomicNumber:39},{symbol:"Zr",name:"Zirkonium",atomicNumber:40},{symbol:"Nb",name:"Niob",atomicNumber:41},{symbol:"Mo",name:"Molybden",atomicNumber:42},{symbol:"Tc",name:"Technetium",atomicNumber:43},{symbol:"Ru",name:"Ruthenium",atomicNumber:44},{symbol:"Rh",name:"Rhodium",atomicNumber:45},{symbol:"Pd",name:"Palladium",atomicNumber:46},{symbol:"Ag",name:"Sølv",atomicNumber:47},{symbol:"Cd",name:"Kadmium",atomicNumber:48},{symbol:"In",name:"Indium",atomicNumber:49},{symbol:"Sn",name:"Tinn",atomicNumber:50},{symbol:"Sb",name:"Antimon",atomicNumber:51},{symbol:"Te",name:"Tellur",atomicNumber:52},{symbol:"I",name:"Jod",atomicNumber:53},{symbol:"Xe",name:"Xenon",atomicNumber:54},{symbol:"Cs",name:"Cesium",atomicNumber:55},{symbol:"Ba",name:"Barium",atomicNumber:56},{symbol:"La",name:"Lantan",atomicNumber:57},{symbol:"Ce",name:"Cerium",atomicNumber:58},{symbol:"Pr",name:"Praseodym",atomicNumber:59},{symbol:"Nd",name:"Neodym",atomicNumber:60},{symbol:"Pm",name:"Promethium",atomicNumber:61},{symbol:"Sm",name:"Samarium",atomicNumber:62},{symbol:"Eu",name:"Europium",atomicNumber:63},{symbol:"Gd",name:"Gadolinium",atomicNumber:64},{symbol:"Tb",name:"Terbium",atomicNumber:65},{symbol:"Dy",name:"Dysprosium",atomicNumber:66},{symbol:"Ho",name:"Holmium",atomicNumber:67},{symbol:"Er",name:"Erbium",atomicNumber:68},{symbol:"Tm",name:"Thulium",atomicNumber:69},{symbol:"Yb",name:"Ytterbium",atomicNumber:70},{symbol:"Lu",name:"Lutetium",atomicNumber:71},{symbol:"Hf",name:"Hafnium",atomicNumber:72},{symbol:"Ta",name:"Tantal",atomicNumber:73},{symbol:"W",name:"Wolfram",atomicNumber:74},{symbol:"Re",name:"Rhenium",atomicNumber:75},{symbol:"Os",name:"Osmium",atomicNumber:76},{symbol:"Ir",name:"Iridium",atomicNumber:77},{symbol:"Pt",name:"Platina",atomicNumber:78},{symbol:"Au",name:"Gull",atomicNumber:79},{symbol:"Hg",name:"Kvikksølv",atomicNumber:80},{symbol:"Tl",name:"Thallium",atomicNumber:81},{symbol:"Pb",name:"Bly",atomicNumber:82},{symbol:"Bi",name:"Vismut",atomicNumber:83},{symbol:"Po",name:"Polonium",atomicNumber:84},{symbol:"At",name:"Astat",atomicNumber:85},{symbol:"Rn",name:"Radon",atomicNumber:86},{symbol:"Fr",name:"Francium",atomicNumber:87},{symbol:"Ra",name:"Radium",atomicNumber:88},{symbol:"Ac",name:"Actinium",atomicNumber:89},{symbol:"Th",name:"Thorium",atomicNumber:90},{symbol:"Pa",name:"Protactinium",atomicNumber:91},{symbol:"U",name:"Uran",atomicNumber:92},{symbol:"Np",name:"Neptunium",atomicNumber:93},{symbol:"Pu",name:"Plutonium",atomicNumber:94},{symbol:"Am",name:"Americium",atomicNumber:95},{symbol:"Cm",name:"Curium",atomicNumber:96},{symbol:"Bk",name:"Berkelium",atomicNumber:97},{symbol:"Cf",name:"Californium",atomicNumber:98},{symbol:"Es",name:"Einsteinium",atomicNumber:99},{symbol:"Fm",name:"Fermium",atomicNumber:100},{symbol:"Md",name:"Mendelevium",atomicNumber:101},{symbol:"No",name:"Nobelium",atomicNumber:102},{symbol:"Lr",name:"Lawrencium",atomicNumber:103},{symbol:"Rf",name:"Rutherfordium",atomicNumber:104},{symbol:"Db",name:"Dubnium",atomicNumber:105},{symbol:"Sg",name:"Seaborgium",atomicNumber:106},{symbol:"Bh",name:"Bohrium",atomicNumber:107},{symbol:"Hs",name:"Hassium",atomicNumber:108},{symbol:"Mt",name:"Meitnerium",atomicNumber:109},{symbol:"Ds",name:"Darmstadtium",atomicNumber:110},{symbol:"Rg",name:"Røntgenium",atomicNumber:111},{symbol:"Cn",name:"Copernicium",atomicNumber:112},{symbol:"Nh",name:"Nihonium",atomicNumber:113},{symbol:"Fl",name:"Flerovium",atomicNumber:114},{symbol:"Mc",name:"Moscovium",atomicNumber:115},{symbol:"Lv",name:"Livermorium",atomicNumber:116},{symbol:"Ts",name:"Tenness",atomicNumber:117},{symbol:"Og",name:"Oganesson",atomicNumber:118}]),fk=Object.freeze([{name:"meter",symbol:"m"},{name:"sekund",symbol:"s"},{name:"mole",symbol:"mol"},{name:"ampere",symbol:"A"},{name:"kelvin",symbol:"K"},{name:"candela",symbol:"cd"},{name:"kilogram",symbol:"kg"},{name:"radian",symbol:"rad"},{name:"hertz",symbol:"Hz"},{name:"newton",symbol:"N"},{name:"pascal",symbol:"Pa"},{name:"joule",symbol:"J"},{name:"watt",symbol:"W"},{name:"coulomb",symbol:"C"},{name:"volt",symbol:"V"},{name:"ohm",symbol:"Ω"},{name:"tesla",symbol:"T"},{name:"grad celsius",symbol:"°C"},{name:"lumen",symbol:"lm"},{name:"becquerel",symbol:"Bq"},{name:"gray",symbol:"Gy"},{name:"sievert",symbol:"Sv"}]),yk={chemicalElement:hk,unit:fk},gk=yk,bk=["aktuell","alvorlig","ansvarlig","berømt","betydelig","bevisst","bred","dum","dyp","ekkel","eksisterende","ekte","enkel","ensom","falsk","fast","felles","fersk","fjern","flau","følsom","forsiktig","fremmed","fryktelig","glatt","gravid","grunnleggende","heldig","hemmelig","hjelpsom","hyppig","imponerende","kjedelig","kul","langsom","lat","lav","lignende","løs","lovlig","lykkelig","lys","menneskelig","merkelig","midlertidig","mistenkelig","modig","mørk","morsom","motsatt","mulig","naturlig","nåværende","nødvendig","nøyaktig","nysgjerrig","nyttig","offentlig","opprinnelig","ordentlig","plutselig","rå","rask","regelmessig","ren","rettferdig","rimelig","rund","ryddig","sannsynlig","selvsikker","sint","skarp","skikkelig","skyldig","smal","søt","spennende","stille","stolt","stram","streng","stygg","sulten","sunn","synlig","tilgjengelig","tilstrekkelig","tung","tynn","uavhengig","ujevn","ulovlig","ulykkelig","umiddelbar","urettferdig","vellykket","vennlig","verdifull","vill","villig","voksen","ærlig","åpen","åpenbar"],vk=["eller","for","men","og","så"],Dk=["aha","au","bravo","bø","fy","fysj","huff","hurra","hæ","jippi","nam","oi","ops","pytt","pøh","å","æsj"],Ek={adjective:bk,conjunction:vk,interjection:Dk},kk=Ek,Ak={color:SE,commerce:NE,company:IE,internet:_E,location:ZE,metadata:rk,person:dk,phone_number:Fk,science:gk,word:kk},wk=Ak,ae=new QD({locale:[wk,_v,AE]});ae.seed(486756783);const we=(e,r)=>ae.number.int({min:e,max:r}),Ki=e=>we(0,100)<=e,hr=()=>ae.string.uuid(),Ck=()=>{const e=we(1,31),r=we(1,12),t=we(0,99),a=we(0,99).toString().padStart(2,"0"),n=ae.datatype.boolean()?4:1,i=`${a}${n}`,o=`${we(0,9)}${we(0,9)}`;return`${e.toString().padStart(2,"0")}${r.toString().padStart(2,"0")}${t.toString().padStart(2,"0")}${i}${o}`},_a=e=>{const r=[];for(let t=0;t<e;t++)r.push(hr());return r},Wn=e=>{const r=e.pop();if(!r)throw Error("Prøvde å hente id fra tomt array, generer flere ider");return r},Sk=_a(500),Tk=_a(1e3),Bk=_a(5e3),Nk=_a(500);_a(4e3);const Rk=()=>Wn(Sk),Lk=()=>Wn(Tk),Xe=()=>Wn(Bk),Mk=()=>Wn(Nk),dm=e=>{const r=we(0,10);return r>=1&&r<=2&&typeof e==typeof ye.VENTER_PA_OPPSTART?[{id:Xe(),type:ve.LEGG_TIL_OPPSTARTSDATO,innhold:{oppstartsdato:ae.date.soon()},sendt:ae.date.recent(),status:Me.AKTIV}]:r==3&&typeof e==typeof ye.DELTAR?[{id:Xe(),type:ve.ENDRE_OPPSTARTSDATO,innhold:{oppstartsdato:ae.date.soon()},sendt:ae.date.recent(),status:Me.AKTIV}]:r==4&&typeof e==typeof ye.DELTAR?[{id:Xe(),type:ve.AVSLUTT_DELTAKELSE,innhold:{sluttdato:ae.date.soon(),aarsak:{type:ct.SYK,beskrivelse:null}},sendt:ae.date.recent(),status:Me.AKTIV}]:r==5&&typeof e==typeof ye.DELTAR?[{id:Xe(),type:ve.AVSLUTT_DELTAKELSE,innhold:{sluttdato:ae.date.soon(),aarsak:{type:ct.ANNET,beskrivelse:"Har flyttet til annen kommune"}},sendt:ae.date.recent(),status:Me.AKTIV}]:r<3&&typeof e==typeof ye.HAR_SLUTTET?[{id:Xe(),type:ve.ENDRE_SLUTTAARSAK,innhold:{aarsak:{type:ct.FATT_JOBB,beskrivelse:null}},sendt:ae.date.recent(),status:Me.AKTIV}]:[]},Ik=(e,r,t)=>{const a=we(0,10);if(a<3&&typeof e==typeof ye.VENTER_PA_OPPSTART)return[{id:Xe(),type:ve.LEGG_TIL_OPPSTARTSDATO,innhold:{oppstartsdato:ae.date.soon()},sendt:ae.date.past(),status:Me.UTFORT}];if(a>=3&&a<5&&typeof e==typeof ye.DELTAR){const n=ae.date.soon({refDate:r??void 0});return[{id:Xe(),type:ve.ENDRE_OPPSTARTSDATO,innhold:{oppstartsdato:n},sendt:ae.date.between({from:r||ae.date.recent(),to:n}),status:Me.UTFORT},{id:Xe(),type:ve.FORLENG_DELTAKELSE,innhold:{sluttdato:ae.date.future()},sendt:ae.date.past(),status:Me.TILBAKEKALT}]}if(a>=5&&a<7&&typeof e==typeof ye.HAR_SLUTTET){const n=ae.date.past(),i=new Date;i.setDate(n.getDate()-3);const o=new Date;return i.setDate(n.getDate()-6),[{id:Xe(),type:ve.ENDRE_SLUTTAARSAK,innhold:{aarsak:{type:ct.SYK,beskrivelse:null}},sendt:n,status:Me.UTFORT},{id:Xe(),type:ve.AVSLUTT_DELTAKELSE,innhold:{sluttdato:ae.date.soon(),aarsak:{type:ct.FATT_JOBB,beskrivelse:null}},sendt:i,status:Me.TILBAKEKALT},{id:Xe(),type:ve.FORLENG_DELTAKELSE,innhold:{sluttdato:ae.date.future()},sendt:o,status:Me.UTFORT}]}return a<4&&typeof e==typeof ye.IKKE_AKTUELL?[{id:Xe(),type:ve.AVSLUTT_DELTAKELSE,innhold:{sluttdato:ae.date.recent(),aarsak:{type:ct.ANNET,beskrivelse:"Har flyttet til annen kommune"}},sendt:ae.date.between({from:ae.date.past(),to:new Date}),status:Me.UTFORT}]:a<3&&typeof e==typeof ye.AVBRUTT?[{id:Xe(),type:ve.AVSLUTT_DELTAKELSE,innhold:{sluttdato:ae.date.recent(),aarsak:{type:ct.FATT_JOBB,beskrivelse:null}},sendt:ae.date.past(),status:Me.UTFORT}]:a>7&&typeof e==typeof ye.FULLFORT?[{id:Xe(),type:ve.ENDRE_SLUTTDATO,innhold:{sluttdato:t||ae.date.soon()},sendt:ae.date.past(),status:Me.UTFORT}]:[]},ba=30,xk=()=>`${we(8e8,999999999)}`,Ol=new Array(Math.floor(ba/6)).fill(null).map(()=>ae.company.name()),Ok=()=>we(0,ba)<=ba/10?null:Ol[we(0,Ol.length-1)],_k=new Array(ba).fill(null).map(()=>{const e=Ok();return{virksomhetNavn:e?`${e} Avd. ${ae.location.city()}`:ae.company.name(),virksomhetOrgnr:xk(),organisasjonNavn:e}}),Pk=()=>_k[we(0,ba-1)],Vn=e=>[Ue.GRUFAGYRKE,Ue.JOBBK,Ue.GRUPPEAMO].includes(e),Gk=[{gjennomforingNavn:"Oppfølging Åsedalen for alle mennesker og andre. Dette er bare en lang tekst for å sjekke om ting bryter riktig.",tiltakskode:Ue.INDOPPFAG,tiltaksnavn:"Oppfølging",status:sr.GJENNOMFORES},{gjennomforingNavn:"Oppfølging Region Østvest",tiltakskode:Ue.INDOPPFAG,tiltaksnavn:"Oppfølging",status:sr.GJENNOMFORES},{gjennomforingNavn:"Avklaring Region Test",tiltakskode:Ue.AVKLARAG,tiltaksnavn:"Avklaring",status:sr.GJENNOMFORES},{gjennomforingNavn:"AFT Region Vestøst",tiltakskode:Ue.ARBFORB,tiltaksnavn:"Arbeidsforberedende trening (AFT)",status:sr.GJENNOMFORES},{gjennomforingNavn:"Oppfølging Region Nordsør",tiltakskode:Ue.INDOPPFAG,tiltaksnavn:"Oppfølging",status:sr.PLANLAGT},{gjennomforingNavn:"Arbeidsrettet rehabilitering Region Nordsør",tiltakskode:Ue.ARBRRHDAG,tiltaksnavn:"Arbeidsrettet rehabilitering",status:sr.GJENNOMFORES},{gjennomforingNavn:"Digitalt oppfølgingstiltak Region Nordsør",tiltakskode:Ue.DIGIOPPARB,tiltaksnavn:"Digitalt oppfølgingstiltak for arbeidsledige",status:sr.GJENNOMFORES},{gjennomforingNavn:"Varig tilrettelagt arbeid i skjermet virksomhet Region Nordsør",tiltakskode:Ue.VASV,tiltaksnavn:"Varig tilrettelagt arbeid i skjermet virksomhet ",status:sr.GJENNOMFORES},{gjennomforingNavn:"Jobbklubb i tjenesteområde 1",tiltakskode:Ue.JOBBK,tiltaksnavn:"Jobbklubb",status:sr.GJENNOMFORES},{gjennomforingNavn:"Gruppe AMO Nordvest",tiltakskode:Ue.GRUPPEAMO,tiltaksnavn:"Gruppe AMO",status:sr.GJENNOMFORES},{gjennomforingNavn:"Gruppe AMO Sørvest",tiltakskode:Ue.GRUPPEAMO,tiltaksnavn:"Gruppe AMO",status:sr.GJENNOMFORES},{gjennomforingNavn:"Gruppe fag- og yrkesopplæring VGS og høyere yrkesfaglig utdanning",tiltakskode:Ue.GRUFAGYRKE,tiltaksnavn:"Gruppe fag- og yrkesopplæring",status:sr.GJENNOMFORES}],Hk=e=>{const r=[];return e.forEach(t=>r.push(jk(t))),r},jk=e=>({id:Rk(),navn:e.gjennomforingNavn,status:e.status,tiltak:{tiltaksnavn:e.tiltaksnavn,tiltakskode:e.tiltakskode},startDato:ae.date.past(),sluttDato:ae.date.future(),arrangor:Pk()}),$k=()=>[{fornavn:"Per",mellomnavn:null,etternavn:"Koordinatorsen"},{fornavn:"Karoline",mellomnavn:"Ann",etternavn:"Koordinatorsdottir"}],Wk=(e,r)=>{const t=[];e.forEach(i=>t.push(Vk(i)));const a=r.filter(i=>i.veiledertype===qr.VEILEDER).length,n=r.filter(i=>i.veiledertype===qr.MEDVEILEDER).length;return{veilederFor:{veilederFor:a,medveilederFor:n},koordinatorFor:{deltakerlister:t}}},Vk=e=>({id:e.id,navn:e.navn,type:e.tiltak.tiltaksnavn,startdato:e.startDato,sluttdato:e.sluttDato,erKurs:Vn(e.tiltak.tiltakskode)}),Uk=e=>{const r=[];return e.forEach(t=>r.push(zk(t))),r},zk=e=>({id:e.id,fornavn:e.fornavn,mellomnavn:e.mellomnavn,etternavn:e.etternavn,fodselsnummer:e.fodselsnummer,startDato:e.startDato,sluttDato:e.sluttDato,status:e.status,deltakerliste:{id:e.gjennomforing.id,type:e.gjennomforing.tiltak.tiltaksnavn,navn:e.gjennomforing.navn},veiledertype:qk(),aktiveEndringsmeldinger:Kk(),adressebeskyttet:e.adressebeskyttet}),qk=()=>we(0,10)<3?qr.MEDVEILEDER:qr.VEILEDER,Kk=()=>we(0,10)<3?dm(ye.DELTAR):[],Jk=e=>new Array(e).fill(null).map(()=>({ansattId:Mk(),fornavn:ae.person.firstName(),mellomnavn:Yk(),etternavn:ae.person.lastName()})),Yk=()=>we(0,10)<3?ae.person.middleName():null,mo=Jk(15),Qk=e=>{const r=[...mo];ae.helpers.shuffle(r,{inplace:!0});const t=[];if(we(0,10)<1)return t;we(0,100)>2&&t.push({...r.pop(),deltakerId:e,veiledertype:qr.VEILEDER});for(let a=0;a<we(0,3);a++)t.push({...r.pop(),deltakerId:e,veiledertype:qr.MEDVEILEDER});return t};function Xk(e){switch(e){case ye.DELTAR:return Zk();default:return[]}}function Zk(){return we(1,10)<=5?[{id:hr(),opprettet:ae.date.recent(),begrunnelse:"Vi har kommet i gang, men ser at det er hensiktsmessig å fortsette tett oppfølging nå når han er i gang med å kontakte de riktige arbeidsgiverne.",endring:{type:Hr.ForlengDeltakelse,sluttdato:ae.date.future()},status:{type:$l.VenterPaSvar}}]:[]}const eA=[{navn:"NAV Bærum"},{navn:"NAV Åsnes"},{navn:"NAV Møre og Romsdal"},{navn:"NAV Moss"}],_l=(e,r)=>`${e.replaceAll(" ",".").replaceAll("æ","ae").replaceAll("ø","o").replaceAll("å","a").toLowerCase()}@${r}`,ua=(e,r=10)=>{const t=[];for(let a=0;a<r;a++)t.push(oA(e));return t},Pl=()=>ae.phone.number().replaceAll(" ",""),rA=()=>({adressetype:ae.helpers.arrayElement([Xn.BOSTEDSADRESSE,Xn.KONTAKTADRESSE,Xn.OPPHOLDSADRESSE]),postnummer:"0010",poststed:"Oslo",tilleggsnavn:null,adressenavn:"Portveien 2"}),tA=(e,r)=>{const t=we(0,10);if(e&&r==Ue.GRUPPEAMO){if(t<2)return ye.VURDERES;if(t<4)return ye.DELTAR;if(t<7)return ye.VENTER_PA_OPPSTART;if(t<8)return ye.FULLFORT;if(t<10)return ye.AVBRUTT}if(e){if(t<4)return ye.DELTAR;if(t<7)return ye.VENTER_PA_OPPSTART;if(t<8)return ye.FULLFORT;if(t<10)return ye.AVBRUTT}return t<5?ye.DELTAR:t<7?ye.VENTER_PA_OPPSTART:t<8?ye.HAR_SLUTTET:t<9?ye.IKKE_AKTUELL:ye.DELTAR},aA=(e,r,t,a)=>e?r.startDato:t?a===ye.VENTER_PA_OPPSTART?ae.date.soon():ae.date.recent({days:60}):null,nA=(e,r,t,a)=>{const n=a===ye.AVBRUTT||a===ye.HAR_SLUTTET||a===ye.FULLFORT;return e&&n?t&&r.sluttDato?ae.date.between({from:t,to:r.sluttDato}):r.sluttDato:e?r.sluttDato:t!=null?a===ye.HAR_SLUTTET?ae.date.between({from:t,to:new Date}):ae.date.between({from:t,to:r.sluttDato??new Date}):null},pm=e=>{const r=ae.helpers.arrayElement([dt.OPPFYLLER_KRAVENE,dt.OPPFYLLER_IKKE_KRAVENE]),t=ae.date.past(),a=new Date;return a.setDate(t.getDate()+1),{vurderingstype:r,begrunnelse:r===dt.OPPFYLLER_KRAVENE?null:"Opfyller ikke kravene",gyldigFra:t,gyldigTil:e?a:ae.helpers.arrayElement([ae.date.future(),null])}},iA=()=>new Array(we(0,3)).fill(null).map(()=>pm(!0)),oA=e=>{const r=Vn(e.tiltak.tiltakskode),t=tA(r,e.tiltak.tiltakskode),a=ae.person.sexType(),n=ae.person.firstName(a),i=Ki(50)?ae.person.firstName(a):null,o=ae.person.lastName(),u=ae.person.firstName()+" "+ae.person.lastName(),s=[ye.VENTER_PA_OPPSTART,ye.IKKE_AKTUELL].includes(t)?Ki(20):!0,l=aA(r,e,s,t),c=nA(r,e,l,t),d=t===ye.IKKE_AKTUELL||t===ye.HAR_SLUTTET?ae.date.future():null,p=Ki(90)?{epost:_l(u,"nav.no"),navn:u,telefon:Pl()}:null,h=pm(!1),g=Lk();return{id:g,fornavn:n,mellomnavn:i,etternavn:o,fodselsnummer:Ck(),epost:_l(`${n} ${o}`,"example.com"),telefonnummer:Pl(),startDato:l,sluttDato:c,deltakelseProsent:we(0,10)>4?we(0,100):null,dagerPerUke:we(0,10)>5?we(1,5):null,status:{type:t,endretDato:ae.date.recent()},navEnhet:we(0,10)<9?ae.helpers.arrayElement(eA):null,navVeileder:p,fjernesDato:d,gjennomforing:e,registrertDato:ae.date.past(),innsokBegrunnelse:lA(n),innhold:sA(e.tiltak.tiltakskode),aktiveForslag:Xk(t),aktiveEndringsmeldinger:dm(t),historiskeEndringsmeldinger:Ik(t,l,c),veiledere:Qk(g),adresse:rA(),gjeldendeVurderingFraArrangor:h,historiskeVurderingerFraArrangor:h?iA():null,erVeilederForDeltaker:!1,adressebeskyttet:!1}},uA=[{tekst:"Støtte til jobbsøking",innholdskode:"type1",beskrivelse:null},{tekst:"Karriereveiledning",innholdskode:"type2",beskrivelse:null},{tekst:"Kartlegge hvordan helsen din påvirker muligheten din til å jobbe",innholdskode:"type3",beskrivelse:null},{tekst:"Kartlegge grunnleggende ferdigheter som språk og hvordan du leser, skriver, regner og bruker datamaskin",innholdskode:"type4",beskrivelse:null},{tekst:"Kartlegge dine forventninger til å jobbe",innholdskode:"type5",beskrivelse:null},{tekst:"Veiledning i sosial mestring",innholdskode:"type6",beskrivelse:null},{tekst:"Hjelp til å tilpasse arbeidsoppgaver og arbeidsplassen",innholdskode:"type7",beskrivelse:null},{tekst:"Veiledning til arbeidsgiver",innholdskode:"type8",beskrivelse:null},{tekst:"Oppfølging på arbeidsplassen",innholdskode:"type9",beskrivelse:null},{tekst:"Arbeidspraksis",innholdskode:"type10",beskrivelse:null},{tekst:"Annet",innholdskode:"annet",beskrivelse:`Ønsker å kartlegge arbeidspraksis 
Teste ulike verktøy`}];function sA(e){return e!==Ue.ARBFORB?null:{ledetekst:"Du får tett oppfølging og støtte av en veileder. Sammen Kartlegger dere hvordan din kompetanse, interesser og ferdigheter påvirker muligheten din til å jobbe.",innhold:ae.helpers.arrayElements(uA)}}const lA=e=>`${e} har stått uten arbeid en lengre periode på grunn av helseutfordringer. Hen har mye arbeidserfaring og har spisskompetanse innen ledelse i salg og service. Hen har fått god hjelp fra helsevesenet og er nå klar for å starte prosessen med å finne nytt arbeid. ${e} har et ønske om å bytte bransje, men er usikker på hvilke typer jobber som kan være aktuelle. Hen har trolig også behov for å kartlegge om hen har behov for tilrettelegging på arbeidsplassen.

${e} ønsker:
- Yrkes- og karriereveiledning
- Hjelp/sparring på å skrive søknader og intervjutrening
- Hjelp, veiledning og vurdering av nødvendig tilrettelegging på arbeidsplassen

${e} håper at hen raskt kommer i kontakt med mulige arbeidsgivere for å starte å jobbe. Hen tror selv at hen har behov for hjelp i inntil 4 måneder, inklusiv oppfølging på arbeidsplassen.

NAV kan vurdere tilskudd for å kompensere for utgifter arbeidsgiver skulle ha med tilrettelegging.`,cA=$k(),dA=e=>({id:e.id,navn:e.navn,tiltaksnavn:e.tiltak.tiltaksnavn,arrangorNavn:e.arrangor.organisasjonNavn??e.arrangor.virksomhetNavn,startDato:e.startDato,sluttDato:e.sluttDato,status:e.status,koordinatorer:cA,deltakere:Ze.filter(r=>r.gjennomforing.id===e.id).map(r=>bA(r)),erKurs:Vn(e.tiltak.tiltakskode),tiltakType:e.tiltak.tiltakskode}),Lr=Hk(Gk),pA=(e,r)=>{const t=Lr.slice(0,7).map(u=>ua(u,r)).reduce((u,s)=>u.concat(s),[]),a=ua(Lr[8],40),n=ua(Lr[9],10),i=ua(Lr[10],15),o=ua(Lr[11],18);return t.concat(a,n,i,o)},mA=()=>{const e=Ze[0].gjennomforing.id,r=Ze.find(n=>n.gjennomforing.id!==e)?.gjennomforing.id,t=Ze.filter(n=>n.gjennomforing.id===e).slice(0,10),a=Ze.filter(n=>n.gjennomforing.id===r).slice(0,5);return Uk(t.concat(a))},Ze=pA(11,100),mm=mA(),FA=Wk(Lr,mm),hA=[xu.KOORDINATOR,xu.VEILEDER];var wu=(e=>(e.LeggTilOppstartsdato="LeggTilOppstartsdato",e))(wu||{});const fA=Yi.object({type:Yi.literal("LeggTilOppstartsdato"),startdato:Ou,sluttdato:Ou.nullable()});Yi.discriminatedUnion("type",[fA]);const yA=[Re.rest.get(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/meg/roller"),(e,r,t)=>r(t.delay(500),t.json(hA))),Re.rest.get(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/koordinator/admin/deltakerlister"),(e,r,t)=>{const a=[Gl(Lr[0],!0),...Lr.map(n=>Gl(n,!1))];return r(t.delay(500),t.json(a))}),Re.rest.get(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/koordinator/deltakerliste/:deltakerlisteId"),(e,r,t)=>{const a=e.params.deltakerlisteId,n=Lr.find(i=>i.id===a);return n===void 0?r(t.delay(500),t.status(404)):r(t.delay(500),t.json(dA(n)))}),Re.rest.get(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/deltaker/:deltakerId"),(e,r,t)=>{const a=e.params.deltakerId,n=Ze.find(s=>s.id===a),i=e.referrer,o=i.substring(i.indexOf("?ref=")+5,i.length),u=Fm(n,o==="veileder");return r(t.delay(500),t.json(u))}),Re.rest.post(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/koordinator/admin/deltakerliste/:deltakerlisteId"),(e,r,t)=>r(t.delay(500),t.status(200))),Re.rest.delete(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/koordinator/admin/deltakerliste/:deltakerlisteId"),(e,r,t)=>r(t.delay(500),t.status(200))),Re.rest.get(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/koordinator/mine-deltakerlister"),(e,r,t)=>r(t.delay(500),t.json(FA))),Re.rest.get(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/veileder/mine-deltakere"),(e,r,t)=>r(t.delay(500),t.json(mm))),Re.rest.delete(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/endringsmelding/:endringsmeldingId"),(e,r,t)=>{const a=e.params.endringsmeldingId,n=Ze.find(i=>i.aktiveEndringsmeldinger.find(o=>o.id==a)!=null);return n&&(n.aktiveEndringsmeldinger=n.aktiveEndringsmeldinger.filter(i=>i.id!=a)),r(t.delay(500),t.status(200))}),Re.rest.post(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/deltaker/:deltakerId/endringsmelding"),(e,r,t)=>{const a=e.params.deltakerId,n=e.body,i=Ze.find(o=>o.id==a);if(i){if(n.innhold.type===ve.LEGG_TIL_OPPSTARTSDATO){const o=e.body;i.aktiveEndringsmeldinger.push({id:hr(),type:ve.LEGG_TIL_OPPSTARTSDATO,innhold:{oppstartsdato:nt(o.innhold.oppstartsdato).toDate()},sendt:new Date,status:Me.AKTIV})}if(n.innhold.type===ve.ENDRE_OPPSTARTSDATO){const o=e.body;i.aktiveEndringsmeldinger.push({id:hr(),type:ve.ENDRE_OPPSTARTSDATO,innhold:{oppstartsdato:nt(o.innhold.oppstartsdato).toDate()},sendt:new Date,status:Me.AKTIV})}if(n.innhold.type===ve.ENDRE_DELTAKELSE_PROSENT){const o=e.body;i.aktiveEndringsmeldinger.push({id:hr(),type:ve.ENDRE_DELTAKELSE_PROSENT,innhold:{deltakelseProsent:o.innhold.deltakelseProsent,dagerPerUke:o.innhold.dagerPerUke,gyldigFraDato:nt(o.innhold.gyldigFraDato).toDate()},sendt:new Date,status:Me.AKTIV})}if(n.innhold.type===ve.FORLENG_DELTAKELSE){const o=e.body;i.aktiveEndringsmeldinger.push({id:hr(),type:ve.FORLENG_DELTAKELSE,innhold:{sluttdato:nt(o.innhold.sluttdato).toDate()},sendt:new Date,status:Me.AKTIV})}if(n.innhold.type===ve.AVSLUTT_DELTAKELSE){const o=e.body;i.aktiveEndringsmeldinger.push({id:hr(),type:ve.AVSLUTT_DELTAKELSE,innhold:{sluttdato:nt(o.innhold.sluttdato).toDate(),aarsak:o.innhold.aarsak},sendt:new Date,status:Me.AKTIV})}if(n.innhold.type===ve.DELTAKER_IKKE_AKTUELL){const o=e.body;i.aktiveEndringsmeldinger.push({id:hr(),type:ve.DELTAKER_IKKE_AKTUELL,innhold:{aarsak:o.innhold.aarsak},sendt:new Date,status:Me.AKTIV})}if(n.innhold.type===ve.ENDRE_SLUTTDATO){const o=e.body;i.aktiveEndringsmeldinger.push({id:hr(),type:ve.ENDRE_SLUTTDATO,innhold:{sluttdato:nt(o.innhold.sluttdato).toDate()},sendt:new Date,status:Me.AKTIV})}if(n.innhold.type===ve.ENDRE_SLUTTAARSAK){const o=e.body;i.aktiveEndringsmeldinger.push({id:hr(),type:ve.ENDRE_SLUTTAARSAK,innhold:{aarsak:o.innhold.aarsak},sendt:new Date,status:Me.AKTIV})}}return r(t.delay(500),t.status(200))}),Re.rest.post(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/deltaker/:deltakerId/vurdering"),(e,r,t)=>{const a=e.params.deltakerId,n=e.body,i=Ze.find(o=>o.id==a);if(i){if(n.vurderingstype===dt.OPPFYLLER_IKKE_KRAVENE){const o=e.body;i.gjeldendeVurderingFraArrangor={vurderingstype:dt.OPPFYLLER_IKKE_KRAVENE,begrunnelse:o.begrunnelse,gyldigFra:new Date,gyldigTil:null}}n.vurderingstype===dt.OPPFYLLER_KRAVENE&&(i.gjeldendeVurderingFraArrangor={vurderingstype:dt.OPPFYLLER_KRAVENE,begrunnelse:null,gyldigFra:new Date,gyldigTil:null})}return r(t.delay(500),t.status(200))}),Re.rest.delete(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/deltaker/:deltakerId"),(e,r,t)=>r(t.delay(500),t.status(200))),Re.rest.get(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/deltaker/:deltakerId/alle-endringsmeldinger"),(e,r,t)=>{const a=e.params.deltakerId,n=Ze.find(u=>u.id==a),i=n?.aktiveEndringsmeldinger??[],o=n?.historiskeEndringsmeldinger??[];return r(t.delay(500),t.json({aktiveEndringsmeldinger:i,historiskeEndringsmeldinger:o}))}),Re.rest.get(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/koordinator/:deltakerlisteId/veiledere"),(e,r,t)=>r(t.delay(500),t.json(mo))),Re.rest.post(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/koordinator/veiledere"),(e,r,t)=>{const a=e.url.searchParams.get("deltakerId"),n=e.body,i=Ze.find(u=>u.id==a);if(!i)return r(t.delay(500),t.status(404));const o=n.veiledere.map(u=>{const s=mo.find(l=>l.ansattId===u.ansattId);return{ansattId:s.ansattId,deltakerId:a,veiledertype:u.erMedveileder?qr.MEDVEILEDER:qr.VEILEDER,fornavn:s.fornavn,mellomnavn:s.mellomnavn,etternavn:s.etternavn}});return i.veiledere=o,r(t.delay(500),t.status(200))}),Re.rest.post(Ne("/amt-tiltaksarrangor-bff/tiltaksarrangor/deltaker/:deltakerId/forslag/:forslagId/tilbakekall"),(e,r,t)=>{const a=e.params.deltakerId,n=e.params.forslagId,i=Ze.find(o=>o.id==a);return i?(i.aktiveForslag=i.aktiveForslag.filter(o=>o.id!==n),r(t.delay(500),t.status(200))):r(t.delay(500),t.status(500))}),lt("forleng",e=>({type:Hr.ForlengDeltakelse,sluttdato:nt(e.sluttdato).toDate()})),lt("ikke-aktuell",e=>({type:Hr.IkkeAktuell,aarsak:e.aarsak})),lt("avslutt",e=>({type:Hr.AvsluttDeltakelse,sluttdato:e.sluttdato,aarsak:e.aarsak})),lt("deltakelsesmengde",e=>({type:Hr.Deltakelsesmengde,deltakelsesprosent:e.deltakelsesprosent,dagerPerUke:e.dagerPerUke})),lt("sluttdato",e=>({type:Hr.Sluttdato,sluttdato:e.sluttdato})),lt("startdato",e=>({type:Hr.Startdato,startdato:e.startdato,sluttdato:e.sluttdato})),lt("sluttarsak",e=>({type:Hr.Sluttarsak,aarsak:e.aarsak})),vA("legg-til-oppstartsdato",e=>({type:wu.LeggTilOppstartsdato,startdato:e.startdato,sluttdato:e.sluttdato})),Re.rest.get(Ne("/amt-tiltaksarrangor-bff/unleash/api/feature"),(e,r,t)=>{const a={[fm]:!1,[ym]:!0};return r(t.delay(500),t.json(a))})];function gA(e,r,t){const a=Ze.find(i=>i.id==e);if(!a)return;const n={id:hr(),status:{type:$l.VenterPaSvar},begrunnelse:t,endring:r,opprettet:new Date};return a.aktiveForslag=[n,...a.aktiveForslag.filter(i=>i.endring.type!==r.type)],n}const bA=e=>({id:e.id,fornavn:e.fornavn,mellomnavn:e.mellomnavn,etternavn:e.etternavn,fodselsnummer:e.fodselsnummer,startDato:e.startDato,sluttDato:e.sluttDato,status:e.status,soktInnDato:e.registrertDato,aktiveEndringsmeldinger:e.aktiveEndringsmeldinger,veiledere:e.veiledere,navKontor:e.navEnhet?e.navEnhet.navn:null,gjeldendeVurderingFraArrangor:e.gjeldendeVurderingFraArrangor,adressebeskyttet:e.adressebeskyttet,erVeilederForDeltaker:e.erVeilederForDeltaker}),Fm=(e,r)=>{const t=r?e.fodselsnummer:"";return{id:e.id,deltakerliste:{id:e.gjennomforing.id,startDato:e.gjennomforing.startDato,sluttDato:e.gjennomforing.sluttDato,erKurs:Vn(e.gjennomforing.tiltak.tiltakskode),tiltakstype:e.gjennomforing.tiltak.tiltakskode},fornavn:e.fornavn,mellomnavn:e.mellomnavn,etternavn:e.etternavn,fodselsnummer:t,telefonnummer:e.telefonnummer,epost:e.epost,status:e.status,startDato:e.startDato,sluttDato:e.sluttDato,deltakelseProsent:e.deltakelseProsent,dagerPerUke:e.dagerPerUke,soktInnPa:e.gjennomforing.navn,soktInnDato:e.registrertDato,tiltakskode:e.gjennomforing.tiltak.tiltakskode,bestillingTekst:e.innsokBegrunnelse,innhold:e.innhold,fjernesDato:e.fjernesDato,navInformasjon:{navkontor:e.navEnhet?.navn??"",navVeileder:e.navVeileder?.navn?{navn:e.navVeileder?.navn,telefon:e.navVeileder?.telefon,epost:e.navVeileder?.epost}:null},veiledere:e.veiledere,aktiveForslag:e.aktiveForslag,aktiveEndringsmeldinger:e.aktiveEndringsmeldinger,historiskeEndringsmeldinger:e.historiskeEndringsmeldinger,adresse:e.adresse?{adressetype:e.adresse.adressetype,postnummer:e.adresse.postnummer,poststed:e.adresse.poststed,tilleggsnavn:e.adresse.tilleggsnavn,adressenavn:e.adresse.adressenavn}:null,gjeldendeVurderingFraArrangor:e.gjeldendeVurderingFraArrangor,historiskeVurderingerFraArrangor:e.historiskeVurderingerFraArrangor,adressebeskyttet:e.adressebeskyttet}},Gl=(e,r)=>({id:e.id,navn:e.navn,tiltaksnavn:e.tiltak.tiltaksnavn,arrangorNavn:e.arrangor.organisasjonNavn!=null?e.arrangor.organisasjonNavn:e.arrangor.virksomhetNavn,arrangorOrgnummer:e.arrangor.virksomhetOrgnr,arrangorParentNavn:e.arrangor.virksomhetNavn,startDato:e.startDato,sluttDato:e.sluttDato,lagtTil:r});function lt(e,r){return Re.rest.post(Ne(`/amt-tiltaksarrangor-bff/tiltaksarrangor/deltaker/:deltakerId/forslag/${e}`),async(t,a,n)=>{const i=t.params.deltakerId,o=await t.json(),u=r(o),s=gA(i,u,o.begrunnelse??null);return s?a(n.delay(500),n.status(200),n.json(s)):a(n.delay(500),n.status(500))})}function vA(e,r){return Re.rest.post(Ne(`/amt-tiltaksarrangor-bff/tiltaksarrangor/deltaker/:deltakerId/endring/${e}`),async(t,a,n)=>{const i=t.params.deltakerId,o=await t.json(),u=r(o),s=Ze.find(p=>p.id==i);if(!s)return a(n.delay(500),n.status(500));u.type===wu.LeggTilOppstartsdato&&(s.startDato=u.startdato,s.sluttDato=u.sluttdato);const l=t.referrer,c=l.substring(l.indexOf("?ref=")+5,l.length),d=Fm(s,c==="veileder");return a(n.delay(500),n.status(200),n.json(d))})}const DA=[Re.rest.all(Ne("/amt-tiltaksarrangor-bff/*"),async(e,r,t)=>EA(e,r,t))],EA=async(e,r,t)=>{const n=`${e.url.pathname.replace(/\/pr-\d+/,"")}${e.url.search}`;return Jp(n,e,r,t)},kA=e=>{switch(e){case da.MOCK:return yA;case da.DEV:return xg;case da.LOCAL:return _g;case da.PULL_REQUEST:return DA;default:throw Error("Unknown handler: "+e)}},Ji=window.location.pathname;Ji===jl.baseUrl&&!Ji.endsWith("/")&&(console.log("Redirected with trailing slash"),window.location.href=`${window.location.origin}${Ji}/`);const hm=Lg();console.info(`Running with request handler: ${hm}`);await Re.setupWorker(...kA(hm)).start({serviceWorker:{url:Ne("mockServiceWorker.js")},onUnhandledRequest:({method:e,url:r})=>{r.pathname.startsWith("/deltakeroversikt")&&console.warn(`Unhandled ${e} request to ${r}`)}}).catch(e=>console.error("Unable to setup mocked API endpoints",e));
