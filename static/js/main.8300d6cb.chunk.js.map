{"version":3,"sources":["component/user-table/header/UserTableHeader.tsx","utils/index.ts","utils/text-mappers.ts","utils/date-utils.ts","component/user-table/body/UserTableRow.tsx","component/user-table/body/UserTableBody.tsx","component/felles/Show.tsx","component/felles/spinner/Spinner.tsx","component/user-table/UserTable.tsx","component/user-table/pagination-bar/PagineringKnapp.tsx","component/user-table/pagination-bar/PaginationBar.tsx","component/header/Header.tsx","store/tiltaksoversikt-filter-store.ts","component/page/tiltaksoversikt/FilterMenu.tsx","api/utils.ts","utils/constants.ts","api/index.ts","component/page/tiltaksoversikt/TiltaksoversiktPage.tsx","store/store-provider.tsx","component/page/user-info/UserInfoContent.tsx","component/page/user-info/UserInfoPage.tsx","App.tsx","utils/environment.ts","index.tsx","mock/data/brukere.ts","mock/index.ts","api/data/bruker.ts","component/page/user-info/UserInfoContent.module.less","component/user-table/pagination-bar/PaginationBar.module.less","component/page/user-info/UserInfoPage.module.less","component/user-table/body/UserTableRow.module.less","component/user-table/UserTable.module.less","component/header/Header.module.less","component/page/tiltaksoversikt/TiltaksoversiktPage.module.less"],"names":["UserTableHeader","lagKommaSeparertBrukerNavn","fornavn","etternavn","lagBrukerNavn","mapTiltakStatusTilTekst","tiltakStatus","TiltakStatus","GJENNOMFORES","NY_BRUKER","PAMELDT","mapTiltakTypeTilTekst","tiltakType","TiltakType","AVKLARING","GRUPPE_AMO","JOBBSOKERKURS","OPPFOLGING","formatDateStr","dateStr","dayjs","format","formatDateInputStr","stringToDate","toDate","UserRow","props","bruker","fodselsdato","tiltak","id","type","navn","status","startdato","sluttdato","to","PeopleFilled","className","styles","personIcon","UserTableBody","brukere","map","idx","Show","if","children","Spinner","UserTable","harIngenBrukere","length","IngenBrukereAlertstripe","ingenBrukere","role","aria-live","isLoading","PagineringKnapp","rest","cls","PaginationBar","currentPage","totalPages","erPaForsteSide","erPaSisteSide","fraBruker","tilBruker","totalUsers","paginationBar","paginering","aria-label","disabled","onClick","Header","header","constate","useState","navnFnrSok","setNavnFnrSok","tiltakTyper","setTiltakTyper","tiltakStatuser","setTiltakStatuser","leggTilTiltakType","prevTyper","includes","fjernTilTiltakType","filter","leggTilTiltakStatus","prevStatuser","fjernTilTiltakStatus","TiltaksoversiktFilterStoreProvider","useTiltaksoversiktFilter","FilterMenu","placeholder","value","onChange","e","target","tittel","apen","Object","values","label","name","checked","axiosInstance","axios","create","withCredentials","headers","TiltaksoversiktPage","setBrukere","setIsLoading","useEffect","brukerSokParams","post","then","res","data","catch","console","error","finally","tiltaksoversiktPage","StoreProvider","Seksjon","textBold","UserInfoContent","navEnhet","navVeileder","kontaktinfo","setStartdato","setSluttdato","userInfoContent","telefonnummer","email","periodeInputWrapper","periodeKnapp","tiltakinstansId","body","toISOString","put","oppdaterTiltakStartdato","oppdaterTiltakSluttdato","enhetNavn","UserInfoPage","brukerId","useParams","setBruker","hasFailed","setHasFailed","get","fetchBrukerDetaljer","userInfoPage","tilbakeLenke","App","path","env","this","isDevelopment","process","locale","require","ReactDOM","render","StrictMode","document","getElementById","faker","seed","navEnheter","enhetId","randBetween","min","max","datatype","number","randomFnr","dag","mnd","ar","arhundre","toString","padStart","kjonnsiffer","boolean","individsifre","kontrollsifre","startDatoForTiltakStatus","date","recent","lagMailFraNavn","mailDomain","mailNavn","replaceAll","toLowerCase","detaljertBruker","mockBrukere","antallBrukere","i","random","objectElement","brukerFornavn","firstName","brukerEtternavn","lastName","veilederNavn","substring","sluttDatoForTiltakStatus","phone","phoneNumber","arrayElement","push","lagDetaljerteBrukere","allHandlers","req","ctx","sokParams","delay","json","params","trim","matcherFornavn","matcherEtternavn","mockBrukerSok","find","b","Error","setupWorker","start","serviceWorker","url","module","exports"],"mappings":"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","file":"static/js/main.8300d6cb.chunk.js","sourcesContent":["import React from 'react';\n\nexport const UserTableHeader = () => {\n\n\treturn (\n\t\t<thead>\n\t\t    <tr>\n\t\t\t\t<th>Etternavn, Fornavn</th>\n\t\t\t    <th>Fødselsdato</th>\n\t\t\t    <th>Tiltakstype</th>\n\t\t\t    <th>Tiltak</th>\n\t\t\t    <th>Status</th>\n\t\t\t\t<th>Start</th>\n\t\t\t\t<th>Slutt</th>\n\t\t\t\t<th/>\n\t\t    </tr>\n\t\t</thead>\n    );\n};","\nexport const lagKommaSeparertBrukerNavn = (fornavn: string, etternavn: string): string =>\n\t`${etternavn}, ${fornavn}`;\n\nexport const lagBrukerNavn = (fornavn: string, etternavn: string): string =>\n\t`${fornavn} ${etternavn}`;\n","import { TiltakStatus, TiltakType } from '../api/data/bruker';\n\nexport const mapTiltakStatusTilTekst = (tiltakStatus: TiltakStatus): string => {\n\tswitch (tiltakStatus) {\n\t\tcase TiltakStatus.GJENNOMFORES:\n\t\t\treturn 'Gjennomføres';\n\t\tcase TiltakStatus.NY_BRUKER:\n\t\t\treturn 'Ny Bruker';\n\t\tcase TiltakStatus.PAMELDT:\n\t\t\treturn 'Påmeldt';\n\t\tdefault:\n\t\t\treturn tiltakStatus;\n\t}\n};\n\nexport const mapTiltakTypeTilTekst = (tiltakType: TiltakType): string => {\n\tswitch (tiltakType) {\n\t\tcase TiltakType.AVKLARING:\n\t\t\treturn 'Avklaring';\n\t\tcase TiltakType.GRUPPE_AMO:\n\t\t\treturn 'Gruppe AMO';\n\t\tcase TiltakType.JOBBSOKERKURS:\n\t\t\treturn 'Jobbsøkerkurs';\n\t\tcase TiltakType.OPPFOLGING:\n\t\t\treturn 'Oppfølging';\n\t\tdefault:\n\t\t\treturn tiltakType;\n\t}\n};\n","import dayjs from 'dayjs';\nimport { OrNothing } from './types/or-nothing';\n\nexport const formatDateStr = (dateStr: string) => {\n\treturn dayjs(dateStr).format('DD. MMM YYYY');\n}\n\nexport const formatDateInputStr = (dateStr: OrNothing<string>) : string => {\n\treturn dateStr ? dayjs(dateStr).format('YYYY-MM-DD') : '';\n}\n\nexport const stringToDate = (dateStr: string) : Date => dayjs(dateStr, 'YYYY-MM-DD').toDate();\n\n","import React from 'react';\nimport { Bruker } from '../../../api/data/bruker';\nimport { lagKommaSeparertBrukerNavn } from '../../../utils';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport { PeopleFilled } from '@navikt/ds-icons';\nimport { Link } from 'react-router-dom';\nimport styles from './UserTableRow.module.less';\nimport { formatDateStr } from '../../../utils/date-utils';\n\nexport const UserRow = (props: { idx: number, bruker: Bruker }) => {\n\tconst {\n\t\tfodselsdato,\n\t\tfornavn,\n\t\tetternavn,\n\t\ttiltak,\n\t\tid\n\t} = props.bruker;\n\n\treturn (\n\t\t<tr>\n\t\t\t<td>{lagKommaSeparertBrukerNavn(fornavn, etternavn)}</td>\n\t\t\t<td>{fodselsdato}</td>\n\t\t\t<td>{mapTiltakTypeTilTekst(tiltak.type)}</td>\n\t\t\t<td>{tiltak.navn}</td>\n\t\t\t<td>{mapTiltakStatusTilTekst(tiltak.status)}</td>\n\t\t\t<td>{tiltak.startdato && formatDateStr(tiltak.startdato)}</td>\n\t\t\t<td>{tiltak.sluttdato && formatDateStr(tiltak.sluttdato)}</td>\n\t\t\t<td>\n\t\t\t\t<Link to={`/user/${id}`}>\n\t\t\t\t\t<PeopleFilled className={styles.personIcon}/>\n\t\t\t\t</Link>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n","import React from 'react';\nimport { UserRow } from './UserTableRow';\nimport { Bruker } from '../../../api/data/bruker';\n\ninterface UserTableBodyProps {\n\tbrukere: Bruker[];\n}\n\nexport const UserTableBody = (props: UserTableBodyProps) => {\n    return (\n\t    <tbody>\n\t\t    {props.brukere.map((bruker, idx) => <UserRow idx={idx} bruker={bruker} key={idx} />)}\n\t\t</tbody>\n    );\n};\n","interface ShowProps {\n\tif?: any;\n\tchildren?: any;\n}\n\nexport const Show = (props: ShowProps) => (props.if ? props.children : null);\n","import React from 'react';\nimport NavFrontendSpinner from 'nav-frontend-spinner';\nimport './Spinner.less';\n\nexport const Spinner = () => {\n\treturn (\n\t\t<div className=\"app-spinner\">\n\t\t\t<NavFrontendSpinner type=\"XL\" />\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { UserTableHeader } from './header/UserTableHeader';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { UserTableBody } from './body/UserTableBody';\nimport styles from './UserTable.module.less'\nimport \"nav-frontend-tabell-style\";\nimport { Bruker } from '../../api/data/bruker';\nimport { Show } from '../felles/Show';\nimport { Spinner } from '../felles/spinner/Spinner';\n\ninterface UserTableProps {\n\tbrukere: Bruker[];\n\tisLoading: boolean;\n}\n\nexport const UserTable = (props: UserTableProps) => {\n\tconst harIngenBrukere = props.brukere.length === 0;\n\n\tconst IngenBrukereAlertstripe = () =>\n\t\t<AlertStripeInfo className={styles.ingenBrukere}>\n\t\t\t<span role=\"alert\" aria-live=\"polite\">Fant ingen brukere</span>\n\t\t</AlertStripeInfo>\n\n\treturn (\n\t\t<>\n\t\t\t<table className=\"tabell tabell--stripet\">\n\t\t\t\t<UserTableHeader/>\n\t\t\t\t<Show if={!props.isLoading && !harIngenBrukere}>\n\t\t\t\t\t<UserTableBody brukere={props.brukere}/>\n\t\t\t\t</Show>\n\t\t\t</table>\n\t\t\t<Show if={!props.isLoading && harIngenBrukere}>\n\t\t\t\t<IngenBrukereAlertstripe/>\n\t\t\t</Show>\n\t\t\t<Show if={props.isLoading}>\n\t\t\t\t<Spinner/>\n\t\t\t</Show>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport cls from 'classnames';\n\nexport const PagineringKnapp = (props: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>) => {\n    const { className, children, ...rest } = props;\n    return (\n        <button className={cls(className, 'paginering__knapp')} {...rest}>\n            {props.children}\n        </button>\n    );\n}","import React from 'react';\nimport { HoyreChevron, VenstreChevron } from 'nav-frontend-chevron';\nimport './PaginationBar.less';\nimport { Element } from 'nav-frontend-typografi';\nimport { Show } from '../../felles/Show';\nimport styles from './PaginationBar.module.less';\nimport { PagineringKnapp } from './PagineringKnapp';\n\ninterface PaginationBarProps {\n    totalUsers: number;\n}\n\nexport const PaginationBar = (props: PaginationBarProps) => {\n    const { currentPage, totalPages, pageSize } = {\n        currentPage: 1,\n        totalPages: 4,\n        pageSize: 25\n    };\n\n    const erPaForsteSide: boolean = currentPage === 1;\n    const erPaSisteSide: boolean = currentPage >= totalPages;\n\n    const fraBruker = ((currentPage - 1) * pageSize) + 1;\n    const tilBruker = ((currentPage - 1) * pageSize) + props.totalUsers;\n\n    const handlePageChanged = (newPage: number) => {\n        // setCurrentPage(newPage);\n    }\n\n    return (\n        <div className={styles.paginationBar}>\n            <Element aria-live=\"polite\">\n                Viser {fraBruker}-{tilBruker} av totalt {props.totalUsers} brukere\n            </Element>\n            <div className={styles.paginering}>\n                <PagineringKnapp aria-label=\"Forrige side\" disabled={erPaForsteSide} onClick={() => handlePageChanged(currentPage - 1)}>\n                    <VenstreChevron/>\n                </PagineringKnapp>\n\n                <Show if={!erPaForsteSide}>\n                    <PagineringKnapp aria-label=\"Første side\" onClick={() => handlePageChanged(1)}>1</PagineringKnapp>\n                </Show>\n\n                <PagineringKnapp aria-live=\"polite\" aria-label=\"Valgt side\">\n                    <strong>{currentPage}</strong>\n                </PagineringKnapp>\n\n                <Show if={!erPaSisteSide}>\n                    <PagineringKnapp aria-label=\"Siste side\" onClick={() => handlePageChanged(totalPages)}>\n                        {totalPages}\n                    </PagineringKnapp>\n                </Show>\n\n                <PagineringKnapp aria-label=\"Neste side\" disabled={erPaSisteSide} onClick={() => handlePageChanged(currentPage + 1)}>\n                    <HoyreChevron/>\n                </PagineringKnapp>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Sidetittel } from 'nav-frontend-typografi';\nimport styles from './Header.module.less';\n\nexport const Header = () => {\n\treturn (\n\t\t<header className={styles.header}>\n\t\t\t<Sidetittel>Tiltaksoversikt</Sidetittel>\n\t\t</header>\n\t);\n}\n","import { useState } from 'react';\nimport constate from 'constate';\nimport { TiltakStatus, TiltakType } from '../api/data/bruker';\n\nexport const [TiltaksoversiktFilterStoreProvider, useTiltaksoversiktFilter] = constate(() => {\n\tconst [navnFnrSok, setNavnFnrSok] = useState<string>('');\n\tconst [tiltakTyper, setTiltakTyper] = useState<TiltakType[]>([]);\n\tconst [tiltakStatuser, setTiltakStatuser] = useState<TiltakStatus[]>([]);\n\n\tconst leggTilTiltakType = (tiltakType: TiltakType) => {\n\t\tsetTiltakTyper(prevTyper => {\n\t\t\tif (prevTyper.includes(tiltakType)) {\n\t\t\t\treturn prevTyper;\n\t\t\t}\n\n\t\t\treturn [...prevTyper, tiltakType];\n\t\t});\n\t};\n\n\tconst fjernTilTiltakType = (tiltakType: TiltakType) => {\n\t\tsetTiltakTyper(prevTyper => {\n\t\t\treturn prevTyper.filter((type) => type !== tiltakType);\n\t\t});\n\t};\n\n\tconst leggTilTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatuser(prevStatuser => {\n\t\t\tif (prevStatuser.includes(tiltakStatus)) {\n\t\t\t\treturn prevStatuser;\n\t\t\t}\n\n\t\t\treturn [...prevStatuser, tiltakStatus];\n\t\t});\n\t};\n\n\tconst fjernTilTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatuser(prevStatuser => {\n\t\t\treturn prevStatuser.filter((status) => status !== tiltakStatus);\n\t\t});\n\t};\n\n\treturn {\n\t\tnavnFnrSok, setNavnFnrSok,\n\t\ttiltakTyper, leggTilTiltakType, fjernTilTiltakType,\n\t\ttiltakStatuser, leggTilTiltakStatus, fjernTilTiltakStatus\n\t};\n});\n","import React from 'react';\n\nimport { Checkbox, CheckboxGruppe, Input } from 'nav-frontend-skjema';\nimport Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { TiltakStatus, TiltakType } from '../../../api/data/bruker';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport { useTiltaksoversiktFilter } from '../../../store/tiltaksoversikt-filter-store';\n\nexport const FilterMenu = () => {\n\tconst {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatuser,\n\t\tleggTilTiltakStatus,\n\t\tfjernTilTiltakStatus,\n\t\ttiltakTyper,\n\t\tleggTilTiltakType,\n\t\tfjernTilTiltakType\n\t} = useTiltaksoversiktFilter();\n\n\treturn (\n\t\t<div>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Søk etter navn eller fnr\"\n\t\t\t\tclassName=\"blokk-m\"\n\t\t\t\tvalue={navnFnrSok}\n\t\t\t\tonChange={(e) => setNavnFnrSok(e.target.value)}\n\t\t\t/>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Tiltakstype\" className=\"blokk-m\" apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakType).map(type => (\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tkey={type}\n\t\t\t\t\t\t\t\tlabel={mapTiltakTypeTilTekst(type)}\n\t\t\t\t\t\t\t\tname=\"filter-tiltakstype\"\n\t\t\t\t\t\t\t\tchecked={tiltakTyper.includes(type)}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\t\tleggTilTiltakType(type);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfjernTilTiltakType(type);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Status\" className=\"blokk-m\" apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakStatus).map(status => (\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tkey={status}\n\t\t\t\t\t\t\t\tlabel={mapTiltakStatusTilTekst(status)}\n\t\t\t\t\t\t\t\tname=\"filter-tiltakstatus\"\n\t\t\t\t\t\t\t\tchecked={tiltakStatuser.includes(status)}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\t\tleggTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfjernTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\t\t</div>\n\t)\n}","import axios, { AxiosError, AxiosPromise, AxiosResponse } from 'axios';\nimport { APP_NAME } from '../utils/constants';\n\nexport const axiosInstance = axios.create({\n\twithCredentials: true,\n\theaders: { 'Nav-Consumer-Id': APP_NAME }\n});\n\nexport function isAnyLoading(...fetchers: { loading: boolean }[]): boolean {\n\treturn fetchers.some(f => f.loading);\n}\n\nexport function isAnyLoadingOrNotStarted(...fetchers: { data?: any; error?: any; loading: boolean }[]): boolean {\n\treturn fetchers.some(f => f.loading || (!f.error && !f.data));\n}\n\nexport function hasAnyFailed(...fetchers: { error?: AxiosError }[]): boolean {\n\treturn fetchers.some(f => f.error);\n}\n\nexport function ifResponseHasData<T>(callback: (data: T) => void): (res: AxiosResponse<T>) => AxiosPromise<T> {\n\treturn (res: AxiosResponse<T>) => {\n\t\tif (res.status < 300 && res.data) {\n\t\t\tcallback(res.data);\n\t\t}\n\t\treturn Promise.resolve(res);\n\t};\n}","export const APP_NAME = 'amt-tiltaksarrangor-flate';\n","import { AxiosPromise } from 'axios';\nimport { Bruker, DetaljertBruker, Tiltaksinstans } from './data/bruker';\nimport { axiosInstance } from './utils';\nimport {\n\tBrukerSokParams,\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody\n} from './data/request-types';\n\nexport const brukerSok = (brukerSokParams: BrukerSokParams): AxiosPromise<Bruker[]> => {\n\treturn axiosInstance.post('/amt-tiltak/api/bruker/sok', brukerSokParams);\n};\n\nexport const fetchBrukerDetaljer = (brukerId: string): AxiosPromise<DetaljertBruker> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/bruker/${brukerId}`);\n};\n\nexport const oppdaterTiltakStartdato = (tiltakinstansId: string, startdato: Date): AxiosPromise<Tiltaksinstans> => {\n\tconst body : OppdaterTiltakStartdatoRequestBody = {\n\t\tstartdato: startdato.toISOString()\n\t};\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/startdato`, body);\n};\n\nexport const oppdaterTiltakSluttdato = (tiltakinstansId: string, sluttdato: Date): AxiosPromise<Tiltaksinstans> => {\n\tconst body : OppdaterTiltakSluttdatoRequestBody = {\n\t\tsluttdato: sluttdato.toISOString()\n\t}\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/sluttdato`, body);\n};\n","import React, { useEffect, useState } from 'react';\nimport { UserTable } from '../../user-table/UserTable';\nimport { PaginationBar } from '../../user-table/pagination-bar/PaginationBar';\nimport { Header } from '../../header/Header';\nimport styles from './TiltaksoversiktPage.module.less';\nimport { FilterMenu } from './FilterMenu';\nimport { Bruker } from '../../../api/data/bruker';\nimport { useTiltaksoversiktFilter } from '../../../store/tiltaksoversikt-filter-store';\nimport { brukerSok } from '../../../api';\n\nexport const TiltaksoversiktPage = () => {\n\tconst { tiltakTyper, tiltakStatuser, navnFnrSok } = useTiltaksoversiktFilter();\n\tconst [brukere, setBrukere] = useState<Bruker[]>([]);\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\t// TODO: this must be debounced\n\t\tsetIsLoading(true);\n\n\t\tconst sokParams = {\n\t\t\tfilter: {\n\t\t\t\tnavnFnrSok,\n\t\t\t\ttiltakTyper,\n\t\t\t\ttiltakStatuser\n\t\t\t}\n\t\t};\n\n\t\tbrukerSok(sokParams)\n\t\t\t.then(res => setBrukere(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoading(false));\n\t}, [tiltakTyper, tiltakStatuser, navnFnrSok]);\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<main className={styles.tiltaksoversiktPage}>\n\t\t\t\t<FilterMenu/>\n\t\t\t\t<div>\n\t\t\t\t\t<PaginationBar totalUsers={brukere.length}/>\n\t\t\t\t\t<UserTable brukere={brukere} isLoading={isLoading} />\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { TiltaksoversiktFilterStoreProvider } from './tiltaksoversikt-filter-store';\n\ninterface StoreProviderProps {\n\tchildren: React.ReactNode;\n}\n\nconst StoreProvider = (props: StoreProviderProps) => {\n\treturn (\n\t\t<TiltaksoversiktFilterStoreProvider>\n\t\t\t{props.children}\n\t\t</TiltaksoversiktFilterStoreProvider>\n\t);\n};\n\nexport default StoreProvider;\n","import React, { ReactNode, useState } from 'react';\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport { Ingress, Normaltekst, Sidetittel } from 'nav-frontend-typografi';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport { Knapp } from 'nav-frontend-knapper';\nimport { formatDateInputStr, stringToDate } from '../../../utils/date-utils';\nimport { Input } from 'nav-frontend-skjema';\nimport { lagBrukerNavn } from '../../../utils';\nimport styles from './UserInfoContent.module.less';\nimport { oppdaterTiltakSluttdato, oppdaterTiltakStartdato } from '../../../api';\n\ninterface SeksjonProps {\n    tittel: string;\n    children?: ReactNode;\n}\n\nconst Seksjon = ({tittel, children}: SeksjonProps) =>\n    <div>\n        <Ingress className={styles.textBold}>{tittel}</Ingress>\n        {children}\n    </div>;\n\nexport const UserInfoContent = (props: { bruker: DetaljertBruker }) => {\n    const { tiltak, navEnhet, navVeileder, kontaktinfo, fornavn, etternavn} = props.bruker;\n    const [startdato, setStartdato] = useState<string>(formatDateInputStr(tiltak.startdato));\n    const [sluttdato, setSluttdato] = useState<string>(formatDateInputStr(tiltak.sluttdato));\n\n    const onStartdatoLagreClick = () => {\n        if(!startdato) return;\n        oppdaterTiltakStartdato(tiltak.id, stringToDate(startdato!));\n\n    }\n    const onSluttdatoLagreClick = () => {\n        if(!sluttdato) return;\n        oppdaterTiltakSluttdato(tiltak.id, stringToDate(sluttdato!));\n    }\n    return (\n        <>\n            <Sidetittel className=\"blokk-m\">{lagBrukerNavn(fornavn, etternavn)}</Sidetittel>\n            <div className={styles.userInfoContent}>\n                <Seksjon tittel=\"Kontaktinformasjon\">\n                    <Normaltekst>Telefon: {kontaktinfo.telefonnummer}</Normaltekst>\n                    <Normaltekst>Email: {kontaktinfo.email}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Status\">\n                    <Normaltekst>{mapTiltakStatusTilTekst(tiltak.status)}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Periode for gjennomføring\">\n                    <div className={styles.periodeInputWrapper}>\n                        <Input\n                            label=\"Start\"\n                            type=\"date\"\n                            value={startdato}\n                            onChange={(e) => setStartdato(e.target.value)}\n                        />\n\n                        <Knapp className={styles.periodeKnapp} onClick={onStartdatoLagreClick} disabled={!startdato}>Lagre</Knapp>\n\n                    </div>\n                    <div className={styles.periodeInputWrapper}>\n                        <Input\n                            label=\"Slutt\"\n                            type=\"date\"\n                            value={sluttdato}\n                            onChange={(e) => setSluttdato(e.target.value)}/>\n\n                        <Knapp className={styles.periodeKnapp} onClick={onSluttdatoLagreClick} disabled={!sluttdato}>Lagre</Knapp>\n                    </div>\n                </Seksjon>\n\n                <Seksjon tittel=\"NAV-kontor\">\n                    <Normaltekst>{navEnhet.enhetNavn}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Veileder\">\n                    <Normaltekst>Navn: {navVeileder?.navn}</Normaltekst>\n                    <Normaltekst>Email: {navVeileder?.email}</Normaltekst>\n                    <Normaltekst>Telefonnummer: {navVeileder?.telefonnummer}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Tiltak\">\n                    <Normaltekst>Type: {mapTiltakTypeTilTekst(tiltak.type)}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Beskrivelse\" />\n            </div>\n        </>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport cls from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { fetchBrukerDetaljer } from '../../../api';\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport { AlertStripeFeil } from 'nav-frontend-alertstriper';\nimport { UserInfoContent } from './UserInfoContent';\nimport styles from './UserInfoPage.module.less';\n\nexport const UserInfoPage = () => {\n\tconst { brukerId } = useParams<{ brukerId: string }>();\n\tconst [bruker, setBruker] = useState<DetaljertBruker>();\n\tconst [hasFailed, setHasFailed] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tfetchBrukerDetaljer(brukerId)\n\t\t\t.then(res => setBruker(res.data))\n\t\t\t.catch(() => setHasFailed(true));\n\t}, [brukerId]);\n\n\treturn (\n\t\t<main className={styles.userInfoPage}>\n\t\t\t<Link to=\"/\" className={cls(styles.tilbakeLenke, \"blokk-m\")}>Tilbake</Link>\n\t\t\t{bruker\n\t\t\t\t? <UserInfoContent bruker={bruker}/>\n\t\t\t\t: (hasFailed ? <AlertStripeFeil>En feil oppstod</AlertStripeFeil> : <Spinner/>)\n\t\t\t}\n\t\t</main>\n\t);\n}","import React from 'react';\nimport { TiltaksoversiktPage } from './component/page/tiltaksoversikt/TiltaksoversiktPage';\nimport StoreProvider from './store/store-provider';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { UserInfoPage } from './component/page/user-info/UserInfoPage';\n\nexport const App = () => {\n\treturn (\n\t\t<StoreProvider>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/user/:brukerId'><UserInfoPage /></Route>\n\t\t\t\t\t<Route path='/'><TiltaksoversiktPage/></Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\t\t</StoreProvider>\n\n\t);\n}\n","class Environment {\n\tget isProduction() {\n\t\treturn !this.isDevelopment;\n\t}\n\n\tget isDevelopment() {\n\t\treturn process.env.REACT_APP_DEV === 'true';\n\t}\n}\n\nconst env = new Environment();\n\nexport default env;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport { App } from './App';\nimport env from './utils/environment';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/nb';\n\ndayjs.locale('nb');\n\nif (env.isDevelopment) {\n    require('./mock');\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import faker from 'faker';\nimport { Bruker, DetaljertBruker, NavEnhet, TiltakStatus, TiltakType } from '../../api/data/bruker';\nimport { OrNothing } from '../../utils/types/or-nothing';\n\nfaker.locale = \"nb_NO\";\nfaker.seed(486756783);\n\nconst navEnheter: NavEnhet[] = [\n\t{\n\t\tenhetId: '0219',\n\t\tenhetNavn: 'NAV Bærum'\n\t},\n\t{\n\t\tenhetId: '0425',\n\t\tenhetNavn: 'NAV Åsnes'\n\t},\n\t{\n\t\tenhetId: '1500',\n\t\tenhetNavn: 'NAV Møre og Romsdal'\n\t},\n\t{\n\t\tenhetId: '0104',\n\t\tenhetNavn: 'NAV Moss'\n\t}\n];\n\nconst randBetween = (min: number, max: number): number => {\n\treturn faker.datatype.number({ min, max })\n};\n\nconst randomFnr = (): string => {\n\tconst dag = randBetween(1, 31);\n\tconst mnd = randBetween(1, 12);\n\tconst ar = randBetween(0, 99);\n\tconst arhundre = randBetween(0, 99).toString().padStart(2, '0');\n\tconst kjonnsiffer = faker.datatype.boolean() ? 4 : 1;\n\tconst individsifre = `${arhundre}${kjonnsiffer}`;\n\tconst kontrollsifre = `${randBetween(0, 9)}${randBetween(0, 9)}`;\n\n\treturn `${dag.toString().padStart(2, '0')}${mnd.toString().padStart(2, '0')}${ar.toString().padStart(2, '0')}${individsifre}${kontrollsifre}`;\n}\n\nconst startDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\tif (status === TiltakStatus.PAMELDT || status === TiltakStatus.GJENNOMFORES) {\n\t\treturn faker.date.recent().toISOString();\n\t}\n\n\treturn undefined;\n};\n\nconst sluttDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\t// TODO: Implement\n\treturn undefined;\n};\n\nconst lagMailFraNavn = (navn: string, mailDomain: string): string => {\n\tconst mailNavn = navn.replaceAll(' ', '.')\n\t\t.replaceAll('æ', 'ae')\n\t\t.replaceAll('ø', 'o')\n\t\t.replaceAll('å', 'a')\n\t\t.toLowerCase();\n\n\treturn `${mailNavn}@${mailDomain}`\n};\n\nexport const lagDetaljerteBrukere = (antallBrukere: number): DetaljertBruker[] => {\n\tconst brukere: DetaljertBruker[] = [];\n\n\tfor (let i = 0; i < antallBrukere; i++) {\n\n\t\tconst status = faker.random.objectElement(TiltakStatus) as TiltakStatus;\n\n\t\tconst brukerFornavn = faker.name.firstName();\n\t\tconst brukerEtternavn = faker.name.lastName();\n\n\t\tconst veilederNavn = faker.name.firstName() + \" \" + faker.name.lastName();\n\n\t\tconst bruker: DetaljertBruker = {\n\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\tfornavn: brukerFornavn,\n\t\t\tetternavn: brukerEtternavn,\n\t\t\tfodselsdato: randomFnr().substring(0, 6),\n\t\t\ttiltak: {\n\t\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\t\tstatus: status,\n\t\t\t\ttype: faker.random.objectElement(TiltakType) as TiltakType,\n\t\t\t\tstartdato: startDatoForTiltakStatus(status),\n\t\t\t\tsluttdato: sluttDatoForTiltakStatus(status),\n\t\t\t\tnavn: 'Noe tekst'\n\t\t\t},\n\t\t\tkontaktinfo: {\n\t\t\t\temail: lagMailFraNavn(`${brukerFornavn} ${brukerEtternavn}`, 'example.com'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber()\n\t\t\t},\n\t\t\tnavEnhet: faker.random.arrayElement(navEnheter),\n\t\t\tnavVeileder: {\n\t\t\t\tnavn: veilederNavn,\n\t\t\t\temail: lagMailFraNavn(veilederNavn, 'nav.no'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber()\n\t\t\t},\n\t\t};\n\n\t\tbrukere.push(bruker);\n\t}\n\n\treturn brukere;\n};\n\nexport const tilBruker = (detaljertBruker: DetaljertBruker): Bruker => {\n\treturn {\n\t\tid: detaljertBruker.id,\n\t\tfornavn: detaljertBruker.fornavn,\n\t\tetternavn: detaljertBruker.etternavn,\n\t\tfodselsdato: detaljertBruker.fodselsdato,\n\t\ttiltak: detaljertBruker.tiltak\n\t};\n};\n\nexport const mockBrukere = lagDetaljerteBrukere(55);\n","import { setupWorker, rest } from 'msw';\nimport { RequestHandler } from 'msw/lib/types/handlers/RequestHandler';\nimport { mockBrukere, tilBruker } from './data/brukere';\nimport { Bruker } from '../api/data/bruker';\nimport {\n\tBrukerSokParams,\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody\n} from '../api/data/request-types';\n\nconst mockBrukerSok = (brukere: Bruker[], params: BrukerSokParams): Bruker[] => {\n\treturn brukere.filter((bruker) => {\n\t\tconst { navnFnrSok, tiltakStatuser, tiltakTyper } = params.filter;\n\t\tif (navnFnrSok?.trim()) {\n\t\t\tconst matcherFornavn = bruker.fornavn.toLowerCase().includes(navnFnrSok || '');\n\t\t\tconst matcherEtternavn = bruker.etternavn.toLowerCase().includes(navnFnrSok || '');\n\n\t\t\tif (!matcherFornavn && !matcherEtternavn) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (tiltakStatuser.length > 0) {\n\t\t\tif (!tiltakStatuser.includes(bruker.tiltak.status)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (tiltakTyper.length > 0) {\n\t\t\tif (!tiltakTyper.includes(bruker.tiltak.type)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t});\n};\n\nconst allHandlers: RequestHandler[] = [\n\trest.post('/amt-tiltak/api/bruker/sok', (req, res, ctx) => {\n\t\tconst sokParams = req.body as BrukerSokParams;\n\t\tconst brukere = mockBrukere.map(tilBruker);\n\n\t\treturn res(ctx.delay(500), ctx.json(mockBrukerSok(brukere, sokParams)));\n\t}),\n\trest.get('/amt-tiltak/api/bruker/:brukerId',(req, res, ctx) => {\n\t\tconst brukerId = req.params['brukerId'];\n\t\tconst bruker = mockBrukere.find((b) => b.id === brukerId);\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/startdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakStartdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId']\n\t\tconst bruker = mockBrukere.find(bruker=>bruker.tiltak.id===tiltakinstansId);\n\n\t\tif(!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\t\tbruker.tiltak.startdato = body.startdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/sluttdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakSluttdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId']\n\t\tconst bruker = mockBrukere.find(bruker=>bruker.tiltak.id===tiltakinstansId);\n\n\t\tif(!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\t\tbruker.tiltak.sluttdato = body.sluttdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n];\n\nsetupWorker(...allHandlers)\n\t.start({ serviceWorker: { url: process.env.PUBLIC_URL + '/mockServiceWorker.js' } })\n\t.catch(e => {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.error('Unable to setup mocked API endpoints', e);\n\t});","import { OrNothing } from '../../utils/types/or-nothing';\n\nexport interface Bruker {\n\tid: string; // TODO: Skal vi bruke uuid eller heltall?\n\tfodselsdato: string;\n\tfornavn: string; // TODO: Kan hende det holder med kun et felt for navn\n\tetternavn: string;\n\ttiltak: Tiltaksinstans;\n}\n\nexport interface DetaljertBruker {\n\tid: string; // TODO: Skal vi bruke uuid eller heltall?\n\tfodselsdato: string;\n\tfornavn: string; // TODO: Kan hende det holder med kun et felt for navn\n\tetternavn: string;\n\ttiltak: Tiltaksinstans;\n\n\tnavEnhet: NavEnhet;\n\tkontaktinfo: Kontaktinfo;\n\tnavVeileder: OrNothing<NavVeileder>;\n}\n\nexport interface Tiltaksinstans {\n\tid: string;\n\ttype: TiltakType;\n\tstatus: TiltakStatus;\n\tnavn: string;\n\tstartdato: OrNothing<string>;\n\tsluttdato: OrNothing<string>;\n}\n\nexport interface NavEnhet {\n\tenhetId: string;\n\tenhetNavn: string;\n}\n\ninterface Kontaktinfo {\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\ninterface NavVeileder {\n\tnavn: string;\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\nexport enum TiltakType {\n\tJOBBSOKERKURS   = 'JOBBSOKERKURS',\n\tAVKLARING       = 'AVKLARING',\n\tGRUPPE_AMO      = 'GRUPPE_AMO',\n\tOPPFOLGING      = 'OPPFOLGING'\n}\n\nexport enum TiltakStatus {\n\tNY_BRUKER       = 'NY_BRUKER',\n\tPAMELDT         = 'PAMELDT',\n\tGJENNOMFORES    = 'GJENNOMFORES'\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__22-Vn\",\"center-block\":\"center-block__3zBVx\",\"pull-right\":\"pull-right__3dBfX\",\"pull-left\":\"pull-left__3TiMS\",\"hide\":\"hide__2BxQd\",\"show\":\"show__3nqH6\",\"hidden\":\"hidden__1sOfC\",\"invisible\":\"invisible___hv42\",\"text-hide\":\"text-hide__1A9A7\",\"ustilet\":\"ustilet__1CfZ2\",\"blokk\":\"blokk__34Ht9\",\"blokk-null\":\"blokk-null__NLWPq\",\"blokk-xxxs\":\"blokk-xxxs__2Rtpz\",\"blokk-xxs\":\"blokk-xxs__ksi0b\",\"blokk-xs\":\"blokk-xs__1DKf_\",\"blokk-s\":\"blokk-s__2GJcB\",\"blokk-m\":\"blokk-m__33_64\",\"blokk-l\":\"blokk-l__2WayK\",\"blokk-xl\":\"blokk-xl__2t4EJ\",\"textBold\":\"textBold__1z3bS\",\"userInfoContent\":\"userInfoContent__3seU_\",\"periodeInputWrapper\":\"periodeInputWrapper__OBmB3\",\"periodeKnapp\":\"periodeKnapp__1ZNMi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBar\":\"paginationBar__2LzFU\",\"paginering\":\"paginering__2_g5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfoPage\":\"userInfoPage__QuV1h\",\"tilbakeLenke\":\"tilbakeLenke__jsvK3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"personIcon\":\"personIcon__1QXL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingenBrukere\":\"ingenBrukere__2tz2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header__GxQus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tiltaksoversiktPage\":\"tiltaksoversiktPage__gcUSe\"};"],"sourceRoot":""}