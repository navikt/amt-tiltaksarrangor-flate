{"version":3,"sources":["api/data/bruker.ts","component/user-table/header/UserTableHeader.tsx","utils/text-mappers.ts","component/user-table/body/UserTableRow.tsx","component/user-table/body/UserTableBody.tsx","component/felles/Show.tsx","component/felles/spinner/Spinner.tsx","component/user-table/UserTable.tsx","component/user-table/pagination-bar/PagineringKnapp.tsx","component/user-table/pagination-bar/PaginationBar.tsx","component/header/Header.tsx","store/tiltaksoversikt-filter-store.ts","component/page/tiltaksoversikt/FilterMenu.tsx","api/utils.ts","utils/constants.ts","api/index.ts","component/page/tiltaksoversikt/TiltaksoversiktPage.tsx","store/store-provider.tsx","App.tsx","utils/environment.ts","index.tsx","mock/data/brukere.ts","mock/index.ts","utils/index.ts","component/user-table/pagination-bar/PaginationBar.module.less","component/user-table/UserTable.module.less","component/header/Header.module.less","component/page/tiltaksoversikt/TiltaksoversiktPage.module.less"],"names":["TiltakType","TiltakStatus","UserTableHeader","mapTiltakStatusTilTekst","tiltakStatus","GJENNOMFORES","NY_BRUKER","PAMELDT","mapTiltakTypeTilTekst","tiltakType","AVKLARING","GRUPPE_AMO","JOBBSOKERKURS","OPPFOLGING","UserRow","props","bruker","fodselsdato","fornavn","etternavn","tiltak","lagBrukerNavn","UserTableBody","brukere","map","idx","Show","if","children","Spinner","className","type","UserTable","harIngenBrukere","length","IngenBrukereAlertstripe","styles","ingenBrukere","role","aria-live","isLoading","PagineringKnapp","rest","cls","PaginationBar","currentPage","totalPages","erPaForsteSide","erPaSisteSide","fraBruker","tilBruker","totalUsers","paginationBar","paginering","aria-label","disabled","onClick","Header","header","constate","useState","navnFnrSok","setNavnFnrSok","tiltakTyper","setTiltakTyper","tiltakStatuser","setTiltakStatuser","leggTilTiltakType","prevTyper","includes","fjernTilTiltakType","filter","leggTilTiltakStatus","prevStatuser","fjernTilTiltakStatus","status","TiltaksoversiktFilterStoreProvider","useTiltaksoversiktFilter","FilterMenu","placeholder","value","onChange","e","target","tittel","apen","Object","values","label","name","checked","axiosInstance","axios","create","withCredentials","headers","TiltaksoversiktPage","setBrukere","setIsLoading","useEffect","brukerSokParams","post","then","res","data","catch","console","error","finally","tiltaksoversiktPage","StoreProvider","App","this","isDevelopment","process","REACT_APP_DEV","require","ReactDOM","render","StrictMode","document","getElementById","faker","seed","randomFnr","dag","randBetween","mnd","ar","arhundre","toString","padStart","kjonnsiffer","datatype","boolean","individsifre","kontrollsifre","mockBrukere","antallBrukere","i","firstName","lastName","substring","random","objectElement","push","lagBrukere","allHandlers","req","ctx","params","sokParams","body","delay","json","trim","matcherFornavn","toLowerCase","matcherEtternavn","setupWorker","start","serviceWorker","url","manglerFornavn","manglerEtternavn","from","to","Math","round","module","exports"],"mappings":"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","file":"static/js/main.cc3ceb50.chunk.js","sourcesContent":["\nexport interface Bruker {\n\tfodselsdato: string;\n\tfornavn: string;\n\tetternavn: string;\n\ttiltakType: TiltakType;\n\ttiltakStatus: TiltakStatus;\n\ttiltak: string;\n}\n\nexport enum TiltakType {\n\tJOBBSOKERKURS = 'JOBBSOKERKURS',\n\tAVKLARING = 'AVKLARING',\n\tGRUPPE_AMO = 'GRUPPE_AMO',\n\tOPPFOLGING = 'OPPFOLGING'\n}\n\nexport enum TiltakStatus {\n\tNY_BRUKER= 'NY_BRUKER',\n\tPAMELDT= 'PAMELDT',\n\tGJENNOMFORES= 'GJENNOMFORES'\n}","import React from 'react';\n\nexport const UserTableHeader = () => {\n\n\treturn (\n\t\t<thead>\n\t\t    <tr>\n\t\t\t\t<th>Etternavn, Fornavn</th>\n\t\t\t    <th>Fødselsdato</th>\n\t\t\t    <th>Tiltakstype</th>\n\t\t\t    <th>Tiltak</th>\n\t\t\t    <th>Status</th>\n\t\t    </tr>\n\t\t</thead>\n    );\n};","import { TiltakStatus, TiltakType } from '../api/data/bruker';\n\nexport const mapTiltakStatusTilTekst = (tiltakStatus: TiltakStatus): string => {\n\tswitch (tiltakStatus) {\n\t\tcase TiltakStatus.GJENNOMFORES:\n\t\t\treturn 'Gjennomføres';\n\t\tcase TiltakStatus.NY_BRUKER:\n\t\t\treturn 'Ny Bruker';\n\t\tcase TiltakStatus.PAMELDT:\n\t\t\treturn 'Påmeldt';\n\t\tdefault:\n\t\t\treturn tiltakStatus;\n\t}\n};\n\nexport const mapTiltakTypeTilTekst = (tiltakType: TiltakType): string => {\n\tswitch (tiltakType) {\n\t\tcase TiltakType.AVKLARING:\n\t\t\treturn 'Avklaring';\n\t\tcase TiltakType.GRUPPE_AMO:\n\t\t\treturn 'Gruppe AMO';\n\t\tcase TiltakType.JOBBSOKERKURS:\n\t\t\treturn 'Jobbsøkerkurs';\n\t\tcase TiltakType.OPPFOLGING:\n\t\t\treturn 'Oppfølging';\n\t\tdefault:\n\t\t\treturn tiltakType;\n\t}\n};\n","import React from 'react';\nimport { Bruker } from '../../../api/data/bruker';\nimport { lagBrukerNavn } from '../../../utils';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\n\nexport const UserRow = (props: { idx: number, bruker: Bruker }) => {\n\tconst {\n\t\tfodselsdato,\n\t\tfornavn,\n\t\tetternavn,\n\t\ttiltakType,\n\t\ttiltakStatus,\n\t\ttiltak\n\t} = props.bruker;\n\n\treturn (\n\t\t<tr>\n\t\t\t<td>{lagBrukerNavn(fornavn, etternavn)}</td>\n\t\t\t<td>{fodselsdato}</td>\n\t\t\t<td>{mapTiltakTypeTilTekst(tiltakType)}</td>\n\t\t\t<td>{tiltak}</td>\n\t\t\t<td>{mapTiltakStatusTilTekst(tiltakStatus)}</td>\n\t\t</tr>\n\t);\n};\n","import React from 'react';\nimport { UserRow } from './UserTableRow';\nimport { Bruker } from '../../../api/data/bruker';\n\ninterface UserTableBodyProps {\n\tbrukere: Bruker[];\n}\n\nexport const UserTableBody = (props: UserTableBodyProps) => {\n    return (\n\t    <tbody>\n\t\t    {props.brukere.map((bruker, idx) => <UserRow idx={idx} bruker={bruker} key={idx} />)}\n\t\t</tbody>\n    );\n};\n","interface ShowProps {\n\tif?: any;\n\tchildren?: any;\n}\n\nexport const Show = (props: ShowProps) => (props.if ? props.children : null);\n","import React from 'react';\nimport NavFrontendSpinner from 'nav-frontend-spinner';\nimport './Spinner.less';\n\nexport const Spinner = () => {\n\treturn (\n\t\t<div className=\"app-spinner\">\n\t\t\t<NavFrontendSpinner type=\"XL\" />\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { UserTableHeader } from './header/UserTableHeader';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { UserTableBody } from './body/UserTableBody';\nimport styles from './UserTable.module.less'\nimport \"nav-frontend-tabell-style\";\nimport { Bruker } from '../../api/data/bruker';\nimport { Show } from '../felles/Show';\nimport { Spinner } from '../felles/spinner/Spinner';\n\ninterface UserTableProps {\n\tbrukere: Bruker[];\n\tisLoading: boolean;\n}\n\nexport const UserTable = (props: UserTableProps) => {\n\tconst harIngenBrukere = props.brukere.length === 0;\n\n\tconst IngenBrukereAlertstripe = () =>\n\t\t<AlertStripeInfo className={styles.ingenBrukere}>\n\t\t\t<span role=\"alert\" aria-live=\"polite\">Fant ingen brukere</span>\n\t\t</AlertStripeInfo>\n\n\treturn (\n\t\t<>\n\t\t\t<table className=\"tabell tabell--stripet\">\n\t\t\t\t<UserTableHeader/>\n\t\t\t\t<Show if={!props.isLoading && !harIngenBrukere}>\n\t\t\t\t\t<UserTableBody brukere={props.brukere}/>\n\t\t\t\t</Show>\n\t\t\t</table>\n\t\t\t<Show if={!props.isLoading && harIngenBrukere}>\n\t\t\t\t<IngenBrukereAlertstripe/>\n\t\t\t</Show>\n\t\t\t<Show if={props.isLoading}>\n\t\t\t\t<Spinner/>\n\t\t\t</Show>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport cls from 'classnames';\n\nexport const PagineringKnapp = (props: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>) => {\n    const { className, children, ...rest } = props;\n    return (\n        <button className={cls(className, 'paginering__knapp')} {...rest}>\n            {props.children}\n        </button>\n    );\n}","import React from 'react';\nimport { HoyreChevron, VenstreChevron } from 'nav-frontend-chevron';\nimport './PaginationBar.less';\nimport { Element } from 'nav-frontend-typografi';\nimport { Show } from '../../felles/Show';\nimport styles from './PaginationBar.module.less';\nimport { PagineringKnapp } from './PagineringKnapp';\n\ninterface PaginationBarProps {\n    totalUsers: number;\n}\n\nexport const PaginationBar = (props: PaginationBarProps) => {\n    const { currentPage, totalPages, pageSize } = {\n        currentPage: 1,\n        totalPages: 4,\n        pageSize: 25\n    };\n\n    const erPaForsteSide: boolean = currentPage === 1;\n    const erPaSisteSide: boolean = currentPage >= totalPages;\n\n    const fraBruker = ((currentPage - 1) * pageSize) + 1;\n    const tilBruker = ((currentPage - 1) * pageSize) + props.totalUsers;\n\n    const handlePageChanged = (newPage: number) => {\n        // setCurrentPage(newPage);\n    }\n\n    return (\n        <div className={styles.paginationBar}>\n            <Element aria-live=\"polite\">\n                Viser {fraBruker}-{tilBruker} av totalt {props.totalUsers} brukere\n            </Element>\n            <div className={styles.paginering}>\n                <PagineringKnapp aria-label=\"Forrige side\" disabled={erPaForsteSide} onClick={() => handlePageChanged(currentPage - 1)}>\n                    <VenstreChevron/>\n                </PagineringKnapp>\n\n                <Show if={!erPaForsteSide}>\n                    <PagineringKnapp aria-label=\"Første side\" onClick={() => handlePageChanged(1)}>1</PagineringKnapp>\n                </Show>\n\n                <PagineringKnapp aria-live=\"polite\" aria-label=\"Valgt side\">\n                    <strong>{currentPage}</strong>\n                </PagineringKnapp>\n\n                <Show if={!erPaSisteSide}>\n                    <PagineringKnapp aria-label=\"Siste side\" onClick={() => handlePageChanged(totalPages)}>\n                        {totalPages}\n                    </PagineringKnapp>\n                </Show>\n\n                <PagineringKnapp aria-label=\"Neste side\" disabled={erPaSisteSide} onClick={() => handlePageChanged(currentPage + 1)}>\n                    <HoyreChevron/>\n                </PagineringKnapp>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Sidetittel } from 'nav-frontend-typografi';\nimport styles from './Header.module.less';\n\nexport const Header = () => {\n\treturn (\n\t\t<header className={styles.header}>\n\t\t\t<Sidetittel>Tiltaksoversikt</Sidetittel>\n\t\t</header>\n\t);\n}\n","import { useState } from 'react';\nimport constate from 'constate';\nimport { TiltakStatus, TiltakType } from '../api/data/bruker';\n\nexport const [TiltaksoversiktFilterStoreProvider, useTiltaksoversiktFilter] = constate(() => {\n\tconst [navnFnrSok, setNavnFnrSok] = useState<string>('');\n\tconst [tiltakTyper, setTiltakTyper] = useState<TiltakType[]>([]);\n\tconst [tiltakStatuser, setTiltakStatuser] = useState<TiltakStatus[]>([]);\n\n\tconst leggTilTiltakType = (tiltakType: TiltakType) => {\n\t\tsetTiltakTyper(prevTyper => {\n\t\t\tif (prevTyper.includes(tiltakType)) {\n\t\t\t\treturn prevTyper;\n\t\t\t}\n\n\t\t\treturn [...prevTyper, tiltakType];\n\t\t});\n\t};\n\n\tconst fjernTilTiltakType = (tiltakType: TiltakType) => {\n\t\tsetTiltakTyper(prevTyper => {\n\t\t\treturn prevTyper.filter((type) => type !== tiltakType);\n\t\t});\n\t};\n\n\tconst leggTilTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatuser(prevStatuser => {\n\t\t\tif (prevStatuser.includes(tiltakStatus)) {\n\t\t\t\treturn prevStatuser;\n\t\t\t}\n\n\t\t\treturn [...prevStatuser, tiltakStatus];\n\t\t});\n\t};\n\n\tconst fjernTilTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatuser(prevStatuser => {\n\t\t\treturn prevStatuser.filter((status) => status !== tiltakStatus);\n\t\t});\n\t};\n\n\treturn {\n\t\tnavnFnrSok, setNavnFnrSok,\n\t\ttiltakTyper, leggTilTiltakType, fjernTilTiltakType,\n\t\ttiltakStatuser, leggTilTiltakStatus, fjernTilTiltakStatus\n\t};\n});\n","import React from 'react';\n\nimport { Checkbox, CheckboxGruppe, Input } from 'nav-frontend-skjema';\nimport Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { TiltakStatus, TiltakType } from '../../../api/data/bruker';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport { useTiltaksoversiktFilter } from '../../../store/tiltaksoversikt-filter-store';\n\nexport const FilterMenu = () => {\n\tconst {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatuser,\n\t\tleggTilTiltakStatus,\n\t\tfjernTilTiltakStatus,\n\t\ttiltakTyper,\n\t\tleggTilTiltakType,\n\t\tfjernTilTiltakType\n\t} = useTiltaksoversiktFilter();\n\n\treturn (\n\t\t<div>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Søk etter navn eller fnr\"\n\t\t\t\tclassName=\"blokk-m\"\n\t\t\t\tvalue={navnFnrSok}\n\t\t\t\tonChange={(e) => setNavnFnrSok(e.target.value)}\n\t\t\t/>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Tiltakstype\" className=\"blokk-m\" apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakType).map(type => (\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tkey={type}\n\t\t\t\t\t\t\t\tlabel={mapTiltakTypeTilTekst(type)}\n\t\t\t\t\t\t\t\tname=\"filter-tiltakstype\"\n\t\t\t\t\t\t\t\tchecked={tiltakTyper.includes(type)}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\t\tleggTilTiltakType(type);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfjernTilTiltakType(type);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Status\" className=\"blokk-m\" apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakStatus).map(status => (\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tkey={status}\n\t\t\t\t\t\t\t\tlabel={mapTiltakStatusTilTekst(status)}\n\t\t\t\t\t\t\t\tname=\"filter-tiltakstatus\"\n\t\t\t\t\t\t\t\tchecked={tiltakStatuser.includes(status)}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\t\tleggTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfjernTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\t\t</div>\n\t)\n}","import axios, { AxiosError, AxiosPromise, AxiosResponse } from 'axios';\nimport { APP_NAME } from '../utils/constants';\n\nexport const axiosInstance = axios.create({\n\twithCredentials: true,\n\theaders: { 'Nav-Consumer-Id': APP_NAME }\n});\n\nexport function isAnyLoading(...fetchers: { loading: boolean }[]): boolean {\n\treturn fetchers.some(f => f.loading);\n}\n\nexport function isAnyLoadingOrNotStarted(...fetchers: { data?: any; error?: any; loading: boolean }[]): boolean {\n\treturn fetchers.some(f => f.loading || (!f.error && !f.data));\n}\n\nexport function hasAnyFailed(...fetchers: { error?: AxiosError }[]): boolean {\n\treturn fetchers.some(f => f.error);\n}\n\nexport function ifResponseHasData<T>(callback: (data: T) => void): (res: AxiosResponse<T>) => AxiosPromise<T> {\n\treturn (res: AxiosResponse<T>) => {\n\t\tif (res.status < 300 && res.data) {\n\t\t\tcallback(res.data);\n\t\t}\n\t\treturn Promise.resolve(res);\n\t};\n}","export const APP_NAME = 'amt-tiltaksarrangor-flate';\n","import { AxiosPromise } from 'axios';\nimport { Bruker, TiltakStatus, TiltakType } from './data/bruker';\nimport { axiosInstance } from './utils';\n\nexport interface BrukerSokParams {\n\tfilter: {\n\t\tnavnFnrSok: string | undefined,\n\t\ttiltakTyper: TiltakType[],\n\t\ttiltakStatuser: TiltakStatus[]\n\t}\n}\n\nexport const brukerSok = (brukerSokParams: BrukerSokParams): AxiosPromise<Bruker[]> => {\n\treturn axiosInstance.post('/amt-tiltak/api/bruker/sok', brukerSokParams);\n};\n","import React, { useEffect, useState } from 'react';\nimport { UserTable } from '../../user-table/UserTable';\nimport { PaginationBar } from '../../user-table/pagination-bar/PaginationBar';\nimport { Header } from '../../header/Header';\nimport styles from './TiltaksoversiktPage.module.less';\nimport { FilterMenu } from './FilterMenu';\nimport { Bruker } from '../../../api/data/bruker';\nimport { useTiltaksoversiktFilter } from '../../../store/tiltaksoversikt-filter-store';\nimport { brukerSok } from '../../../api';\n\nexport const TiltaksoversiktPage = () => {\n\tconst { tiltakTyper, tiltakStatuser, navnFnrSok } = useTiltaksoversiktFilter();\n\tconst [brukere, setBrukere] = useState<Bruker[]>([]);\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\t// TODO: this must be debounced\n\t\tsetIsLoading(true);\n\n\t\tconst sokParams = {\n\t\t\tfilter: {\n\t\t\t\tnavnFnrSok,\n\t\t\t\ttiltakTyper,\n\t\t\t\ttiltakStatuser\n\t\t\t}\n\t\t};\n\n\t\tbrukerSok(sokParams)\n\t\t\t.then(res => setBrukere(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoading(false));\n\t}, [tiltakTyper, tiltakStatuser, navnFnrSok]);\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<main className={styles.tiltaksoversiktPage}>\n\t\t\t\t<FilterMenu/>\n\t\t\t\t<div>\n\t\t\t\t\t<PaginationBar totalUsers={brukere.length}/>\n\t\t\t\t\t<UserTable brukere={brukere} isLoading={isLoading} />\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { TiltaksoversiktFilterStoreProvider } from './tiltaksoversikt-filter-store';\n\ninterface StoreProviderProps {\n\tchildren: React.ReactNode;\n}\n\nconst StoreProvider = (props: StoreProviderProps) => {\n\treturn (\n\t\t<TiltaksoversiktFilterStoreProvider>\n\t\t\t{props.children}\n\t\t</TiltaksoversiktFilterStoreProvider>\n\t);\n};\n\nexport default StoreProvider;\n","import React from 'react';\nimport { TiltaksoversiktPage } from './component/page/tiltaksoversikt/TiltaksoversiktPage';\nimport StoreProvider from './store/store-provider';\n\nexport const App = () => {\n\treturn (\n\t\t<StoreProvider>\n\t\t\t<TiltaksoversiktPage/>\n\t\t</StoreProvider>\n\t);\n}\n","class Environment {\n\tget isProduction() {\n\t\treturn !this.isDevelopment;\n\t}\n\n\tget isDevelopment() {\n\t\treturn process.env.REACT_APP_DEV === 'true';\n\t}\n}\n\nconst env = new Environment();\n\nexport default env;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport { App } from './App';\nimport env from './utils/environment';\n\nif (env.isDevelopment) {\n    require('./mock');\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import faker from 'faker';\nimport { Bruker, TiltakStatus, TiltakType } from '../../api/data/bruker';\nimport { randBetween } from '../../utils';\n\nfaker.seed(486756783);\n\nconst randomFnr = (): string => {\n\tconst dag = randBetween(1, 31);\n\tconst mnd = randBetween(1, 12);\n\tconst ar = randBetween(0, 99);\n\tconst arhundre = randBetween(0, 99).toString().padStart(2, '0');\n\tconst kjonnsiffer = faker.datatype.boolean() ? 4 : 1;\n\tconst individsifre = `${arhundre}${kjonnsiffer}`;\n\tconst kontrollsifre = `${randBetween(0, 9)}${randBetween(0, 9)}`;\n\n\treturn `${dag.toString().padStart(2, '0')}${mnd.toString().padStart(2, '0')}${ar.toString().padStart(2, '0')}${individsifre}${kontrollsifre}`;\n}\n\nexport const lagBrukere = (antallBrukere: number): Bruker[] => {\n\tconst brukere: Bruker[] = [];\n\n\tfor (let i = 0; i < antallBrukere; i++) {\n\t\tconst bruker: Bruker = {\n\t\t\tfornavn: faker.name.firstName(),\n\t\t\tetternavn: faker.name.lastName(),\n\t\t\tfodselsdato: randomFnr().substring(0, 6),\n\t\t\ttiltakStatus: faker.random.objectElement(TiltakStatus) as TiltakStatus,\n\t\t\ttiltakType: faker.random.objectElement(TiltakType) as TiltakType,\n\t\t\ttiltak: 'Noe tekst'\n\t\t};\n\n\t\tbrukere.push(bruker);\n\t}\n\n\treturn brukere;\n};\n\nexport const mockBrukere = lagBrukere(55);\n","import { setupWorker, rest } from 'msw';\nimport { RequestHandler } from 'msw/lib/types/handlers/RequestHandler';\nimport { mockBrukere } from './data/brukere';\nimport { Bruker } from '../api/data/bruker';\nimport { BrukerSokParams } from '../api';\n\nconst mockBrukerSok = (params: BrukerSokParams): Bruker[] => {\n\treturn mockBrukere.filter((bruker) => {\n\t\tconst { navnFnrSok, tiltakStatuser, tiltakTyper } = params.filter;\n\t\tif (navnFnrSok?.trim()) {\n\t\t\tconst matcherFornavn = bruker.fornavn.toLowerCase().includes(navnFnrSok || '');\n\t\t\tconst matcherEtternavn = bruker.etternavn.toLowerCase().includes(navnFnrSok || '');\n\n\t\t\tif (!matcherFornavn && !matcherEtternavn) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (tiltakStatuser.length > 0) {\n\t\t\tif (!tiltakStatuser.includes(bruker.tiltakStatus)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (tiltakTyper.length > 0) {\n\t\t\tif (!tiltakTyper.includes(bruker.tiltakType)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t});\n};\n\nconst allHandlers: RequestHandler[] = [\n\trest.post('/amt-tiltak/api/bruker/sok', (req, res, ctx) => {\n\t\tconst sokParams = req.body as BrukerSokParams;\n\t\treturn res(ctx.delay(500), ctx.json(mockBrukerSok(sokParams)));\n\t})\n];\n\nsetupWorker(...allHandlers)\n\t.start({ serviceWorker: { url: process.env.PUBLIC_URL + '/mockServiceWorker.js' } })\n\t.catch(e => {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.error('Unable to setup mocked API endpoints', e);\n\t});","\nexport const lagBrukerNavn = (fornavn: string, etternavn: string): string => {\n\tconst manglerFornavn = fornavn === '';\n\tconst manglerEtternavn = etternavn === '';\n\n\tif (manglerFornavn && manglerEtternavn) {\n\t\treturn '';\n\t} else if (manglerFornavn || manglerEtternavn) {\n\t\t// Skal egentlig ikke skje, men hvis ett av navnene mangler så trenger vi ikke å separere med \",\"\n\t\treturn etternavn + fornavn;\n\t}\n\n\treturn etternavn + ', ' + fornavn;\n}\n\nexport const randBetween = (from: number, to: number): number => {\n\treturn Math.round(Math.random() * (to - from) + from);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBar\":\"paginationBar__2LzFU\",\"paginering\":\"paginering__2_g5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingenBrukere\":\"ingenBrukere__2tz2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header__GxQus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tiltaksoversiktPage\":\"tiltaksoversiktPage__gcUSe\"};"],"sourceRoot":""}