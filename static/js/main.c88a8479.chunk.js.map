{"version":3,"sources":["component/felles/spinner/Spinner.module.less","component/felles/card/Card.module.less","component/page/bruker-detaljer/label/Label.module.less","component/page/tiltakinstans-detaljer/bruker-oversikt/BrukerOversiktTabell.module.less","component/page/tiltakinstans-oversikt/TiltakinstansOversiktPage.module.less","api/utils.ts","utils/constants.ts","api/index.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/types.tsx","component/felles/spinner/Spinner.tsx","utils/bruker-utils.ts","component/felles/card/Card.tsx","component/page/bruker-detaljer/label/Label.tsx","utils/date-utils.ts","utils/text-mappers.tsx","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.tsx","component/page/bruker-detaljer/BrukerDetaljerPage.tsx","store/tiltaksoversikt-sok-store.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/Rad.tsx","utils/sortering-utils.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/TabellBody.tsx","component/page/tiltakinstans-detaljer/bruker-oversikt/TabellHeader.tsx","component/page/tiltakinstans-detaljer/bruker-oversikt/BrukerOversiktTabell.tsx","utils/filtrering-utils.ts","component/page/tiltakinstans-detaljer/FilterMeny.tsx","component/page/tiltakinstans-detaljer/TiltakinstansDetaljerPage.tsx","store/data-store.ts","store/valgt-virksomhet-store.ts","store/store-provider.tsx","component/page/login/LoginPage.tsx","component/felles/spa-lenkepanel/SpaLenkepanel.tsx","component/page/tiltakinstans-oversikt/tiltakinstans-liste/tiltakinstans-oversikt-panel/TiltakinstansOversiktPanel.tsx","utils/tiltak-utils.ts","component/page/tiltakinstans-oversikt/tiltakinstans-liste/TiltakinstansListe.tsx","component/page/tiltakinstans-oversikt/TiltaksvariantFilter.tsx","component/page/tiltakinstans-oversikt/TiltakinstansOversiktPage.tsx","component/felles/menu/Menu.tsx","App.tsx","utils/environment.ts","index.tsx","api/data/ansatt.ts","mock/utils/faker.ts","mock/data/ansatt.ts","mock/data/brukere.ts","mock/data/tiltak.ts","mock/data/index.ts","mock/dto-mapper.ts","mock/index.ts","api/data/deltager.ts","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.module.less","api/data/tiltak.ts","globals.module.less","component/page/tiltakinstans-detaljer/TiltakinstansDetaljerPage.module.less","component/page/login/LoginPage.module.less","component/page/tiltakinstans-oversikt/tiltakinstans-liste/tiltakinstans-oversikt-panel/TiltakinstansOversiktPanel.module.less","component/page/tiltakinstans-oversikt/tiltakinstans-liste/TiltaksinstansListe.module.less","component/felles/menu/Menu.module.less"],"names":["module","exports","axiosInstance","axios","create","withCredentials","headers","Kolonnenavn","Spinner","className","styles","spinner","type","lagKommaSeparertBrukerNavn","fornavn","etternavn","lagBrukerNavn","Card","props","cls","card","children","Label","title","value","label","formatDateStr","dateStr","dayjs","format","dateStrWithMonthName","mapTiltakInstansStatusTilEtikett","tiltakInstansStatus","TiltakInstansStatus","IKKE_STARTET","GJENNOMFORES","AVSLUTTET","mapTiltakDeltagerStatusTilEtikett","tiltakDeltagerStatus","TiltakDeltagerStatus","NY_BRUKER","AVBRUTT","FULLFORT","mapTiltakDeltagerStatusTilTekst","BrukerPaaTiltakDetaljer","bruker","navKontor","navVeileder","fodselsdato","tiltakInstans","telefon","epost","status","header","to","id","tilbakeLenke","headerTitle","detaljer","tiltakCard","navn","tiltak","tiltaksnavn","startdato","sluttdato","userInfoContent","adresse","BrukerDetaljerPage","brukerId","useParams","useState","setBruker","hasFailed","setHasFailed","useEffect","tiltakDeltagerId","get","then","res","data","catch","constate","navnFnrSok","setNavnFnrSok","tiltakStatusFilter","setTiltakStatusFilter","leggTilTiltakStatus","tiltakStatus","prevStatuser","includes","fjernFraTiltakStatus","filter","brukerSortering","setBrukerSortering","TiltaksoversiktSokStoreProvider","useTiltaksoversiktSokStore","SorteringType","sortClassName","name","kolonnenavn","Rad","userSort","NAVN","FODSELSDATO","START","SLUTT","STATUS","TabellBody","brukere","map","idx","sortering","mapSortDirectionToClassName","sorteringType","ASCENDING","DESCENDING","SortableHeader","onSortChange","NONE","nesteSorteringType","finnNesteSorteringType","ariaLabel","mapSortDirectionToText","role","aria-sort","aria-label","onClick","TabellHeader","IngenBrukereAlertstripe","ingenBrukere","aria-live","BrukerOversiktTabell","brukereFiltrert","statusFilter","navnFilter","trim","length","matcherFornavn","toLowerCase","matcherEtternavn","matcherNavn","brukerStatus","matcherStatus","filtrerteBrukere","setFiltrerteBrukere","harIngenBrukere","isLoading","sort","FilterMeny","placeholder","globalStyles","blokkM","onChange","e","target","tittel","apen","Object","values","checked","TiltakinstansDetaljerPage","params","tiltakinstans","setTiltakinstans","setBrukere","isLoadingDeltakere","setIsLoadingDeltakere","isLoadingTiltakinstans","setIsLoadingTiltakinstans","tiltakinstansId","console","error","finally","fetchDeltakerePaTiltakinstans","ledigePlasser","deltagerKapasitet","deltagerAntall","tiltaksoversiktPage","tilbakelenke","initialInnloggetAnsatt","innloggetAnsatt","setInnloggetAnsatt","DataStoreProvider","useDataStore","valgtVirksomhet","setValgtVirksomhet","ValgtVirksomhettoreProvider","useValgtVirksomhetStore","StoreProvider","LoginPage","currentLocation","window","location","href","loginUrl","loginPage","SpaLenkepanel","border","TiltakinstansOversiktPanel","deltakere","oppstart","content","undertekst","undefined","finnUnikeTiltak","tiltakInstanser","unikeTiltak","forEach","instans","find","t","tiltakskode","push","TiltakinstansListe","useMemo","cleanList","tiltakIdx","TiltaksvariantFilter","tiltakValg","valgteTyper","onTiltakValgtChanged","handleTiltakValgtChanged","valgtTiltakType","TiltakinstansOversiktPage","alleTiltakInstanser","setAlleTiltakInstanser","valgteTiltakTyper","setValgteTiltakTyper","setIsLoading","filtrerteTiltak","tiltaksleverandorId","page","Menu","tilgjengeligeVirksomheter","virksomheter","menu","nyValgtVirksomhet","virksomhet","virksomhetSelect","virksomhetsnavn","App","path","env","this","isDevelopment","process","locale","require","ReactDOM","render","StrictMode","document","getElementById","AnsattRolle","faker","seed","randBetween","min","max","datatype","number","randomUuid","uuid","randomFnr","dag","mnd","ar","arhundre","toString","padStart","kjonnsiffer","boolean","individsifre","kontrollsifre","mockInnloggetAnsattVirksomheter","virksomhetsnummer","roller","KOORDINATOR","VEILEDER","mockInnloggetAnsatt","mellomnavn","navEnheter","enhetId","lagMailFraNavn","mailDomain","mailNavn","replaceAll","lagMockTiltakDeltagerForTiltakInstans","random","objectElement","brukerFornavn","firstName","brukerEtternavn","lastName","veilederNavn","substring","phone","phoneNumber","date","past","toISOString","future","arrayElement","tiltakInstansId","tiltakInstansInfoListe","tiltakInstansNavn","tiltaktype","tiltaknavn","lagTiltakinstanse","tiltakInstansInfo","tiltakstype","mockTiltakInstanser","tiltakinstanser","antallInstanser","i","lagTiltakinstanser","mockTiltakDeltagere","deltagere","lagMockTiltakDeltagereForTiltakInstans","reduce","previousValue","currentValue","concat","tilTiltakInstansDto","allHandlers","rest","req","ctx","delay","json","deltager","b","tilTiltakDeltagerDetaljerDto","setupWorker","start","serviceWorker","url"],"mappings":"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","file":"static/js/main.c88a8479.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner__3ZKPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card__3qS7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"label__3GUHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingenBrukere\":\"ingenBrukere__5QNAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"page__3OcgV\"};","import axios, { AxiosError, AxiosPromise, AxiosResponse } from 'axios';\n\nimport { APP_NAME } from '../utils/constants';\n\nexport const axiosInstance = axios.create({\n\twithCredentials: true,\n\theaders: { 'Nav-Consumer-Id': APP_NAME },\n});\n\nexport function isAnyLoading(...fetchers: { loading: boolean }[]): boolean {\n\treturn fetchers.some((f) => f.loading);\n}\n\nexport function isAnyLoadingOrNotStarted(...fetchers: { data?: any; error?: any; loading: boolean }[]): boolean {\n\treturn fetchers.some((f) => f.loading || (!f.error && !f.data));\n}\n\nexport function hasAnyFailed(...fetchers: { error?: AxiosError }[]): boolean {\n\treturn fetchers.some((f) => f.error);\n}\n\nexport function ifResponseHasData<T>(callback: (data: T) => void): (res: AxiosResponse<T>) => AxiosPromise<T> {\n\treturn (res: AxiosResponse<T>) => {\n\t\tif (res.status < 300 && res.data) {\n\t\t\tcallback(res.data);\n\t\t}\n\t\treturn Promise.resolve(res);\n\t};\n}\n","export const APP_NAME = 'amt-tiltaksarrangor-flate';\n","import { AxiosPromise } from 'axios';\n\nimport {\n\tTiltakDeltagerDetaljerDto,\n\tTiltakDeltagerDto\n} from './data/deltager';\nimport { axiosInstance } from './utils';\nimport { TiltakInstansDto } from './data/tiltak';\nimport { InnloggetAnsatt } from './data/ansatt';\n\nexport const fetchInnloggetAnsatt = (): AxiosPromise<InnloggetAnsatt> => {\n\treturn axiosInstance.get('/amt-tiltak/api/tiltaksleverandor/ansatt/meg');\n};\n\nexport const fetchTiltakInstanser = (tiltaksleverandorId: string): AxiosPromise<TiltakInstansDto[]> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/tiltak?tiltaksleverandorId=${tiltaksleverandorId}`);\n};\n\nexport const fetchTiltakinstans = (tiltakinstansId: string): AxiosPromise<TiltakInstansDto> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/tiltak-instans/${tiltakinstansId}`);\n};\n\nexport const fetchDeltakerePaTiltakinstans = (tiltakinstansId: string): AxiosPromise<TiltakDeltagerDto[]> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/tiltak-instans/${tiltakinstansId}/deltagere`);\n};\n\nexport const fetchTiltakDeltagerDetaljer = (tiltakDeltagerId: string): AxiosPromise<TiltakDeltagerDetaljerDto> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/tiltak-deltager/${tiltakDeltagerId}`);\n};\n\n\n","import { SorteringType } from '../../../../utils/sortering-utils';\n\nexport enum Kolonnenavn {\n\tNAVN = 'NAVN',\n\tFODSELSDATO = 'FODSELSDATO',\n\tSTATUS = 'STATUS',\n\tSTART = 'START',\n\tSLUTT = 'SLUTT',\n}\n\nexport interface BrukerSortering {\n\tkolonnenavn: Kolonnenavn;\n\tsorteringType: SorteringType;\n}\n","import NavFrontendSpinner from 'nav-frontend-spinner';\nimport React from 'react';\n\nimport styles from './Spinner.module.less';\n\nexport const Spinner = () => {\n\treturn (\n\t\t<div className={styles.spinner}>\n\t\t\t<NavFrontendSpinner type=\"XL\" />\n\t\t</div>\n\t);\n};\n","export const lagKommaSeparertBrukerNavn = (fornavn: string, etternavn: string): string => `${etternavn}, ${fornavn}`;\n\nexport const lagBrukerNavn = (fornavn: string, etternavn: string): string => `${fornavn} ${etternavn}`;\n","import cls from 'classnames';\nimport React from 'react';\nimport styles from './Card.module.less';\n\ninterface CardProps {\n\tclassName?: string;\n\tchildren?: React.ReactNode;\n}\n\nexport const Card = (props: CardProps) => {\n\treturn (\n\t\t<section className={cls(styles.card, props.className)}>\n\t\t\t{props.children}\n\t\t</section>\n\t);\n};","import { Element, Normaltekst } from 'nav-frontend-typografi';\nimport cls from 'classnames';\nimport React from 'react';\nimport styles from './Label.module.less';\n\ninterface LabelProps {\n\ttitle: string;\n\tvalue: string | undefined | null;\n\tclassName?: string;\n}\n\nexport const Label = (props: LabelProps) => {\n\tconst { title, value, className } = props;\n\treturn (\n\t\t<div className={cls(styles.label, className)}>\n\t\t\t<Element>{title}</Element>\n\t\t\t<Normaltekst>{value}</Normaltekst>\n\t\t</div>\n\t);\n};","import dayjs from 'dayjs';\n\nimport { OrNothing } from './types/or-nothing';\n\nexport const formatDateStr = (dateStr: string) => {\n\treturn dayjs(dateStr).format('DD.MM.YYYY');\n};\n\nexport const dateStrWithMonthName = (dateStr: string | undefined): string => {\n\tif (!dateStr)\n\t\treturn '';\n\n\treturn dayjs(dateStr).format('DD. MMMM YYYY');\n};\n\nexport const formatDateInputStr = (dateStr: OrNothing<string>): string => {\n\treturn dateStr ? dayjs(dateStr).format('YYYY-MM-DD') : '';\n};\n\nexport const stringToDate = (dateStr: string): Date => dayjs(dateStr, 'YYYY-MM-DD').toDate();\n\nexport const sortDateNullsFirst = (d1Str: OrNothing<string>, d2Str: OrNothing<string>): number => {\n\tif (d1Str == null) {\n\t\treturn -1;\n\t}\n\n\tif (d2Str == null) {\n\t\treturn 1;\n\t}\n\n\tconst date1 = dayjs(d1Str);\n\tconst date2 = dayjs(d2Str);\n\n\tif (date1.isSame(date2)) {\n\t\treturn 0;\n\t}\n\n\treturn date1.isBefore(date2) ? -1 : 1;\n};\n","import { TiltakDeltagerStatus } from '../api/data/deltager';\nimport { EtikettFokus, EtikettInfo, EtikettSuksess } from 'nav-frontend-etiketter';\nimport React from 'react';\nimport { TiltakInstansStatus } from '../api/data/tiltak';\n\nexport const mapTiltakInstansStatusTilEtikett = (tiltakInstansStatus: TiltakInstansStatus) => {\n\tswitch (tiltakInstansStatus) {\n\t\tcase TiltakInstansStatus.IKKE_STARTET:\n\t\t\treturn <EtikettInfo>Gjennomføres</EtikettInfo>;\n\t\tcase TiltakInstansStatus.GJENNOMFORES:\n\t\t\treturn <EtikettSuksess>Gjennomføres</EtikettSuksess>;\n\t\tcase TiltakInstansStatus.AVSLUTTET:\n\t\t\treturn <EtikettFokus>Avsluttet</EtikettFokus>;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nexport const mapTiltakDeltagerStatusTilEtikett = (tiltakDeltagerStatus: TiltakDeltagerStatus) => {\n\tswitch (tiltakDeltagerStatus) {\n\t\tcase TiltakDeltagerStatus.GJENNOMFORES:\n\t\t\treturn <EtikettSuksess>Gjennomføres</EtikettSuksess>;\n\t\tcase TiltakDeltagerStatus.NY_BRUKER:\n\t\t\treturn <EtikettInfo>Ny bruker</EtikettInfo>;\n\t\tcase TiltakDeltagerStatus.AVBRUTT:\n\t\t\treturn <EtikettFokus>Avbrutt</EtikettFokus>;\n\t\tcase TiltakDeltagerStatus.FULLFORT:\n\t\t\treturn <EtikettSuksess>Fullført</EtikettSuksess>;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nexport const mapTiltakDeltagerStatusTilTekst = (tiltakDeltagerStatus: TiltakDeltagerStatus): string => {\n\tswitch (tiltakDeltagerStatus) {\n\t\tcase TiltakDeltagerStatus.GJENNOMFORES:\n\t\t\treturn 'Gjennomføres';\n\t\tcase TiltakDeltagerStatus.NY_BRUKER:\n\t\t\treturn 'Ny Bruker';\n\t\tcase TiltakDeltagerStatus.AVBRUTT:\n\t\t\treturn 'Avbrutt';\n\t\tcase TiltakDeltagerStatus.FULLFORT:\n\t\t\treturn 'Fullført';\n\t\tdefault:\n\t\t\treturn tiltakDeltagerStatus;\n\t}\n};","import { Normaltekst, Systemtittel } from 'nav-frontend-typografi';\nimport React from 'react';\n\nimport { TiltakDeltagerDetaljerDto } from '../../../api/data/deltager';\nimport { lagBrukerNavn } from '../../../utils/bruker-utils';\nimport styles from './BrukerPaaTiltakDetaljer.module.less';\nimport { Card } from '../../felles/card/Card';\nimport { Label } from './label/Label';\nimport { Link } from 'react-router-dom';\nimport { formatDateStr } from '../../../utils/date-utils';\nimport { mapTiltakDeltagerStatusTilEtikett } from '../../../utils/text-mappers';\n\nexport const BrukerPaaTiltakDetaljer = (props: { bruker: TiltakDeltagerDetaljerDto }) => {\n\tconst { navKontor, navVeileder, fornavn, etternavn, fodselsdato, tiltakInstans, telefon, epost, status } = props.bruker;\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={styles.header}>\n\t\t\t\t<Link to={`/instans/${tiltakInstans.id}`} className={styles.tilbakeLenke}>\n\t\t\t\t\tTilbake\n\t\t\t\t</Link>\n\t\t\t\t<Systemtittel className={styles.headerTitle}>{lagBrukerNavn(fornavn, etternavn)}</Systemtittel>\n\t\t\t\t<Normaltekst>{fodselsdato}</Normaltekst>\n\t\t\t</div>\n\n\t\t\t<div className={styles.detaljer}>\n\t\t\t\t<Card className={styles.tiltakCard}>\n\t\t\t\t\t<Systemtittel className=\"blokk-xxs\">{(tiltakInstans.navn)}</Systemtittel>\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">{tiltakInstans.tiltak.tiltaksnavn}</Normaltekst>\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">{formatDateStr(tiltakInstans.startdato)} - {formatDateStr(tiltakInstans.sluttdato)}</Normaltekst>\n\t\t\t\t\t{mapTiltakDeltagerStatusTilEtikett(status)}\n\t\t\t\t</Card>\n\n\t\t\t\t<div className={styles.userInfoContent}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Systemtittel className=\"blokk-s\">Deltaker</Systemtittel>\n\t\t\t\t\t\t<Label title=\"Telefon\" value={telefon} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Epost\" value={epost}/>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Systemtittel className=\"blokk-s\">NAV-kontor</Systemtittel>\n\t\t\t\t\t\t<Label title=\"Kontor\" value={navKontor.navn} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Adresse\" value={navKontor.adresse}/>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Systemtittel className=\"blokk-s\">NAV-veileder</Systemtittel>\n\t\t\t\t\t\t<Label title=\"Navn\" value={navVeileder?.navn} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Telefon\" value={navVeileder?.telefon} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Epost\" value={navVeileder?.epost}/>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { AlertStripeFeil } from 'nav-frontend-alertstriper';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchTiltakDeltagerDetaljer } from '../../../api';\nimport { TiltakDeltagerDetaljerDto } from '../../../api/data/deltager';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport { BrukerPaaTiltakDetaljer } from './BrukerPaaTiltakDetaljer';\n\nexport const BrukerDetaljerPage = () => {\n\tconst { brukerId } = useParams<{ brukerId: string }>();\n\tconst [bruker, setBruker] = useState<TiltakDeltagerDetaljerDto>();\n\tconst [hasFailed, setHasFailed] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tfetchTiltakDeltagerDetaljer(brukerId)\n\t\t\t.then((res) => setBruker(res.data))\n\t\t\t.catch(() => setHasFailed(true));\n\t}, [brukerId]);\n\n\treturn (\n\t\t<main>\n\t\t\t{bruker ? (\n\t\t\t\t<BrukerPaaTiltakDetaljer bruker={bruker} />\n\t\t\t) : hasFailed ? (\n\t\t\t\t<AlertStripeFeil>En feil oppstod</AlertStripeFeil>\n\t\t\t) : (\n\t\t\t\t<Spinner />\n\t\t\t)}\n\t\t</main>\n\t);\n};\n","import constate from 'constate';\nimport { useState } from 'react';\n\nimport { BrukerSortering } from '../component/page/tiltakinstans-detaljer/bruker-oversikt/types';\nimport { TiltakDeltagerStatus } from '../api/data/deltager';\n\nexport const [TiltaksoversiktSokStoreProvider, useTiltaksoversiktSokStore] = constate(() => {\n\tconst [navnFnrSok, setNavnFnrSok] = useState<string>('');\n\tconst [tiltakStatusFilter, setTiltakStatusFilter] = useState<TiltakDeltagerStatus[]>([]);\n\tconst [brukerSortering, setBrukerSortering] = useState<BrukerSortering>();\n\n\tconst leggTilTiltakStatus = (tiltakStatus: TiltakDeltagerStatus) => {\n\t\tsetTiltakStatusFilter((prevStatuser) => {\n\t\t\tif (prevStatuser.includes(tiltakStatus)) {\n\t\t\t\treturn prevStatuser;\n\t\t\t}\n\n\t\t\treturn [...prevStatuser, tiltakStatus];\n\t\t});\n\t};\n\n\tconst fjernFraTiltakStatus = (tiltakStatus: TiltakDeltagerStatus) => {\n\t\tsetTiltakStatusFilter((prevStatuser) => {\n\t\t\treturn prevStatuser.filter((status) => status !== tiltakStatus);\n\t\t});\n\t};\n\n\treturn {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatusFilter,\n\t\tleggTilTiltakStatus,\n\t\tfjernFraTiltakStatus,\n\t\tbrukerSortering,\n\t\tsetBrukerSortering,\n\t};\n});\n","import React from 'react';\n\nimport { lagKommaSeparertBrukerNavn } from '../../../../utils/bruker-utils';\nimport { formatDateStr } from '../../../../utils/date-utils';\nimport { BrukerSortering, Kolonnenavn } from './types';\nimport { Link } from 'react-router-dom';\nimport { TiltakDeltagerDto } from '../../../../api/data/deltager';\nimport { mapTiltakDeltagerStatusTilTekst } from '../../../../utils/text-mappers';\n\ninterface RadProps {\n\tidx: number;\n\tbruker: TiltakDeltagerDto;\n\tbrukerSortering?: BrukerSortering;\n}\n\nconst sortClassName = (name: Kolonnenavn, brukerSortering?: BrukerSortering): string | undefined => {\n\tif (!brukerSortering || name !== brukerSortering.kolonnenavn) {\n\t\treturn undefined;\n\t}\n\n\treturn 'tabell__td--sortert';\n};\n\nexport const Rad = (props: RadProps) => {\n\tconst { fodselsdato, fornavn, etternavn, id, startdato, sluttdato, status } = props.bruker;\n\tconst userSort = props.brukerSortering;\n\n\treturn (\n\t\t<tr key={id}>\n\t\t\t<td className={sortClassName(Kolonnenavn.NAVN, userSort)}>\n\t\t\t\t<Link to={`/user/${id}`}>\n\t\t\t\t\t{lagKommaSeparertBrukerNavn(fornavn, etternavn)}\n\t\t\t\t</Link>\n\t\t\t</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.FODSELSDATO, userSort)}>{fodselsdato}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.START, userSort)}>\n\t\t\t\t{startdato && formatDateStr(startdato)}\n\t\t\t</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.SLUTT, userSort)}>\n\t\t\t\t{sluttdato && formatDateStr(sluttdato)}\n\t\t\t</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.STATUS, userSort)}>{mapTiltakDeltagerStatusTilTekst(status)}</td>\n\t\t</tr>\n\t);\n};\n","export enum SorteringType {\n\tASCENDING = 'ascending',\n\tDESCENDING = 'descending',\n\tNONE = 'none',\n}\n\nexport const mapSortDirectionToText = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'stigende';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'synkende';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const mapSortDirectionToClassName = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'tabell__th--sortert-asc';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'tabell__th--sortert-desc';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const finnNesteSorteringType = (sorteringType: SorteringType): SorteringType => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn SorteringType.DESCENDING;\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn SorteringType.NONE;\n\t\tdefault:\n\t\t\t// This will be the default sort direction\n\t\t\treturn SorteringType.ASCENDING;\n\t}\n};\n","import React from 'react';\n\nimport { Rad } from './Rad';\nimport { BrukerSortering } from './types';\nimport { TiltakDeltagerDto } from '../../../../api/data/deltager';\n\ninterface TabellBodyProps {\n\tsortering?: BrukerSortering;\n\tbrukere: TiltakDeltagerDto[];\n}\n\nexport const TabellBody = (props: TabellBodyProps) => {\n\treturn (\n\t\t<tbody>\n\t\t\t{props.brukere.map((bruker, idx) => (\n\t\t\t\t<Rad idx={idx} bruker={bruker} brukerSortering={props.sortering} key={idx} />\n\t\t\t))}\n\t\t</tbody>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tSorteringType,\n\tfinnNesteSorteringType,\n\tmapSortDirectionToClassName,\n\tmapSortDirectionToText,\n} from '../../../../utils/sortering-utils';\nimport { BrukerSortering, Kolonnenavn } from './types';\n\ninterface TableHeaderProps {\n\ttitle: string;\n\tname: Kolonnenavn;\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nconst SortableHeader = (props: TableHeaderProps) => {\n\tconst { title, name, sortering, onSortChange } = props;\n\tconst sorteringType = name === sortering?.kolonnenavn ? sortering.sorteringType : SorteringType.NONE;\n\n\tconst nesteSorteringType = finnNesteSorteringType(sorteringType);\n\tconst ariaLabel = `Sorter ${title} ${mapSortDirectionToText(nesteSorteringType)}`;\n\n\treturn (\n\t\t<th role=\"columnheader\" className={mapSortDirectionToClassName(sorteringType)} aria-sort={sorteringType}>\n\t\t\t<button\n\t\t\t\taria-label={ariaLabel}\n\t\t\t\tonClick={() => onSortChange({ sorteringType: nesteSorteringType, kolonnenavn: name })}\n\t\t\t>\n\t\t\t\t{title}\n\t\t\t</button>\n\t\t</th>\n\t);\n};\n\ninterface UserTableHeaderProps {\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nexport const TabellHeader = (props: UserTableHeaderProps) => {\n\tconst { sortering, onSortChange } = props;\n\treturn (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t{/* TODO: Er mulig å gjøre koden mer DRY på bekostning av kompleksitet */}\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Etternavn, Fornavn\"\n\t\t\t\t\tname={Kolonnenavn.NAVN}\n\t\t\t\t/>\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Fødselsdato\"\n\t\t\t\t\tname={Kolonnenavn.FODSELSDATO}\n\t\t\t\t/>\n\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Start\" name={Kolonnenavn.START} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Slutt\" name={Kolonnenavn.SLUTT} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Status\" name={Kolonnenavn.STATUS} />\n\t\t\t</tr>\n\t\t</thead>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { useTiltaksoversiktSokStore } from '../../../../store/tiltaksoversikt-sok-store';\nimport { Spinner } from '../../../felles/spinner/Spinner';\nimport { TabellBody } from './TabellBody';\nimport { TabellHeader } from './TabellHeader';\nimport { filtrerBrukere } from '../../../../utils/filtrering-utils';\nimport styles from './BrukerOversiktTabell.module.less';\nimport 'nav-frontend-tabell-style';\nimport { TiltakDeltagerDto } from '../../../../api/data/deltager';\n\ninterface UserTableProps {\n\tbrukere: TiltakDeltagerDto[];\n\tisLoading: boolean;\n}\n\nconst IngenBrukereAlertstripe = () => (\n\t<AlertStripeInfo className={styles.ingenBrukere}>\n\t\t\t<span role=\"alert\" aria-live=\"polite\">\n\t\t\t\tFant ingen brukere\n\t\t\t</span>\n\t</AlertStripeInfo>\n);\n\nexport const BrukerOversiktTabell = (props: UserTableProps) => {\n\tconst { brukerSortering, setBrukerSortering, tiltakStatusFilter, navnFnrSok} = useTiltaksoversiktSokStore();\n\tconst brukereFiltrert = () => filtrerBrukere(props.brukere, tiltakStatusFilter, navnFnrSok);\n\tconst [filtrerteBrukere, setFiltrerteBrukere] = useState<TiltakDeltagerDto[]>(brukereFiltrert);\n\tconst harIngenBrukere = filtrerteBrukere.length === 0;\n\n\tuseEffect(() => {\n\t\tsetFiltrerteBrukere(brukereFiltrert());\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [props.brukere, tiltakStatusFilter, navnFnrSok]);\n\n\tif (props.isLoading) {\n\t\treturn <Spinner/>;\n\t}\n\n\tif (harIngenBrukere) {\n\t\treturn <IngenBrukereAlertstripe/>;\n\t}\n\n\treturn (\n\t\t<table className=\"tabell tabell--stripet\">\n\t\t\t<TabellHeader sortering={brukerSortering} onSortChange={(sort) => setBrukerSortering(sort)} />\n\t\t\t<TabellBody brukere={filtrerteBrukere} sortering={brukerSortering} />\n\t\t</table>\n\t);\n};\n","import { TiltakDeltagerDto, TiltakDeltagerStatus } from '../api/data/deltager';\n\nconst matcherNavn = (bruker: {fornavn: string, etternavn: string}, navnFilter: string | undefined) => {\n    if(!navnFilter || navnFilter.trim().length === 0) return true;\n\n    const matcherFornavn = bruker.fornavn.toLowerCase().includes(navnFilter.toLowerCase());\n    const matcherEtternavn = bruker.etternavn.toLowerCase().includes(navnFilter.toLowerCase());\n\n    return matcherFornavn || matcherEtternavn;\n}\n\nconst matcherStatus = (statusFilter: TiltakDeltagerStatus[], brukerStatus: TiltakDeltagerStatus) => {\n    if (statusFilter.length === 0) return true;\n    return statusFilter.includes(brukerStatus)\n}\n\nexport const filtrerBrukere = (brukere: TiltakDeltagerDto[], statusFilter: TiltakDeltagerStatus[], navnFilter: string): TiltakDeltagerDto[] => {\n   return brukere\n        .filter(bruker => matcherNavn(bruker, navnFilter))\n        .filter(bruker => matcherStatus(statusFilter, bruker.status))\n};","import Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { Checkbox, CheckboxGruppe, Input } from 'nav-frontend-skjema';\nimport React from 'react';\n\nimport globalStyles from '../../../globals.module.less';\nimport { useTiltaksoversiktSokStore } from '../../../store/tiltaksoversikt-sok-store';\nimport { mapTiltakDeltagerStatusTilTekst } from '../../../utils/text-mappers';\nimport { TiltakDeltagerStatus } from '../../../api/data/deltager';\n\nexport const FilterMeny = () => {\n\tconst {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatusFilter,\n\t\tleggTilTiltakStatus,\n\t\tfjernFraTiltakStatus,\n\t} = useTiltaksoversiktSokStore();\n\n\treturn (\n\t\t<div>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Søk etter navn eller fødselsdato\"\n\t\t\t\tclassName={globalStyles.blokkM}\n\t\t\t\tvalue={navnFnrSok}\n\t\t\t\tonChange={(e) => setNavnFnrSok(e.target.value)}\n\t\t\t/>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Status\" className={globalStyles.blokkM} apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakDeltagerStatus).map((status) => (\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tkey={status}\n\t\t\t\t\t\t\tlabel={mapTiltakDeltagerStatusTilTekst(status)}\n\t\t\t\t\t\t\tname=\"filter-tiltakstatus\"\n\t\t\t\t\t\t\tchecked={tiltakStatusFilter.includes(status)}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\tleggTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfjernFraTiltakStatus(status);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\t\t</div>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { fetchDeltakerePaTiltakinstans, fetchTiltakinstans } from '../../../api';\nimport { BrukerOversiktTabell } from './bruker-oversikt/BrukerOversiktTabell';\nimport { FilterMeny } from './FilterMeny';\nimport styles from './TiltakinstansDetaljerPage.module.less';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport { Normaltekst, Systemtittel } from 'nav-frontend-typografi';\nimport { AlertStripeFeil } from 'nav-frontend-alertstriper';\nimport { dateStrWithMonthName } from '../../../utils/date-utils';\nimport { TiltakInstansDto } from '../../../api/data/tiltak';\nimport { TiltakDeltagerDto } from '../../../api/data/deltager';\nimport { mapTiltakInstansStatusTilEtikett } from '../../../utils/text-mappers';\n\ninterface TiltakinstansDetaljerPageRouteParams {\n\ttiltakinstansId: string;\n}\n\nexport const TiltakinstansDetaljerPage = () => {\n\tconst params = useParams<TiltakinstansDetaljerPageRouteParams>();\n\n\tconst [tiltakinstans, setTiltakinstans] = useState<TiltakInstansDto>();\n\tconst [brukere, setBrukere] = useState<TiltakDeltagerDto[]>([]);\n\n\tconst [isLoadingDeltakere, setIsLoadingDeltakere] = useState<boolean>(true);\n\tconst [isLoadingTiltakinstans, setIsLoadingTiltakinstans] = useState<boolean>(true);\n\n\tuseEffect(() => {\n\t\tfetchTiltakinstans(params.tiltakinstansId)\n\t\t\t.then(res => setTiltakinstans(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoadingTiltakinstans(false))\n\n\t\tfetchDeltakerePaTiltakinstans(params.tiltakinstansId)\n\t\t\t.then((res) => setBrukere(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoadingDeltakere(false));\n\t}, [params.tiltakinstansId]);\n\n\tif (isLoadingDeltakere || isLoadingTiltakinstans) {\n\t\treturn <Spinner/>;\n\t}\n\n\tif (!tiltakinstans) {\n\t\treturn <AlertStripeFeil>Noe gikk galt</AlertStripeFeil>;\n\t}\n\n\tconst ledigePlasser = tiltakinstans.deltagerKapasitet - tiltakinstans.deltagerAntall;\n\n\treturn (\n\t\t<main className={styles.tiltaksoversiktPage}>\n\t\t\t<section>\n\t\t\t\t<Link to=\"/\" className={styles.tilbakelenke}>Tilbake</Link>\n\n\t\t\t\t<div className=\"blokk-m\">\n\t\t\t\t\t<Systemtittel className=\"blokk-xxs\">{tiltakinstans.navn}</Systemtittel>\n\t\t\t\t\t<Normaltekst>Oppstart: {dateStrWithMonthName(tiltakinstans.startdato)}</Normaltekst>\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">Sluttdato: {dateStrWithMonthName(tiltakinstans.sluttdato)}</Normaltekst>\n\n\t\t\t\t\t{mapTiltakInstansStatusTilEtikett(tiltakinstans.status)}\n\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">\n\t\t\t\t\t\tLedige plasser: {ledigePlasser} &nbsp;&nbsp; Totalt: {tiltakinstans.deltagerKapasitet}\n\t\t\t\t\t</Normaltekst>\n\t\t\t\t\t<Normaltekst>{tiltakinstans.tiltak.tiltaksnavn}</Normaltekst>\n\t\t\t\t</div>\n\n\t\t\t\t<FilterMeny />\n\t\t\t</section>\n\n\t\t\t<section>\n\t\t\t\t<BrukerOversiktTabell brukere={brukere} isLoading={isLoadingTiltakinstans} />\n\t\t\t</section>\n\t\t</main>\n\t);\n};\n","import constate from 'constate';\nimport { useState } from 'react';\nimport { InnloggetAnsatt } from '../api/data/ansatt';\n\nexport const [DataStoreProvider, useDataStore] = constate((props: {initialInnloggetAnsatt: InnloggetAnsatt}) => {\n\tconst [innloggetAnsatt, setInnloggetAnsatt] = useState<InnloggetAnsatt>(props.initialInnloggetAnsatt);\n\n\treturn {\n\t\tinnloggetAnsatt,\n\t\tsetInnloggetAnsatt,\n\t};\n});","import constate from 'constate';\nimport { useState } from 'react';\n\ninterface ValgtVirksomhet {\n\tid: string;\n\tvirksomhetsnavn: string;\n\tvirksomhetsnummer: string;\n}\n\nexport const [ValgtVirksomhettoreProvider, useValgtVirksomhetStore] = constate(() => {\n\tconst [valgtVirksomhet, setValgtVirksomhet] = useState<ValgtVirksomhet>();\n\n\treturn {\n\t\tvalgtVirksomhet,\n\t\tsetValgtVirksomhet,\n\t};\n});","import React from 'react';\n\nimport { DataStoreProvider } from './data-store';\nimport { ValgtVirksomhettoreProvider } from './valgt-virksomhet-store';\nimport { TiltaksoversiktSokStoreProvider } from './tiltaksoversikt-sok-store';\nimport { InnloggetAnsatt } from '../api/data/ansatt';\n\ninterface StoreProviderProps {\n\tinnloggetAnsatt: InnloggetAnsatt;\n\tchildren: React.ReactNode;\n}\n\nconst StoreProvider = (props: StoreProviderProps) => {\n\treturn (\n\t\t<DataStoreProvider initialInnloggetAnsatt={props.innloggetAnsatt}>\n\t\t\t<ValgtVirksomhettoreProvider>\n\t\t\t\t<TiltaksoversiktSokStoreProvider>\n\t\t\t\t\t{props.children}\n\t\t\t\t</TiltaksoversiktSokStoreProvider>\n\t\t\t</ValgtVirksomhettoreProvider>\n\t\t</DataStoreProvider>\n\t);\n};\n\nexport default StoreProvider;\n","import React from 'react';\nimport cls from 'classnames';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport { AlertStripeAdvarsel } from 'nav-frontend-alertstriper';\nimport styles from './LoginPage.module.less';\n\nexport const LoginPage = () => {\n\tconst currentLocation = window.location.href;\n\tconst loginUrl = `/auth-proxy/oauth2/login?redirect_uri=${currentLocation}`;\n\n\treturn (\n\t\t<main className={styles.loginPage}>\n\t\t\t<Systemtittel className={cls('blokk-xl', styles.title)}>Hei koordinator hos tiltaksarrangør!</Systemtittel>\n\n\t\t\t<AlertStripeAdvarsel className=\"blokk-xl\">\n\t\t\t\tDette er en første løsning til pilot.\n\t\t\t\tKun de som har avtalt med Team KOMET og har riktig innstilling gjennom Altinn vil kunne få tilgang til tjenesten.\n\t\t\t</AlertStripeAdvarsel>\n\n\t\t\t<a className=\"knapp knapp--hoved\" href={loginUrl}>Logg inn</a>\n\t\t</main>\n\t);\n};","import React from 'react';\nimport cls from 'classnames';\nimport { Link } from 'react-router-dom';\nimport './SpaLenkepanel.less';\n\ninterface SpaLenkepanelProps {\n\tto: string;\n\tborder?: boolean;\n\tchildren?: React.ReactNode;\n\tclassName?: string;\n}\n\nexport const SpaLenkepanel = (props: SpaLenkepanelProps) => {\n\tconst { to, border, children, className } = props\n\n\treturn (\n\t\t<Link to={to} className={cls('lenkepanel', {'lenkepanel--border': border}, className)}>\n\t\t\t{children}\n\t\t\t<span className=\"lenkepanel__indikator\"/>\n\t\t</Link>\n\t)\n};\n","import React from 'react';\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\nimport { SpaLenkepanel } from '../../../../felles/spa-lenkepanel/SpaLenkepanel';\nimport styles from './TiltakinstansOversiktPanel.module.less';\nimport { formatDateStr } from '../../../../../utils/date-utils';\n\ninterface TiltakinstansOversiktPanelProps {\n    id: string,\n    navn: string,\n    deltakere?: number\n    oppstart?: string,\n}\n\nexport const TiltakinstansOversiktPanel = (props: TiltakinstansOversiktPanelProps) => {\n    const {id, navn, deltakere, oppstart} = props\n\n    return (\n        <SpaLenkepanel to={`/instans/${id}`} border>\n            <div className={styles.content} >\n                <Element className=\"blokk-xxs\">{navn}</Element>\n                <div className={styles.undertekst}>\n                    { deltakere !== undefined && <Normaltekst>{`Antall deltakere: ${deltakere}`}</Normaltekst> }\n                    { oppstart && <Normaltekst>{`Oppstart: ${formatDateStr(oppstart)}`}</Normaltekst> }\n                </div>\n            </div>\n        </SpaLenkepanel>\n    )\n}\n","import { TiltakDto, TiltakInstansDto } from '../api/data/tiltak';\n\nexport const finnUnikeTiltak = (tiltakInstanser: TiltakInstansDto[]): TiltakDto[] => {\n\tconst unikeTiltak: TiltakDto[] = [];\n\n\ttiltakInstanser.forEach(instans => {\n\t\tconst tiltak = unikeTiltak.find(t => t.tiltakskode === instans.tiltak.tiltakskode)\n\n\t\tif (!tiltak) {\n\t\t\tunikeTiltak.push(instans.tiltak)\n\t\t}\n\t});\n\n\treturn unikeTiltak;\n};\n\nexport const finnTiltakInstanser = (tiltakskode: string, tiltakInstanser: TiltakInstansDto[]): TiltakInstansDto[] => {\n\treturn tiltakInstanser.filter(instans => instans.tiltak.tiltakskode === tiltakskode);\n};","import React, { useMemo } from 'react';\nimport { TiltakinstansOversiktPanel } from './tiltakinstans-oversikt-panel/TiltakinstansOversiktPanel';\nimport styles from './TiltaksinstansListe.module.less';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { TiltakDto, TiltakInstansDto } from '../../../../api/data/tiltak';\nimport { finnTiltakInstanser, finnUnikeTiltak } from '../../../../utils/tiltak-utils';\n\ninterface TiltakinstansListeProps {\n\ttiltakInstanser: TiltakInstansDto[];\n}\n\n\n\nexport const TiltakinstansListe = (props: TiltakinstansListeProps) => {\n\n\tconst unikeTiltak = useMemo<TiltakDto[]>(() => {\n\t\treturn finnUnikeTiltak(props.tiltakInstanser)\n\t}, [props.tiltakInstanser]);\n\n\tif (props.tiltakInstanser.length === 0) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AlertStripeInfo>Ingen tiltak</AlertStripeInfo>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ul className={styles.cleanList}>\n\t\t\t{unikeTiltak.map((tiltak, tiltakIdx) => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={tiltakIdx} className=\"blokk-l\">\n\t\t\t\t\t\t<Systemtittel className=\"blokk-m\">{tiltak.tiltaksnavn}</Systemtittel>\n\t\t\t\t\t\t<ul className={styles.cleanList}>\n\t\t\t\t\t\t\t{finnTiltakInstanser(tiltak.tiltakskode, props.tiltakInstanser).map((tiltakInstans) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={tiltakInstans.id} className=\"blokk-s\">\n\t\t\t\t\t\t\t\t\t\t<TiltakinstansOversiktPanel\n\t\t\t\t\t\t\t\t\t\t\tid={tiltakInstans.id}\n\t\t\t\t\t\t\t\t\t\t\tnavn={tiltakInstans.navn}\n\t\t\t\t\t\t\t\t\t\t\toppstart={tiltakInstans.startdato}\n\t\t\t\t\t\t\t\t\t\t\tdeltakere={tiltakInstans.deltagerAntall}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t);\n};","import Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport React, { ChangeEvent } from 'react';\n\nimport globalStyles from '../../../globals.module.less';\nimport { Checkbox, CheckboxGruppe } from 'nav-frontend-skjema';\n\ninterface Tiltak {\n\ttype: string;\n\tnavn: string;\n}\n\ninterface TiltaksvariantFilterProps {\n\ttiltakValg: Tiltak[];\n\tvalgteTyper: string[];\n\tonTiltakValgtChanged: (valgteTyper: string[]) => void;\n}\n\nexport const TiltaksvariantFilter = (props: TiltaksvariantFilterProps) => {\n\tconst { tiltakValg, valgteTyper, onTiltakValgtChanged } = props;\n\n\tconst handleTiltakValgtChanged = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst valgtTiltakType = e.target.value;\n\n\t\tif (e.target.checked) {\n\t\t\tonTiltakValgtChanged([...valgteTyper, valgtTiltakType]);\n\t\t} else {\n\t\t\tonTiltakValgtChanged(valgteTyper.filter(t => t !== valgtTiltakType));\n\t\t}\n\t}\n\n\treturn (\n\t\t<Ekspanderbartpanel tittel=\"Tiltaksvarianter\" className={globalStyles.blokkM} apen>\n\t\t\t<CheckboxGruppe>\n\t\t\t\t{tiltakValg.map((tiltak) => (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tkey={tiltak.type}\n\t\t\t\t\t\tlabel={tiltak.navn}\n\t\t\t\t\t\tname=\"filter-tiltakstype\"\n\t\t\t\t\t\tvalue={tiltak.type}\n\t\t\t\t\t\tchecked={valgteTyper.includes(tiltak.type)}\n\t\t\t\t\t\tonChange={handleTiltakValgtChanged}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</CheckboxGruppe>\n\t\t</Ekspanderbartpanel>\n\t);\n};","import React, { useEffect, useState } from 'react';\nimport { TiltakinstansListe } from './tiltakinstans-liste/TiltakinstansListe';\nimport styles from './TiltakinstansOversiktPage.module.less';\nimport { fetchTiltakInstanser } from '../../../api';\nimport { TiltakInstansDto } from '../../../api/data/tiltak';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport { TiltaksvariantFilter } from './TiltaksvariantFilter';\nimport { finnUnikeTiltak } from '../../../utils/tiltak-utils';\n\nexport const TiltakinstansOversiktPage = () => {\n    const [alleTiltakInstanser, setAlleTiltakInstanser] = useState<TiltakInstansDto[]>([]);\n    const [valgteTiltakTyper, setValgteTiltakTyper] = useState<string[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    const filtrerteTiltak = valgteTiltakTyper.length > 0\n        ? alleTiltakInstanser.filter(tiltakInstans => valgteTiltakTyper.includes(tiltakInstans.tiltak.tiltakskode))\n        : alleTiltakInstanser;\n\n    const tiltakValg = finnUnikeTiltak(alleTiltakInstanser)\n        .map(tiltak => ({ type: tiltak.tiltakskode, navn: tiltak.tiltaksnavn }));\n\n    useEffect(() => {\n        fetchTiltakInstanser('TODO')\n            .then(res => setAlleTiltakInstanser(res.data))\n            .catch(console.error) // TODO: vis feil i alertstripe\n            .finally(() => setIsLoading(false));\n    }, []);\n\n    const handleOnTiltakValgtChanged = (valgteTyper: string[]) => {\n        setValgteTiltakTyper(valgteTyper);\n    };\n\n    if (isLoading) {\n        return <Spinner/>;\n    }\n\n    return (\n        <main className={styles.page}>\n            <section>\n                <TiltaksvariantFilter\n                    tiltakValg={tiltakValg}\n                    valgteTyper={valgteTiltakTyper}\n                    onTiltakValgtChanged={handleOnTiltakValgtChanged}\n                />\n            </section>\n\n            <section>\n                <TiltakinstansListe tiltakInstanser={filtrerteTiltak}/>\n            </section>\n        </main>\n    )\n}\n","import styles from './Menu.module.less';\nimport { Normaltekst } from 'nav-frontend-typografi';\nimport { useValgtVirksomhetStore } from '../../../store/valgt-virksomhet-store';\nimport React from 'react';\nimport { useDataStore } from '../../../store/data-store';\n\nexport const Menu = () => {\n\tconst { innloggetAnsatt } = useDataStore();\n\tconst { valgtVirksomhet, setValgtVirksomhet } = useValgtVirksomhetStore();\n\n\tconst tilgjengeligeVirksomheter = innloggetAnsatt?.virksomheter || [];\n\n\tconst onValgtVirksomhetChanged = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst id = e.target.value;\n\t\tconst nyValgtVirksomhet = tilgjengeligeVirksomheter.find(virksomhet => virksomhet.id === id);\n\n\t\tif (nyValgtVirksomhet) {\n\t\t\tsetValgtVirksomhet(nyValgtVirksomhet);\n\t\t}\n\t};\n\n\treturn (\n\t\t<header className={styles.menu}>\n\t\t\t<div>\n\t\t\t\t<Normaltekst className=\"blokk-xxs\">Karoline Koordinatorsen</Normaltekst>\n\n\t\t\t\t<select\n\t\t\t\t\tid=\"virksomheter\"\n\t\t\t\t\tname=\"virksomheter\"\n\t\t\t\t\tvalue={valgtVirksomhet?.id}\n\t\t\t\t\tonChange={onValgtVirksomhetChanged}\n\t\t\t\t\tclassName={styles.virksomhetSelect}\n\t\t\t\t>\n\t\t\t\t\t{tilgjengeligeVirksomheter.map(virksomhet => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<option key={virksomhet.id} value={virksomhet.id}>\n\t\t\t\t\t\t\t\t{virksomhet.virksomhetsnavn}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { BrukerDetaljerPage } from './component/page/bruker-detaljer/BrukerDetaljerPage';\nimport { TiltakinstansDetaljerPage } from './component/page/tiltakinstans-detaljer/TiltakinstansDetaljerPage';\nimport StoreProvider from './store/store-provider';\nimport { LoginPage } from './component/page/login/LoginPage';\nimport { Spinner } from './component/felles/spinner/Spinner';\nimport { fetchInnloggetAnsatt } from './api';\nimport { TiltakinstansOversiktPage } from './component/page/tiltakinstans-oversikt/TiltakinstansOversiktPage';\nimport { Menu } from './component/felles/menu/Menu';\nimport { InnloggetAnsatt } from './api/data/ansatt';\n\nexport const App = () => {\n\tconst [innloggetAnsatt, setInnloggetAnsatt] = useState<InnloggetAnsatt>();\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\n\n\tuseEffect(() => {\n\t\tfetchInnloggetAnsatt()\n\t\t\t.then((res) => setInnloggetAnsatt(res.data))\n\t\t\t.catch(console.error)\n\t\t\t.finally(() => setIsLoading(false));\n\t}, []);\n\n\tif (isLoading) {\n\t\treturn <Spinner/>;\n\t}\n\n\tif (!innloggetAnsatt) {\n\t\treturn <LoginPage />;\n\t}\n\n\treturn (\n\t\t<StoreProvider innloggetAnsatt={innloggetAnsatt}>\n\t\t\t<Menu/>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/user/:brukerId\">\n\t\t\t\t\t\t<BrukerDetaljerPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/instans/:tiltakinstansId\">\n\t\t\t\t\t\t<TiltakinstansDetaljerPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<TiltakinstansOversiktPage/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</StoreProvider>\n\t);\n};\n","class Environment {\n\tget isProduction() {\n\t\treturn !this.isDevelopment;\n\t}\n\n\tget isDevelopment() {\n\t\treturn process.env.REACT_APP_DEV === 'true';\n\t}\n}\n\nconst env = new Environment();\n\nexport default env;\n","import 'dayjs/locale/nb';\n\nimport './index.less';\n\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport env from './utils/environment';\n\ndayjs.locale('nb');\n\nif (env.isDevelopment) {\n\trequire('./mock');\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","\nexport enum AnsattRolle {\n\tKOORDINATOR = 'KOORDINATOR',\n\tVEILEDER = 'VEILEDER'\n}\n\nexport interface Virksomhet {\n\tid: string,\n\tvirksomhetsnummer: string,\n\tvirksomhetsnavn: string,\n\troller: AnsattRolle[]\n}\n\nexport interface InnloggetAnsatt {\n\tid: string;\n\tfornavn: string;\n\tmellomnavn: string | undefined | null;\n\tetternavn: string;\n\tvirksomheter: Virksomhet[]\n}\n","import faker from 'faker';\n\nfaker.locale = 'nb_NO';\nfaker.seed(486756783);\n\nexport const randBetween = (min: number, max: number): number => {\n\treturn faker.datatype.number({ min, max });\n};\n\nexport const randomUuid = (): string => {\n\treturn faker.datatype.uuid()\n};\n\nexport const randomFnr = (): string => {\n\tconst dag = randBetween(1, 31);\n\tconst mnd = randBetween(1, 12);\n\tconst ar = randBetween(0, 99);\n\tconst arhundre = randBetween(0, 99).toString().padStart(2, '0');\n\tconst kjonnsiffer = faker.datatype.boolean() ? 4 : 1;\n\tconst individsifre = `${arhundre}${kjonnsiffer}`;\n\tconst kontrollsifre = `${randBetween(0, 9)}${randBetween(0, 9)}`;\n\n\treturn `${dag.toString().padStart(2, '0')}${mnd.toString().padStart(2, '0')}${ar\n\t\t.toString()\n\t\t.padStart(2, '0')}${individsifre}${kontrollsifre}`;\n};","import { AnsattRolle, InnloggetAnsatt, Virksomhet } from '../../api/data/ansatt';\nimport { randomUuid } from '../utils/faker';\n\nexport const mockInnloggetAnsattVirksomheter: Virksomhet[] = [\n\t{\n\t\tid: randomUuid(),\n\t\tvirksomhetsnavn: 'Muligheter AS',\n\t\tvirksomhetsnummer: '123456789',\n\t\troller: [AnsattRolle.KOORDINATOR, AnsattRolle.VEILEDER]\n\t},\n\t{\n\t\tid: randomUuid(),\n\t\tvirksomhetsnavn: 'Tiltak til alle AS',\n\t\tvirksomhetsnummer: '987654321',\n\t\troller: [AnsattRolle.VEILEDER]\n\t}\n];\n\nexport const mockInnloggetAnsatt: InnloggetAnsatt = {\n\tid: randomUuid(),\n\tfornavn: 'Karoline',\n\tmellomnavn: undefined,\n\tetternavn: 'Koordinatorsen',\n\tvirksomheter: mockInnloggetAnsattVirksomheter\n};\n","import faker from 'faker';\n\nimport { TiltakDeltagerStatus } from '../../api/data/deltager';\nimport { randomFnr, randomUuid } from '../utils/faker';\nimport { MockTiltakDeltager, MockTiltakInstans } from './index';\n\nconst navEnheter: { enhetId: string, navn: string, adresse: string }[] = [\n\t{\n\t\tenhetId: '0219',\n\t\tnavn: 'NAV Bærum',\n\t\tadresse: 'Kontorveien 37, 4021 Sted'\n\t},\n\t{\n\t\tenhetId: '0425',\n\t\tnavn: 'NAV Åsnes',\n\t\tadresse: 'Kontorveien 37, 4021 Sted'\n\t},\n\t{\n\t\tenhetId: '1500',\n\t\tnavn: 'NAV Møre og Romsdal',\n\t\tadresse: 'Kontorveien 37, 4021 Sted'\n\t},\n\t{\n\t\tenhetId: '0104',\n\t\tnavn: 'NAV Moss',\n\t\tadresse: 'Kontorveien 37, 4021 Sted'\n\t},\n];\n\nconst lagMailFraNavn = (navn: string, mailDomain: string): string => {\n\tconst mailNavn = navn\n\t\t.replaceAll(' ', '.')\n\t\t.replaceAll('æ', 'ae')\n\t\t.replaceAll('ø', 'o')\n\t\t.replaceAll('å', 'a')\n\t\t.toLowerCase();\n\n\treturn `${mailNavn}@${mailDomain}`;\n};\n\nexport const lagMockTiltakDeltagereForTiltakInstans = (tiltakInstans: MockTiltakInstans): MockTiltakDeltager[] => {\n\tconst deltagere: MockTiltakDeltager[] = [];\n\n\tfor (let i = 0; i < tiltakInstans.deltagerAntall; i++) {\n\t\tdeltagere.push(lagMockTiltakDeltagerForTiltakInstans(tiltakInstans));\n\t}\n\n\treturn deltagere\n};\n\nconst lagMockTiltakDeltagerForTiltakInstans = (tiltakInstans: MockTiltakInstans): MockTiltakDeltager => {\n\tconst status = faker.random.objectElement(TiltakDeltagerStatus) as TiltakDeltagerStatus;\n\n\tconst brukerFornavn = faker.name.firstName();\n\tconst brukerEtternavn = faker.name.lastName();\n\n\tconst veilederNavn = faker.name.firstName() + ' ' + faker.name.lastName();\n\n\treturn {\n\t\tid: randomUuid(),\n\t\tfornavn: brukerFornavn,\n\t\tmellomnavn: undefined,\n\t\tetternavn: brukerEtternavn,\n\t\tfodselsdato: randomFnr().substring(0, 6),\n\t\tepost: lagMailFraNavn(`${brukerFornavn} ${brukerEtternavn}`, 'example.com'),\n\t\ttelefon: faker.phone.phoneNumber(),\n\t\tstartdato: faker.date.past().toISOString(),\n\t\tsluttdato: faker.date.future().toISOString(),\n\t\tstatus: status,\n\t\tnavKontor: faker.random.arrayElement(navEnheter),\n\t\tnavVeileder: {\n\t\t\tepost: lagMailFraNavn(veilederNavn, 'nav.no'),\n\t\t\tnavn: veilederNavn,\n\t\t\ttelefon: faker.phone.phoneNumber()\n\t\t},\n\t\ttiltakInstansId: tiltakInstans.id\n\t};\n};\n","import { TiltakInstansStatus } from '../../api/data/tiltak';\nimport { randBetween, randomUuid } from '../utils/faker';\nimport * as faker from 'faker';\nimport { MockTiltakInstans } from './index';\n\ninterface TiltakInstansInfo {\n\ttiltakInstansNavn: string;\n\ttiltaktype: string;\n\ttiltaknavn: string;\n}\n\nconst tiltakInstansInfoListe: TiltakInstansInfo[] = [\n\t{\n\t\ttiltakInstansNavn: 'Jobbklubb',\n\t\ttiltaktype: 'JOBBK',\n\t\ttiltaknavn: 'Jobbklubb'\n\t},\n\t{\n\t\ttiltakInstansNavn: 'Sveisekurs',\n\t\ttiltaktype: 'GRUPPEAMO',\n\t\ttiltaknavn: 'Gruppe AMO'\n\t}\n];\n\nexport const lagTiltakinstanser = (): MockTiltakInstans[] => {\n\tconst tiltakinstanser: MockTiltakInstans[] = [];\n\n\ttiltakInstansInfoListe.forEach(tiltak => {\n\t\tconst antallInstanser = randBetween(1, 4);\n\n\t\tfor (let i = 0; i < antallInstanser; i++) {\n\t\t\ttiltakinstanser.push(lagTiltakinstanse(tiltak));\n\t\t}\n\t});\n\n\treturn tiltakinstanser;\n};\n\nconst lagTiltakinstanse = (tiltakInstansInfo: TiltakInstansInfo): MockTiltakInstans => {\n\tconst deltagerAntall = randBetween(1, 15);\n\tconst deltagerKapasitet = deltagerAntall + randBetween(0, 10);\n\tconst status = faker.random.objectElement(TiltakInstansStatus) as TiltakInstansStatus;\n\n\t// TODO utled start/slutt fra status\n\n\treturn {\n\t\tid: randomUuid(),\n\t\tdeltagerAntall,\n\t\tdeltagerKapasitet,\n\t\tnavn: tiltakInstansInfo.tiltakInstansNavn,\n\t\tstatus: status,\n\t\ttiltak: {\n\t\t\ttiltaksnavn: tiltakInstansInfo.tiltaknavn,\n\t\t\ttiltakstype: tiltakInstansInfo.tiltaktype\n\t\t},\n\t\tstartdato: faker.date.past().toISOString(),\n\t\tsluttdato: faker.date.future().toISOString()\n\t};\n};\n","import { lagMockTiltakDeltagereForTiltakInstans } from './brukere';\nimport { TiltakInstansStatus } from '../../api/data/tiltak';\nimport { TiltakDeltagerStatus } from '../../api/data/deltager';\nimport { lagTiltakinstanser } from './tiltak';\n\nexport interface MockTiltakInstans {\n\tid: string,\n\tnavn: string,\n\tstartdato: string,\n\tsluttdato: string,\n\tstatus: TiltakInstansStatus,\n\tdeltagerAntall: number,\n\tdeltagerKapasitet: number,\n\ttiltak: {\n\t\ttiltakstype: string,\n\t\ttiltaksnavn: string\n\t}\n}\n\nexport interface MockTiltakDeltager {\n\tid: string,\n\ttiltakInstansId: string\n\tfornavn: string,\n\tmellomnavn: string | undefined,\n\tetternavn: string,\n\tfodselsdato: string | undefined,\n\ttelefon: string | undefined,\n\tepost: string | undefined,\n\tnavKontor: {\n\t\tnavn: string,\n\t\tadresse: string\n\t},\n\tnavVeileder: {\n\t\tnavn: string,\n\t\ttelefon: string,\n\t\tepost: string,\n\t},\n\tstartdato: string,\n\tsluttdato: string,\n\tstatus: TiltakDeltagerStatus,\n}\n\nexport const mockTiltakInstanser: MockTiltakInstans[] = lagTiltakinstanser();\n\nexport const mockTiltakDeltagere: MockTiltakDeltager[] = mockTiltakInstanser\n\t.map(instans => lagMockTiltakDeltagereForTiltakInstans(instans))\n\t.reduce((previousValue, currentValue) => previousValue.concat(currentValue), []);\n","import { MockTiltakDeltager, MockTiltakInstans, mockTiltakInstanser } from './data';\nimport { TiltakDeltagerDetaljerDto, TiltakDeltagerDto } from '../api/data/deltager';\nimport { TiltakInstansDto } from '../api/data/tiltak';\n\nexport const tilTiltakInstansDto = (instans: MockTiltakInstans): TiltakInstansDto => {\n\treturn {\n\t\tid: instans.id,\n\t\tnavn: instans.navn,\n\t\tdeltagerAntall: instans.deltagerAntall,\n\t\tdeltagerKapasitet: instans.deltagerKapasitet,\n\t\tstartdato: instans.startdato,\n\t\tsluttdato: instans.sluttdato,\n\t\tstatus: instans.status,\n\t\ttiltak: {\n\t\t\ttiltakskode: instans.tiltak.tiltakstype,\n\t\t\ttiltaksnavn: instans.tiltak.tiltaksnavn\n\t\t}\n\t};\n};\n\nexport const tilTiltakDeltagerDto = (deltager: MockTiltakDeltager): TiltakDeltagerDto => {\n\treturn {\n\t\tid: deltager.id,\n\t\tfornavn: deltager.fornavn,\n\t\tmellomnavn: deltager.mellomnavn,\n\t\tetternavn: deltager.etternavn,\n\t\tfodselsdato: deltager.fodselsdato,\n\t\tstartdato: deltager.startdato,\n\t\tsluttdato: deltager.sluttdato,\n\t\tstatus: deltager.status\n\t};\n};\n\nexport const tilTiltakDeltagerDetaljerDto = (deltager: MockTiltakDeltager): TiltakDeltagerDetaljerDto => {\n\tconst tiltakInstans = mockTiltakInstanser.find(instans => instans.id === deltager.tiltakInstansId)!;\n\n\treturn {\n\t\tid: deltager.id,\n\t\tfornavn: deltager.fornavn,\n\t\tmellomnavn: deltager.mellomnavn,\n\t\tetternavn: deltager.etternavn,\n\t\tfodselsdato: deltager.fodselsdato,\n\t\tstartdato: deltager.startdato,\n\t\tsluttdato: deltager.sluttdato,\n\t\tstatus: deltager.status,\n\t\tepost: deltager.epost,\n\t\tnavKontor: deltager.navKontor,\n\t\tnavVeileder: deltager.navVeileder,\n\t\ttelefon: deltager.telefon,\n\t\ttiltakInstans: tilTiltakInstansDto(tiltakInstans),\n\t};\n};\n\n","import { rest, setupWorker } from 'msw';\nimport { RequestHandler } from 'msw/lib/types/handlers/RequestHandler';\n\nimport { mockInnloggetAnsatt } from './data/ansatt';\nimport { mockTiltakDeltagere, mockTiltakInstanser } from './data';\nimport { tilTiltakDeltagerDetaljerDto, tilTiltakInstansDto } from './dto-mapper';\n\nconst allHandlers: RequestHandler[] = [\n\trest.get('/amt-tiltak/api/tiltaksleverandor/ansatt/meg', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json(mockInnloggetAnsatt));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak-instans/:tiltakinstansId', (req, res, ctx) => {\n\t\tconst tiltakinstansId = req.params.tiltakinstansId;\n\t\tconst tiltakinstans = mockTiltakInstanser.find(instans => instans.id === tiltakinstansId);\n\n\t\treturn res(ctx.delay(500), ctx.json(tiltakinstans));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak-instans/:tiltakinstansId/deltagere', (req, res, ctx) => {\n\t\tconst tiltakinstansId = req.params.tiltakinstansId;\n\t\tconst brukere = mockTiltakDeltagere.filter(deltager => deltager.tiltakInstansId === tiltakinstansId);\n\n\t\treturn res(ctx.delay(500), ctx.json(brukere));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak-deltager/:brukerId', (req, res, ctx) => {\n\t\tconst brukerId = req.params['brukerId'];\n\t\tconst bruker = mockTiltakDeltagere.find((b) => b.id === brukerId)!;\n\n\t\treturn res(ctx.delay(500), ctx.json(tilTiltakDeltagerDetaljerDto(bruker)));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json(mockTiltakInstanser.map(tilTiltakInstansDto)));\n\t}),\n];\n\nsetupWorker(...allHandlers)\n\t.start({ serviceWorker: { url: process.env.PUBLIC_URL + '/mockServiceWorker.js' } })\n\t.catch((e) => {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.error('Unable to setup mocked API endpoints', e);\n\t});\n","import { TiltakInstansDto } from './tiltak';\n\nexport enum TiltakDeltagerStatus {\n\tNY_BRUKER = 'NY_BRUKER',\n\tGJENNOMFORES = 'GJENNOMFORES',\n\tAVBRUTT = 'AVBRUTT',\n\tFULLFORT = 'FULLFORT'\n}\n\nexport interface TiltakDeltagerDto {\n\tid: string,\n\tfornavn: string,\n\tmellomnavn: string | undefined,\n\tetternavn: string,\n\tfodselsdato: string | undefined,\n\tstartdato: string,\n\tsluttdato: string,\n\tstatus: TiltakDeltagerStatus\n}\n\nexport interface TiltakDeltagerDetaljerDto {\n\tid: string,\n\tfornavn: string,\n\tmellomnavn: string | undefined,\n\tetternavn: string,\n\tfodselsdato: string | undefined,\n\ttelefon: string | undefined,\n\tepost: string | undefined,\n\tnavKontor: NavKontorDTO,\n\tnavVeileder: NavVeilederDTO,\n\tstartdato: string,\n\tsluttdato: string,\n\tstatus: TiltakDeltagerStatus,\n\ttiltakInstans: TiltakInstansDto\n}\n\nexport interface NavKontorDTO {\n\tnavn: string,\n\tadresse: string\n}\n\nexport interface NavVeilederDTO {\n\tnavn: string,\n\ttelefon: string,\n\tepost: string,\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__gNfUK\",\"center-block\":\"center-block__29b77\",\"pull-right\":\"pull-right__1_ahA\",\"pull-left\":\"pull-left__1Jt2h\",\"hide\":\"hide__3_Fyb\",\"show\":\"show__uq-yK\",\"hidden\":\"hidden__3C43V\",\"invisible\":\"invisible__3Mk-s\",\"text-hide\":\"text-hide__2TFPd\",\"ustilet\":\"ustilet__3onBT\",\"blokk\":\"blokk__cRVpl\",\"blokk-null\":\"blokk-null__y5Xlc\",\"blokk-xxxs\":\"blokk-xxxs__2duqe\",\"blokk-xxs\":\"blokk-xxs__3xWzh\",\"blokk-xs\":\"blokk-xs__1xorx\",\"blokk-s\":\"blokk-s__1E4oK\",\"blokk-m\":\"blokk-m__31Vvh\",\"blokk-l\":\"blokk-l__I6QuF\",\"blokk-xl\":\"blokk-xl__1AMaw\",\"header\":\"header__1oX-B\",\"headerTitle\":\"headerTitle__YU1ll\",\"tilbakeLenke\":\"tilbakeLenke__1zmdO\",\"detaljer\":\"detaljer__2uUDn\",\"tiltakCard\":\"tiltakCard__aP7CA\",\"userInfoContent\":\"userInfoContent__3Csxl\"};","\nexport enum TiltakInstansStatus {\n\tIKKE_STARTET= 'IKKE_STARTET',\n\tGJENNOMFORES= 'GJENNOMFORES',\n\tAVSLUTTET= 'AVSLUTTET',\n}\n\nexport interface TiltakInstansDto {\n\tid: string,\n\tnavn: string,\n\tstartdato: string,\n\tsluttdato: string,\n\tstatus: TiltakInstansStatus,\n\tdeltagerAntall: number,\n\tdeltagerKapasitet: number,\n\ttiltak: TiltakDto\n}\n\nexport interface TiltakDto {\n\ttiltakskode: string,\n\ttiltaksnavn: string,\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__3UCmH\",\"center-block\":\"center-block__qRhQr\",\"pull-right\":\"pull-right__uoRiB\",\"pull-left\":\"pull-left__3Sk0z\",\"hide\":\"hide__3yk1z\",\"show\":\"show__25QKn\",\"hidden\":\"hidden__1vXM7\",\"invisible\":\"invisible__1E0VC\",\"text-hide\":\"text-hide__159n6\",\"ustilet\":\"ustilet__M_vEf\",\"blokk\":\"blokk__1sum3\",\"blokk-null\":\"blokk-null__1kE01\",\"blokk-xxxs\":\"blokk-xxxs__zdZmh\",\"blokk-xxs\":\"blokk-xxs__3wMg6\",\"blokk-xs\":\"blokk-xs__PjJ8i\",\"blokk-s\":\"blokk-s__3mZX8\",\"blokk-m\":\"blokk-m__1ll-c\",\"blokk-l\":\"blokk-l__3QslZ\",\"blokk-xl\":\"blokk-xl__3pfFf\",\"blokkM\":\"blokkM__C-cKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__1c3lA\",\"center-block\":\"center-block__36_7y\",\"pull-right\":\"pull-right__2ZRRR\",\"pull-left\":\"pull-left__OS4Ba\",\"hide\":\"hide__39J9V\",\"show\":\"show__1JJZr\",\"hidden\":\"hidden__HiSM7\",\"invisible\":\"invisible__2n563\",\"text-hide\":\"text-hide__35ocZ\",\"ustilet\":\"ustilet__3GnqQ\",\"blokk\":\"blokk__3CS0g\",\"blokk-null\":\"blokk-null__AIU3M\",\"blokk-xxxs\":\"blokk-xxxs__2u-1B\",\"blokk-xxs\":\"blokk-xxs__35cRo\",\"blokk-xs\":\"blokk-xs__15qpL\",\"blokk-s\":\"blokk-s__2h_2N\",\"blokk-m\":\"blokk-m__3nUcU\",\"blokk-l\":\"blokk-l__yYVHC\",\"blokk-xl\":\"blokk-xl__3q3tS\",\"blokkM\":\"blokkM__12vh3\",\"tiltaksoversiktPage\":\"tiltaksoversiktPage__1cIXG\",\"tilbakelenke\":\"tilbakelenke__2wZ1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"loginPage__28CzY\",\"title\":\"title__3MnEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content__1GD3z\",\"undertekst\":\"undertekst__2UTQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tiltakinstansListe\":\"tiltakinstansListe__3Y_Om\",\"cleanList\":\"cleanList__2EsHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navRod\":\"#c30000\",\"navOransje\":\"#ff9100\",\"navLimeGronn\":\"#a2ad00\",\"navGronn\":\"#06893a\",\"navLilla\":\"#634689\",\"navDypBla\":\"#005b82\",\"navBla\":\"#0067c5\",\"navLysBla\":\"#66cbec\",\"navMorkGra\":\"#262626\",\"navGra80\":\"#4f4f4f\",\"navGra60\":\"#6a6a6a\",\"navGra40\":\"#a0a0a0\",\"navGra20\":\"#c9c9c9\",\"navLysGra\":\"#f1f1f1\",\"navBakgrunn\":\"#ffffff\",\"navGraBakgrunn\":\"#f1f1f1\",\"fokusFarge\":\"#00347d\",\"redError\":\"#ba3a26\",\"white\":\"#fff\",\"grayBackground\":\"#f1f1f1\",\"grayIcon\":\"#a0a0a0\",\"grayModia\":\"#333333\",\"grayInactive\":\"#6a6a6a\",\"pinkErrorBg\":\"#f3e3e3\",\"navGronnLighten80\":\"#ccf1d6\",\"navGronnLighten60\":\"#99dead\",\"navGronnLighten40\":\"#66c786\",\"navGronnLighten20\":\"#33aa5f\",\"navGronnDarken20\":\"#007c2e\",\"navGronnDarken40\":\"#006a23\",\"navGronnDarken60\":\"#005519\",\"navGronnDarken80\":\"#003b0f\",\"navLimeGronnLighten80\":\"#f9fccc\",\"navLimeGronnLighten60\":\"#ecf399\",\"navLimeGronnLighten40\":\"#d9e366\",\"navLimeGronnLighten20\":\"#c1cb33\",\"navLimeGronnDarken20\":\"#939e00\",\"navLimeGronnDarken40\":\"#7f8900\",\"navLimeGronnDarken60\":\"#666e00\",\"navLimeGronnDarken80\":\"#474e00\",\"navLysBlaLighten80\":\"#d8f9ff\",\"navLysBlaLighten60\":\"#b5f1ff\",\"navLysBlaLighten40\":\"#97e6ff\",\"navLysBlaLighten20\":\"#7cdaf8\",\"navLysBlaDarken20\":\"#4cadcd\",\"navLysBlaDarken40\":\"#368da8\",\"navLysBlaDarken60\":\"#236b7d\",\"navLysBlaDarken80\":\"#134852\",\"navBlaLighten80\":\"#cce1ff\",\"navBlaLighten60\":\"#99c3ff\",\"navBlaLighten40\":\"#66a5f4\",\"navBlaLighten20\":\"#3386e0\",\"navBlaDarken20\":\"#0056b4\",\"navBlaDarken40\":\"#00459c\",\"navBlaDarken60\":\"#00347d\",\"navBlaDarken80\":\"#002252\",\"navDypBlaLighten80\":\"#cce2f0\",\"navDypBlaLighten60\":\"#99c4dd\",\"navDypBlaLighten40\":\"#66a3c4\",\"navDypBlaLighten20\":\"#3380a5\",\"navDypBlaDarken20\":\"#005077\",\"navDypBlaDarken40\":\"#004367\",\"navDypBlaDarken60\":\"#003453\",\"navDypBlaDarken80\":\"#00243a\",\"navLillaLighten80\":\"#e0d8e9\",\"navLillaLighten60\":\"#c0b2d2\",\"navLillaLighten40\":\"#a18dbb\",\"navLillaLighten20\":\"#8269a2\",\"navLillaDarken20\":\"#523874\",\"navLillaDarken40\":\"#412b5d\",\"navLillaDarken60\":\"#301f46\",\"navLillaDarken80\":\"#1f142f\",\"redErrorLighten80\":\"#f9d2cc\",\"redErrorLighten60\":\"#efa89d\",\"redErrorLighten40\":\"#e18071\",\"redErrorLighten20\":\"#d05c4a\",\"redErrorDarken20\":\"#a32a17\",\"redErrorDarken40\":\"#881d0c\",\"redErrorDarken60\":\"#6a1204\",\"redErrorDarken80\":\"#480900\",\"navOransjeLighten80\":\"#ffeccc\",\"navOransjeLighten60\":\"#ffd799\",\"navOransjeLighten40\":\"#ffc166\",\"navOransjeLighten20\":\"#ffaa33\",\"navOransjeDarken20\":\"#d47b00\",\"navOransjeDarken40\":\"#a86400\",\"navOransjeDarken60\":\"#7d4c00\",\"navOransjeDarken80\":\"#523300\",\"screenSm\":\"768px\",\"screenSmMin\":\"768px\",\"screenTablet\":\"768px\",\"screenMd\":\"992px\",\"screenMdMin\":\"992px\",\"screenDesktop\":\"992px\",\"screenLg\":\"1200px\",\"screenLgMin\":\"1200px\",\"screenLgDesktop\":\"1200px\",\"screenXsMax\":\"767px\",\"screenSmMax\":\"991px\",\"screenMdMax\":\"1199px\",\"containerTablet\":\"736px\",\"containerSm\":\"736px\",\"containerDesktop\":\"956px\",\"containerMd\":\"956px\",\"containerLargeDesktop\":\"1156px\",\"containerLg\":\"1156px\",\"gridColumns\":\"12\",\"gridGutterWidth\":\"16px\",\"gridFloatBreakpoint\":\"768px\",\"gridFloatBreakpointMax\":\"767px\",\"paddingBaseVertical\":\"6px\",\"paddingBaseHorizontal\":\"12px\",\"paddingLargeVertical\":\"10px\",\"paddingLargeHorizontal\":\"16px\",\"paddingSmallVertical\":\"5px\",\"paddingSmallHorizontal\":\"10px\",\"paddingXsVertical\":\"1px\",\"paddingXsHorizontal\":\"5px\",\"lineHeightLarge\":\"1.3333333\",\"lineHeightSmall\":\"1.5\",\"borderRadiusSmall\":\"2px\",\"borderRadiusBase\":\"4px\",\"borderRadiusLarge\":\"6px\",\"menu\":\"menu__UCYV2\",\"virksomhetSelect\":\"virksomhetSelect__32l57\"};"],"sourceRoot":""}