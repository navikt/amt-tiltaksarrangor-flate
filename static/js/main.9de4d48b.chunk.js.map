{"version":3,"sources":["component/user-table/types.tsx","component/user-table/table-utils.ts","component/user-table/header/arrow-down.svg","component/felles/Show.tsx","component/user-table/header/UserTableHeader.tsx","utils/index.ts","component/user-table/body/UserTableRow.tsx","component/user-table/body/UserTableBody.tsx","mock/data/brukere.ts","component/user-table/UserTable.tsx","component/user-table/pagination-bar/PaginationBar.tsx","component/header/Header.tsx","page/tiltaksoversikt/TiltaksoversiktPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OrderByField","OrderByDirection","INITIAL_DIRECTION","ASC","Show","props","if","children","UserTableHeader","orderByData","onOrderByChanged","handleOnOrderByChanged","fieldName","newOrderByData","field","direction","orderByDirection","DESC","toggleOrderByDirection","role","className","name","HeaderFieldName","NAVN","text","FODSELSDATO","TILTAK_TYPE","TILTAK","TILTAK_STATUS","HeaderField","alt","iconClasses","cls","ariaSort","aria-sort","onClick","undefined","src","arrowDownIcon","lagBrukerNavn","fornavn","etternavn","manglerFornavn","manglerEtternavn","randBetween","from","to","Math","round","random","UserRow","bruker","fodselsdato","tiltakType","tiltakStatus","tiltak","alignStart","textAlign","aria-rowindex","idx","tag","style","UserTableBody","brukere","map","randomFnr","dag","mnd","ar","arhundre","toString","padStart","kjonnsiffer","faker","datatype","boolean","individsifre","kontrollsifre","mockBrukere","antallBrukere","i","firstName","lastName","substring","push","lagBrukere","UserTable","aria-label","aria-rowcount","length","nyData","aria-live","PagineringKnapp","rest","PaginationBar","currentPage","totalPages","erPaForsteSide","erPaSisteSide","fraBruker","tilBruker","disabled","Header","TiltaksoversiktPage","placeholder","tittel","apen","tiltakstype","label","checked","onChange","status","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9de4d48b.chunk.js","sourcesContent":["export enum OrderByField {\n\tFODSELSDATO = 'FODSELSDATO',\n\tNAVN = 'NAVN',\n\tTILTAK_TYPE = 'TILTAK_TYPE',\n\tTILTAK_STATUS = 'TILTAK_STATUS',\n\tTILTAK = 'TILTAK'\n}\n\nexport enum OrderByDirection {\n\tASC = 'ASC',\n\tDESC = 'DESC'\n}","import { OrNothing } from '../../utils/types/or-nothing';\nimport { OrderByDirection, OrderByField } from './types';\n\nexport const INITIAL_DIRECTION = OrderByDirection.ASC;\n\nexport type OnOrderByChanged = (orderByData: OrderByData) => void;\n\nexport interface OrderByData {\n\tfield: OrNothing<OrderByField>;\n\tdirection: OrNothing<OrderByDirection>;\n}\n\nexport function toggleOrderByDirection(orderByDirection: OrNothing<OrderByDirection>): OrNothing<OrderByDirection> {\n\tswitch (orderByDirection) {\n\t\tcase OrderByDirection.ASC:\n\t\t\treturn OrderByDirection.DESC;\n\t\tcase OrderByDirection.DESC:\n\t\t\treturn undefined;\n\t\tdefault:\n\t\t\treturn INITIAL_DIRECTION;\n\t}\n}\n","export default __webpack_public_path__ + \"static/media/arrow-down.f2b5771b.svg\";","interface ShowProps {\n\tif?: any;\n\tchildren?: any;\n}\n\nexport const Show = (props: ShowProps) => (props.if ? props.children : null);\n","import React from 'react';\nimport cls from 'classnames';\nimport { INITIAL_DIRECTION, OnOrderByChanged, OrderByData, toggleOrderByDirection } from '../table-utils';\nimport arrowDownIcon from './arrow-down.svg';\nimport './UserTableHeader.less';\nimport { OrderByDirection, OrderByField as HeaderFieldName } from '../types';\nimport { Show } from '../../felles/Show';\n\ninterface UserTableHeaderProps {\n\tonOrderByChanged: OnOrderByChanged;\n\torderByData: OrderByData;\n}\n\nexport const UserTableHeader = (props: UserTableHeaderProps) => {\n\tconst { orderByData, onOrderByChanged } = props;\n\n\tfunction handleOnOrderByChanged(fieldName: HeaderFieldName) {\n\t\tconst newOrderByData: OrderByData = {\n\t\t\tfield: fieldName,\n\t\t\tdirection: INITIAL_DIRECTION\n\t\t};\n\n\t\tif (fieldName === orderByData.field) {\n\t\t\tnewOrderByData.direction = toggleOrderByDirection(orderByData.direction);\n\t\t}\n\n\t\tonOrderByChanged(newOrderByData);\n\t}\n\n    return (\n    \t<div role=\"rowgroup\">\n\t\t    <div role=\"row\" className=\"user-table-header\">\n\t\t\t    <HeaderField name={HeaderFieldName.NAVN} text=\"Etternavn, Fornavn\" orderByData={orderByData} onOrderByChanged={handleOnOrderByChanged} />\n\t\t\t    <HeaderField name={HeaderFieldName.FODSELSDATO} text=\"Fodselsdato\" orderByData={orderByData} onOrderByChanged={handleOnOrderByChanged} />\n\t\t\t    <HeaderField name={HeaderFieldName.TILTAK_TYPE} text=\"Tiltakstype\" orderByData={orderByData} onOrderByChanged={handleOnOrderByChanged} />\n\t\t\t    <HeaderField name={HeaderFieldName.TILTAK} text=\"Tiltak\" orderByData={orderByData} onOrderByChanged={handleOnOrderByChanged} />\n\t\t\t    <HeaderField name={HeaderFieldName.TILTAK_STATUS} text=\"Status\" orderByData={orderByData} onOrderByChanged={handleOnOrderByChanged} />\n\t\t    </div>\n\t    </div>\n    );\n};\n\ninterface HeaderFieldProps {\n\tname: HeaderFieldName;\n\ttext: string;\n\torderByData: OrderByData;\n\tonOrderByChanged: (fieldName: HeaderFieldName) => void;\n}\n\nconst HeaderField = (props: HeaderFieldProps) => {\n\tconst { name, text, orderByData, onOrderByChanged } = props;\n\tconst alt = 'Sortert ' + (orderByData.direction === OrderByDirection.ASC ? 'økende' : 'synkenede');\n\tconst iconClasses = cls('table-header-field__order-icon', {\n\t\t'table-header-field__order-icon--asc': orderByData.direction === OrderByDirection.ASC\n\t});\n\n\tconst ariaSort = name === orderByData.field && orderByData.direction\n\t\t\t? (orderByData.direction === OrderByDirection.ASC ? 'ascending' : 'descending')\n\t\t\t: 'none';\n\n\treturn (\n\t\t<button role=\"columnheader\" aria-sort={ariaSort} onClick={() => onOrderByChanged(name)} className=\"table-header-field\">\n\t\t\t{text}\n\t\t\t<Show if={orderByData.field === name && orderByData.direction !== undefined}>\n\t\t\t\t<img className={iconClasses} src={arrowDownIcon} alt={alt} />\n\t\t\t</Show>\n\t\t</button>\n\t);\n};\n","\nexport function lagBrukerNavn(fornavn: string, etternavn: string): string {\n\tconst manglerFornavn = fornavn === '';\n\tconst manglerEtternavn = etternavn === '';\n\n\tif (manglerFornavn && manglerEtternavn) {\n\t\treturn '';\n\t} else if (manglerFornavn || manglerEtternavn) {\n\t\t// Skal egentlig ikke skje, men hvis ett av navnene mangler så trenger vi ikke å separere med \",\"\n\t\treturn etternavn + fornavn;\n\t}\n\n\treturn etternavn + ', ' + fornavn;\n}\n\nexport function randBetween(from: number, to: number): number {\n\treturn Math.round(Math.random() * (to - from) + from);\n}\n","import React, { CSSProperties } from 'react';\nimport { Bruker } from '../../../rest/data/bruker';\nimport { Normaltekst, Element } from 'nav-frontend-typografi';\nimport { lagBrukerNavn } from '../../../utils';\n\nexport const UserRow = (props: { idx: number, bruker: Bruker }) => {\n\tconst {\n\t\tfodselsdato,\n\t\tfornavn,\n\t\tetternavn,\n\t\ttiltakType,\n\t\ttiltakStatus,\n\t\ttiltak\n\t} = props.bruker;\n\n\tconst alignStart: CSSProperties = { textAlign: 'start' };\n\n\treturn (\n\t\t<div role=\"row\" aria-rowindex={props.idx} className=\"user-table-row\">\n\t\t\t<div className=\"user-table-row__innhold\">\n\t\t\t\t<Normaltekst tag=\"span\" role=\"cell\" style={alignStart}>{lagBrukerNavn(fornavn, etternavn)}</Normaltekst>\n\t\t\t\t<Element tag=\"span\" role=\"cell\">{fodselsdato}</Element>\n\t\t\t\t<Normaltekst tag=\"span\" role=\"cell\">{tiltakType}</Normaltekst>\n\t\t\t\t<Normaltekst tag=\"span\" role=\"cell\">{tiltak}</Normaltekst>\n\t\t\t\t<Element tag=\"span\" role=\"cell\" style={alignStart}>{tiltakStatus}</Element>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { UserRow } from './UserTableRow';\nimport { Bruker } from '../../../rest/data/bruker';\nimport './UserTableBody.less';\n\ninterface UserTableBodyProps {\n\tbrukere: Bruker[];\n}\n\nexport const UserTableBody = (props: UserTableBodyProps) => {\n    return (\n\t    <div role=\"rowgroup\" className=\"user-table-body\">\n\t\t    {props.brukere.map((bruker, idx) => <UserRow idx={idx} bruker={bruker} key={idx} />)}\n\t    </div>\n    );\n};\n","import faker from 'faker';\nimport { Bruker } from '../../rest/data/bruker';\nimport { randBetween } from '../../utils';\n\nfunction randomFnr(): string {\n\tconst dag = randBetween(1, 31);\n\tconst mnd = randBetween(1, 12);\n\tconst ar = randBetween(0, 99);\n\tconst arhundre = randBetween(0, 99).toString().padStart(2, '0');\n\tconst kjonnsiffer = faker.datatype.boolean() ? 4 : 1;\n\tconst individsifre = `${arhundre}${kjonnsiffer}`;\n\tconst kontrollsifre = `${randBetween(0, 9)}${randBetween(0, 9)}`;\n\n\treturn `${dag.toString().padStart(2, '0')}${mnd.toString().padStart(2, '0')}${ar.toString().padStart(2, '0')}${individsifre}${kontrollsifre}`;\n}\n\nexport const lagBrukere = (antallBrukere: number): Bruker[] => {\n\tconst brukere: Bruker[] = [];\n\n\tfor (let i = 0; i < antallBrukere; i++) {\n\t\tconst bruker: Bruker = {\n\t\t\tfornavn: faker.name.firstName(),\n\t\t\tetternavn: faker.name.lastName(),\n\t\t\tfodselsdato: randomFnr().substring(0, 6),\n\t\t\ttiltakStatus: 'Ny bruker',\n\t\t\ttiltakType: 'Avklaring',\n\t\t\ttiltak: 'Noe tekst'\n\t\t};\n\n\t\tbrukere.push(bruker);\n\t}\n\n\treturn brukere;\n};\n\nexport const mockBrukere = lagBrukere(25);\n","import React from 'react';\nimport { UserTableHeader } from './header/UserTableHeader';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { UserTableBody } from './body/UserTableBody';\nimport { OrderByData } from './table-utils';\nimport './UserTable.less';\nimport { OrderByDirection, OrderByField } from './types';\nimport { mockBrukere } from '../../mock/data/brukere';\n\nexport const UserTable = () => {\n\tconst orderByData: OrderByData = {\n\t\tfield: OrderByField.NAVN,\n\t\tdirection: OrderByDirection.ASC\n\t};\n\n\tfunction handleOnOrderByChanged(nyData: OrderByData) {\n\t\t// setOrderByField(nyData.field);\n\t\t// setOrderByDirection(nyData.direction);\n\t}\n\n    return (\n    \t<div role=\"table\" aria-label=\"Brukere som har tiltak\" aria-rowcount={mockBrukere.length} className=\"user-table\">\n\t\t    <UserTableHeader orderByData={orderByData} onOrderByChanged={handleOnOrderByChanged} />\n\t\t    {\n\t\t\t    mockBrukere.length === 0\n\t\t\t\t    ? (\n\t\t\t\t\t    <AlertStripeInfo className=\"user-table__no-users\">\n\t\t\t\t\t\t    <span role=\"alert\" aria-live=\"polite\">Fant ingen brukere</span>\n\t\t\t\t\t    </AlertStripeInfo>\n\t\t\t        )\n\t\t\t\t    : <UserTableBody brukere={mockBrukere} />\n\t\t    }\n\t    </div>\n    );\n};\n","import React from 'react';\nimport { HoyreChevron, VenstreChevron } from 'nav-frontend-chevron';\nimport cls from 'classnames';\nimport './PaginationBar.less';\nimport { Element } from 'nav-frontend-typografi';\nimport { Bruker } from '../../../rest/data/bruker';\nimport { Show } from '../../felles/Show';\nimport { mockBrukere } from '../../../mock/data/brukere';\n\nfunction PagineringKnapp(props: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>) {\n    const { className, children, ...rest } = props;\n    return (\n        <button className={cls(className, 'paginering__knapp')} {...rest}>\n            {props.children}\n        </button>\n    );\n}\n\nexport function PaginationBar() {\n    const { currentPage, totalPages, pageSize } = {\n        currentPage: 1,\n        totalPages: 4,\n        pageSize: 25\n    };\n\n    const brukere: Bruker[] = mockBrukere;\n\n    const erPaForsteSide: boolean = currentPage === 1;\n    const erPaSisteSide: boolean = currentPage >= totalPages;\n\n    const fraBruker = ((currentPage - 1) * pageSize) + 1;\n    const tilBruker = ((currentPage - 1) * pageSize) + (brukere ? brukere.length : 0);\n    const totaltBrukere = 100;\n\n    function handlePageChanged(newPage: number) {\n        // setCurrentPage(newPage);\n    }\n\n    return (\n        <div className=\"pagination-bar\">\n            <div>\n                <Show if={true}>\n                    <Element aria-live=\"polite\">\n                        Viser {fraBruker}-{tilBruker} av totalt {totaltBrukere} brukere\n                    </Element>\n                </Show>\n            </div>\n            <div className={cls('paginering')}>\n                <PagineringKnapp aria-label=\"Forrige side\" disabled={erPaForsteSide} onClick={() => handlePageChanged(currentPage - 1)}>\n                    <VenstreChevron/>\n                </PagineringKnapp>\n\n                <Show if={!erPaForsteSide}>\n                    <PagineringKnapp aria-label=\"Første side\" onClick={() => handlePageChanged(1)}>1</PagineringKnapp>\n                </Show>\n\n                <PagineringKnapp aria-live=\"polite\" aria-label=\"Valgt side\">\n                    <strong>{currentPage}</strong>\n                </PagineringKnapp>\n\n                <Show if={!erPaSisteSide}>\n                    <PagineringKnapp aria-label=\"Siste side\" onClick={() => handlePageChanged(totalPages)}>\n                        {totalPages}\n                    </PagineringKnapp>\n                </Show>\n\n                <PagineringKnapp aria-label=\"Neste side\" disabled={erPaSisteSide} onClick={() => handlePageChanged(currentPage + 1)}>\n                    <HoyreChevron/>\n                </PagineringKnapp>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Sidetittel } from 'nav-frontend-typografi';\nimport './Header.less';\n\nfunction Header() {\n\treturn (\n\t\t<header className=\"header\">\n\t\t\t<Sidetittel>Tiltaksoversikt</Sidetittel>\n\t\t</header>\n\t);\n}\n\nexport default Header;","import React from 'react';\nimport './TiltaksoversiktPage.less';\nimport { Checkbox, CheckboxGruppe, Input } from 'nav-frontend-skjema';\nimport Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { UserTable } from '../../component/user-table/UserTable';\nimport { PaginationBar } from '../../component/user-table/pagination-bar/PaginationBar';\nimport Header from '../../component/header/Header';\n\nfunction TiltaksoversiktPage() {\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<div className=\"tiltaksoversikt-page\">\n\n\t\t\t\t<main className=\"tiltaksoversikt-page__filter-column\">\n\t\t\t\t\t<Input placeholder=\"Søk etter navn eller fnr\" className=\"blokk-m\"/>\n\n\t\t\t\t\t<Ekspanderbartpanel tittel=\"Tiltakstype\" className=\"blokk-m\" apen>\n\t\t\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t\t\t{['Jobbsøkerkurs', 'Avklaring', 'Gruppe AMO', 'Oppfølging'].map(tiltakstype => (\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tkey={tiltakstype}\n\t\t\t\t\t\t\t\t\tlabel={tiltakstype}\n\t\t\t\t\t\t\t\t\tname=\"filter-tiltakstype\"\n\t\t\t\t\t\t\t\t\tchecked={false}\n\t\t\t\t\t\t\t\t\tonChange={() => {}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</CheckboxGruppe>\n\t\t\t\t\t</Ekspanderbartpanel>\n\n\t\t\t\t\t<Ekspanderbartpanel tittel=\"Status\" className=\"blokk-m\" apen>\n\t\t\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t\t\t{['Ny bruker', 'Påmeldt', 'Gjennomføres'].map(status => (\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tkey={status}\n\t\t\t\t\t\t\t\t\tlabel={status}\n\t\t\t\t\t\t\t\t\tname=\"filter-tiltakstatus\"\n\t\t\t\t\t\t\t\t\tchecked={false}\n\t\t\t\t\t\t\t\t\tonChange={() => {}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</CheckboxGruppe>\n\t\t\t\t\t</Ekspanderbartpanel>\n\t\t\t\t</main>\n\n\t\t\t\t<div className=\"tiltaksoversikt-page__table-column\">\n\t\t\t\t\t<PaginationBar/>\n\t\t\t\t\t<UserTable/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default TiltaksoversiktPage;","import React from 'react';\nimport TiltaksoversiktPage from './page/tiltaksoversikt/TiltaksoversiktPage';\n\nfunction App() {\n\treturn (\n\t\t<TiltaksoversiktPage/>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}