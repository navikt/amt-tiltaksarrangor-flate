{"version":3,"sources":["component/felles/spinner/Spinner.module.less","component/felles/card/Card.module.less","component/page/bruker-detaljer/label/Label.module.less","component/page/tiltakinstans-detaljer/bruker-oversikt/BrukerOversiktTabell.module.less","component/page/tiltakinstans-oversikt/TiltakinstansOversiktPage.module.less","api/data/bruker.ts","api/utils.ts","utils/constants.ts","api/index.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/types.tsx","component/felles/spinner/Spinner.tsx","utils/bruker-utils.ts","utils/text-mappers.tsx","component/felles/card/Card.tsx","component/page/bruker-detaljer/label/Label.tsx","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.tsx","component/page/bruker-detaljer/BrukerDetaljerPage.tsx","store/tiltaksoversikt-sok-store.ts","utils/date-utils.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/Rad.tsx","utils/sortering-utils.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/TabellBody.tsx","component/page/tiltakinstans-detaljer/bruker-oversikt/TabellHeader.tsx","component/page/tiltakinstans-detaljer/bruker-oversikt/BrukerOversiktTabell.tsx","utils/filtrering-utils.ts","component/page/tiltakinstans-detaljer/FilterMeny.tsx","component/page/tiltakinstans-detaljer/TiltakinstansDetaljerPage.tsx","store/data-store.ts","store/valgt-virksomhet-store.ts","store/store-provider.tsx","component/page/login/LoginPage.tsx","component/felles/spa-lenkepanel/SpaLenkepanel.tsx","component/page/tiltakinstans-oversikt/tiltakinstans-liste/tiltakinstans-oversikt-panel/TiltakinstansOversiktPanel.tsx","component/page/tiltakinstans-oversikt/tiltakinstans-liste/TiltakinstansListe.tsx","component/page/tiltakinstans-oversikt/TiltakinstansOversiktPage.tsx","component/felles/menu/Menu.tsx","App.tsx","utils/environment.ts","index.tsx","mock/utils/faker.ts","api/data/ansatt.ts","mock/data/brukere.ts","mock/data/tiltak.ts","mock/data/ansatt.ts","mock/index.ts","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.module.less","globals.module.less","component/page/tiltakinstans-detaljer/TiltakinstansDetaljerPage.module.less","component/page/login/LoginPage.module.less","component/page/tiltakinstans-oversikt/tiltakinstans-liste/tiltakinstans-oversikt-panel/TiltakinstansOversiktPanel.module.less","component/page/tiltakinstans-oversikt/tiltakinstans-liste/TiltaksinstansListe.module.less","component/felles/menu/Menu.module.less"],"names":["module","exports","TiltakType","TiltakStatus","axiosInstance","axios","create","withCredentials","headers","Kolonnenavn","Spinner","className","styles","spinner","type","lagKommaSeparertBrukerNavn","fornavn","etternavn","lagBrukerNavn","mapTiltakTypeTilTekst","tiltakType","AVKLARING","GRUPPE_AMO","JOBBSOKERKURS","OPPFOLGING","mapTiltakStatusTilTekst","tiltakStatus","GJENNOMFORES","NY_BRUKER","PAMELDT","mapTiltakStatusTilEtikett","Card","props","cls","card","children","Label","title","value","label","BrukerPaaTiltakDetaljer","history","useHistory","bruker","tiltak","navEnhet","navVeileder","kontaktinfo","fodselsdato","header","to","tilbakeLenke","onClick","e","preventDefault","goBack","headerTitle","detaljer","tiltakCard","navn","startdato","sluttdato","userInfoContent","telefonnummer","email","enhetNavn","BrukerDetaljerPage","brukerId","useParams","useState","setBruker","hasFailed","setHasFailed","useEffect","get","fetchBrukerDetaljer","then","res","data","catch","constate","navnFnrSok","setNavnFnrSok","tiltakStatusFilter","setTiltakStatusFilter","leggTilTiltakStatus","prevStatuser","includes","fjernFraTiltakStatus","filter","status","brukerSortering","setBrukerSortering","TiltaksoversiktSokStoreProvider","useTiltaksoversiktSokStore","formatDateStr","dateStr","dayjs","format","dateStrWithMonthName","SorteringType","sortClassName","name","kolonnenavn","Rad","id","stardato","userSort","NAVN","FODSELSDATO","START","SLUTT","STATUS","TabellBody","brukere","map","idx","sortering","mapSortDirectionToClassName","sorteringType","ASCENDING","DESCENDING","SortableHeader","onSortChange","NONE","nesteSorteringType","finnNesteSorteringType","ariaLabel","mapSortDirectionToText","role","aria-sort","aria-label","TabellHeader","IngenBrukereAlertstripe","ingenBrukere","aria-live","BrukerOversiktTabell","brukereFiltrert","statusFilter","navnFilter","trim","length","matcherFornavn","toLowerCase","matcherEtternavn","matcherNavn","brukerStatus","matcherStatus","filtrerteBrukere","setFiltrerteBrukere","harIngenBrukere","isLoading","sort","FilterMeny","placeholder","globalStyles","blokkM","onChange","target","tittel","apen","Object","values","checked","TiltakinstansDetaljerPage","params","tiltakinstans","setTiltakinstans","setBrukere","isLoadingDeltakere","setIsLoadingDeltakere","isLoadingTiltakinstans","setIsLoadingTiltakinstans","tiltakinstansId","console","error","finally","fetchDeltakerePaTiltakinstans","ledigePlasser","deltakerKapasitet","deltakerAntall","tiltaksoversiktPage","tilbakelenke","initialInnloggetAnsatt","innloggetAnsatt","setInnloggetAnsatt","DataStoreProvider","useDataStore","valgtVirksomhet","setValgtVirksomhet","ValgtVirksomhettoreProvider","useValgtVirksomhetStore","StoreProvider","LoginPage","currentLocation","window","location","href","loginUrl","loginPage","SpaLenkepanel","border","TiltakinstansOversiktPanel","deltakere","oppstart","content","undertekst","getUTCDate","TiltakinstansListe","cleanList","tiltakIdx","typeNavn","tiltakinstanser","tiltakinstanse","tiltakinstanseIdx","toDate","TiltakinstansOversiktPage","setTiltak","setIsLoading","page","Menu","tilgjengeligeVirksomheter","virksomheter","menu","nyValgtVirksomhet","find","virksomhet","virksomhetSelect","virksomhetsnavn","App","path","env","this","isDevelopment","process","locale","require","ReactDOM","render","StrictMode","document","getElementById","faker","seed","AnsattRolle","randBetween","min","max","datatype","number","randomFnr","dag","mnd","ar","arhundre","toString","padStart","kjonnsiffer","boolean","individsifre","kontrollsifre","navEnheter","enhetId","startDatoForTiltakStatus","lagMailFraNavn","mailDomain","mailNavn","replaceAll","tilBruker","detaljertBruker","date","recent","toISOString","soon","mockBrukere","antallBrukere","i","random","objectElement","brukerFornavn","firstName","brukerEtternavn","lastName","veilederNavn","substring","sluttDatoForTiltakStatus","phone","phoneNumber","arrayElement","push","lagDetaljerteBrukere","baseTiltakList","lagTiltakinstanser","antallInstanser","lagTiltakinstanse","past","future","mockTiltak","forEach","baseTiltak","lagTiltak","mockInnloggetAnsatt","mellomnavn","undefined","virksomhetsnummer","roller","KOORDINATOR","VEILEDER","allHandlers","rest","req","ctx","delay","json","flatMap","instans","b","put","body","Error","setupWorker","start","serviceWorker","url"],"mappings":"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","file":"static/js/main.9213d9c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner__3ZKPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card__3qS7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"label__3GUHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingenBrukere\":\"ingenBrukere__5QNAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"page__3OcgV\"};","import { OrNothing } from '../../utils/types/or-nothing';\n\nexport interface Deltaker {\n\tid: string;\n\tfodselsdato: string;\n\tfornavn: string;\n\tetternavn: string;\n\tstardato: string | undefined;\n\tsluttdato: string | undefined;\n\ttiltak: DeprecatedTiltaksinstans;\n}\n\nexport interface DetaljertBruker {\n\tid: string;\n\tfodselsdato: string;\n\tfornavn: string;\n\tetternavn: string;\n\ttiltak: DeprecatedTiltaksinstans;\n\n\tnavEnhet: NavEnhet;\n\tkontaktinfo: Kontaktinfo;\n\tnavVeileder: OrNothing<NavVeileder>;\n}\n\nexport interface DeprecatedTiltaksinstans {\n\tid: string;\n\ttype: TiltakType;\n\tstatus: TiltakStatus;\n\tnavn: string;\n\tstartdato: OrNothing<string>;\n\tsluttdato: OrNothing<string>;\n}\n\nexport interface NavEnhet {\n\tenhetId: string;\n\tenhetNavn: string;\n}\n\ninterface Kontaktinfo {\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\ninterface NavVeileder {\n\tnavn: string;\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\nexport enum TiltakType {\n\tJOBBSOKERKURS = 'JOBBSOKERKURS',\n\tAVKLARING = 'AVKLARING',\n\tGRUPPE_AMO = 'GRUPPE_AMO',\n\tOPPFOLGING = 'OPPFOLGING',\n}\n\nexport enum TiltakStatus {\n\tNY_BRUKER = 'NY_BRUKER',\n\tPAMELDT = 'PAMELDT',\n\tGJENNOMFORES = 'GJENNOMFORES',\n}\n","import axios, { AxiosError, AxiosPromise, AxiosResponse } from 'axios';\n\nimport { APP_NAME } from '../utils/constants';\n\nexport const axiosInstance = axios.create({\n\twithCredentials: true,\n\theaders: { 'Nav-Consumer-Id': APP_NAME },\n});\n\nexport function isAnyLoading(...fetchers: { loading: boolean }[]): boolean {\n\treturn fetchers.some((f) => f.loading);\n}\n\nexport function isAnyLoadingOrNotStarted(...fetchers: { data?: any; error?: any; loading: boolean }[]): boolean {\n\treturn fetchers.some((f) => f.loading || (!f.error && !f.data));\n}\n\nexport function hasAnyFailed(...fetchers: { error?: AxiosError }[]): boolean {\n\treturn fetchers.some((f) => f.error);\n}\n\nexport function ifResponseHasData<T>(callback: (data: T) => void): (res: AxiosResponse<T>) => AxiosPromise<T> {\n\treturn (res: AxiosResponse<T>) => {\n\t\tif (res.status < 300 && res.data) {\n\t\t\tcallback(res.data);\n\t\t}\n\t\treturn Promise.resolve(res);\n\t};\n}\n","export const APP_NAME = 'amt-tiltaksarrangor-flate';\n","import { AxiosPromise } from 'axios';\n\nimport { Deltaker, DetaljertBruker, DeprecatedTiltaksinstans } from './data/bruker';\nimport {\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody,\n} from './data/request-types';\nimport { axiosInstance } from './utils';\nimport { Tiltak, Tiltakinstans } from './data/tiltak';\nimport { InnloggetAnsatt } from './data/ansatt';\n\nexport const fetchInnloggetAnsatt = (): AxiosPromise<InnloggetAnsatt> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/tiltaksleverandor/ansatt/me`);\n};\n\nexport const fetchDeltakerePaTiltakinstans = (tiltakinstansId: string): AxiosPromise<Deltaker[]> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/tiltak/instans/${tiltakinstansId}/brukere`);\n};\n\nexport const fetchTiltakinstans = (tiltakinstansId: string): AxiosPromise<Tiltakinstans> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/tiltak/instans/${tiltakinstansId}`);\n};\n\nexport const fetchBrukerDetaljer = (brukerId: string): AxiosPromise<DetaljertBruker> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/bruker/${brukerId}`);\n};\n\nexport const fetchTiltak = (): AxiosPromise<Tiltak[]> => {\n\treturn axiosInstance.get('/amt-tiltak/api/tiltak');\n};\n\nexport const oppdaterTiltakStartdato = (tiltakinstansId: string, startdato: Date): AxiosPromise<DeprecatedTiltaksinstans> => {\n\tconst body: OppdaterTiltakStartdatoRequestBody = {\n\t\tstartdato: startdato.toISOString(),\n\t};\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/startdato`, body);\n};\n\nexport const oppdaterTiltakSluttdato = (tiltakinstansId: string, sluttdato: Date): AxiosPromise<DeprecatedTiltaksinstans> => {\n\tconst body: OppdaterTiltakSluttdatoRequestBody = {\n\t\tsluttdato: sluttdato.toISOString(),\n\t};\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/sluttdato`, body);\n};\n","import { SorteringType } from '../../../../utils/sortering-utils';\n\nexport enum Kolonnenavn {\n\tNAVN = 'NAVN',\n\tFODSELSDATO = 'FODSELSDATO',\n\tSTATUS = 'STATUS',\n\tSTART = 'START',\n\tSLUTT = 'SLUTT',\n}\n\nexport interface BrukerSortering {\n\tkolonnenavn: Kolonnenavn;\n\tsorteringType: SorteringType;\n}\n","import NavFrontendSpinner from 'nav-frontend-spinner';\nimport React from 'react';\n\nimport styles from './Spinner.module.less';\n\nexport const Spinner = () => {\n\treturn (\n\t\t<div className={styles.spinner}>\n\t\t\t<NavFrontendSpinner type=\"XL\" />\n\t\t</div>\n\t);\n};\n","export const lagKommaSeparertBrukerNavn = (fornavn: string, etternavn: string): string => `${etternavn}, ${fornavn}`;\n\nexport const lagBrukerNavn = (fornavn: string, etternavn: string): string => `${fornavn} ${etternavn}`;\n","import { TiltakStatus, TiltakType } from '../api/data/bruker';\nimport { EtikettFokus, EtikettInfo, EtikettSuksess } from 'nav-frontend-etiketter';\nimport React from 'react';\n\nexport const mapTiltakTypeTilTekst = (tiltakType: TiltakType): string => {\n\tswitch (tiltakType) {\n\t\tcase TiltakType.AVKLARING:\n\t\t\treturn 'Avklaring';\n\t\tcase TiltakType.GRUPPE_AMO:\n\t\t\treturn 'Gruppe AMO';\n\t\tcase TiltakType.JOBBSOKERKURS:\n\t\t\treturn 'Jobbsøkerkurs';\n\t\tcase TiltakType.OPPFOLGING:\n\t\t\treturn 'Oppfølging';\n\t\tdefault:\n\t\t\treturn tiltakType;\n\t}\n};\n\nexport const mapTiltakStatusTilTekst = (tiltakStatus: TiltakStatus): string => {\n\tswitch (tiltakStatus) {\n\t\tcase TiltakStatus.GJENNOMFORES:\n\t\t\treturn 'Gjennomføres';\n\t\tcase TiltakStatus.NY_BRUKER:\n\t\t\treturn 'Ny Bruker';\n\t\tcase TiltakStatus.PAMELDT:\n\t\t\treturn 'Påmeldt';\n\t\tdefault:\n\t\t\treturn tiltakStatus;\n\t}\n};\n\nexport const mapTiltakStatusTilEtikett = (tiltakStatus: TiltakStatus) => {\n\tswitch (tiltakStatus) {\n\t\tcase TiltakStatus.GJENNOMFORES:\n\t\t\treturn <EtikettSuksess>Gjennomføres</EtikettSuksess>;\n\t\tcase TiltakStatus.NY_BRUKER:\n\t\t\treturn <EtikettInfo>Ny bruker</EtikettInfo>;\n\t\tcase TiltakStatus.PAMELDT:\n\t\t\treturn <EtikettFokus>Påmeldt</EtikettFokus>;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};","import cls from 'classnames';\nimport React from 'react';\nimport styles from './Card.module.less';\n\ninterface CardProps {\n\tclassName?: string;\n\tchildren?: React.ReactNode;\n}\n\nexport const Card = (props: CardProps) => {\n\treturn (\n\t\t<section className={cls(styles.card, props.className)}>\n\t\t\t{props.children}\n\t\t</section>\n\t);\n};","import { Element, Normaltekst } from 'nav-frontend-typografi';\nimport cls from 'classnames';\nimport React from 'react';\nimport styles from './Label.module.less';\n\ninterface LabelProps {\n\ttitle: string;\n\tvalue: string | undefined | null;\n\tclassName?: string;\n}\n\nexport const Label = (props: LabelProps) => {\n\tconst { title, value, className } = props;\n\treturn (\n\t\t<div className={cls(styles.label, className)}>\n\t\t\t<Element>{title}</Element>\n\t\t\t<Normaltekst>{value}</Normaltekst>\n\t\t</div>\n\t);\n};","import { Normaltekst, Systemtittel } from 'nav-frontend-typografi';\nimport React from 'react';\n\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport { lagBrukerNavn } from '../../../utils/bruker-utils';\nimport { mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport styles from './BrukerPaaTiltakDetaljer.module.less';\nimport { Card } from '../../felles/card/Card';\nimport { EtikettSuksess } from 'nav-frontend-etiketter';\nimport { Label } from './label/Label';\nimport { Link, useHistory } from 'react-router-dom';\n\nexport const BrukerPaaTiltakDetaljer = (props: { bruker: DetaljertBruker }) => {\n\tconst history = useHistory();\n\tconst { tiltak, navEnhet, navVeileder, kontaktinfo, fornavn, etternavn, fodselsdato } = props.bruker;\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={styles.header}>\n\t\t\t\t<Link to=\"#\" className={styles.tilbakeLenke} onClick={(e) => {\n\t\t\t\t\t// TODO: Hvis vi ikke får IDen til instansen så er dette greit nok, men det er bedre å konstruere riktig lenke\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\thistory.goBack();\n\t\t\t\t}}>\n\t\t\t\t\tTilbake\n\t\t\t\t</Link>\n\t\t\t\t<Systemtittel className={styles.headerTitle}>{lagBrukerNavn(fornavn, etternavn)}</Systemtittel>\n\t\t\t\t<Normaltekst>{fodselsdato}</Normaltekst>\n\t\t\t</div>\n\n\t\t\t<div className={styles.detaljer}>\n\t\t\t\t<Card className={styles.tiltakCard}>\n\t\t\t\t\t<Systemtittel className=\"blokk-xxs\">{mapTiltakTypeTilTekst(tiltak.type)}</Systemtittel>\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">{tiltak.navn}</Normaltekst>\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">{tiltak.startdato} - {tiltak.sluttdato}</Normaltekst>\n\t\t\t\t\t<EtikettSuksess>Gjennomføres</EtikettSuksess>\n\t\t\t\t</Card>\n\n\t\t\t\t<div className={styles.userInfoContent}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Systemtittel className=\"blokk-s\">Deltaker</Systemtittel>\n\t\t\t\t\t\t<Label title=\"Telefon\" value={kontaktinfo.telefonnummer} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Epost\" value={kontaktinfo.email}/>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Systemtittel className=\"blokk-s\">NAV-kontor</Systemtittel>\n\t\t\t\t\t\t<Label title=\"Kontor\" value={navEnhet.enhetNavn} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Adresse\" value=\"Kontorveien 37, 4021 Sted\"/>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Systemtittel className=\"blokk-s\">NAV-veileder</Systemtittel>\n\t\t\t\t\t\t<Label title=\"Navn\" value={navVeileder?.navn} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Telefon\" value={navVeileder?.telefonnummer} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Epost\" value={navVeileder?.email}/>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { AlertStripeFeil } from 'nav-frontend-alertstriper';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchBrukerDetaljer } from '../../../api';\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport { BrukerPaaTiltakDetaljer } from './BrukerPaaTiltakDetaljer';\n\nexport const BrukerDetaljerPage = () => {\n\tconst { brukerId } = useParams<{ brukerId: string }>();\n\tconst [bruker, setBruker] = useState<DetaljertBruker>();\n\tconst [hasFailed, setHasFailed] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tfetchBrukerDetaljer(brukerId)\n\t\t\t.then((res) => setBruker(res.data))\n\t\t\t.catch(() => setHasFailed(true));\n\t}, [brukerId]);\n\n\treturn (\n\t\t<main>\n\t\t\t{bruker ? (\n\t\t\t\t<BrukerPaaTiltakDetaljer bruker={bruker} />\n\t\t\t) : hasFailed ? (\n\t\t\t\t<AlertStripeFeil>En feil oppstod</AlertStripeFeil>\n\t\t\t) : (\n\t\t\t\t<Spinner />\n\t\t\t)}\n\t\t</main>\n\t);\n};\n","import constate from 'constate';\nimport { useState } from 'react';\n\nimport { BrukerSortering } from '../component/page/tiltakinstans-detaljer/bruker-oversikt/types';\nimport { TiltakStatus } from '../api/data/bruker';\n\nexport const [TiltaksoversiktSokStoreProvider, useTiltaksoversiktSokStore] = constate(() => {\n\tconst [navnFnrSok, setNavnFnrSok] = useState<string>('');\n\tconst [tiltakStatusFilter, setTiltakStatusFilter] = useState<TiltakStatus[]>([]);\n\tconst [brukerSortering, setBrukerSortering] = useState<BrukerSortering>();\n\n\tconst leggTilTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatusFilter((prevStatuser) => {\n\t\t\tif (prevStatuser.includes(tiltakStatus)) {\n\t\t\t\treturn prevStatuser;\n\t\t\t}\n\n\t\t\treturn [...prevStatuser, tiltakStatus];\n\t\t});\n\t};\n\n\tconst fjernFraTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatusFilter((prevStatuser) => {\n\t\t\treturn prevStatuser.filter((status) => status !== tiltakStatus);\n\t\t});\n\t};\n\n\treturn {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatusFilter,\n\t\tleggTilTiltakStatus,\n\t\tfjernFraTiltakStatus,\n\t\tbrukerSortering,\n\t\tsetBrukerSortering,\n\t};\n});\n","import dayjs from 'dayjs';\n\nimport { OrNothing } from './types/or-nothing';\n\nexport const formatDateStr = (dateStr: string) => {\n\treturn dayjs(dateStr).format('DD.MM.YYYY');\n};\n\nexport const dateStrWithMonthName = (dateStr: string | undefined): string => {\n\tif (!dateStr)\n\t\treturn '';\n\n\treturn dayjs(dateStr).format('DD. MMMM YYYY');\n};\n\nexport const formatDateInputStr = (dateStr: OrNothing<string>): string => {\n\treturn dateStr ? dayjs(dateStr).format('YYYY-MM-DD') : '';\n};\n\nexport const stringToDate = (dateStr: string): Date => dayjs(dateStr, 'YYYY-MM-DD').toDate();\n\nexport const sortDateNullsFirst = (d1Str: OrNothing<string>, d2Str: OrNothing<string>): number => {\n\tif (d1Str == null) {\n\t\treturn -1;\n\t}\n\n\tif (d2Str == null) {\n\t\treturn 1;\n\t}\n\n\tconst date1 = dayjs(d1Str);\n\tconst date2 = dayjs(d2Str);\n\n\tif (date1.isSame(date2)) {\n\t\treturn 0;\n\t}\n\n\treturn date1.isBefore(date2) ? -1 : 1;\n};\n","import React from 'react';\n\nimport { Deltaker } from '../../../../api/data/bruker';\nimport { lagKommaSeparertBrukerNavn } from '../../../../utils/bruker-utils';\nimport { formatDateStr } from '../../../../utils/date-utils';\nimport { BrukerSortering, Kolonnenavn } from './types';\nimport { Link } from 'react-router-dom';\nimport { mapTiltakStatusTilEtikett } from '../../../../utils/text-mappers';\n\ninterface RadProps {\n\tidx: number;\n\tbruker: Deltaker;\n\tbrukerSortering?: BrukerSortering;\n}\n\nconst sortClassName = (name: Kolonnenavn, brukerSortering?: BrukerSortering): string | undefined => {\n\tif (!brukerSortering || name !== brukerSortering.kolonnenavn) {\n\t\treturn undefined;\n\t}\n\n\treturn 'tabell__td--sortert';\n};\n\nexport const Rad = (props: RadProps) => {\n\tconst { fodselsdato, fornavn, etternavn, tiltak, id, stardato, sluttdato } = props.bruker;\n\tconst userSort = props.brukerSortering;\n\n\treturn (\n\t\t<tr key={id}>\n\t\t\t<td className={sortClassName(Kolonnenavn.NAVN, userSort)}>\n\t\t\t\t<Link to={`/user/${id}`}>\n\t\t\t\t\t{lagKommaSeparertBrukerNavn(fornavn, etternavn)}\n\t\t\t\t</Link>\n\t\t\t</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.FODSELSDATO, userSort)}>{fodselsdato}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.START, userSort)}>\n\t\t\t\t{stardato && formatDateStr(stardato)}\n\t\t\t</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.SLUTT, userSort)}>\n\t\t\t\t{sluttdato && formatDateStr(sluttdato)}\n\t\t\t</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.STATUS, userSort)}>{mapTiltakStatusTilEtikett(tiltak.status)}</td>\n\t\t</tr>\n\t);\n};\n","export enum SorteringType {\n\tASCENDING = 'ascending',\n\tDESCENDING = 'descending',\n\tNONE = 'none',\n}\n\nexport const mapSortDirectionToText = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'stigende';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'synkende';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const mapSortDirectionToClassName = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'tabell__th--sortert-asc';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'tabell__th--sortert-desc';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const finnNesteSorteringType = (sorteringType: SorteringType): SorteringType => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn SorteringType.DESCENDING;\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn SorteringType.NONE;\n\t\tdefault:\n\t\t\t// This will be the default sort direction\n\t\t\treturn SorteringType.ASCENDING;\n\t}\n};\n","import React from 'react';\n\nimport { Deltaker } from '../../../../api/data/bruker';\nimport { Rad } from './Rad';\nimport { BrukerSortering } from './types';\n\ninterface TabellBodyProps {\n\tsortering?: BrukerSortering;\n\tbrukere: Deltaker[];\n}\n\nexport const TabellBody = (props: TabellBodyProps) => {\n\treturn (\n\t\t<tbody>\n\t\t\t{props.brukere.map((bruker, idx) => (\n\t\t\t\t<Rad idx={idx} bruker={bruker} brukerSortering={props.sortering} key={idx} />\n\t\t\t))}\n\t\t</tbody>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tSorteringType,\n\tfinnNesteSorteringType,\n\tmapSortDirectionToClassName,\n\tmapSortDirectionToText,\n} from '../../../../utils/sortering-utils';\nimport { BrukerSortering, Kolonnenavn } from './types';\n\ninterface TableHeaderProps {\n\ttitle: string;\n\tname: Kolonnenavn;\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nconst SortableHeader = (props: TableHeaderProps) => {\n\tconst { title, name, sortering, onSortChange } = props;\n\tconst sorteringType = name === sortering?.kolonnenavn ? sortering.sorteringType : SorteringType.NONE;\n\n\tconst nesteSorteringType = finnNesteSorteringType(sorteringType);\n\tconst ariaLabel = `Sorter ${title} ${mapSortDirectionToText(nesteSorteringType)}`;\n\n\treturn (\n\t\t<th role=\"columnheader\" className={mapSortDirectionToClassName(sorteringType)} aria-sort={sorteringType}>\n\t\t\t<button\n\t\t\t\taria-label={ariaLabel}\n\t\t\t\tonClick={() => onSortChange({ sorteringType: nesteSorteringType, kolonnenavn: name })}\n\t\t\t>\n\t\t\t\t{title}\n\t\t\t</button>\n\t\t</th>\n\t);\n};\n\ninterface UserTableHeaderProps {\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nexport const TabellHeader = (props: UserTableHeaderProps) => {\n\tconst { sortering, onSortChange } = props;\n\treturn (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t{/* TODO: Er mulig å gjøre koden mer DRY på bekostning av kompleksitet */}\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Etternavn, Fornavn\"\n\t\t\t\t\tname={Kolonnenavn.NAVN}\n\t\t\t\t/>\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Fødselsdato\"\n\t\t\t\t\tname={Kolonnenavn.FODSELSDATO}\n\t\t\t\t/>\n\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Start\" name={Kolonnenavn.START} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Slutt\" name={Kolonnenavn.SLUTT} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Status\" name={Kolonnenavn.STATUS} />\n\t\t\t</tr>\n\t\t</thead>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { Deltaker } from '../../../../api/data/bruker';\nimport { useTiltaksoversiktSokStore } from '../../../../store/tiltaksoversikt-sok-store';\nimport { Spinner } from '../../../felles/spinner/Spinner';\nimport { TabellBody } from './TabellBody';\nimport { TabellHeader } from './TabellHeader';\nimport { filtrerBrukere } from '../../../../utils/filtrering-utils';\nimport styles from './BrukerOversiktTabell.module.less';\nimport 'nav-frontend-tabell-style';\n\ninterface UserTableProps {\n\tbrukere: Deltaker[];\n\tisLoading: boolean;\n}\n\nconst IngenBrukereAlertstripe = () => (\n\t<AlertStripeInfo className={styles.ingenBrukere}>\n\t\t\t<span role=\"alert\" aria-live=\"polite\">\n\t\t\t\tFant ingen brukere\n\t\t\t</span>\n\t</AlertStripeInfo>\n);\n\nexport const BrukerOversiktTabell = (props: UserTableProps) => {\n\tconst { brukerSortering, setBrukerSortering, tiltakStatusFilter, navnFnrSok} = useTiltaksoversiktSokStore();\n\tconst brukereFiltrert = () => filtrerBrukere(props.brukere, tiltakStatusFilter, navnFnrSok);\n\tconst [filtrerteBrukere, setFiltrerteBrukere] = useState<Deltaker[]>(brukereFiltrert);\n\tconst harIngenBrukere = filtrerteBrukere.length === 0;\n\n\tuseEffect(() => {\n\t\tsetFiltrerteBrukere(brukereFiltrert());\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [props.brukere, tiltakStatusFilter, navnFnrSok]);\n\n\tif (props.isLoading) {\n\t\treturn <Spinner/>;\n\t}\n\n\tif (harIngenBrukere) {\n\t\treturn <IngenBrukereAlertstripe/>;\n\t}\n\n\treturn (\n\t\t<table className=\"tabell tabell--stripet\">\n\t\t\t<TabellHeader sortering={brukerSortering} onSortChange={(sort) => setBrukerSortering(sort)} />\n\t\t\t<TabellBody brukere={filtrerteBrukere} sortering={brukerSortering} />\n\t\t</table>\n\t);\n};\n","import { Deltaker, TiltakStatus } from '../api/data/bruker';\n\nconst matcherNavn = (bruker: {fornavn: string, etternavn: string}, navnFilter: string | undefined) => {\n    if(!navnFilter || navnFilter.trim().length === 0) return true;\n\n    const matcherFornavn = bruker.fornavn.toLowerCase().includes(navnFilter.toLowerCase());\n    const matcherEtternavn = bruker.etternavn.toLowerCase().includes(navnFilter.toLowerCase());\n\n    return matcherFornavn || matcherEtternavn;\n}\n\nconst matcherStatus = (statusFilter: TiltakStatus[], brukerStatus: TiltakStatus) => {\n    if (statusFilter.length === 0) return true;\n    return statusFilter.includes(brukerStatus)\n}\n\nexport const filtrerBrukere = (brukere: Deltaker[], statusFilter: TiltakStatus[], navnFilter: string): Deltaker[] => {\n   return brukere\n        .filter(bruker => matcherNavn(bruker, navnFilter))\n        .filter(bruker => matcherStatus(statusFilter, bruker.tiltak.status))\n};","import Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { Checkbox, CheckboxGruppe, Input } from 'nav-frontend-skjema';\nimport React from 'react';\n\nimport { TiltakStatus } from '../../../api/data/bruker';\nimport globalStyles from '../../../globals.module.less';\nimport { useTiltaksoversiktSokStore } from '../../../store/tiltaksoversikt-sok-store';\nimport { mapTiltakStatusTilTekst } from '../../../utils/text-mappers';\n\nexport const FilterMeny = () => {\n\tconst {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatusFilter,\n\t\tleggTilTiltakStatus,\n\t\tfjernFraTiltakStatus,\n\t} = useTiltaksoversiktSokStore();\n\n\treturn (\n\t\t<div>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Søk etter navn eller fødselsdato\"\n\t\t\t\tclassName={globalStyles.blokkM}\n\t\t\t\tvalue={navnFnrSok}\n\t\t\t\tonChange={(e) => setNavnFnrSok(e.target.value)}\n\t\t\t/>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Status\" className={globalStyles.blokkM} apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakStatus).map((status) => (\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tkey={status}\n\t\t\t\t\t\t\tlabel={mapTiltakStatusTilTekst(status)}\n\t\t\t\t\t\t\tname=\"filter-tiltakstatus\"\n\t\t\t\t\t\t\tchecked={tiltakStatusFilter.includes(status)}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\tleggTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfjernFraTiltakStatus(status);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\t\t</div>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { fetchDeltakerePaTiltakinstans, fetchTiltakinstans } from '../../../api';\nimport { Deltaker } from '../../../api/data/bruker';\nimport { BrukerOversiktTabell } from './bruker-oversikt/BrukerOversiktTabell';\nimport { FilterMeny } from './FilterMeny';\nimport styles from './TiltakinstansDetaljerPage.module.less';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport { Normaltekst, Systemtittel } from 'nav-frontend-typografi';\nimport { AlertStripeFeil } from 'nav-frontend-alertstriper';\nimport { Tiltakinstans } from '../../../api/data/tiltak';\nimport { dateStrWithMonthName } from '../../../utils/date-utils';\nimport { EtikettSuksess } from 'nav-frontend-etiketter';\n\ninterface TiltakinstansDetaljerPageRouteParams {\n\ttiltakinstansId: string;\n}\n\nexport const TiltakinstansDetaljerPage = () => {\n\tconst params = useParams<TiltakinstansDetaljerPageRouteParams>();\n\n\tconst [tiltakinstans, setTiltakinstans] = useState<Tiltakinstans>();\n\tconst [brukere, setBrukere] = useState<Deltaker[]>([]);\n\n\tconst [isLoadingDeltakere, setIsLoadingDeltakere] = useState<boolean>(true);\n\tconst [isLoadingTiltakinstans, setIsLoadingTiltakinstans] = useState<boolean>(true);\n\n\tuseEffect(() => {\n\t\tfetchTiltakinstans(params.tiltakinstansId)\n\t\t\t.then(res => setTiltakinstans(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoadingTiltakinstans(false))\n\n\t\tfetchDeltakerePaTiltakinstans(params.tiltakinstansId)\n\t\t\t.then((res) => setBrukere(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoadingDeltakere(false));\n\t}, [params.tiltakinstansId]);\n\n\tif (isLoadingDeltakere || isLoadingTiltakinstans) {\n\t\treturn <Spinner/>;\n\t}\n\n\tif (!tiltakinstans) {\n\t\treturn <AlertStripeFeil>Noe gikk galt</AlertStripeFeil>;\n\t}\n\n\tconst ledigePlasser = tiltakinstans.deltakerKapasitet - tiltakinstans.deltakerAntall;\n\n\treturn (\n\t\t<main className={styles.tiltaksoversiktPage}>\n\t\t\t<section>\n\t\t\t\t<Link to=\"/\" className={styles.tilbakelenke}>Tilbake</Link>\n\n\t\t\t\t<div className=\"blokk-m\">\n\t\t\t\t\t<Systemtittel className=\"blokk-xxs\">Jobbkurs(PLACEHOLDER)</Systemtittel>\n\t\t\t\t\t<Normaltekst>Oppstart: {dateStrWithMonthName(tiltakinstans.startdato)}</Normaltekst>\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">Sluttdato: {dateStrWithMonthName(tiltakinstans.sluttdato)}</Normaltekst>\n\n\t\t\t\t\t<EtikettSuksess className=\"blokk-s\">Gjennomføres</EtikettSuksess>\n\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">\n\t\t\t\t\t\tLedige plasser: {ledigePlasser} &nbsp;&nbsp; Totalt: {tiltakinstans.deltakerKapasitet}\n\t\t\t\t\t</Normaltekst>\n\t\t\t\t\t<Normaltekst>Gruppe AMO(PLACEHOLDER)</Normaltekst>\n\t\t\t\t</div>\n\n\t\t\t\t<FilterMeny />\n\t\t\t</section>\n\n\t\t\t<section>\n\t\t\t\t<BrukerOversiktTabell brukere={brukere} isLoading={isLoadingTiltakinstans} />\n\t\t\t</section>\n\t\t</main>\n\t);\n};\n","import constate from 'constate';\nimport { useState } from 'react';\nimport { InnloggetAnsatt } from '../api/data/ansatt';\n\nexport const [DataStoreProvider, useDataStore] = constate((props: {initialInnloggetAnsatt: InnloggetAnsatt}) => {\n\tconst [innloggetAnsatt, setInnloggetAnsatt] = useState<InnloggetAnsatt>(props.initialInnloggetAnsatt);\n\n\treturn {\n\t\tinnloggetAnsatt,\n\t\tsetInnloggetAnsatt,\n\t};\n});","import constate from 'constate';\nimport { useState } from 'react';\n\ninterface ValgtVirksomhet {\n\tid: string;\n\tvirksomhetsnavn: string;\n\tvirksomhetsnummer: string;\n}\n\nexport const [ValgtVirksomhettoreProvider, useValgtVirksomhetStore] = constate(() => {\n\tconst [valgtVirksomhet, setValgtVirksomhet] = useState<ValgtVirksomhet>();\n\n\treturn {\n\t\tvalgtVirksomhet,\n\t\tsetValgtVirksomhet,\n\t};\n});","import React from 'react';\n\nimport { DataStoreProvider } from './data-store';\nimport { ValgtVirksomhettoreProvider } from './valgt-virksomhet-store';\nimport { TiltaksoversiktSokStoreProvider } from './tiltaksoversikt-sok-store';\nimport { InnloggetAnsatt } from '../api/data/ansatt';\n\ninterface StoreProviderProps {\n\tinnloggetAnsatt: InnloggetAnsatt;\n\tchildren: React.ReactNode;\n}\n\nconst StoreProvider = (props: StoreProviderProps) => {\n\treturn (\n\t\t<DataStoreProvider initialInnloggetAnsatt={props.innloggetAnsatt}>\n\t\t\t<ValgtVirksomhettoreProvider>\n\t\t\t\t<TiltaksoversiktSokStoreProvider>\n\t\t\t\t\t{props.children}\n\t\t\t\t</TiltaksoversiktSokStoreProvider>\n\t\t\t</ValgtVirksomhettoreProvider>\n\t\t</DataStoreProvider>\n\t);\n};\n\nexport default StoreProvider;\n","import React from 'react';\nimport cls from 'classnames';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport { AlertStripeAdvarsel } from 'nav-frontend-alertstriper';\nimport styles from './LoginPage.module.less';\n\nexport const LoginPage = () => {\n\tconst currentLocation = window.location.href;\n\tconst loginUrl = `/auth-proxy/oauth2/login?redirect_uri=${currentLocation}`;\n\n\treturn (\n\t\t<main className={styles.loginPage}>\n\t\t\t<Systemtittel className={cls('blokk-xl', styles.title)}>Hei koordinator hos tiltaksarrangør!</Systemtittel>\n\n\t\t\t<AlertStripeAdvarsel className=\"blokk-xl\">\n\t\t\t\tDette er en første løsning til pilot.\n\t\t\t\tKun de som har avtalt med Team KOMET og har riktig innstilling gjennom Altinn vil kunne få tilgang til tjenesten.\n\t\t\t</AlertStripeAdvarsel>\n\n\t\t\t<a className=\"knapp knapp--hoved\" href={loginUrl}>Logg inn</a>\n\t\t</main>\n\t);\n};","import React from 'react';\nimport cls from 'classnames';\nimport { Link } from 'react-router-dom';\nimport './SpaLenkepanel.less';\n\ninterface SpaLenkepanelProps {\n\tto: string;\n\tborder?: boolean;\n\tchildren?: React.ReactNode;\n\tclassName?: string;\n}\n\nexport const SpaLenkepanel = (props: SpaLenkepanelProps) => {\n\tconst { to, border, children, className } = props\n\n\treturn (\n\t\t<Link to={to} className={cls('lenkepanel', {'lenkepanel--border': border}, className)}>\n\t\t\t{children}\n\t\t\t<span className=\"lenkepanel__indikator\"/>\n\t\t</Link>\n\t)\n};\n","import React from 'react';\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\nimport { SpaLenkepanel } from '../../../../felles/spa-lenkepanel/SpaLenkepanel';\nimport styles from './TiltakinstansOversiktPanel.module.less';\n\ninterface TiltakinstansOversiktPanelProps {\n    id: string,\n    navn: string,\n    deltakere?: number\n    oppstart?: Date,\n}\n\nexport const TiltakinstansOversiktPanel = (props: TiltakinstansOversiktPanelProps) => {\n    const {id, navn, deltakere, oppstart} = props\n\n    return (\n        <SpaLenkepanel to={`/instans/${id}`} border>\n            <div className={styles.content} >\n                <Element className=\"blokk-xxs\">{navn}</Element>\n                <div className={styles.undertekst}>\n                    { deltakere && <Normaltekst>{`Antall deltakere: ${deltakere}`}</Normaltekst> }\n                    { oppstart && <Normaltekst>{`Oppstart: ${oppstart.getUTCDate()}`}</Normaltekst> }\n                </div>\n            </div>\n        </SpaLenkepanel>\n    )\n}\n","import React from 'react';\nimport { TiltakinstansOversiktPanel } from './tiltakinstans-oversikt-panel/TiltakinstansOversiktPanel';\nimport { Tiltak } from '../../../../api/data/tiltak';\nimport styles from './TiltaksinstansListe.module.less';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport dayjs from 'dayjs';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\n\ninterface TiltakinstansListeProps {\n\ttiltak: Tiltak[];\n}\n\nexport const TiltakinstansListe = (props: TiltakinstansListeProps) => {\n\n\tif (props.tiltak.length === 0) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AlertStripeInfo>Ingen tiltak</AlertStripeInfo>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ul className={styles.cleanList}>\n\t\t\t{props.tiltak.map((tiltak, tiltakIdx) => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={tiltakIdx} className=\"blokk-l\">\n\t\t\t\t\t\t<Systemtittel className=\"blokk-m\">{tiltak.typeNavn}</Systemtittel>\n\t\t\t\t\t\t<ul className={styles.cleanList}>\n\t\t\t\t\t\t\t{tiltak.tiltakinstanser.map((tiltakinstanse, tiltakinstanseIdx) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={tiltakinstanseIdx} className=\"blokk-s\">\n\t\t\t\t\t\t\t\t\t\t<TiltakinstansOversiktPanel\n\t\t\t\t\t\t\t\t\t\t\tid={tiltakinstanse.id}\n\t\t\t\t\t\t\t\t\t\t\tnavn={tiltak.typeNavn} // TODO: Hva blir navnet for en tiltakinstanse?\n\t\t\t\t\t\t\t\t\t\t\toppstart={dayjs(tiltakinstanse.startdato).toDate()} // TODO: date-utils eller map DTO til ny modell lenger oppe\n\t\t\t\t\t\t\t\t\t\t\tdeltakere={tiltakinstanse.deltakerAntall}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t);\n};","import React, { useEffect, useState } from 'react';\nimport Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { Checkbox, CheckboxGruppe } from 'nav-frontend-skjema';\nimport { TiltakType } from '../../../api/data/bruker';\nimport { mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport { TiltakinstansListe } from './tiltakinstans-liste/TiltakinstansListe';\nimport globalStyles from '../../../globals.module.less';\nimport styles from './TiltakinstansOversiktPage.module.less';\nimport { fetchTiltak } from '../../../api';\nimport { Tiltak } from '../../../api/data/tiltak';\nimport { Spinner } from '../../felles/spinner/Spinner';\n\nexport const TiltakinstansOversiktPage = () => {\n    const [tiltak, setTiltak] = useState<Tiltak[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        fetchTiltak()\n            .then(res => setTiltak(res.data))\n            .catch(console.error) // TODO: vis feil i alertstripe\n            .finally(() => setIsLoading(false));\n    }, []);\n\n    if (isLoading) {\n        return <Spinner/>;\n    }\n\n    return (\n        <main className={styles.page}>\n            <section>\n                <Ekspanderbartpanel tittel=\"Tiltaksvarianter\" className={globalStyles.blokkM} apen>\n                    <CheckboxGruppe>\n                        {Object.values(TiltakType).map((type) => (\n                            <Checkbox\n                                key={type}\n                                label={mapTiltakTypeTilTekst(type)}\n                                name=\"filter-tiltakstype\"\n                                checked={false}\n\n                            />\n                        ))}\n                    </CheckboxGruppe>\n                </Ekspanderbartpanel>\n            </section>\n\n            <TiltakinstansListe tiltak={tiltak}/>\n        </main>\n    )\n}\n","import styles from './Menu.module.less';\nimport { Normaltekst } from 'nav-frontend-typografi';\nimport { useValgtVirksomhetStore } from '../../../store/valgt-virksomhet-store';\nimport React from 'react';\nimport { useDataStore } from '../../../store/data-store';\n\nexport const Menu = () => {\n\tconst { innloggetAnsatt } = useDataStore();\n\tconst { valgtVirksomhet, setValgtVirksomhet } = useValgtVirksomhetStore();\n\n\tconst tilgjengeligeVirksomheter = innloggetAnsatt?.virksomheter || [];\n\n\tconst onValgtVirksomhetChanged = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst id = e.target.value;\n\t\tconst nyValgtVirksomhet = tilgjengeligeVirksomheter.find(virksomhet => virksomhet.id === id);\n\n\t\tif (nyValgtVirksomhet) {\n\t\t\tsetValgtVirksomhet(nyValgtVirksomhet);\n\t\t}\n\t};\n\n\treturn (\n\t\t<header className={styles.menu}>\n\t\t\t<div>\n\t\t\t\t<Normaltekst className=\"blokk-xxs\">Karoline Koordinatorsen</Normaltekst>\n\n\t\t\t\t<select\n\t\t\t\t\tid=\"virksomheter\"\n\t\t\t\t\tname=\"virksomheter\"\n\t\t\t\t\tvalue={valgtVirksomhet?.id}\n\t\t\t\t\tonChange={onValgtVirksomhetChanged}\n\t\t\t\t\tclassName={styles.virksomhetSelect}\n\t\t\t\t>\n\t\t\t\t\t{tilgjengeligeVirksomheter.map(virksomhet => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<option key={virksomhet.id} value={virksomhet.id}>\n\t\t\t\t\t\t\t\t{virksomhet.virksomhetsnavn}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { BrukerDetaljerPage } from './component/page/bruker-detaljer/BrukerDetaljerPage';\nimport { TiltakinstansDetaljerPage } from './component/page/tiltakinstans-detaljer/TiltakinstansDetaljerPage';\nimport StoreProvider from './store/store-provider';\nimport { LoginPage } from './component/page/login/LoginPage';\nimport { Spinner } from './component/felles/spinner/Spinner';\nimport { fetchInnloggetAnsatt } from './api';\nimport { TiltakinstansOversiktPage } from './component/page/tiltakinstans-oversikt/TiltakinstansOversiktPage';\nimport { Menu } from './component/felles/menu/Menu';\nimport { InnloggetAnsatt } from './api/data/ansatt';\n\nexport const App = () => {\n\tconst [innloggetAnsatt, setInnloggetAnsatt] = useState<InnloggetAnsatt>();\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\n\n\tuseEffect(() => {\n\t\tfetchInnloggetAnsatt()\n\t\t\t.then((res) => setInnloggetAnsatt(res.data))\n\t\t\t.catch(console.error)\n\t\t\t.finally(() => setIsLoading(false));\n\t}, []);\n\n\tif (isLoading) {\n\t\treturn <Spinner/>;\n\t}\n\n\tif (!innloggetAnsatt) {\n\t\treturn <LoginPage />;\n\t}\n\n\treturn (\n\t\t<StoreProvider innloggetAnsatt={innloggetAnsatt}>\n\t\t\t<Menu/>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/user/:brukerId\">\n\t\t\t\t\t\t<BrukerDetaljerPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/instans/:tiltakinstansId\">\n\t\t\t\t\t\t<TiltakinstansDetaljerPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<TiltakinstansOversiktPage/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</StoreProvider>\n\t);\n};\n","class Environment {\n\tget isProduction() {\n\t\treturn !this.isDevelopment;\n\t}\n\n\tget isDevelopment() {\n\t\treturn process.env.REACT_APP_DEV === 'true';\n\t}\n}\n\nconst env = new Environment();\n\nexport default env;\n","import 'dayjs/locale/nb';\n\nimport './index.less';\n\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport env from './utils/environment';\n\ndayjs.locale('nb');\n\nif (env.isDevelopment) {\n\trequire('./mock');\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","import faker from 'faker';\n\nfaker.locale = 'nb_NO';\nfaker.seed(486756783);\n\nexport const randBetween = (min: number, max: number): number => {\n\treturn faker.datatype.number({ min, max });\n};\n\nexport const randomFnr = (): string => {\n\tconst dag = randBetween(1, 31);\n\tconst mnd = randBetween(1, 12);\n\tconst ar = randBetween(0, 99);\n\tconst arhundre = randBetween(0, 99).toString().padStart(2, '0');\n\tconst kjonnsiffer = faker.datatype.boolean() ? 4 : 1;\n\tconst individsifre = `${arhundre}${kjonnsiffer}`;\n\tconst kontrollsifre = `${randBetween(0, 9)}${randBetween(0, 9)}`;\n\n\treturn `${dag.toString().padStart(2, '0')}${mnd.toString().padStart(2, '0')}${ar\n\t\t.toString()\n\t\t.padStart(2, '0')}${individsifre}${kontrollsifre}`;\n};","\nexport enum AnsattRolle {\n\tKOORDINATOR = 'KOORDINATOR',\n\tVEILEDER = 'VEILEDER'\n}\n\nexport interface Virksomhet {\n\tid: string,\n\tvirksomhetsnummer: string,\n\tvirksomhetsnavn: string,\n\troller: AnsattRolle[]\n}\n\nexport interface InnloggetAnsatt {\n\tid: string;\n\tfornavn: string;\n\tmellomnavn: string | undefined | null;\n\tetternavn: string;\n\tvirksomheter: Virksomhet[]\n}\n","import faker from 'faker';\n\nimport { Deltaker, DetaljertBruker, NavEnhet, TiltakStatus, TiltakType } from '../../api/data/bruker';\nimport { OrNothing } from '../../utils/types/or-nothing';\nimport { randBetween, randomFnr } from '../utils/faker';\n\nconst navEnheter: NavEnhet[] = [\n\t{\n\t\tenhetId: '0219',\n\t\tenhetNavn: 'NAV Bærum',\n\t},\n\t{\n\t\tenhetId: '0425',\n\t\tenhetNavn: 'NAV Åsnes',\n\t},\n\t{\n\t\tenhetId: '1500',\n\t\tenhetNavn: 'NAV Møre og Romsdal',\n\t},\n\t{\n\t\tenhetId: '0104',\n\t\tenhetNavn: 'NAV Moss',\n\t},\n];\n\nconst startDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\tif (status === TiltakStatus.PAMELDT || status === TiltakStatus.GJENNOMFORES) {\n\t\treturn ;\n\t}\n\n\treturn undefined;\n};\n\nconst sluttDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\t// TODO: Implement\n\treturn undefined;\n};\n\nconst lagMailFraNavn = (navn: string, mailDomain: string): string => {\n\tconst mailNavn = navn\n\t\t.replaceAll(' ', '.')\n\t\t.replaceAll('æ', 'ae')\n\t\t.replaceAll('ø', 'o')\n\t\t.replaceAll('å', 'a')\n\t\t.toLowerCase();\n\n\treturn `${mailNavn}@${mailDomain}`;\n};\n\nexport const lagDetaljerteBrukere = (antallBrukere: number): DetaljertBruker[] => {\n\tconst brukere: DetaljertBruker[] = [];\n\n\tfor (let i = 0; i < antallBrukere; i++) {\n\t\tconst status = faker.random.objectElement(TiltakStatus) as TiltakStatus;\n\n\t\tconst brukerFornavn = faker.name.firstName();\n\t\tconst brukerEtternavn = faker.name.lastName();\n\n\t\tconst veilederNavn = faker.name.firstName() + ' ' + faker.name.lastName();\n\n\t\tconst bruker: DetaljertBruker = {\n\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\tfornavn: brukerFornavn,\n\t\t\tetternavn: brukerEtternavn,\n\t\t\tfodselsdato: randomFnr().substring(0, 6),\n\t\t\ttiltak: {\n\t\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\t\tstatus: status,\n\t\t\t\ttype: faker.random.objectElement(TiltakType) as TiltakType,\n\t\t\t\tstartdato: startDatoForTiltakStatus(status),\n\t\t\t\tsluttdato: sluttDatoForTiltakStatus(status),\n\t\t\t\tnavn: 'Noe tekst',\n\t\t\t},\n\t\t\tkontaktinfo: {\n\t\t\t\temail: lagMailFraNavn(`${brukerFornavn} ${brukerEtternavn}`, 'example.com'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber(),\n\t\t\t},\n\t\t\tnavEnhet: faker.random.arrayElement(navEnheter),\n\t\t\tnavVeileder: {\n\t\t\t\tnavn: veilederNavn,\n\t\t\t\temail: lagMailFraNavn(veilederNavn, 'nav.no'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber(),\n\t\t\t},\n\t\t};\n\n\t\tbrukere.push(bruker);\n\t}\n\n\treturn brukere;\n};\n\nexport const tilBruker = (detaljertBruker: DetaljertBruker): Deltaker => {\n\treturn {\n\t\tid: detaljertBruker.id,\n\t\tfornavn: detaljertBruker.fornavn,\n\t\tetternavn: detaljertBruker.etternavn,\n\t\tfodselsdato: detaljertBruker.fodselsdato,\n\t\tstardato: faker.date.recent(5).toISOString(),\n\t\tsluttdato: faker.date.soon(5).toISOString(),\n\t\ttiltak: detaljertBruker.tiltak,\n\t};\n};\n\nexport const mockBrukere = lagDetaljerteBrukere(55);\n","import { Tiltak, Tiltakinstans } from '../../api/data/tiltak';\nimport { randBetween } from '../utils/faker';\nimport * as faker from 'faker';\n\ninterface BaseTiltak {\n\tnavn: string;\n\ttype: string;\n\ttypeNavn: string;\n}\n\nconst baseTiltakList: BaseTiltak[] = [\n\t{\n\t\tnavn: 'Jobbklubb',\n\t\ttype: 'JOBBK',\n\t\ttypeNavn: 'Jobbklubb'\n\t},\n\t{\n\t\tnavn: 'Sveisekurs',\n\t\ttype: 'GRUPPEAMO',\n\t\ttypeNavn: 'Gruppe AMO'\n\t}\n];\n\nconst lagTiltak = (): Tiltak[] => {\n\tconst tiltak: Tiltak[] = [];\n\n\tbaseTiltakList.forEach(baseTiltak => {\n\t\tconst antallInstanser = randBetween(1, 3);\n\n\t\ttiltak.push({\n\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\t...baseTiltak,\n\t\t\ttiltakinstanser: lagTiltakinstanser(antallInstanser),\n\t\t});\n\t});\n\n\treturn tiltak;\n};\n\nconst lagTiltakinstanser = (antallInstanser: number): Tiltakinstans[] => {\n\tconst tiltakinstanser: Tiltakinstans[] = [];\n\n\tfor (let i = 0; i < antallInstanser; i++) {\n\t\ttiltakinstanser.push(lagTiltakinstanse());\n\t}\n\n\treturn tiltakinstanser;\n};\n\nconst lagTiltakinstanse = (): Tiltakinstans => {\n\tconst deltakerAntall = randBetween(0, 20);\n\tconst deltakerKapasitet = deltakerAntall + randBetween(0, 10);\n\n\treturn {\n\t\tid: randBetween(1000, 1000000).toString(),\n\t\tdeltakerAntall,\n\t\tdeltakerKapasitet,\n\t\tstartdato: faker.date.past().toISOString(),\n\t\tsluttdato: faker.date.future().toISOString()\n\t};\n};\n\nexport const mockTiltak = lagTiltak();\n","import { AnsattRolle, InnloggetAnsatt, Virksomhet } from '../../api/data/ansatt';\n\nexport const mockInnloggetAnsattVirksomheter: Virksomhet[] = [\n\t{\n\t\tid: 'a474079d-8214-4da0-acf2-906eab146ac3',\n\t\tvirksomhetsnavn: 'Muligheter AS',\n\t\tvirksomhetsnummer: '123456789',\n\t\troller: [AnsattRolle.KOORDINATOR, AnsattRolle.VEILEDER]\n\t},\n\t{\n\t\tid: '1d485ec2-8d98-4b96-8c0a-e6038cfdc57c',\n\t\tvirksomhetsnavn: 'Tiltak til alle AS',\n\t\tvirksomhetsnummer: '987654321',\n\t\troller: [AnsattRolle.VEILEDER]\n\t}\n];\n\nexport const mockInnloggetAnsatt: InnloggetAnsatt = {\n\tid: 'dad1f44c-b6d9-4a2e-8690-18c13ab22833',\n\tfornavn: 'Karoline',\n\tmellomnavn: undefined,\n\tetternavn: 'Koordinatorsen',\n\tvirksomheter: mockInnloggetAnsattVirksomheter\n};\n","import { rest, setupWorker } from 'msw';\nimport { RequestHandler } from 'msw/lib/types/handlers/RequestHandler';\n\nimport {\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody,\n} from '../api/data/request-types';\nimport { mockBrukere, tilBruker } from './data/brukere';\nimport { mockTiltak } from './data/tiltak';\nimport { mockInnloggetAnsatt } from './data/ansatt';\n\nconst allHandlers: RequestHandler[] = [\n\trest.get('/amt-tiltak/api/tiltaksleverandor/ansatt/me', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json(mockInnloggetAnsatt));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak/instans/:tiltakinstansId', (req, res, ctx) => {\n\t\tconst id = req.params.tiltakinstansId;\n\n\t\tconst tiltakinstans = mockTiltak\n\t\t\t.flatMap(tiltak => tiltak.tiltakinstanser)\n\t\t\t.find(instans => instans.id === id);\n\n\t\tif (!tiltakinstans) {\n\t\t\treturn res(ctx.delay(500), ctx.status(404));\n\t\t}\n\n\t\treturn res(ctx.delay(500), ctx.json(tiltakinstans));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak/instans/:tiltakinstansId/brukere', (req, res, ctx) => {\n\t\tconst brukere = mockBrukere.map(tilBruker);\n\t\treturn res(ctx.delay(500), ctx.json(brukere));\n\t}),\n\trest.get('/amt-tiltak/api/bruker/:brukerId', (req, res, ctx) => {\n\t\tconst brukerId = req.params['brukerId'];\n\t\tconst bruker = mockBrukere.find((b) => b.id === brukerId);\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json(mockTiltak));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json(mockTiltak));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/startdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakStartdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId'];\n\t\tconst bruker = mockBrukere.find((bruker) => bruker.tiltak.id === tiltakinstansId);\n\n\t\tif (!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\n\t\tbruker.tiltak.startdato = body.startdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/sluttdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakSluttdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId'];\n\t\tconst bruker = mockBrukere.find((bruker) => bruker.tiltak.id === tiltakinstansId);\n\n\t\tif (!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\n\t\tbruker.tiltak.sluttdato = body.sluttdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n];\n\nsetupWorker(...allHandlers)\n\t.start({ serviceWorker: { url: process.env.PUBLIC_URL + '/mockServiceWorker.js' } })\n\t.catch((e) => {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.error('Unable to setup mocked API endpoints', e);\n\t});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__gNfUK\",\"center-block\":\"center-block__29b77\",\"pull-right\":\"pull-right__1_ahA\",\"pull-left\":\"pull-left__1Jt2h\",\"hide\":\"hide__3_Fyb\",\"show\":\"show__uq-yK\",\"hidden\":\"hidden__3C43V\",\"invisible\":\"invisible__3Mk-s\",\"text-hide\":\"text-hide__2TFPd\",\"ustilet\":\"ustilet__3onBT\",\"blokk\":\"blokk__cRVpl\",\"blokk-null\":\"blokk-null__y5Xlc\",\"blokk-xxxs\":\"blokk-xxxs__2duqe\",\"blokk-xxs\":\"blokk-xxs__3xWzh\",\"blokk-xs\":\"blokk-xs__1xorx\",\"blokk-s\":\"blokk-s__1E4oK\",\"blokk-m\":\"blokk-m__31Vvh\",\"blokk-l\":\"blokk-l__I6QuF\",\"blokk-xl\":\"blokk-xl__1AMaw\",\"header\":\"header__1oX-B\",\"headerTitle\":\"headerTitle__YU1ll\",\"tilbakeLenke\":\"tilbakeLenke__1zmdO\",\"detaljer\":\"detaljer__2uUDn\",\"tiltakCard\":\"tiltakCard__aP7CA\",\"userInfoContent\":\"userInfoContent__3Csxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__3UCmH\",\"center-block\":\"center-block__qRhQr\",\"pull-right\":\"pull-right__uoRiB\",\"pull-left\":\"pull-left__3Sk0z\",\"hide\":\"hide__3yk1z\",\"show\":\"show__25QKn\",\"hidden\":\"hidden__1vXM7\",\"invisible\":\"invisible__1E0VC\",\"text-hide\":\"text-hide__159n6\",\"ustilet\":\"ustilet__M_vEf\",\"blokk\":\"blokk__1sum3\",\"blokk-null\":\"blokk-null__1kE01\",\"blokk-xxxs\":\"blokk-xxxs__zdZmh\",\"blokk-xxs\":\"blokk-xxs__3wMg6\",\"blokk-xs\":\"blokk-xs__PjJ8i\",\"blokk-s\":\"blokk-s__3mZX8\",\"blokk-m\":\"blokk-m__1ll-c\",\"blokk-l\":\"blokk-l__3QslZ\",\"blokk-xl\":\"blokk-xl__3pfFf\",\"blokkM\":\"blokkM__C-cKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__1c3lA\",\"center-block\":\"center-block__36_7y\",\"pull-right\":\"pull-right__2ZRRR\",\"pull-left\":\"pull-left__OS4Ba\",\"hide\":\"hide__39J9V\",\"show\":\"show__1JJZr\",\"hidden\":\"hidden__HiSM7\",\"invisible\":\"invisible__2n563\",\"text-hide\":\"text-hide__35ocZ\",\"ustilet\":\"ustilet__3GnqQ\",\"blokk\":\"blokk__3CS0g\",\"blokk-null\":\"blokk-null__AIU3M\",\"blokk-xxxs\":\"blokk-xxxs__2u-1B\",\"blokk-xxs\":\"blokk-xxs__35cRo\",\"blokk-xs\":\"blokk-xs__15qpL\",\"blokk-s\":\"blokk-s__2h_2N\",\"blokk-m\":\"blokk-m__3nUcU\",\"blokk-l\":\"blokk-l__yYVHC\",\"blokk-xl\":\"blokk-xl__3q3tS\",\"blokkM\":\"blokkM__12vh3\",\"tiltaksoversiktPage\":\"tiltaksoversiktPage__1cIXG\",\"tilbakelenke\":\"tilbakelenke__2wZ1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"loginPage__28CzY\",\"title\":\"title__3MnEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content__1GD3z\",\"undertekst\":\"undertekst__2UTQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tiltakinstansListe\":\"tiltakinstansListe__3Y_Om\",\"cleanList\":\"cleanList__2EsHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navRod\":\"#c30000\",\"navOransje\":\"#ff9100\",\"navLimeGronn\":\"#a2ad00\",\"navGronn\":\"#06893a\",\"navLilla\":\"#634689\",\"navDypBla\":\"#005b82\",\"navBla\":\"#0067c5\",\"navLysBla\":\"#66cbec\",\"navMorkGra\":\"#262626\",\"navGra80\":\"#4f4f4f\",\"navGra60\":\"#6a6a6a\",\"navGra40\":\"#a0a0a0\",\"navGra20\":\"#c9c9c9\",\"navLysGra\":\"#f1f1f1\",\"navBakgrunn\":\"#ffffff\",\"navGraBakgrunn\":\"#f1f1f1\",\"fokusFarge\":\"#00347d\",\"redError\":\"#ba3a26\",\"white\":\"#fff\",\"grayBackground\":\"#f1f1f1\",\"grayIcon\":\"#a0a0a0\",\"grayModia\":\"#333333\",\"grayInactive\":\"#6a6a6a\",\"pinkErrorBg\":\"#f3e3e3\",\"navGronnLighten80\":\"#ccf1d6\",\"navGronnLighten60\":\"#99dead\",\"navGronnLighten40\":\"#66c786\",\"navGronnLighten20\":\"#33aa5f\",\"navGronnDarken20\":\"#007c2e\",\"navGronnDarken40\":\"#006a23\",\"navGronnDarken60\":\"#005519\",\"navGronnDarken80\":\"#003b0f\",\"navLimeGronnLighten80\":\"#f9fccc\",\"navLimeGronnLighten60\":\"#ecf399\",\"navLimeGronnLighten40\":\"#d9e366\",\"navLimeGronnLighten20\":\"#c1cb33\",\"navLimeGronnDarken20\":\"#939e00\",\"navLimeGronnDarken40\":\"#7f8900\",\"navLimeGronnDarken60\":\"#666e00\",\"navLimeGronnDarken80\":\"#474e00\",\"navLysBlaLighten80\":\"#d8f9ff\",\"navLysBlaLighten60\":\"#b5f1ff\",\"navLysBlaLighten40\":\"#97e6ff\",\"navLysBlaLighten20\":\"#7cdaf8\",\"navLysBlaDarken20\":\"#4cadcd\",\"navLysBlaDarken40\":\"#368da8\",\"navLysBlaDarken60\":\"#236b7d\",\"navLysBlaDarken80\":\"#134852\",\"navBlaLighten80\":\"#cce1ff\",\"navBlaLighten60\":\"#99c3ff\",\"navBlaLighten40\":\"#66a5f4\",\"navBlaLighten20\":\"#3386e0\",\"navBlaDarken20\":\"#0056b4\",\"navBlaDarken40\":\"#00459c\",\"navBlaDarken60\":\"#00347d\",\"navBlaDarken80\":\"#002252\",\"navDypBlaLighten80\":\"#cce2f0\",\"navDypBlaLighten60\":\"#99c4dd\",\"navDypBlaLighten40\":\"#66a3c4\",\"navDypBlaLighten20\":\"#3380a5\",\"navDypBlaDarken20\":\"#005077\",\"navDypBlaDarken40\":\"#004367\",\"navDypBlaDarken60\":\"#003453\",\"navDypBlaDarken80\":\"#00243a\",\"navLillaLighten80\":\"#e0d8e9\",\"navLillaLighten60\":\"#c0b2d2\",\"navLillaLighten40\":\"#a18dbb\",\"navLillaLighten20\":\"#8269a2\",\"navLillaDarken20\":\"#523874\",\"navLillaDarken40\":\"#412b5d\",\"navLillaDarken60\":\"#301f46\",\"navLillaDarken80\":\"#1f142f\",\"redErrorLighten80\":\"#f9d2cc\",\"redErrorLighten60\":\"#efa89d\",\"redErrorLighten40\":\"#e18071\",\"redErrorLighten20\":\"#d05c4a\",\"redErrorDarken20\":\"#a32a17\",\"redErrorDarken40\":\"#881d0c\",\"redErrorDarken60\":\"#6a1204\",\"redErrorDarken80\":\"#480900\",\"navOransjeLighten80\":\"#ffeccc\",\"navOransjeLighten60\":\"#ffd799\",\"navOransjeLighten40\":\"#ffc166\",\"navOransjeLighten20\":\"#ffaa33\",\"navOransjeDarken20\":\"#d47b00\",\"navOransjeDarken40\":\"#a86400\",\"navOransjeDarken60\":\"#7d4c00\",\"navOransjeDarken80\":\"#523300\",\"screenSm\":\"768px\",\"screenSmMin\":\"768px\",\"screenTablet\":\"768px\",\"screenMd\":\"992px\",\"screenMdMin\":\"992px\",\"screenDesktop\":\"992px\",\"screenLg\":\"1200px\",\"screenLgMin\":\"1200px\",\"screenLgDesktop\":\"1200px\",\"screenXsMax\":\"767px\",\"screenSmMax\":\"991px\",\"screenMdMax\":\"1199px\",\"containerTablet\":\"736px\",\"containerSm\":\"736px\",\"containerDesktop\":\"956px\",\"containerMd\":\"956px\",\"containerLargeDesktop\":\"1156px\",\"containerLg\":\"1156px\",\"gridColumns\":\"12\",\"gridGutterWidth\":\"16px\",\"gridFloatBreakpoint\":\"768px\",\"gridFloatBreakpointMax\":\"767px\",\"paddingBaseVertical\":\"6px\",\"paddingBaseHorizontal\":\"12px\",\"paddingLargeVertical\":\"10px\",\"paddingLargeHorizontal\":\"16px\",\"paddingSmallVertical\":\"5px\",\"paddingSmallHorizontal\":\"10px\",\"paddingXsVertical\":\"1px\",\"paddingXsHorizontal\":\"5px\",\"lineHeightLarge\":\"1.3333333\",\"lineHeightSmall\":\"1.5\",\"borderRadiusSmall\":\"2px\",\"borderRadiusBase\":\"4px\",\"borderRadiusLarge\":\"6px\",\"menu\":\"menu__UCYV2\",\"virksomhetSelect\":\"virksomhetSelect__32l57\"};"],"sourceRoot":""}