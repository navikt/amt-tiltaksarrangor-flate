{"version":3,"sources":["component/page/bruker-detaljer/label/Label.module.less","component/page/tiltakinstans-detaljer/bruker-oversikt/Rad.module.less","component/page/tiltakinstans-detaljer/bruker-oversikt/BrukerOversiktTabell.module.less","component/page/tiltakinstans-detaljer/TiltakinstansDetaljerPage.module.less","component/page/tiltakinstans-oversikt/TiltakinstansOversiktPage.module.less","api/utils.ts","utils/constants.ts","api/index.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/types.tsx","component/felles/spinner/Spinner.tsx","utils/bruker-utils.ts","utils/text-mappers.ts","component/felles/card/Card.tsx","component/page/bruker-detaljer/label/Label.tsx","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.tsx","component/page/bruker-detaljer/BrukerDetaljerPage.tsx","store/tiltaksoversikt-sok-store.ts","component/felles/Show.tsx","utils/date-utils.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/Rad.tsx","utils/sortering-utils.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/TabellBody.tsx","component/page/tiltakinstans-detaljer/bruker-oversikt/TabellHeader.tsx","component/page/tiltakinstans-detaljer/bruker-oversikt/BrukerOversiktTabell.tsx","utils/filtrering-utils.ts","component/page/tiltakinstans-detaljer/FilterMeny.tsx","component/page/tiltakinstans-detaljer/TiltakinstansDetaljerPage.tsx","store/store-provider.tsx","component/page/login/LoginPage.tsx","component/felles/spa-lenkepanel/SpaLenkepanel.tsx","component/page/tiltakinstans-oversikt/tiltakinstans-liste/tiltakinstans-oversikt-panel/TiltakinstansOversiktPanel.tsx","component/page/tiltakinstans-oversikt/tiltakinstans-liste/TiltakinstansListe.tsx","component/page/tiltakinstans-oversikt/TiltakinstansOversiktPage.tsx","App.tsx","utils/environment.ts","index.tsx","mock/utils/faker.ts","mock/data/brukere.ts","mock/data/tiltak.ts","mock/index.ts","api/data/bruker.ts","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.module.less","globals.module.less","component/page/login/LoginPage.module.less","component/page/tiltakinstans-oversikt/tiltakinstans-liste/tiltakinstans-oversikt-panel/TiltakinstansOversiktPanel.module.less","component/page/tiltakinstans-oversikt/tiltakinstans-liste/TiltaksinstansListe.module.less","component/felles/spinner/Spinner.module.less","component/felles/card/Card.module.less"],"names":["module","exports","axiosInstance","axios","create","withCredentials","headers","Kolonnenavn","Spinner","className","styles","spinner","type","lagKommaSeparertBrukerNavn","fornavn","etternavn","lagBrukerNavn","mapTiltakStatusTilTekst","tiltakStatus","TiltakStatus","GJENNOMFORES","NY_BRUKER","PAMELDT","mapTiltakTypeTilTekst","tiltakType","TiltakType","AVKLARING","GRUPPE_AMO","JOBBSOKERKURS","OPPFOLGING","Card","props","cls","card","children","Label","title","value","label","BrukerPaaTiltakDetaljer","bruker","tiltak","navEnhet","navVeileder","kontaktinfo","fodselsdato","header","to","tilbakeLenke","headerTitle","detaljer","tiltakCard","navn","startdato","sluttdato","userInfoContent","telefonnummer","email","enhetNavn","BrukerDetaljerPage","brukerId","useParams","useState","setBruker","hasFailed","setHasFailed","useEffect","get","fetchBrukerDetaljer","then","res","data","catch","constate","navnFnrSok","setNavnFnrSok","tiltakStatusFilter","setTiltakStatusFilter","leggTilTiltakStatus","prevStatuser","includes","fjernFraTiltakStatus","filter","status","brukerSortering","setBrukerSortering","TiltaksoversiktSokStoreProvider","useTiltaksoversiktSok","Show","if","formatDateStr","dateStr","dayjs","format","SorteringType","sortClassName","name","kolonnenavn","Rad","id","userSort","NAVN","FODSELSDATO","TILTAKSTYPE","TILTAK","STATUS","START","SLUTT","PeopleFilled","personIcon","TabellBody","brukere","map","idx","sortering","mapSortDirectionToClassName","sorteringType","ASCENDING","DESCENDING","SortableHeader","onSortChange","NONE","nesteSorteringType","finnNesteSorteringType","ariaLabel","mapSortDirectionToText","role","aria-sort","aria-label","onClick","TabellHeader","BrukerOversiktTabell","brukereFiltrert","statusFilter","navnFilter","trim","length","matcherFornavn","toLowerCase","matcherEtternavn","matcherNavn","brukerStatus","matcherStatus","filtrerteBrukere","setFiltrerteBrukere","harIngenBrukere","IngenBrukereAlertstripe","ingenBrukere","aria-live","sort","isLoading","FilterMeny","placeholder","globalStyles","blokkM","onChange","e","target","tittel","apen","Object","values","checked","TiltakinstansDetaljerPage","params","tiltakinstans","setTiltakinstans","setBrukere","isLoadingDeltakere","setIsLoadingDeltakere","isLoadingTiltakinstans","setIsLoadingTiltakinstans","tiltakinstansId","console","error","finally","fetchDeltakerePaTiltakinstans","tiltaksoversiktPage","StoreProvider","LoginPage","currentLocation","window","location","href","loginUrl","loginPage","SpaLenkepanel","border","TiltakinstansOversiktPanel","deltakere","oppstart","content","undertekst","getUTCDate","TiltakinstansListe","cleanList","tiltakIdx","typeNavn","tiltakinstanser","tiltakinstanse","tiltakinstanseIdx","toDate","TiltakinstansOversiktPage","setTiltak","setIsLoading","page","App","isAuthenticated","setIsAuthenticated","path","env","this","isDevelopment","process","locale","require","ReactDOM","render","StrictMode","document","getElementById","faker","seed","randBetween","min","max","datatype","number","randomFnr","dag","mnd","ar","arhundre","toString","padStart","kjonnsiffer","boolean","individsifre","kontrollsifre","navEnheter","enhetId","startDatoForTiltakStatus","lagMailFraNavn","mailDomain","mailNavn","replaceAll","tilBruker","detaljertBruker","mockBrukere","antallBrukere","i","random","objectElement","brukerFornavn","firstName","brukerEtternavn","lastName","veilederNavn","substring","sluttDatoForTiltakStatus","phone","phoneNumber","arrayElement","push","lagDetaljerteBrukere","baseTiltakList","lagTiltakinstanser","antallInstanser","lagTiltakinstanse","past","toISOString","future","mockTiltak","forEach","baseTiltak","lagTiltak","allHandlers","rest","req","ctx","delay","json","flatMap","find","instans","b","put","body","Error","setupWorker","start","serviceWorker","url"],"mappings":"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","file":"static/js/main.9d51fdf0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"label__3GUHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"personIcon\":\"personIcon__1Ez3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingenBrukere\":\"ingenBrukere__5QNAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tiltaksoversiktPage\":\"tiltaksoversiktPage__1cIXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"page__3OcgV\"};","import axios, { AxiosError, AxiosPromise, AxiosResponse } from 'axios';\n\nimport { APP_NAME } from '../utils/constants';\n\nexport const axiosInstance = axios.create({\n\twithCredentials: true,\n\theaders: { 'Nav-Consumer-Id': APP_NAME },\n});\n\nexport function isAnyLoading(...fetchers: { loading: boolean }[]): boolean {\n\treturn fetchers.some((f) => f.loading);\n}\n\nexport function isAnyLoadingOrNotStarted(...fetchers: { data?: any; error?: any; loading: boolean }[]): boolean {\n\treturn fetchers.some((f) => f.loading || (!f.error && !f.data));\n}\n\nexport function hasAnyFailed(...fetchers: { error?: AxiosError }[]): boolean {\n\treturn fetchers.some((f) => f.error);\n}\n\nexport function ifResponseHasData<T>(callback: (data: T) => void): (res: AxiosResponse<T>) => AxiosPromise<T> {\n\treturn (res: AxiosResponse<T>) => {\n\t\tif (res.status < 300 && res.data) {\n\t\t\tcallback(res.data);\n\t\t}\n\t\treturn Promise.resolve(res);\n\t};\n}\n","export const APP_NAME = 'amt-tiltaksarrangor-flate';\n","import { AxiosPromise } from 'axios';\n\nimport { Bruker, DetaljertBruker, DeprecatedTiltaksinstans } from './data/bruker';\nimport {\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody,\n} from './data/request-types';\nimport { axiosInstance } from './utils';\nimport { Tiltak, Tiltakinstans } from './data/tiltak';\n\nexport const checkIsAuthenticated = (): AxiosPromise<{ isAuthenticated: boolean }> => {\n\treturn axiosInstance.get('/auth-proxy/is-authenticated');\n};\n\nexport const fetchDeltakerePaTiltakinstans = (tiltakinstansId: string): AxiosPromise<Bruker[]> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/tiltak/instans/${tiltakinstansId}/brukere`);\n};\n\nexport const fetchTiltakinstans = (tiltakinstansId: string): AxiosPromise<Tiltakinstans> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/tiltak/instans/${tiltakinstansId}`);\n};\n\nexport const fetchBrukerDetaljer = (brukerId: string): AxiosPromise<DetaljertBruker> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/bruker/${brukerId}`);\n};\n\nexport const fetchTiltak = (): AxiosPromise<Tiltak[]> => {\n\treturn axiosInstance.get('/amt-tiltak/api/tiltak');\n};\n\nexport const oppdaterTiltakStartdato = (tiltakinstansId: string, startdato: Date): AxiosPromise<DeprecatedTiltaksinstans> => {\n\tconst body: OppdaterTiltakStartdatoRequestBody = {\n\t\tstartdato: startdato.toISOString(),\n\t};\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/startdato`, body);\n};\n\nexport const oppdaterTiltakSluttdato = (tiltakinstansId: string, sluttdato: Date): AxiosPromise<DeprecatedTiltaksinstans> => {\n\tconst body: OppdaterTiltakSluttdatoRequestBody = {\n\t\tsluttdato: sluttdato.toISOString(),\n\t};\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/sluttdato`, body);\n};\n","import { SorteringType } from '../../../../utils/sortering-utils';\n\nexport enum Kolonnenavn {\n\tNAVN = 'NAVN',\n\tFODSELSDATO = 'FODSELSDATO',\n\tTILTAKSTYPE = 'TILTAKSTYPE',\n\tTILTAK = 'TILTAK',\n\tSTATUS = 'STATUS',\n\tSTART = 'START',\n\tSLUTT = 'SLUTT',\n}\n\nexport interface BrukerSortering {\n\tkolonnenavn: Kolonnenavn;\n\tsorteringType: SorteringType;\n}\n","import NavFrontendSpinner from 'nav-frontend-spinner';\nimport React from 'react';\n\nimport styles from './Spinner.module.less';\n\nexport const Spinner = () => {\n\treturn (\n\t\t<div className={styles.spinner}>\n\t\t\t<NavFrontendSpinner type=\"XL\" />\n\t\t</div>\n\t);\n};\n","export const lagKommaSeparertBrukerNavn = (fornavn: string, etternavn: string): string => `${etternavn}, ${fornavn}`;\n\nexport const lagBrukerNavn = (fornavn: string, etternavn: string): string => `${fornavn} ${etternavn}`;\n","import { TiltakStatus, TiltakType } from '../api/data/bruker';\n\nexport const mapTiltakStatusTilTekst = (tiltakStatus: TiltakStatus): string => {\n\tswitch (tiltakStatus) {\n\t\tcase TiltakStatus.GJENNOMFORES:\n\t\t\treturn 'Gjennomføres';\n\t\tcase TiltakStatus.NY_BRUKER:\n\t\t\treturn 'Ny Bruker';\n\t\tcase TiltakStatus.PAMELDT:\n\t\t\treturn 'Påmeldt';\n\t\tdefault:\n\t\t\treturn tiltakStatus;\n\t}\n};\n\nexport const mapTiltakTypeTilTekst = (tiltakType: TiltakType): string => {\n\tswitch (tiltakType) {\n\t\tcase TiltakType.AVKLARING:\n\t\t\treturn 'Avklaring';\n\t\tcase TiltakType.GRUPPE_AMO:\n\t\t\treturn 'Gruppe AMO';\n\t\tcase TiltakType.JOBBSOKERKURS:\n\t\t\treturn 'Jobbsøkerkurs';\n\t\tcase TiltakType.OPPFOLGING:\n\t\t\treturn 'Oppfølging';\n\t\tdefault:\n\t\t\treturn tiltakType;\n\t}\n};\n","import cls from 'classnames';\nimport React from 'react';\nimport styles from './Card.module.less';\n\ninterface CardProps {\n\tclassName?: string;\n\tchildren?: React.ReactNode;\n}\n\nexport const Card = (props: CardProps) => {\n\treturn (\n\t\t<section className={cls(styles.card, props.className)}>\n\t\t\t{props.children}\n\t\t</section>\n\t);\n};","import { Element, Normaltekst } from 'nav-frontend-typografi';\nimport cls from 'classnames';\nimport React from 'react';\nimport styles from './Label.module.less';\n\ninterface LabelProps {\n\ttitle: string;\n\tvalue: string | undefined | null;\n\tclassName?: string;\n}\n\nexport const Label = (props: LabelProps) => {\n\tconst { title, value, className } = props;\n\treturn (\n\t\t<div className={cls(styles.label, className)}>\n\t\t\t<Element>{title}</Element>\n\t\t\t<Normaltekst>{value}</Normaltekst>\n\t\t</div>\n\t);\n};","import { Normaltekst, Systemtittel } from 'nav-frontend-typografi';\nimport React from 'react';\n\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport { lagBrukerNavn } from '../../../utils/bruker-utils';\nimport { mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport styles from './BrukerPaaTiltakDetaljer.module.less';\nimport { Card } from '../../felles/card/Card';\nimport { EtikettSuksess } from 'nav-frontend-etiketter';\nimport { Label } from './label/Label';\nimport { Link } from 'react-router-dom';\n\nexport const BrukerPaaTiltakDetaljer = (props: { bruker: DetaljertBruker }) => {\n\tconst { tiltak, navEnhet, navVeileder, kontaktinfo, fornavn, etternavn, fodselsdato } = props.bruker;\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={styles.header}>\n\t\t\t\t<Link to=\"/\" className={styles.tilbakeLenke}>\n\t\t\t\t\tTilbake\n\t\t\t\t</Link>\n\t\t\t\t<Systemtittel className={styles.headerTitle}>{lagBrukerNavn(fornavn, etternavn)}</Systemtittel>\n\t\t\t\t<Normaltekst>{fodselsdato}</Normaltekst>\n\t\t\t</div>\n\n\t\t\t<div className={styles.detaljer}>\n\t\t\t\t<Card className={styles.tiltakCard}>\n\t\t\t\t\t<Systemtittel className=\"blokk-xxs\">{mapTiltakTypeTilTekst(tiltak.type)}</Systemtittel>\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">{tiltak.navn}</Normaltekst>\n\t\t\t\t\t<Normaltekst className=\"blokk-xxs\">{tiltak.startdato} - {tiltak.sluttdato}</Normaltekst>\n\t\t\t\t\t<EtikettSuksess>Gjennomføres</EtikettSuksess>\n\t\t\t\t</Card>\n\n\t\t\t\t<div className={styles.userInfoContent}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Systemtittel className=\"blokk-s\">Deltaker</Systemtittel>\n\t\t\t\t\t\t<Label title=\"Telefon\" value={kontaktinfo.telefonnummer} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Epost\" value={kontaktinfo.email}/>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Systemtittel className=\"blokk-s\">NAV-kontor</Systemtittel>\n\t\t\t\t\t\t<Label title=\"Kontor\" value={navEnhet.enhetNavn} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Adresse\" value=\"Kontorveien 37, 4021 Sted\"/>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Systemtittel className=\"blokk-s\">NAV-veileder</Systemtittel>\n\t\t\t\t\t\t<Label title=\"Navn\" value={navVeileder?.navn} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Telefon\" value={navVeileder?.telefonnummer} className=\"blokk-xs\"/>\n\t\t\t\t\t\t<Label title=\"Epost\" value={navVeileder?.email}/>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { AlertStripeFeil } from 'nav-frontend-alertstriper';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchBrukerDetaljer } from '../../../api';\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport { BrukerPaaTiltakDetaljer } from './BrukerPaaTiltakDetaljer';\n\nexport const BrukerDetaljerPage = () => {\n\tconst { brukerId } = useParams<{ brukerId: string }>();\n\tconst [bruker, setBruker] = useState<DetaljertBruker>();\n\tconst [hasFailed, setHasFailed] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tfetchBrukerDetaljer(brukerId)\n\t\t\t.then((res) => setBruker(res.data))\n\t\t\t.catch(() => setHasFailed(true));\n\t}, [brukerId]);\n\n\treturn (\n\t\t<main>\n\t\t\t{bruker ? (\n\t\t\t\t<BrukerPaaTiltakDetaljer bruker={bruker} />\n\t\t\t) : hasFailed ? (\n\t\t\t\t<AlertStripeFeil>En feil oppstod</AlertStripeFeil>\n\t\t\t) : (\n\t\t\t\t<Spinner />\n\t\t\t)}\n\t\t</main>\n\t);\n};\n","import constate from 'constate';\nimport { useState } from 'react';\n\nimport { BrukerSortering } from '../component/page/tiltakinstans-detaljer/bruker-oversikt/types';\nimport { TiltakStatus } from '../api/data/bruker';\n\nexport const [TiltaksoversiktSokStoreProvider, useTiltaksoversiktSok] = constate(() => {\n\tconst [navnFnrSok, setNavnFnrSok] = useState<string>('');\n\tconst [tiltakStatusFilter, setTiltakStatusFilter] = useState<TiltakStatus[]>([]);\n\tconst [brukerSortering, setBrukerSortering] = useState<BrukerSortering>();\n\n\tconst leggTilTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatusFilter((prevStatuser) => {\n\t\t\tif (prevStatuser.includes(tiltakStatus)) {\n\t\t\t\treturn prevStatuser;\n\t\t\t}\n\n\t\t\treturn [...prevStatuser, tiltakStatus];\n\t\t});\n\t};\n\n\tconst fjernFraTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatusFilter((prevStatuser) => {\n\t\t\treturn prevStatuser.filter((status) => status !== tiltakStatus);\n\t\t});\n\t};\n\n\treturn {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatusFilter,\n\t\tleggTilTiltakStatus,\n\t\tfjernFraTiltakStatus,\n\t\tbrukerSortering,\n\t\tsetBrukerSortering,\n\t};\n});\n","interface ShowProps {\n\tif?: any;\n\tchildren?: any;\n}\n\nexport const Show = (props: ShowProps) => (props.if ? props.children : null);\n","import dayjs from 'dayjs';\n\nimport { OrNothing } from './types/or-nothing';\n\nexport const formatDateStr = (dateStr: string) => {\n\treturn dayjs(dateStr).format('DD. MMM YYYY');\n};\n\nexport const formatDateInputStr = (dateStr: OrNothing<string>): string => {\n\treturn dateStr ? dayjs(dateStr).format('YYYY-MM-DD') : '';\n};\n\nexport const stringToDate = (dateStr: string): Date => dayjs(dateStr, 'YYYY-MM-DD').toDate();\n\nexport const sortDateNullsFirst = (d1Str: OrNothing<string>, d2Str: OrNothing<string>): number => {\n\tif (d1Str == null) {\n\t\treturn -1;\n\t}\n\n\tif (d2Str == null) {\n\t\treturn 1;\n\t}\n\n\tconst date1 = dayjs(d1Str);\n\tconst date2 = dayjs(d2Str);\n\n\tif (date1.isSame(date2)) {\n\t\treturn 0;\n\t}\n\n\treturn date1.isBefore(date2) ? -1 : 1;\n};\n","import { PeopleFilled } from '@navikt/ds-icons';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Bruker } from '../../../../api/data/bruker';\nimport { lagKommaSeparertBrukerNavn } from '../../../../utils/bruker-utils';\nimport { formatDateStr } from '../../../../utils/date-utils';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../../utils/text-mappers';\nimport styles from './Rad.module.less';\nimport { BrukerSortering, Kolonnenavn } from './types';\n\ninterface RadProps {\n\tidx: number;\n\tbruker: Bruker;\n\tbrukerSortering?: BrukerSortering;\n}\n\nconst sortClassName = (name: Kolonnenavn, brukerSortering?: BrukerSortering): string | undefined => {\n\tif (!brukerSortering || name !== brukerSortering.kolonnenavn) {\n\t\treturn undefined;\n\t}\n\n\treturn 'tabell__td--sortert';\n};\n\nexport const Rad = (props: RadProps) => {\n\tconst { fodselsdato, fornavn, etternavn, tiltak, id } = props.bruker;\n\tconst userSort = props.brukerSortering;\n\n\treturn (\n\t\t<tr>\n\t\t\t<td className={sortClassName(Kolonnenavn.NAVN, userSort)}>{lagKommaSeparertBrukerNavn(fornavn, etternavn)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.FODSELSDATO, userSort)}>{fodselsdato}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.TILTAKSTYPE, userSort)}>{mapTiltakTypeTilTekst(tiltak.type)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.TILTAK, userSort)}>{tiltak.navn}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.STATUS, userSort)}>{mapTiltakStatusTilTekst(tiltak.status)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.START, userSort)}>\n\t\t\t\t{tiltak.startdato && formatDateStr(tiltak.startdato)}\n\t\t\t</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.SLUTT, userSort)}>\n\t\t\t\t{tiltak.sluttdato && formatDateStr(tiltak.sluttdato)}\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Link to={`/user/${id}`}>\n\t\t\t\t\t<PeopleFilled className={styles.personIcon} />\n\t\t\t\t</Link>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n","export enum SorteringType {\n\tASCENDING = 'ascending',\n\tDESCENDING = 'descending',\n\tNONE = 'none',\n}\n\nexport const mapSortDirectionToText = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'stigende';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'synkende';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const mapSortDirectionToClassName = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'tabell__th--sortert-asc';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'tabell__th--sortert-desc';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const finnNesteSorteringType = (sorteringType: SorteringType): SorteringType => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn SorteringType.DESCENDING;\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn SorteringType.NONE;\n\t\tdefault:\n\t\t\t// This will be the default sort direction\n\t\t\treturn SorteringType.ASCENDING;\n\t}\n};\n","import React from 'react';\n\nimport { Bruker } from '../../../../api/data/bruker';\nimport { Rad } from './Rad';\nimport { BrukerSortering } from './types';\n\ninterface TabellBodyProps {\n\tsortering?: BrukerSortering;\n\tbrukere: Bruker[];\n}\n\nexport const TabellBody = (props: TabellBodyProps) => {\n\treturn (\n\t\t<tbody>\n\t\t\t{props.brukere.map((bruker, idx) => (\n\t\t\t\t<Rad idx={idx} bruker={bruker} brukerSortering={props.sortering} key={idx} />\n\t\t\t))}\n\t\t</tbody>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tSorteringType,\n\tfinnNesteSorteringType,\n\tmapSortDirectionToClassName,\n\tmapSortDirectionToText,\n} from '../../../../utils/sortering-utils';\nimport { BrukerSortering, Kolonnenavn } from './types';\n\ninterface TableHeaderProps {\n\ttitle: string;\n\tname: Kolonnenavn;\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nconst SortableHeader = (props: TableHeaderProps) => {\n\tconst { title, name, sortering, onSortChange } = props;\n\tconst sorteringType = name === sortering?.kolonnenavn ? sortering.sorteringType : SorteringType.NONE;\n\n\tconst nesteSorteringType = finnNesteSorteringType(sorteringType);\n\tconst ariaLabel = `Sorter ${title} ${mapSortDirectionToText(nesteSorteringType)}`;\n\n\treturn (\n\t\t<th role=\"columnheader\" className={mapSortDirectionToClassName(sorteringType)} aria-sort={sorteringType}>\n\t\t\t<button\n\t\t\t\taria-label={ariaLabel}\n\t\t\t\tonClick={() => onSortChange({ sorteringType: nesteSorteringType, kolonnenavn: name })}\n\t\t\t>\n\t\t\t\t{title}\n\t\t\t</button>\n\t\t</th>\n\t);\n};\n\ninterface UserTableHeaderProps {\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nexport const TabellHeader = (props: UserTableHeaderProps) => {\n\tconst { sortering, onSortChange } = props;\n\treturn (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t{/* TODO: Er mulig å gjøre koden mer DRY på bekostning av kompleksitet */}\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Etternavn, Fornavn\"\n\t\t\t\t\tname={Kolonnenavn.NAVN}\n\t\t\t\t/>\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Fødselsdato\"\n\t\t\t\t\tname={Kolonnenavn.FODSELSDATO}\n\t\t\t\t/>\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Tiltakstype\"\n\t\t\t\t\tname={Kolonnenavn.TILTAKSTYPE}\n\t\t\t\t/>\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Tiltak\" name={Kolonnenavn.TILTAK} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Status\" name={Kolonnenavn.STATUS} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Start\" name={Kolonnenavn.START} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Slutt\" name={Kolonnenavn.SLUTT} />\n\t\t\t\t<th />\n\t\t\t</tr>\n\t\t</thead>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { Bruker } from '../../../../api/data/bruker';\nimport { useTiltaksoversiktSok } from '../../../../store/tiltaksoversikt-sok-store';\nimport { Show } from '../../../felles/Show';\nimport { Spinner } from '../../../felles/spinner/Spinner';\nimport { TabellBody } from './TabellBody';\nimport { TabellHeader } from './TabellHeader';\nimport { filtrerBrukere } from '../../../../utils/filtrering-utils';\nimport styles from './BrukerOversiktTabell.module.less';\nimport 'nav-frontend-tabell-style';\n\ninterface UserTableProps {\n\tbrukere: Bruker[];\n\tisLoading: boolean;\n}\n\nexport const BrukerOversiktTabell = (props: UserTableProps) => {\n\tconst { brukerSortering, setBrukerSortering, tiltakStatusFilter, navnFnrSok} = useTiltaksoversiktSok();\n\tconst brukereFiltrert = () => filtrerBrukere(props.brukere, tiltakStatusFilter, navnFnrSok);\n\tconst [filtrerteBrukere, setFiltrerteBrukere] = useState<Bruker[]>(brukereFiltrert);\n\tconst harIngenBrukere = filtrerteBrukere.length === 0;\n\n\tuseEffect(() => {\n\t\tsetFiltrerteBrukere(brukereFiltrert());\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [props.brukere, tiltakStatusFilter, navnFnrSok]);\n\n\tconst IngenBrukereAlertstripe = () => (\n\t\t<AlertStripeInfo className={styles.ingenBrukere}>\n\t\t\t<span role=\"alert\" aria-live=\"polite\">\n\t\t\t\tFant ingen brukere\n\t\t\t</span>\n\t\t</AlertStripeInfo>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<table className=\"tabell tabell--stripet\">\n\t\t\t\t<TabellHeader sortering={brukerSortering} onSortChange={(sort) => setBrukerSortering(sort)} />\n\t\t\t\t<Show if={!props.isLoading && !harIngenBrukere}>\n\t\t\t\t\t<TabellBody brukere={filtrerteBrukere} sortering={brukerSortering} />\n\t\t\t\t</Show>\n\t\t\t</table>\n\t\t\t<Show if={!props.isLoading && harIngenBrukere}>\n\t\t\t\t<IngenBrukereAlertstripe />\n\t\t\t</Show>\n\t\t\t<Show if={props.isLoading}>\n\t\t\t\t<Spinner />\n\t\t\t</Show>\n\t\t</>\n\t);\n};\n","import { Bruker, TiltakStatus } from '../api/data/bruker';\n\nconst matcherNavn = (bruker: {fornavn: string, etternavn: string}, navnFilter: string | undefined) => {\n    if(!navnFilter || navnFilter.trim().length === 0) return true;\n\n    const matcherFornavn = bruker.fornavn.toLowerCase().includes(navnFilter.toLowerCase());\n    const matcherEtternavn = bruker.etternavn.toLowerCase().includes(navnFilter.toLowerCase());\n\n    return matcherFornavn || matcherEtternavn;\n}\n\nconst matcherStatus = (statusFilter: TiltakStatus[], brukerStatus: TiltakStatus) => {\n    if (statusFilter.length === 0) return true;\n    return statusFilter.includes(brukerStatus)\n}\n\nexport const filtrerBrukere = (brukere: Bruker[], statusFilter: TiltakStatus[], navnFilter: string): Bruker[] => {\n   return brukere\n        .filter(bruker => matcherNavn(bruker, navnFilter))\n        .filter(bruker => matcherStatus(statusFilter, bruker.tiltak.status))\n};","import Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { Checkbox, CheckboxGruppe, Input } from 'nav-frontend-skjema';\nimport React from 'react';\n\nimport { TiltakStatus } from '../../../api/data/bruker';\nimport globalStyles from '../../../globals.module.less';\nimport { useTiltaksoversiktSok } from '../../../store/tiltaksoversikt-sok-store';\nimport { mapTiltakStatusTilTekst } from '../../../utils/text-mappers';\n\nexport const FilterMeny = () => {\n\tconst {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatusFilter,\n\t\tleggTilTiltakStatus,\n\t\tfjernFraTiltakStatus,\n\t} = useTiltaksoversiktSok();\n\n\treturn (\n\t\t<div>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Søk etter navn eller fødselsdato\"\n\t\t\t\tclassName={globalStyles.blokkM}\n\t\t\t\tvalue={navnFnrSok}\n\t\t\t\tonChange={(e) => setNavnFnrSok(e.target.value)}\n\t\t\t/>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Status\" className={globalStyles.blokkM} apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakStatus).map((status) => (\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tkey={status}\n\t\t\t\t\t\t\tlabel={mapTiltakStatusTilTekst(status)}\n\t\t\t\t\t\t\tname=\"filter-tiltakstatus\"\n\t\t\t\t\t\t\tchecked={tiltakStatusFilter.includes(status)}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\tleggTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfjernFraTiltakStatus(status);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\t\t</div>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { fetchDeltakerePaTiltakinstans, fetchTiltakinstans } from '../../../api';\nimport { Bruker } from '../../../api/data/bruker';\nimport { BrukerOversiktTabell } from './bruker-oversikt/BrukerOversiktTabell';\nimport { FilterMeny } from './FilterMeny';\nimport styles from './TiltakinstansDetaljerPage.module.less';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport { Normaltekst, Systemtittel } from 'nav-frontend-typografi';\nimport { AlertStripeFeil } from 'nav-frontend-alertstriper';\nimport { Tiltakinstans } from '../../../api/data/tiltak';\n\ninterface TiltakinstansDetaljerPageRouteParams {\n\ttiltakinstansId: string;\n}\n\nexport const TiltakinstansDetaljerPage = () => {\n\tconst params = useParams<TiltakinstansDetaljerPageRouteParams>();\n\n\tconst [tiltakinstans, setTiltakinstans] = useState<Tiltakinstans>();\n\tconst [brukere, setBrukere] = useState<Bruker[]>([]);\n\n\tconst [isLoadingDeltakere, setIsLoadingDeltakere] = useState<boolean>(true);\n\tconst [isLoadingTiltakinstans, setIsLoadingTiltakinstans] = useState<boolean>(true);\n\n\tuseEffect(() => {\n\t\tfetchTiltakinstans(params.tiltakinstansId)\n\t\t\t.then(res => setTiltakinstans(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoadingTiltakinstans(false))\n\n\t\tfetchDeltakerePaTiltakinstans(params.tiltakinstansId)\n\t\t\t.then((res) => setBrukere(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoadingDeltakere(false));\n\t}, [params.tiltakinstansId]);\n\n\tif (isLoadingDeltakere || isLoadingTiltakinstans) {\n\t\treturn <Spinner/>;\n\t}\n\n\tif (!tiltakinstans) {\n\t\treturn <AlertStripeFeil>Noe gikk galt</AlertStripeFeil>;\n\t}\n\n\treturn (\n\t\t<main className={styles.tiltaksoversiktPage}>\n\t\t\t<section>\n\t\t\t\t<Link to=\"/\" className=\"blokk-m\">Tilbake</Link>\n\n\t\t\t\t<div className=\"blokk-m\">\n\t\t\t\t\t<Systemtittel>PLACEHOLDER</Systemtittel>\n\t\t\t\t\t<Normaltekst>Start dato: {tiltakinstans.startdato}</Normaltekst>\n\t\t\t\t\t<Normaltekst>Slutt dato: {tiltakinstans.sluttdato}</Normaltekst>\n\t\t\t\t</div>\n\n\t\t\t\t<FilterMeny />\n\t\t\t</section>\n\n\t\t\t<BrukerOversiktTabell brukere={brukere} isLoading={isLoadingTiltakinstans} />\n\t\t</main>\n\t);\n};\n","import React from 'react';\n\nimport { TiltaksoversiktSokStoreProvider } from './tiltaksoversikt-sok-store';\n\ninterface StoreProviderProps {\n\tchildren: React.ReactNode;\n}\n\nconst StoreProvider = (props: StoreProviderProps) => {\n\treturn <TiltaksoversiktSokStoreProvider>{props.children}</TiltaksoversiktSokStoreProvider>;\n};\n\nexport default StoreProvider;\n","import React from 'react';\nimport cls from 'classnames';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport { AlertStripeAdvarsel } from 'nav-frontend-alertstriper';\nimport styles from './LoginPage.module.less';\n\nexport const LoginPage = () => {\n\tconst currentLocation = window.location.href;\n\tconst loginUrl = `/auth-proxy/oauth2/login?redirect_uri=${currentLocation}`;\n\n\treturn (\n\t\t<main className={styles.loginPage}>\n\t\t\t<Systemtittel className={cls('blokk-xl', styles.title)}>Hei koordinator hos tiltaksarrangør!</Systemtittel>\n\n\t\t\t<AlertStripeAdvarsel className=\"blokk-xl\">\n\t\t\t\tDette er en første løsning til pilot.\n\t\t\t\tKun de som har avtalt med Team KOMET og har riktig innstilling gjennom Altinn vil kunne få tilgang til tjenesten.\n\t\t\t</AlertStripeAdvarsel>\n\n\t\t\t<a className=\"knapp knapp--hoved\" href={loginUrl}>Logg inn</a>\n\t\t</main>\n\t);\n};","import React from 'react';\nimport cls from 'classnames';\nimport { Link } from 'react-router-dom';\nimport './SpaLenkepanel.less';\n\ninterface SpaLenkepanelProps {\n\tto: string;\n\tborder?: boolean;\n\tchildren?: React.ReactNode;\n\tclassName?: string;\n}\n\nexport const SpaLenkepanel = (props: SpaLenkepanelProps) => {\n\tconst { to, border, children, className } = props\n\n\treturn (\n\t\t<Link to={to} className={cls('lenkepanel', {'lenkepanel--border': border}, className)}>\n\t\t\t{children}\n\t\t\t<span className=\"lenkepanel__indikator\"/>\n\t\t</Link>\n\t)\n};\n","import React from 'react';\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\nimport { SpaLenkepanel } from '../../../../felles/spa-lenkepanel/SpaLenkepanel';\nimport styles from './TiltakinstansOversiktPanel.module.less';\n\ninterface TiltakinstansOversiktPanelProps {\n    id: string,\n    navn: string,\n    deltakere?: number\n    oppstart?: Date,\n}\n\nexport const TiltakinstansOversiktPanel = (props: TiltakinstansOversiktPanelProps) => {\n    const {id, navn, deltakere, oppstart} = props\n\n    return (\n        <SpaLenkepanel to={`/instans/${id}`} border>\n            <div className={styles.content} >\n                <Element className=\"blokk-xxs\">{navn}</Element>\n                <div className={styles.undertekst}>\n                    { deltakere && <Normaltekst>{`Antall deltakere: ${deltakere}`}</Normaltekst> }\n                    { oppstart && <Normaltekst>{`Oppstart: ${oppstart.getUTCDate()}`}</Normaltekst> }\n                </div>\n            </div>\n        </SpaLenkepanel>\n    )\n}\n","import React from 'react';\nimport { TiltakinstansOversiktPanel } from './tiltakinstans-oversikt-panel/TiltakinstansOversiktPanel';\nimport { Tiltak } from '../../../../api/data/tiltak';\nimport styles from './TiltaksinstansListe.module.less';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport dayjs from 'dayjs';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\n\ninterface TiltakinstansListeProps {\n\ttiltak: Tiltak[];\n}\n\nexport const TiltakinstansListe = (props: TiltakinstansListeProps) => {\n\n\tif (props.tiltak.length === 0) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AlertStripeInfo>Ingen tiltak</AlertStripeInfo>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ul className={styles.cleanList}>\n\t\t\t{props.tiltak.map((tiltak, tiltakIdx) => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={tiltakIdx} className=\"blokk-l\">\n\t\t\t\t\t\t<Systemtittel className=\"blokk-m\">{tiltak.typeNavn}</Systemtittel>\n\t\t\t\t\t\t<ul className={styles.cleanList}>\n\t\t\t\t\t\t\t{tiltak.tiltakinstanser.map((tiltakinstanse, tiltakinstanseIdx) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={tiltakinstanseIdx} className=\"blokk-s\">\n\t\t\t\t\t\t\t\t\t\t<TiltakinstansOversiktPanel\n\t\t\t\t\t\t\t\t\t\t\tid={tiltakinstanse.id}\n\t\t\t\t\t\t\t\t\t\t\tnavn={tiltak.typeNavn} // TODO: Hva blir navnet for en tiltakinstanse?\n\t\t\t\t\t\t\t\t\t\t\toppstart={dayjs(tiltakinstanse.startdato).toDate()} // TODO: date-utils eller map DTO til ny modell lenger oppe\n\t\t\t\t\t\t\t\t\t\t\tdeltakere={tiltakinstanse.deltakere}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t);\n};","import React, { useEffect, useState } from 'react';\nimport Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { Checkbox, CheckboxGruppe } from 'nav-frontend-skjema';\nimport { TiltakType } from '../../../api/data/bruker';\nimport { mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport { TiltakinstansListe } from './tiltakinstans-liste/TiltakinstansListe';\nimport globalStyles from '../../../globals.module.less';\nimport styles from './TiltakinstansOversiktPage.module.less';\nimport { fetchTiltak } from '../../../api';\nimport { Tiltak } from '../../../api/data/tiltak';\nimport { Spinner } from '../../felles/spinner/Spinner';\n\nexport const TiltakinstansOversiktPage = () => {\n    const [tiltak, setTiltak] = useState<Tiltak[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        fetchTiltak()\n            .then(res => setTiltak(res.data))\n            .catch(console.error) // TODO: vis feil i alertstripe\n            .finally(() => setIsLoading(false));\n    }, []);\n\n    if (isLoading) {\n        return <Spinner/>;\n    }\n\n    return (\n        <main className={styles.page}>\n            <section>\n                <Ekspanderbartpanel tittel=\"Tiltaksvarianter\" className={globalStyles.blokkM} apen>\n                    <CheckboxGruppe>\n                        {Object.values(TiltakType).map((type) => (\n                            <Checkbox\n                                key={type}\n                                label={mapTiltakTypeTilTekst(type)}\n                                name=\"filter-tiltakstype\"\n                                checked={false}\n\n                            />\n                        ))}\n                    </CheckboxGruppe>\n                </Ekspanderbartpanel>\n            </section>\n\n            <TiltakinstansListe tiltak={tiltak}/>\n        </main>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { BrukerDetaljerPage } from './component/page/bruker-detaljer/BrukerDetaljerPage';\nimport { TiltakinstansDetaljerPage } from './component/page/tiltakinstans-detaljer/TiltakinstansDetaljerPage';\nimport StoreProvider from './store/store-provider';\nimport { LoginPage } from './component/page/login/LoginPage';\nimport { Spinner } from './component/felles/spinner/Spinner';\nimport { checkIsAuthenticated } from './api';\nimport { TiltakinstansOversiktPage } from './component/page/tiltakinstans-oversikt/TiltakinstansOversiktPage';\n\nexport const App = () => {\n\tconst [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\n\n\tuseEffect(() => {\n\t\tcheckIsAuthenticated()\n\t\t\t.then((res) => setIsAuthenticated(res.data.isAuthenticated))\n\t\t\t.catch(() => setIsAuthenticated(false))\n\t\t\t.finally(() => setIsLoading(false));\n\t}, []);\n\n\tif (isLoading) {\n\t\treturn <Spinner/>;\n\t}\n\n\tif (!isAuthenticated) {\n\t\treturn <LoginPage />;\n\t}\n\n\treturn (\n\t\t<StoreProvider>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/user/:brukerId\">\n\t\t\t\t\t\t<BrukerDetaljerPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/instans/:tiltakinstansId\">\n\t\t\t\t\t\t<TiltakinstansDetaljerPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<TiltakinstansOversiktPage/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</StoreProvider>\n\t);\n};\n","class Environment {\n\tget isProduction() {\n\t\treturn !this.isDevelopment;\n\t}\n\n\tget isDevelopment() {\n\t\treturn process.env.REACT_APP_DEV === 'true';\n\t}\n}\n\nconst env = new Environment();\n\nexport default env;\n","import 'dayjs/locale/nb';\n\nimport './index.less';\n\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport env from './utils/environment';\n\ndayjs.locale('nb');\n\nif (env.isDevelopment) {\n\trequire('./mock');\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","import faker from 'faker';\n\nfaker.locale = 'nb_NO';\nfaker.seed(486756783);\n\nexport const randBetween = (min: number, max: number): number => {\n\treturn faker.datatype.number({ min, max });\n};\n\nexport const randomFnr = (): string => {\n\tconst dag = randBetween(1, 31);\n\tconst mnd = randBetween(1, 12);\n\tconst ar = randBetween(0, 99);\n\tconst arhundre = randBetween(0, 99).toString().padStart(2, '0');\n\tconst kjonnsiffer = faker.datatype.boolean() ? 4 : 1;\n\tconst individsifre = `${arhundre}${kjonnsiffer}`;\n\tconst kontrollsifre = `${randBetween(0, 9)}${randBetween(0, 9)}`;\n\n\treturn `${dag.toString().padStart(2, '0')}${mnd.toString().padStart(2, '0')}${ar\n\t\t.toString()\n\t\t.padStart(2, '0')}${individsifre}${kontrollsifre}`;\n};","import faker from 'faker';\n\nimport { Bruker, DetaljertBruker, NavEnhet, TiltakStatus, TiltakType } from '../../api/data/bruker';\nimport { OrNothing } from '../../utils/types/or-nothing';\nimport { randBetween, randomFnr } from '../utils/faker';\n\nconst navEnheter: NavEnhet[] = [\n\t{\n\t\tenhetId: '0219',\n\t\tenhetNavn: 'NAV Bærum',\n\t},\n\t{\n\t\tenhetId: '0425',\n\t\tenhetNavn: 'NAV Åsnes',\n\t},\n\t{\n\t\tenhetId: '1500',\n\t\tenhetNavn: 'NAV Møre og Romsdal',\n\t},\n\t{\n\t\tenhetId: '0104',\n\t\tenhetNavn: 'NAV Moss',\n\t},\n];\n\nconst startDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\tif (status === TiltakStatus.PAMELDT || status === TiltakStatus.GJENNOMFORES) {\n\t\treturn ;\n\t}\n\n\treturn undefined;\n};\n\nconst sluttDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\t// TODO: Implement\n\treturn undefined;\n};\n\nconst lagMailFraNavn = (navn: string, mailDomain: string): string => {\n\tconst mailNavn = navn\n\t\t.replaceAll(' ', '.')\n\t\t.replaceAll('æ', 'ae')\n\t\t.replaceAll('ø', 'o')\n\t\t.replaceAll('å', 'a')\n\t\t.toLowerCase();\n\n\treturn `${mailNavn}@${mailDomain}`;\n};\n\nexport const lagDetaljerteBrukere = (antallBrukere: number): DetaljertBruker[] => {\n\tconst brukere: DetaljertBruker[] = [];\n\n\tfor (let i = 0; i < antallBrukere; i++) {\n\t\tconst status = faker.random.objectElement(TiltakStatus) as TiltakStatus;\n\n\t\tconst brukerFornavn = faker.name.firstName();\n\t\tconst brukerEtternavn = faker.name.lastName();\n\n\t\tconst veilederNavn = faker.name.firstName() + ' ' + faker.name.lastName();\n\n\t\tconst bruker: DetaljertBruker = {\n\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\tfornavn: brukerFornavn,\n\t\t\tetternavn: brukerEtternavn,\n\t\t\tfodselsdato: randomFnr().substring(0, 6),\n\t\t\ttiltak: {\n\t\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\t\tstatus: status,\n\t\t\t\ttype: faker.random.objectElement(TiltakType) as TiltakType,\n\t\t\t\tstartdato: startDatoForTiltakStatus(status),\n\t\t\t\tsluttdato: sluttDatoForTiltakStatus(status),\n\t\t\t\tnavn: 'Noe tekst',\n\t\t\t},\n\t\t\tkontaktinfo: {\n\t\t\t\temail: lagMailFraNavn(`${brukerFornavn} ${brukerEtternavn}`, 'example.com'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber(),\n\t\t\t},\n\t\t\tnavEnhet: faker.random.arrayElement(navEnheter),\n\t\t\tnavVeileder: {\n\t\t\t\tnavn: veilederNavn,\n\t\t\t\temail: lagMailFraNavn(veilederNavn, 'nav.no'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber(),\n\t\t\t},\n\t\t};\n\n\t\tbrukere.push(bruker);\n\t}\n\n\treturn brukere;\n};\n\nexport const tilBruker = (detaljertBruker: DetaljertBruker): Bruker => {\n\treturn {\n\t\tid: detaljertBruker.id,\n\t\tfornavn: detaljertBruker.fornavn,\n\t\tetternavn: detaljertBruker.etternavn,\n\t\tfodselsdato: detaljertBruker.fodselsdato,\n\t\ttiltak: detaljertBruker.tiltak,\n\t};\n};\n\nexport const mockBrukere = lagDetaljerteBrukere(55);\n","import { Tiltak, Tiltakinstans } from '../../api/data/tiltak';\nimport { randBetween } from '../utils/faker';\nimport * as faker from 'faker';\n\ninterface BaseTiltak {\n\tnavn: string;\n\ttype: string;\n\ttypeNavn: string;\n}\n\nconst baseTiltakList: BaseTiltak[] = [\n\t{\n\t\tnavn: 'Jobbklubb',\n\t\ttype: 'JOBBK',\n\t\ttypeNavn: 'Jobbklubb'\n\t},\n\t{\n\t\tnavn: 'Sveisekurs',\n\t\ttype: 'GRUPPEAMO',\n\t\ttypeNavn: 'Gruppe AMO'\n\t}\n];\n\nconst lagTiltak = (): Tiltak[] => {\n\tconst tiltak: Tiltak[] = [];\n\n\tbaseTiltakList.forEach(baseTiltak => {\n\t\tconst antallInstanser = randBetween(1, 3);\n\n\t\ttiltak.push({\n\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\t...baseTiltak,\n\t\t\ttiltakinstanser: lagTiltakinstanser(antallInstanser),\n\t\t});\n\t});\n\n\treturn tiltak;\n};\n\nconst lagTiltakinstanser = (antallInstanser: number): Tiltakinstans[] => {\n\tconst tiltakinstanser: Tiltakinstans[] = [];\n\n\tfor (let i = 0; i < antallInstanser; i++) {\n\t\ttiltakinstanser.push(lagTiltakinstanse());\n\t}\n\n\treturn tiltakinstanser;\n};\n\nconst lagTiltakinstanse = (): Tiltakinstans => {\n\treturn {\n\t\tid: randBetween(1000, 1000000).toString(),\n\t\tdeltakere: randBetween(0, 20),\n\t\tstartdato: faker.date.past().toISOString(),\n\t\tsluttdato: faker.date.future().toISOString()\n\t};\n};\n\nexport const mockTiltak = lagTiltak();\n","import { rest, setupWorker } from 'msw';\nimport { RequestHandler } from 'msw/lib/types/handlers/RequestHandler';\n\nimport {\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody,\n} from '../api/data/request-types';\nimport { mockBrukere, tilBruker } from './data/brukere';\nimport { mockTiltak } from './data/tiltak';\n\nconst allHandlers: RequestHandler[] = [\n\trest.get('/auth-proxy/is-authenticated', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json({ isAuthenticated: true }));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak/instans/:tiltakinstansId', (req, res, ctx) => {\n\t\tconst id = req.params.tiltakinstansId;\n\n\t\tconst tiltakinstans = mockTiltak\n\t\t\t.flatMap(tiltak => tiltak.tiltakinstanser)\n\t\t\t.find(instans => instans.id === id);\n\n\t\tif (!tiltakinstans) {\n\t\t\treturn res(ctx.delay(500), ctx.status(404));\n\t\t}\n\n\t\treturn res(ctx.delay(500), ctx.json(tiltakinstans));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak/instans/:tiltakinstansId/brukere', (req, res, ctx) => {\n\t\tconst brukere = mockBrukere.map(tilBruker);\n\t\treturn res(ctx.delay(500), ctx.json(brukere));\n\t}),\n\trest.get('/amt-tiltak/api/bruker/:brukerId', (req, res, ctx) => {\n\t\tconst brukerId = req.params['brukerId'];\n\t\tconst bruker = mockBrukere.find((b) => b.id === brukerId);\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json(mockTiltak));\n\t}),\n\trest.get('/amt-tiltak/api/tiltak', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json(mockTiltak));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/startdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakStartdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId'];\n\t\tconst bruker = mockBrukere.find((bruker) => bruker.tiltak.id === tiltakinstansId);\n\n\t\tif (!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\n\t\tbruker.tiltak.startdato = body.startdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/sluttdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakSluttdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId'];\n\t\tconst bruker = mockBrukere.find((bruker) => bruker.tiltak.id === tiltakinstansId);\n\n\t\tif (!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\n\t\tbruker.tiltak.sluttdato = body.sluttdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n];\n\nsetupWorker(...allHandlers)\n\t.start({ serviceWorker: { url: process.env.PUBLIC_URL + '/mockServiceWorker.js' } })\n\t.catch((e) => {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.error('Unable to setup mocked API endpoints', e);\n\t});\n","import { OrNothing } from '../../utils/types/or-nothing';\n\nexport interface Bruker {\n\tid: string;\n\tfodselsdato: string;\n\tfornavn: string;\n\tetternavn: string;\n\ttiltak: DeprecatedTiltaksinstans;\n}\n\nexport interface DetaljertBruker {\n\tid: string;\n\tfodselsdato: string;\n\tfornavn: string;\n\tetternavn: string;\n\ttiltak: DeprecatedTiltaksinstans;\n\n\tnavEnhet: NavEnhet;\n\tkontaktinfo: Kontaktinfo;\n\tnavVeileder: OrNothing<NavVeileder>;\n}\n\nexport interface DeprecatedTiltaksinstans {\n\tid: string;\n\ttype: TiltakType;\n\tstatus: TiltakStatus;\n\tnavn: string;\n\tstartdato: OrNothing<string>;\n\tsluttdato: OrNothing<string>;\n}\n\nexport interface NavEnhet {\n\tenhetId: string;\n\tenhetNavn: string;\n}\n\ninterface Kontaktinfo {\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\ninterface NavVeileder {\n\tnavn: string;\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\nexport enum TiltakType {\n\tJOBBSOKERKURS = 'JOBBSOKERKURS',\n\tAVKLARING = 'AVKLARING',\n\tGRUPPE_AMO = 'GRUPPE_AMO',\n\tOPPFOLGING = 'OPPFOLGING',\n}\n\nexport enum TiltakStatus {\n\tNY_BRUKER = 'NY_BRUKER',\n\tPAMELDT = 'PAMELDT',\n\tGJENNOMFORES = 'GJENNOMFORES',\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__gNfUK\",\"center-block\":\"center-block__29b77\",\"pull-right\":\"pull-right__1_ahA\",\"pull-left\":\"pull-left__1Jt2h\",\"hide\":\"hide__3_Fyb\",\"show\":\"show__uq-yK\",\"hidden\":\"hidden__3C43V\",\"invisible\":\"invisible__3Mk-s\",\"text-hide\":\"text-hide__2TFPd\",\"ustilet\":\"ustilet__3onBT\",\"blokk\":\"blokk__cRVpl\",\"blokk-null\":\"blokk-null__y5Xlc\",\"blokk-xxxs\":\"blokk-xxxs__2duqe\",\"blokk-xxs\":\"blokk-xxs__3xWzh\",\"blokk-xs\":\"blokk-xs__1xorx\",\"blokk-s\":\"blokk-s__1E4oK\",\"blokk-m\":\"blokk-m__31Vvh\",\"blokk-l\":\"blokk-l__I6QuF\",\"blokk-xl\":\"blokk-xl__1AMaw\",\"header\":\"header__1oX-B\",\"headerTitle\":\"headerTitle__YU1ll\",\"tilbakeLenke\":\"tilbakeLenke__1zmdO\",\"detaljer\":\"detaljer__2uUDn\",\"tiltakCard\":\"tiltakCard__aP7CA\",\"userInfoContent\":\"userInfoContent__3Csxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__3UCmH\",\"center-block\":\"center-block__qRhQr\",\"pull-right\":\"pull-right__uoRiB\",\"pull-left\":\"pull-left__3Sk0z\",\"hide\":\"hide__3yk1z\",\"show\":\"show__25QKn\",\"hidden\":\"hidden__1vXM7\",\"invisible\":\"invisible__1E0VC\",\"text-hide\":\"text-hide__159n6\",\"ustilet\":\"ustilet__M_vEf\",\"blokk\":\"blokk__1sum3\",\"blokk-null\":\"blokk-null__1kE01\",\"blokk-xxxs\":\"blokk-xxxs__zdZmh\",\"blokk-xxs\":\"blokk-xxs__3wMg6\",\"blokk-xs\":\"blokk-xs__PjJ8i\",\"blokk-s\":\"blokk-s__3mZX8\",\"blokk-m\":\"blokk-m__1ll-c\",\"blokk-l\":\"blokk-l__3QslZ\",\"blokk-xl\":\"blokk-xl__3pfFf\",\"blokkM\":\"blokkM__C-cKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"loginPage__28CzY\",\"title\":\"title__3MnEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content__1GD3z\",\"undertekst\":\"undertekst__2UTQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tiltakinstansListe\":\"tiltakinstansListe__3Y_Om\",\"cleanList\":\"cleanList__2EsHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner__3ZKPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card__3qS7F\"};"],"sourceRoot":""}