{"version":3,"sources":["api/utils.ts","utils/constants.ts","api/index.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/types.tsx","component/felles/spinner/Spinner.tsx","utils/bruker-utils.ts","utils/date-utils.ts","utils/text-mappers.ts","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.tsx","component/page/bruker-detaljer/BrukerDetaljerPage.tsx","store/tiltaksoversikt-sok-store.ts","component/felles/Show.tsx","component/page/tiltakinstans-detaljer/bruker-oversikt/Rad.tsx","utils/sortering-utils.ts","component/page/tiltakinstans-detaljer/bruker-oversikt/TabellBody.tsx","component/page/tiltakinstans-detaljer/bruker-oversikt/TabellHeader.tsx","component/page/tiltakinstans-detaljer/bruker-oversikt/BrukerOversiktTabell.tsx","utils/filtrering-utils.ts","component/page/tiltakinstans-detaljer/FilterMeny.tsx","component/page/tiltakinstans-detaljer/TiltaksoversiktPage.tsx","store/store-provider.tsx","component/page/login/LoginPage.tsx","App.tsx","utils/environment.ts","index.tsx","mock/data/brukere.ts","mock/index.ts","api/data/bruker.ts","globals.module.less","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.module.less","component/page/bruker-detaljer/BrukerDetaljerPage.module.less","component/page/login/LoginPage.module.less","component/felles/spinner/Spinner.module.less","component/page/tiltakinstans-detaljer/bruker-oversikt/Rad.module.less","component/page/tiltakinstans-detaljer/bruker-oversikt/BrukerOversiktTabell.module.less","component/page/tiltakinstans-detaljer/TiltaksoversiktPage.module.less"],"names":["axiosInstance","axios","create","withCredentials","headers","Kolonnenavn","Spinner","className","styles","spinner","type","lagKommaSeparertBrukerNavn","fornavn","etternavn","lagBrukerNavn","formatDateStr","dateStr","dayjs","format","formatDateInputStr","stringToDate","toDate","mapTiltakStatusTilTekst","tiltakStatus","TiltakStatus","GJENNOMFORES","NY_BRUKER","PAMELDT","mapTiltakTypeTilTekst","tiltakType","TiltakType","AVKLARING","GRUPPE_AMO","JOBBSOKERKURS","OPPFOLGING","Seksjon","tittel","children","textBold","BrukerPaaTiltakDetaljer","props","bruker","tiltak","navEnhet","navVeileder","kontaktinfo","useState","startdato","setStartdato","sluttdato","setSluttdato","globalStyles","blokkM","userInfoContent","telefonnummer","email","status","periodeInputWrapper","label","value","onChange","e","target","periodeKnapp","onClick","tiltakinstansId","body","toISOString","put","oppdaterTiltakStartdato","id","disabled","oppdaterTiltakSluttdato","enhetNavn","navn","BrukerDetaljerPage","brukerId","useParams","setBruker","hasFailed","setHasFailed","useEffect","get","fetchBrukerDetaljer","then","res","data","catch","userInfoPage","to","cls","tilbakeLenke","constate","navnFnrSok","setNavnFnrSok","tiltakStatusFilter","setTiltakStatusFilter","leggTilTiltakStatus","prevStatuser","includes","fjernFraTiltakStatus","filter","brukerSortering","setBrukerSortering","TiltaksoversiktSokStoreProvider","useTiltaksoversiktSok","Show","if","SorteringType","sortClassName","name","kolonnenavn","Rad","fodselsdato","userSort","NAVN","FODSELSDATO","TILTAKSTYPE","TILTAK","STATUS","START","SLUTT","PeopleFilled","personIcon","TabellBody","brukere","map","idx","sortering","mapSortDirectionToClassName","sorteringType","ASCENDING","DESCENDING","SortableHeader","title","onSortChange","NONE","nesteSorteringType","finnNesteSorteringType","ariaLabel","mapSortDirectionToText","role","aria-sort","aria-label","TabellHeader","BrukerOversiktTabell","brukereFiltrert","statusFilter","navnFilter","trim","length","matcherFornavn","toLowerCase","matcherEtternavn","matcherNavn","brukerStatus","matcherStatus","filtrerteBrukere","setFiltrerteBrukere","harIngenBrukere","IngenBrukereAlertstripe","ingenBrukere","aria-live","sort","isLoading","FilterMeny","placeholder","apen","Object","values","checked","TiltaksoversiktPage","setBrukere","setIsLoading","console","error","finally","tiltaksoversiktPage","StoreProvider","LoginPage","currentLocation","window","location","href","loginUrl","loginPage","App","isAuthenticated","setIsAuthenticated","path","env","this","isDevelopment","process","locale","require","ReactDOM","render","StrictMode","document","getElementById","faker","seed","navEnheter","enhetId","randBetween","min","max","datatype","number","randomFnr","dag","mnd","ar","arhundre","toString","padStart","kjonnsiffer","boolean","individsifre","kontrollsifre","startDatoForTiltakStatus","date","recent","lagMailFraNavn","mailDomain","mailNavn","replaceAll","tilBruker","detaljertBruker","mockBrukere","antallBrukere","i","random","objectElement","brukerFornavn","firstName","brukerEtternavn","lastName","veilederNavn","substring","sluttDatoForTiltakStatus","phone","phoneNumber","arrayElement","push","lagDetaljerteBrukere","allHandlers","rest","req","ctx","delay","json","params","find","b","Error","setupWorker","start","serviceWorker","url","module","exports"],"mappings":"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","file":"static/js/main.241d1608.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosPromise, AxiosResponse } from 'axios';\n\nimport { APP_NAME } from '../utils/constants';\n\nexport const axiosInstance = axios.create({\n\twithCredentials: true,\n\theaders: { 'Nav-Consumer-Id': APP_NAME },\n});\n\nexport function isAnyLoading(...fetchers: { loading: boolean }[]): boolean {\n\treturn fetchers.some((f) => f.loading);\n}\n\nexport function isAnyLoadingOrNotStarted(...fetchers: { data?: any; error?: any; loading: boolean }[]): boolean {\n\treturn fetchers.some((f) => f.loading || (!f.error && !f.data));\n}\n\nexport function hasAnyFailed(...fetchers: { error?: AxiosError }[]): boolean {\n\treturn fetchers.some((f) => f.error);\n}\n\nexport function ifResponseHasData<T>(callback: (data: T) => void): (res: AxiosResponse<T>) => AxiosPromise<T> {\n\treturn (res: AxiosResponse<T>) => {\n\t\tif (res.status < 300 && res.data) {\n\t\t\tcallback(res.data);\n\t\t}\n\t\treturn Promise.resolve(res);\n\t};\n}\n","export const APP_NAME = 'amt-tiltaksarrangor-flate';\n","import { AxiosPromise } from 'axios';\n\nimport { Bruker, DetaljertBruker, Tiltaksinstans } from './data/bruker';\nimport {\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody,\n} from './data/request-types';\nimport { axiosInstance } from './utils';\n\nexport const checkIsAuthenticated = (): AxiosPromise<{ isAuthenticated: boolean }> => {\n\treturn axiosInstance.get('/auth-proxy/is-authenticated');\n};\n\nexport const fetchTiltakoversikt = (): AxiosPromise<Bruker[]> => {\n\treturn axiosInstance.get('/amt-tiltak/api/brukere');\n};\n\nexport const fetchBrukerDetaljer = (brukerId: string): AxiosPromise<DetaljertBruker> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/bruker/${brukerId}`);\n};\n\nexport const oppdaterTiltakStartdato = (tiltakinstansId: string, startdato: Date): AxiosPromise<Tiltaksinstans> => {\n\tconst body: OppdaterTiltakStartdatoRequestBody = {\n\t\tstartdato: startdato.toISOString(),\n\t};\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/startdato`, body);\n};\n\nexport const oppdaterTiltakSluttdato = (tiltakinstansId: string, sluttdato: Date): AxiosPromise<Tiltaksinstans> => {\n\tconst body: OppdaterTiltakSluttdatoRequestBody = {\n\t\tsluttdato: sluttdato.toISOString(),\n\t};\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/sluttdato`, body);\n};\n","import { SorteringType } from '../../../../utils/sortering-utils';\n\nexport enum Kolonnenavn {\n\tNAVN = 'NAVN',\n\tFODSELSDATO = 'FODSELSDATO',\n\tTILTAKSTYPE = 'TILTAKSTYPE',\n\tTILTAK = 'TILTAK',\n\tSTATUS = 'STATUS',\n\tSTART = 'START',\n\tSLUTT = 'SLUTT',\n}\n\nexport interface BrukerSortering {\n\tkolonnenavn: Kolonnenavn;\n\tsorteringType: SorteringType;\n}\n","import NavFrontendSpinner from 'nav-frontend-spinner';\nimport React from 'react';\n\nimport styles from './Spinner.module.less';\n\nexport const Spinner = () => {\n\treturn (\n\t\t<div className={styles.spinner}>\n\t\t\t<NavFrontendSpinner type=\"XL\" />\n\t\t</div>\n\t);\n};\n","export const lagKommaSeparertBrukerNavn = (fornavn: string, etternavn: string): string => `${etternavn}, ${fornavn}`;\n\nexport const lagBrukerNavn = (fornavn: string, etternavn: string): string => `${fornavn} ${etternavn}`;\n","import dayjs from 'dayjs';\n\nimport { OrNothing } from './types/or-nothing';\n\nexport const formatDateStr = (dateStr: string) => {\n\treturn dayjs(dateStr).format('DD. MMM YYYY');\n};\n\nexport const formatDateInputStr = (dateStr: OrNothing<string>): string => {\n\treturn dateStr ? dayjs(dateStr).format('YYYY-MM-DD') : '';\n};\n\nexport const stringToDate = (dateStr: string): Date => dayjs(dateStr, 'YYYY-MM-DD').toDate();\n\nexport const sortDateNullsFirst = (d1Str: OrNothing<string>, d2Str: OrNothing<string>): number => {\n\tif (d1Str == null) {\n\t\treturn -1;\n\t}\n\n\tif (d2Str == null) {\n\t\treturn 1;\n\t}\n\n\tconst date1 = dayjs(d1Str);\n\tconst date2 = dayjs(d2Str);\n\n\tif (date1.isSame(date2)) {\n\t\treturn 0;\n\t}\n\n\treturn date1.isBefore(date2) ? -1 : 1;\n};\n","import { TiltakStatus, TiltakType } from '../api/data/bruker';\n\nexport const mapTiltakStatusTilTekst = (tiltakStatus: TiltakStatus): string => {\n\tswitch (tiltakStatus) {\n\t\tcase TiltakStatus.GJENNOMFORES:\n\t\t\treturn 'Gjennomføres';\n\t\tcase TiltakStatus.NY_BRUKER:\n\t\t\treturn 'Ny Bruker';\n\t\tcase TiltakStatus.PAMELDT:\n\t\t\treturn 'Påmeldt';\n\t\tdefault:\n\t\t\treturn tiltakStatus;\n\t}\n};\n\nexport const mapTiltakTypeTilTekst = (tiltakType: TiltakType): string => {\n\tswitch (tiltakType) {\n\t\tcase TiltakType.AVKLARING:\n\t\t\treturn 'Avklaring';\n\t\tcase TiltakType.GRUPPE_AMO:\n\t\t\treturn 'Gruppe AMO';\n\t\tcase TiltakType.JOBBSOKERKURS:\n\t\t\treturn 'Jobbsøkerkurs';\n\t\tcase TiltakType.OPPFOLGING:\n\t\t\treturn 'Oppfølging';\n\t\tdefault:\n\t\t\treturn tiltakType;\n\t}\n};\n","import { Knapp } from 'nav-frontend-knapper';\nimport { Input } from 'nav-frontend-skjema';\nimport { Ingress, Normaltekst, Sidetittel } from 'nav-frontend-typografi';\nimport React, { ReactNode, useState } from 'react';\n\nimport { oppdaterTiltakSluttdato, oppdaterTiltakStartdato } from '../../../api';\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport globalStyles from '../../../globals.module.less';\nimport { lagBrukerNavn } from '../../../utils/bruker-utils';\nimport { formatDateInputStr, stringToDate } from '../../../utils/date-utils';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport styles from './BrukerPaaTiltakDetaljer.module.less';\n\ninterface SeksjonProps {\n\ttittel: string;\n\tchildren?: ReactNode;\n}\n\nconst Seksjon = ({ tittel, children }: SeksjonProps) => (\n\t<div>\n\t\t<Ingress className={styles.textBold}>{tittel}</Ingress>\n\t\t{children}\n\t</div>\n);\n\nexport const BrukerPaaTiltakDetaljer = (props: { bruker: DetaljertBruker }) => {\n\tconst { tiltak, navEnhet, navVeileder, kontaktinfo, fornavn, etternavn } = props.bruker;\n\tconst [startdato, setStartdato] = useState<string>(formatDateInputStr(tiltak.startdato));\n\tconst [sluttdato, setSluttdato] = useState<string>(formatDateInputStr(tiltak.sluttdato));\n\n\tconst onStartdatoLagreClick = () => {\n\t\tif (!startdato) return;\n\t\toppdaterTiltakStartdato(tiltak.id, stringToDate(startdato!));\n\t};\n\tconst onSluttdatoLagreClick = () => {\n\t\tif (!sluttdato) return;\n\t\toppdaterTiltakSluttdato(tiltak.id, stringToDate(sluttdato!));\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Sidetittel className={globalStyles.blokkM}>{lagBrukerNavn(fornavn, etternavn)}</Sidetittel>\n\t\t\t<div className={styles.userInfoContent}>\n\t\t\t\t<Seksjon tittel=\"Kontaktinformasjon\">\n\t\t\t\t\t<Normaltekst>Telefon: {kontaktinfo.telefonnummer}</Normaltekst>\n\t\t\t\t\t<Normaltekst>Email: {kontaktinfo.email}</Normaltekst>\n\t\t\t\t</Seksjon>\n\n\t\t\t\t<Seksjon tittel=\"Status\">\n\t\t\t\t\t<Normaltekst>{mapTiltakStatusTilTekst(tiltak.status)}</Normaltekst>\n\t\t\t\t</Seksjon>\n\n\t\t\t\t<Seksjon tittel=\"Periode for gjennomføring\">\n\t\t\t\t\t<div className={styles.periodeInputWrapper}>\n\t\t\t\t\t\t<Input label=\"Start\" type=\"date\" value={startdato} onChange={(e) => setStartdato(e.target.value)} />\n\n\t\t\t\t\t\t<Knapp className={styles.periodeKnapp} onClick={onStartdatoLagreClick} disabled={!startdato}>\n\t\t\t\t\t\t\tLagre\n\t\t\t\t\t\t</Knapp>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.periodeInputWrapper}>\n\t\t\t\t\t\t<Input label=\"Slutt\" type=\"date\" value={sluttdato} onChange={(e) => setSluttdato(e.target.value)} />\n\n\t\t\t\t\t\t<Knapp className={styles.periodeKnapp} onClick={onSluttdatoLagreClick} disabled={!sluttdato}>\n\t\t\t\t\t\t\tLagre\n\t\t\t\t\t\t</Knapp>\n\t\t\t\t\t</div>\n\t\t\t\t</Seksjon>\n\n\t\t\t\t<Seksjon tittel=\"NAV-kontor\">\n\t\t\t\t\t<Normaltekst>{navEnhet.enhetNavn}</Normaltekst>\n\t\t\t\t</Seksjon>\n\n\t\t\t\t<Seksjon tittel=\"Veileder\">\n\t\t\t\t\t<Normaltekst>Navn: {navVeileder?.navn}</Normaltekst>\n\t\t\t\t\t<Normaltekst>Email: {navVeileder?.email}</Normaltekst>\n\t\t\t\t\t<Normaltekst>Telefonnummer: {navVeileder?.telefonnummer}</Normaltekst>\n\t\t\t\t</Seksjon>\n\n\t\t\t\t<Seksjon tittel=\"Tiltak\">\n\t\t\t\t\t<Normaltekst>Type: {mapTiltakTypeTilTekst(tiltak.type)}</Normaltekst>\n\t\t\t\t</Seksjon>\n\n\t\t\t\t<Seksjon tittel=\"Beskrivelse\" />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import cls from 'classnames';\nimport { AlertStripeFeil } from 'nav-frontend-alertstriper';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { fetchBrukerDetaljer } from '../../../api';\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport globalStyles from '../../../globals.module.less';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport styles from './BrukerDetaljerPage.module.less';\nimport { BrukerPaaTiltakDetaljer } from './BrukerPaaTiltakDetaljer';\n\nexport const BrukerDetaljerPage = () => {\n\tconst { brukerId } = useParams<{ brukerId: string }>();\n\tconst [bruker, setBruker] = useState<DetaljertBruker>();\n\tconst [hasFailed, setHasFailed] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tfetchBrukerDetaljer(brukerId)\n\t\t\t.then((res) => setBruker(res.data))\n\t\t\t.catch(() => setHasFailed(true));\n\t}, [brukerId]);\n\n\treturn (\n\t\t<main className={styles.userInfoPage}>\n\t\t\t<Link to=\"/\" className={cls(styles.tilbakeLenke, globalStyles.blokkM)}>\n\t\t\t\tTilbake\n\t\t\t</Link>\n\t\t\t{bruker ? (\n\t\t\t\t<BrukerPaaTiltakDetaljer bruker={bruker} />\n\t\t\t) : hasFailed ? (\n\t\t\t\t<AlertStripeFeil>En feil oppstod</AlertStripeFeil>\n\t\t\t) : (\n\t\t\t\t<Spinner />\n\t\t\t)}\n\t\t</main>\n\t);\n};\n","import constate from 'constate';\nimport { useState } from 'react';\n\nimport { BrukerSortering } from '../component/page/tiltakinstans-detaljer/bruker-oversikt/types';\nimport { TiltakStatus } from '../api/data/bruker';\n\nexport const [TiltaksoversiktSokStoreProvider, useTiltaksoversiktSok] = constate(() => {\n\tconst [navnFnrSok, setNavnFnrSok] = useState<string>('');\n\tconst [tiltakStatusFilter, setTiltakStatusFilter] = useState<TiltakStatus[]>([]);\n\tconst [brukerSortering, setBrukerSortering] = useState<BrukerSortering>();\n\n\tconst leggTilTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatusFilter((prevStatuser) => {\n\t\t\tif (prevStatuser.includes(tiltakStatus)) {\n\t\t\t\treturn prevStatuser;\n\t\t\t}\n\n\t\t\treturn [...prevStatuser, tiltakStatus];\n\t\t});\n\t};\n\n\tconst fjernFraTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatusFilter((prevStatuser) => {\n\t\t\treturn prevStatuser.filter((status) => status !== tiltakStatus);\n\t\t});\n\t};\n\n\treturn {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatusFilter,\n\t\tleggTilTiltakStatus,\n\t\tfjernFraTiltakStatus,\n\t\tbrukerSortering,\n\t\tsetBrukerSortering,\n\t};\n});\n","interface ShowProps {\n\tif?: any;\n\tchildren?: any;\n}\n\nexport const Show = (props: ShowProps) => (props.if ? props.children : null);\n","import { PeopleFilled } from '@navikt/ds-icons';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Bruker } from '../../../../api/data/bruker';\nimport { lagKommaSeparertBrukerNavn } from '../../../../utils/bruker-utils';\nimport { formatDateStr } from '../../../../utils/date-utils';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../../utils/text-mappers';\nimport styles from './Rad.module.less';\nimport { BrukerSortering, Kolonnenavn } from './types';\n\ninterface RadProps {\n\tidx: number;\n\tbruker: Bruker;\n\tbrukerSortering?: BrukerSortering;\n}\n\nconst sortClassName = (name: Kolonnenavn, brukerSortering?: BrukerSortering): string | undefined => {\n\tif (!brukerSortering || name !== brukerSortering.kolonnenavn) {\n\t\treturn undefined;\n\t}\n\n\treturn 'tabell__td--sortert';\n};\n\nexport const Rad = (props: RadProps) => {\n\tconst { fodselsdato, fornavn, etternavn, tiltak, id } = props.bruker;\n\tconst userSort = props.brukerSortering;\n\n\treturn (\n\t\t<tr>\n\t\t\t<td className={sortClassName(Kolonnenavn.NAVN, userSort)}>{lagKommaSeparertBrukerNavn(fornavn, etternavn)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.FODSELSDATO, userSort)}>{fodselsdato}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.TILTAKSTYPE, userSort)}>{mapTiltakTypeTilTekst(tiltak.type)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.TILTAK, userSort)}>{tiltak.navn}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.STATUS, userSort)}>{mapTiltakStatusTilTekst(tiltak.status)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.START, userSort)}>\n\t\t\t\t{tiltak.startdato && formatDateStr(tiltak.startdato)}\n\t\t\t</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.SLUTT, userSort)}>\n\t\t\t\t{tiltak.sluttdato && formatDateStr(tiltak.sluttdato)}\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Link to={`/user/${id}`}>\n\t\t\t\t\t<PeopleFilled className={styles.personIcon} />\n\t\t\t\t</Link>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n","export enum SorteringType {\n\tASCENDING = 'ascending',\n\tDESCENDING = 'descending',\n\tNONE = 'none',\n}\n\nexport const mapSortDirectionToText = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'stigende';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'synkende';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const mapSortDirectionToClassName = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'tabell__th--sortert-asc';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'tabell__th--sortert-desc';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const finnNesteSorteringType = (sorteringType: SorteringType): SorteringType => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn SorteringType.DESCENDING;\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn SorteringType.NONE;\n\t\tdefault:\n\t\t\t// This will be the default sort direction\n\t\t\treturn SorteringType.ASCENDING;\n\t}\n};\n","import React from 'react';\n\nimport { Bruker } from '../../../../api/data/bruker';\nimport { Rad } from './Rad';\nimport { BrukerSortering } from './types';\n\ninterface TabellBodyProps {\n\tsortering?: BrukerSortering;\n\tbrukere: Bruker[];\n}\n\nexport const TabellBody = (props: TabellBodyProps) => {\n\treturn (\n\t\t<tbody>\n\t\t\t{props.brukere.map((bruker, idx) => (\n\t\t\t\t<Rad idx={idx} bruker={bruker} brukerSortering={props.sortering} key={idx} />\n\t\t\t))}\n\t\t</tbody>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tSorteringType,\n\tfinnNesteSorteringType,\n\tmapSortDirectionToClassName,\n\tmapSortDirectionToText,\n} from '../../../../utils/sortering-utils';\nimport { BrukerSortering, Kolonnenavn } from './types';\n\ninterface TableHeaderProps {\n\ttitle: string;\n\tname: Kolonnenavn;\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nconst SortableHeader = (props: TableHeaderProps) => {\n\tconst { title, name, sortering, onSortChange } = props;\n\tconst sorteringType = name === sortering?.kolonnenavn ? sortering.sorteringType : SorteringType.NONE;\n\n\tconst nesteSorteringType = finnNesteSorteringType(sorteringType);\n\tconst ariaLabel = `Sorter ${title} ${mapSortDirectionToText(nesteSorteringType)}`;\n\n\treturn (\n\t\t<th role=\"columnheader\" className={mapSortDirectionToClassName(sorteringType)} aria-sort={sorteringType}>\n\t\t\t<button\n\t\t\t\taria-label={ariaLabel}\n\t\t\t\tonClick={() => onSortChange({ sorteringType: nesteSorteringType, kolonnenavn: name })}\n\t\t\t>\n\t\t\t\t{title}\n\t\t\t</button>\n\t\t</th>\n\t);\n};\n\ninterface UserTableHeaderProps {\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nexport const TabellHeader = (props: UserTableHeaderProps) => {\n\tconst { sortering, onSortChange } = props;\n\treturn (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t{/* TODO: Er mulig å gjøre koden mer DRY på bekostning av kompleksitet */}\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Etternavn, Fornavn\"\n\t\t\t\t\tname={Kolonnenavn.NAVN}\n\t\t\t\t/>\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Fødselsdato\"\n\t\t\t\t\tname={Kolonnenavn.FODSELSDATO}\n\t\t\t\t/>\n\t\t\t\t<SortableHeader\n\t\t\t\t\tsortering={sortering}\n\t\t\t\t\tonSortChange={onSortChange}\n\t\t\t\t\ttitle=\"Tiltakstype\"\n\t\t\t\t\tname={Kolonnenavn.TILTAKSTYPE}\n\t\t\t\t/>\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Tiltak\" name={Kolonnenavn.TILTAK} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Status\" name={Kolonnenavn.STATUS} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Start\" name={Kolonnenavn.START} />\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Slutt\" name={Kolonnenavn.SLUTT} />\n\t\t\t\t<th />\n\t\t\t</tr>\n\t\t</thead>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { Bruker } from '../../../../api/data/bruker';\nimport { useTiltaksoversiktSok } from '../../../../store/tiltaksoversikt-sok-store';\nimport { Show } from '../../../felles/Show';\nimport { Spinner } from '../../../felles/spinner/Spinner';\nimport { TabellBody } from './TabellBody';\nimport { TabellHeader } from './TabellHeader';\nimport { filtrerBrukere } from '../../../../utils/filtrering-utils';\nimport styles from './BrukerOversiktTabell.module.less';\nimport 'nav-frontend-tabell-style';\n\ninterface UserTableProps {\n\tbrukere: Bruker[];\n\tisLoading: boolean;\n}\n\nexport const BrukerOversiktTabell = (props: UserTableProps) => {\n\tconst { brukerSortering, setBrukerSortering, tiltakStatusFilter, navnFnrSok} = useTiltaksoversiktSok();\n\tconst brukereFiltrert = () => filtrerBrukere(props.brukere, tiltakStatusFilter, navnFnrSok);\n\tconst [filtrerteBrukere, setFiltrerteBrukere] = useState<Bruker[]>(brukereFiltrert);\n\tconst harIngenBrukere = filtrerteBrukere.length === 0;\n\n\tuseEffect(() => {\n\t\tsetFiltrerteBrukere(brukereFiltrert());\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [props.brukere, tiltakStatusFilter, navnFnrSok]);\n\n\tconst IngenBrukereAlertstripe = () => (\n\t\t<AlertStripeInfo className={styles.ingenBrukere}>\n\t\t\t<span role=\"alert\" aria-live=\"polite\">\n\t\t\t\tFant ingen brukere\n\t\t\t</span>\n\t\t</AlertStripeInfo>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<table className=\"tabell tabell--stripet\">\n\t\t\t\t<TabellHeader sortering={brukerSortering} onSortChange={(sort) => setBrukerSortering(sort)} />\n\t\t\t\t<Show if={!props.isLoading && !harIngenBrukere}>\n\t\t\t\t\t<TabellBody brukere={filtrerteBrukere} sortering={brukerSortering} />\n\t\t\t\t</Show>\n\t\t\t</table>\n\t\t\t<Show if={!props.isLoading && harIngenBrukere}>\n\t\t\t\t<IngenBrukereAlertstripe />\n\t\t\t</Show>\n\t\t\t<Show if={props.isLoading}>\n\t\t\t\t<Spinner />\n\t\t\t</Show>\n\t\t</>\n\t);\n};\n","import { Bruker, TiltakStatus } from '../api/data/bruker';\n\nconst matcherNavn = (bruker: {fornavn: string, etternavn: string}, navnFilter: string | undefined) => {\n    if(!navnFilter || navnFilter.trim().length === 0) return true;\n\n    const matcherFornavn = bruker.fornavn.toLowerCase().includes(navnFilter.toLowerCase());\n    const matcherEtternavn = bruker.etternavn.toLowerCase().includes(navnFilter.toLowerCase());\n\n    return matcherFornavn || matcherEtternavn;\n}\n\nconst matcherStatus = (statusFilter: TiltakStatus[], brukerStatus: TiltakStatus) => {\n    if (statusFilter.length === 0) return true;\n    return statusFilter.includes(brukerStatus)\n}\n\nexport const filtrerBrukere = (brukere: Bruker[], statusFilter: TiltakStatus[], navnFilter: string): Bruker[] => {\n   return brukere\n        .filter(bruker => matcherNavn(bruker, navnFilter))\n        .filter(bruker => matcherStatus(statusFilter, bruker.tiltak.status))\n};","import Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { Checkbox, CheckboxGruppe, Input } from 'nav-frontend-skjema';\nimport React from 'react';\n\nimport { TiltakStatus } from '../../../api/data/bruker';\nimport globalStyles from '../../../globals.module.less';\nimport { useTiltaksoversiktSok } from '../../../store/tiltaksoversikt-sok-store';\nimport { mapTiltakStatusTilTekst } from '../../../utils/text-mappers';\n\nexport const FilterMeny = () => {\n\tconst {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatusFilter,\n\t\tleggTilTiltakStatus,\n\t\tfjernFraTiltakStatus,\n\t} = useTiltaksoversiktSok();\n\n\treturn (\n\t\t<div>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Søk etter navn eller fnr\"\n\t\t\t\tclassName={globalStyles.blokkM}\n\t\t\t\tvalue={navnFnrSok}\n\t\t\t\tonChange={(e) => setNavnFnrSok(e.target.value)}\n\t\t\t/>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Status\" className={globalStyles.blokkM} apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakStatus).map((status) => (\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tkey={status}\n\t\t\t\t\t\t\tlabel={mapTiltakStatusTilTekst(status)}\n\t\t\t\t\t\t\tname=\"filter-tiltakstatus\"\n\t\t\t\t\t\t\tchecked={tiltakStatusFilter.includes(status)}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\tleggTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfjernFraTiltakStatus(status);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\t\t</div>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { fetchTiltakoversikt } from '../../../api';\nimport { Bruker } from '../../../api/data/bruker';\nimport { useTiltaksoversiktSok } from '../../../store/tiltaksoversikt-sok-store';\nimport { BrukerOversiktTabell } from './bruker-oversikt/BrukerOversiktTabell';\nimport { FilterMeny } from './FilterMeny';\nimport styles from './TiltaksoversiktPage.module.less';\n\nexport const TiltaksoversiktPage = () => {\n\tconst { tiltakStatusFilter, navnFnrSok, brukerSortering } = useTiltaksoversiktSok();\n\tconst [brukere, setBrukere] = useState<Bruker[]>([]);\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\t// TODO: this must be debounced\n\t\tsetIsLoading(true);\n\n\t\tfetchTiltakoversikt()\n\t\t\t.then((res) => setBrukere(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoading(false));\n\t}, [tiltakStatusFilter, navnFnrSok, navnFnrSok, brukerSortering]);\n\n\treturn (\n\t\t<>\n\t\t\t<main className={styles.tiltaksoversiktPage}>\n\t\t\t\t<FilterMeny />\n\t\t\t\t<BrukerOversiktTabell brukere={brukere} isLoading={isLoading} />\n\t\t\t</main>\n\t\t</>\n\t);\n};\n","import React from 'react';\n\nimport { TiltaksoversiktSokStoreProvider } from './tiltaksoversikt-sok-store';\n\ninterface StoreProviderProps {\n\tchildren: React.ReactNode;\n}\n\nconst StoreProvider = (props: StoreProviderProps) => {\n\treturn <TiltaksoversiktSokStoreProvider>{props.children}</TiltaksoversiktSokStoreProvider>;\n};\n\nexport default StoreProvider;\n","import React from 'react';\nimport cls from 'classnames';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport { AlertStripeAdvarsel } from 'nav-frontend-alertstriper';\nimport styles from './LoginPage.module.less';\n\nexport const LoginPage = () => {\n\tconst currentLocation = window.location.href;\n\tconst loginUrl = `/auth-proxy/oauth2/login?redirect_uri=${currentLocation}`;\n\n\treturn (\n\t\t<main className={styles.loginPage}>\n\t\t\t<Systemtittel className={cls('blokk-xl', styles.title)}>Hei koordinator hos tiltaksarrangør!</Systemtittel>\n\n\t\t\t<AlertStripeAdvarsel className=\"blokk-xl\">\n\t\t\t\tDette er en første løsning til pilot.\n\t\t\t\tKun de som har avtalt med Team KOMET og har riktig innstilling gjennom Altinn vil kunne få tilgang til tjenesten.\n\t\t\t</AlertStripeAdvarsel>\n\n\t\t\t<a className=\"knapp knapp--hoved\" href={loginUrl}>Logg inn</a>\n\t\t</main>\n\t);\n};","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { BrukerDetaljerPage } from './component/page/bruker-detaljer/BrukerDetaljerPage';\nimport { TiltaksoversiktPage } from './component/page/tiltakinstans-detaljer/TiltaksoversiktPage';\nimport StoreProvider from './store/store-provider';\nimport { LoginPage } from './component/page/login/LoginPage';\nimport { Spinner } from './component/felles/spinner/Spinner';\nimport { checkIsAuthenticated } from './api';\n\nexport const App = () => {\n\tconst [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\n\n\tuseEffect(() => {\n\t\tcheckIsAuthenticated()\n\t\t\t.then((res) => setIsAuthenticated(res.data.isAuthenticated))\n\t\t\t.catch(() => setIsAuthenticated(false))\n\t\t\t.finally(() => setIsLoading(false));\n\t}, []);\n\n\tif (isLoading) {\n\t\treturn <Spinner/>;\n\t}\n\n\tif (!isAuthenticated) {\n\t\treturn <LoginPage />;\n\t}\n\n\treturn (\n\t\t<StoreProvider>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/user/:brukerId\">\n\t\t\t\t\t\t<BrukerDetaljerPage />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<TiltaksoversiktPage />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</StoreProvider>\n\t);\n};\n","class Environment {\n\tget isProduction() {\n\t\treturn !this.isDevelopment;\n\t}\n\n\tget isDevelopment() {\n\t\treturn process.env.REACT_APP_DEV === 'true';\n\t}\n}\n\nconst env = new Environment();\n\nexport default env;\n","import 'dayjs/locale/nb';\n\nimport './index.less';\n\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport env from './utils/environment';\n\ndayjs.locale('nb');\n\nif (env.isDevelopment) {\n\trequire('./mock');\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","import faker from 'faker';\n\nimport { Bruker, DetaljertBruker, NavEnhet, TiltakStatus, TiltakType } from '../../api/data/bruker';\nimport { OrNothing } from '../../utils/types/or-nothing';\n\nfaker.locale = 'nb_NO';\nfaker.seed(486756783);\n\nconst navEnheter: NavEnhet[] = [\n\t{\n\t\tenhetId: '0219',\n\t\tenhetNavn: 'NAV Bærum',\n\t},\n\t{\n\t\tenhetId: '0425',\n\t\tenhetNavn: 'NAV Åsnes',\n\t},\n\t{\n\t\tenhetId: '1500',\n\t\tenhetNavn: 'NAV Møre og Romsdal',\n\t},\n\t{\n\t\tenhetId: '0104',\n\t\tenhetNavn: 'NAV Moss',\n\t},\n];\n\nconst randBetween = (min: number, max: number): number => {\n\treturn faker.datatype.number({ min, max });\n};\n\nconst randomFnr = (): string => {\n\tconst dag = randBetween(1, 31);\n\tconst mnd = randBetween(1, 12);\n\tconst ar = randBetween(0, 99);\n\tconst arhundre = randBetween(0, 99).toString().padStart(2, '0');\n\tconst kjonnsiffer = faker.datatype.boolean() ? 4 : 1;\n\tconst individsifre = `${arhundre}${kjonnsiffer}`;\n\tconst kontrollsifre = `${randBetween(0, 9)}${randBetween(0, 9)}`;\n\n\treturn `${dag.toString().padStart(2, '0')}${mnd.toString().padStart(2, '0')}${ar\n\t\t.toString()\n\t\t.padStart(2, '0')}${individsifre}${kontrollsifre}`;\n};\n\nconst startDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\tif (status === TiltakStatus.PAMELDT || status === TiltakStatus.GJENNOMFORES) {\n\t\treturn faker.date.recent().toISOString();\n\t}\n\n\treturn undefined;\n};\n\nconst sluttDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\t// TODO: Implement\n\treturn undefined;\n};\n\nconst lagMailFraNavn = (navn: string, mailDomain: string): string => {\n\tconst mailNavn = navn\n\t\t.replaceAll(' ', '.')\n\t\t.replaceAll('æ', 'ae')\n\t\t.replaceAll('ø', 'o')\n\t\t.replaceAll('å', 'a')\n\t\t.toLowerCase();\n\n\treturn `${mailNavn}@${mailDomain}`;\n};\n\nexport const lagDetaljerteBrukere = (antallBrukere: number): DetaljertBruker[] => {\n\tconst brukere: DetaljertBruker[] = [];\n\n\tfor (let i = 0; i < antallBrukere; i++) {\n\t\tconst status = faker.random.objectElement(TiltakStatus) as TiltakStatus;\n\n\t\tconst brukerFornavn = faker.name.firstName();\n\t\tconst brukerEtternavn = faker.name.lastName();\n\n\t\tconst veilederNavn = faker.name.firstName() + ' ' + faker.name.lastName();\n\n\t\tconst bruker: DetaljertBruker = {\n\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\tfornavn: brukerFornavn,\n\t\t\tetternavn: brukerEtternavn,\n\t\t\tfodselsdato: randomFnr().substring(0, 6),\n\t\t\ttiltak: {\n\t\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\t\tstatus: status,\n\t\t\t\ttype: faker.random.objectElement(TiltakType) as TiltakType,\n\t\t\t\tstartdato: startDatoForTiltakStatus(status),\n\t\t\t\tsluttdato: sluttDatoForTiltakStatus(status),\n\t\t\t\tnavn: 'Noe tekst',\n\t\t\t},\n\t\t\tkontaktinfo: {\n\t\t\t\temail: lagMailFraNavn(`${brukerFornavn} ${brukerEtternavn}`, 'example.com'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber(),\n\t\t\t},\n\t\t\tnavEnhet: faker.random.arrayElement(navEnheter),\n\t\t\tnavVeileder: {\n\t\t\t\tnavn: veilederNavn,\n\t\t\t\temail: lagMailFraNavn(veilederNavn, 'nav.no'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber(),\n\t\t\t},\n\t\t};\n\n\t\tbrukere.push(bruker);\n\t}\n\n\treturn brukere;\n};\n\nexport const tilBruker = (detaljertBruker: DetaljertBruker): Bruker => {\n\treturn {\n\t\tid: detaljertBruker.id,\n\t\tfornavn: detaljertBruker.fornavn,\n\t\tetternavn: detaljertBruker.etternavn,\n\t\tfodselsdato: detaljertBruker.fodselsdato,\n\t\ttiltak: detaljertBruker.tiltak,\n\t};\n};\n\nexport const mockBrukere = lagDetaljerteBrukere(55);\n","import { rest, setupWorker } from 'msw';\nimport { RequestHandler } from 'msw/lib/types/handlers/RequestHandler';\n\nimport {\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody,\n} from '../api/data/request-types';\nimport { mockBrukere, tilBruker } from './data/brukere';\n\nconst allHandlers: RequestHandler[] = [\n\trest.get('/auth-proxy/is-authenticated', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json({ isAuthenticated: true }));\n\t}),\n\trest.get('/amt-tiltak/api/brukere', (req, res, ctx) => {\n\t\tconst brukere = mockBrukere.map(tilBruker);\n\n\t\treturn res(ctx.delay(500), ctx.json(brukere));\n\t}),\n\trest.get('/amt-tiltak/api/bruker/:brukerId', (req, res, ctx) => {\n\t\tconst brukerId = req.params['brukerId'];\n\t\tconst bruker = mockBrukere.find((b) => b.id === brukerId);\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/startdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakStartdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId'];\n\t\tconst bruker = mockBrukere.find((bruker) => bruker.tiltak.id === tiltakinstansId);\n\n\t\tif (!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\n\t\tbruker.tiltak.startdato = body.startdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/sluttdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakSluttdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId'];\n\t\tconst bruker = mockBrukere.find((bruker) => bruker.tiltak.id === tiltakinstansId);\n\n\t\tif (!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\n\t\tbruker.tiltak.sluttdato = body.sluttdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n];\n\nsetupWorker(...allHandlers)\n\t.start({ serviceWorker: { url: process.env.PUBLIC_URL + '/mockServiceWorker.js' } })\n\t.catch((e) => {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.error('Unable to setup mocked API endpoints', e);\n\t});\n","import { OrNothing } from '../../utils/types/or-nothing';\n\nexport interface Bruker {\n\tid: string; // TODO: Skal vi bruke uuid eller heltall?\n\tfodselsdato: string;\n\tfornavn: string; // TODO: Kan hende det holder med kun et felt for navn\n\tetternavn: string;\n\ttiltak: Tiltaksinstans;\n}\n\nexport interface DetaljertBruker {\n\tid: string; // TODO: Skal vi bruke uuid eller heltall?\n\tfodselsdato: string;\n\tfornavn: string; // TODO: Kan hende det holder med kun et felt for navn\n\tetternavn: string;\n\ttiltak: Tiltaksinstans;\n\n\tnavEnhet: NavEnhet;\n\tkontaktinfo: Kontaktinfo;\n\tnavVeileder: OrNothing<NavVeileder>;\n}\n\nexport interface Tiltaksinstans {\n\tid: string;\n\ttype: TiltakType;\n\tstatus: TiltakStatus;\n\tnavn: string;\n\tstartdato: OrNothing<string>;\n\tsluttdato: OrNothing<string>;\n}\n\nexport interface NavEnhet {\n\tenhetId: string;\n\tenhetNavn: string;\n}\n\ninterface Kontaktinfo {\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\ninterface NavVeileder {\n\tnavn: string;\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\nexport enum TiltakType {\n\tJOBBSOKERKURS = 'JOBBSOKERKURS',\n\tAVKLARING = 'AVKLARING',\n\tGRUPPE_AMO = 'GRUPPE_AMO',\n\tOPPFOLGING = 'OPPFOLGING',\n}\n\nexport enum TiltakStatus {\n\tNY_BRUKER = 'NY_BRUKER',\n\tPAMELDT = 'PAMELDT',\n\tGJENNOMFORES = 'GJENNOMFORES',\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__3UCmH\",\"center-block\":\"center-block__qRhQr\",\"pull-right\":\"pull-right__uoRiB\",\"pull-left\":\"pull-left__3Sk0z\",\"hide\":\"hide__3yk1z\",\"show\":\"show__25QKn\",\"hidden\":\"hidden__1vXM7\",\"invisible\":\"invisible__1E0VC\",\"text-hide\":\"text-hide__159n6\",\"ustilet\":\"ustilet__M_vEf\",\"blokk\":\"blokk__1sum3\",\"blokk-null\":\"blokk-null__1kE01\",\"blokk-xxxs\":\"blokk-xxxs__zdZmh\",\"blokk-xxs\":\"blokk-xxs__3wMg6\",\"blokk-xs\":\"blokk-xs__PjJ8i\",\"blokk-s\":\"blokk-s__3mZX8\",\"blokk-m\":\"blokk-m__1ll-c\",\"blokk-l\":\"blokk-l__3QslZ\",\"blokk-xl\":\"blokk-xl__3pfFf\",\"blokkM\":\"blokkM__C-cKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__gNfUK\",\"center-block\":\"center-block__29b77\",\"pull-right\":\"pull-right__1_ahA\",\"pull-left\":\"pull-left__1Jt2h\",\"hide\":\"hide__3_Fyb\",\"show\":\"show__uq-yK\",\"hidden\":\"hidden__3C43V\",\"invisible\":\"invisible__3Mk-s\",\"text-hide\":\"text-hide__2TFPd\",\"ustilet\":\"ustilet__3onBT\",\"blokk\":\"blokk__cRVpl\",\"blokk-null\":\"blokk-null__y5Xlc\",\"blokk-xxxs\":\"blokk-xxxs__2duqe\",\"blokk-xxs\":\"blokk-xxs__3xWzh\",\"blokk-xs\":\"blokk-xs__1xorx\",\"blokk-s\":\"blokk-s__1E4oK\",\"blokk-m\":\"blokk-m__31Vvh\",\"blokk-l\":\"blokk-l__I6QuF\",\"blokk-xl\":\"blokk-xl__1AMaw\",\"textBold\":\"textBold__3aBKa\",\"userInfoContent\":\"userInfoContent__3Csxl\",\"periodeInputWrapper\":\"periodeInputWrapper__3DpCu\",\"periodeKnapp\":\"periodeKnapp__1wsHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfoPage\":\"userInfoPage__NknKL\",\"tilbakeLenke\":\"tilbakeLenke__3zCLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"loginPage__28CzY\",\"title\":\"title__3MnEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner__3ZKPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"personIcon\":\"personIcon__1Ez3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingenBrukere\":\"ingenBrukere__5QNAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tiltaksoversiktPage\":\"tiltaksoversiktPage__25sfw\"};"],"sourceRoot":""}