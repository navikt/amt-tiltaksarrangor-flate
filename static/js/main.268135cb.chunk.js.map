{"version":3,"sources":["component/page/tiltaksoversikt/bruker-oversikt/BrukerOversiktTabell.module.less","component/page/tiltaksoversikt/bruker-oversikt/Rad.module.less","component/page/tiltaksoversikt/paginering/PagineringKnapp.module.less","component/page/tiltaksoversikt/Header.module.less","component/page/tiltaksoversikt/TiltaksoversiktPage.module.less","component/page/tiltaksoversikt/bruker-oversikt/types.tsx","component/felles/Show.tsx","component/felles/spinner/Spinner.tsx","store/tiltaksoversikt-sok-store.ts","component/page/tiltaksoversikt/bruker-oversikt/TabellHeader.tsx","utils/bruker-utils.ts","utils/text-mappers.ts","component/page/tiltaksoversikt/bruker-oversikt/Rad.tsx","component/page/tiltaksoversikt/bruker-oversikt/TabellBody.tsx","component/page/tiltaksoversikt/bruker-oversikt/BrukerOversiktTabell.tsx","component/page/tiltaksoversikt/paginering/PagineringKnapp.tsx","component/page/tiltaksoversikt/paginering/PaginationBar.tsx","component/page/tiltaksoversikt/Header.tsx","component/page/tiltaksoversikt/FilterMeny.tsx","api/utils.ts","utils/constants.ts","api/index.ts","component/page/tiltaksoversikt/TiltaksoversiktPage.tsx","store/store-provider.tsx","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.tsx","component/page/bruker-detaljer/BrukerDetaljerPage.tsx","App.tsx","utils/environment.ts","index.tsx","mock/data/brukere.ts","mock/bruker-sok.ts","utils/index.ts","mock/index.ts","api/data/bruker.ts","utils/date-utils.ts","utils/sortering-utils.ts","globals.module.less","component/page/bruker-detaljer/BrukerPaaTiltakDetaljer.module.less","component/page/tiltaksoversikt/paginering/PaginationBar.module.less","component/page/bruker-detaljer/BrukerDetaljerPage.module.less","component/felles/spinner/Spinner.module.less"],"names":["module","exports","Kolonnenavn","Show","props","if","children","Spinner","className","styles","spinner","type","constate","useState","navnFnrSok","setNavnFnrSok","tiltakTyper","setTiltakTyper","tiltakStatuser","setTiltakStatuser","leggTilTiltakType","tiltakType","prevTyper","includes","fjernTilTiltakType","filter","leggTilTiltakStatus","tiltakStatus","prevStatuser","fjernTilTiltakStatus","status","brukerSortering","setBrukerSortering","TiltaksoversiktSokStoreProvider","useTiltaksoversiktSok","SortableHeader","title","name","sortering","onSortChange","sorteringType","kolonnenavn","SorteringType","NONE","nesteSorteringType","finnNesteSorteringType","ariaLabel","mapSortDirectionToText","role","mapSortDirectionToClassName","aria-sort","aria-label","onClick","TabellHeader","NAVN","FODSELSDATO","TILTAKSTYPE","TILTAK","STATUS","START","SLUTT","lagKommaSeparertBrukerNavn","fornavn","etternavn","lagBrukerNavn","mapTiltakStatusTilTekst","TiltakStatus","GJENNOMFORES","NY_BRUKER","PAMELDT","mapTiltakTypeTilTekst","TiltakType","AVKLARING","GRUPPE_AMO","JOBBSOKERKURS","OPPFOLGING","sortClassName","Rad","bruker","fodselsdato","tiltak","id","userSort","navn","startdato","formatDateStr","sluttdato","to","PeopleFilled","personIcon","TabellBody","brukere","map","idx","BrukerOversiktTabell","harIngenBrukere","length","IngenBrukereAlertstripe","ingenBrukere","aria-live","sort","isLoading","PagineringKnapp","rest","pagineringKnapp","PaginationBar","currentPage","totalPages","erPaForsteSide","erPaSisteSide","fraBruker","tilBruker","totalUsers","paginationBar","paginering","disabled","Header","header","FilterMeny","placeholder","globalStyles","blokkM","value","onChange","e","target","tittel","apen","Object","values","label","checked","axiosInstance","axios","create","withCredentials","headers","TiltaksoversiktPage","setBrukere","setIsLoading","useEffect","brukerSokParams","sokParams","undefined","post","then","res","data","catch","console","error","finally","tiltaksoversiktPage","StoreProvider","Seksjon","textBold","BrukerPaaTiltakDetaljer","navEnhet","navVeileder","kontaktinfo","formatDateInputStr","setStartdato","setSluttdato","userInfoContent","telefonnummer","email","periodeInputWrapper","periodeKnapp","tiltakinstansId","body","toISOString","put","oppdaterTiltakStartdato","stringToDate","oppdaterTiltakSluttdato","enhetNavn","BrukerDetaljerPage","brukerId","useParams","setBruker","hasFailed","setHasFailed","get","fetchBrukerDetaljer","userInfoPage","cls","tilbakeLenke","App","path","env","this","isDevelopment","process","dayjs","locale","require","ReactDOM","render","StrictMode","document","getElementById","faker","seed","navEnheter","enhetId","randBetween","min","max","datatype","number","randomFnr","dag","mnd","ar","arhundre","toString","padStart","kjonnsiffer","boolean","individsifre","kontrollsifre","startDatoForTiltakStatus","date","recent","lagMailFraNavn","mailDomain","mailNavn","replaceAll","toLowerCase","detaljertBruker","mockBrukere","antallBrukere","i","random","objectElement","brukerFornavn","firstName","brukerEtternavn","lastName","veilederNavn","substring","sluttDatoForTiltakStatus","phone","phoneNumber","arrayElement","push","lagDetaljerteBrukere","filtrerBrukere","params","trim","matcherFornavn","matcherEtternavn","paginerBrukere","sorterBrukere","sorter","ascendingSort","getAscendingSort","ASCENDING","t1","t2","b1","b2","localeCompare","sortDateNullsFirst","allHandlers","req","ctx","delay","json","filtrerteBrukere","sorterteBrukere","mockBrukerSok","find","b","Error","setupWorker","start","serviceWorker","url","dateStr","format","toDate","d1Str","d2Str","date1","date2","isSame","isBefore","DESCENDING"],"mappings":"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","file":"static/js/main.268135cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingenBrukere\":\"ingenBrukere__3EvrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"personIcon\":\"personIcon__29dEG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navRod\":\"#c30000\",\"navOransje\":\"#ff9100\",\"navLimeGronn\":\"#a2ad00\",\"navGronn\":\"#06893a\",\"navLilla\":\"#634689\",\"navDypBla\":\"#005b82\",\"navBla\":\"#0067c5\",\"navLysBla\":\"#66cbec\",\"navMorkGra\":\"#262626\",\"navGra80\":\"#4f4f4f\",\"navGra60\":\"#6a6a6a\",\"navGra40\":\"#a0a0a0\",\"navGra20\":\"#c9c9c9\",\"navLysGra\":\"#f1f1f1\",\"navBakgrunn\":\"#ffffff\",\"navGraBakgrunn\":\"#f1f1f1\",\"fokusFarge\":\"#00347d\",\"redError\":\"#ba3a26\",\"white\":\"#fff\",\"grayBackground\":\"#f1f1f1\",\"grayIcon\":\"#a0a0a0\",\"grayModia\":\"#333333\",\"grayInactive\":\"#6a6a6a\",\"pinkErrorBg\":\"#f3e3e3\",\"navGronnLighten80\":\"#ccf1d6\",\"navGronnLighten60\":\"#99dead\",\"navGronnLighten40\":\"#66c786\",\"navGronnLighten20\":\"#33aa5f\",\"navGronnDarken20\":\"#007c2e\",\"navGronnDarken40\":\"#006a23\",\"navGronnDarken60\":\"#005519\",\"navGronnDarken80\":\"#003b0f\",\"navLimeGronnLighten80\":\"#f9fccc\",\"navLimeGronnLighten60\":\"#ecf399\",\"navLimeGronnLighten40\":\"#d9e366\",\"navLimeGronnLighten20\":\"#c1cb33\",\"navLimeGronnDarken20\":\"#939e00\",\"navLimeGronnDarken40\":\"#7f8900\",\"navLimeGronnDarken60\":\"#666e00\",\"navLimeGronnDarken80\":\"#474e00\",\"navLysBlaLighten80\":\"#d8f9ff\",\"navLysBlaLighten60\":\"#b5f1ff\",\"navLysBlaLighten40\":\"#97e6ff\",\"navLysBlaLighten20\":\"#7cdaf8\",\"navLysBlaDarken20\":\"#4cadcd\",\"navLysBlaDarken40\":\"#368da8\",\"navLysBlaDarken60\":\"#236b7d\",\"navLysBlaDarken80\":\"#134852\",\"navBlaLighten80\":\"#cce1ff\",\"navBlaLighten60\":\"#99c3ff\",\"navBlaLighten40\":\"#66a5f4\",\"navBlaLighten20\":\"#3386e0\",\"navBlaDarken20\":\"#0056b4\",\"navBlaDarken40\":\"#00459c\",\"navBlaDarken60\":\"#00347d\",\"navBlaDarken80\":\"#002252\",\"navDypBlaLighten80\":\"#cce2f0\",\"navDypBlaLighten60\":\"#99c4dd\",\"navDypBlaLighten40\":\"#66a3c4\",\"navDypBlaLighten20\":\"#3380a5\",\"navDypBlaDarken20\":\"#005077\",\"navDypBlaDarken40\":\"#004367\",\"navDypBlaDarken60\":\"#003453\",\"navDypBlaDarken80\":\"#00243a\",\"navLillaLighten80\":\"#e0d8e9\",\"navLillaLighten60\":\"#c0b2d2\",\"navLillaLighten40\":\"#a18dbb\",\"navLillaLighten20\":\"#8269a2\",\"navLillaDarken20\":\"#523874\",\"navLillaDarken40\":\"#412b5d\",\"navLillaDarken60\":\"#301f46\",\"navLillaDarken80\":\"#1f142f\",\"redErrorLighten80\":\"#f9d2cc\",\"redErrorLighten60\":\"#efa89d\",\"redErrorLighten40\":\"#e18071\",\"redErrorLighten20\":\"#d05c4a\",\"redErrorDarken20\":\"#a32a17\",\"redErrorDarken40\":\"#881d0c\",\"redErrorDarken60\":\"#6a1204\",\"redErrorDarken80\":\"#480900\",\"navOransjeLighten80\":\"#ffeccc\",\"navOransjeLighten60\":\"#ffd799\",\"navOransjeLighten40\":\"#ffc166\",\"navOransjeLighten20\":\"#ffaa33\",\"navOransjeDarken20\":\"#d47b00\",\"navOransjeDarken40\":\"#a86400\",\"navOransjeDarken60\":\"#7d4c00\",\"navOransjeDarken80\":\"#523300\",\"screenSm\":\"768px\",\"screenSmMin\":\"768px\",\"screenTablet\":\"768px\",\"screenMd\":\"992px\",\"screenMdMin\":\"992px\",\"screenDesktop\":\"992px\",\"screenLg\":\"1200px\",\"screenLgMin\":\"1200px\",\"screenLgDesktop\":\"1200px\",\"screenXsMax\":\"767px\",\"screenSmMax\":\"991px\",\"screenMdMax\":\"1199px\",\"containerTablet\":\"736px\",\"containerSm\":\"736px\",\"containerDesktop\":\"956px\",\"containerMd\":\"956px\",\"containerLargeDesktop\":\"1156px\",\"containerLg\":\"1156px\",\"gridColumns\":\"12\",\"gridGutterWidth\":\"16px\",\"gridFloatBreakpoint\":\"768px\",\"gridFloatBreakpointMax\":\"767px\",\"paddingBaseVertical\":\"6px\",\"paddingBaseHorizontal\":\"12px\",\"paddingLargeVertical\":\"10px\",\"paddingLargeHorizontal\":\"16px\",\"paddingSmallVertical\":\"5px\",\"paddingSmallHorizontal\":\"10px\",\"paddingXsVertical\":\"1px\",\"paddingXsHorizontal\":\"5px\",\"lineHeightLarge\":\"1.3333333\",\"lineHeightSmall\":\"1.5\",\"borderRadiusSmall\":\"2px\",\"borderRadiusBase\":\"4px\",\"borderRadiusLarge\":\"6px\",\"img-responsive\":\"img-responsive__3nZPR\",\"img-rounded\":\"img-rounded__4WYz8\",\"img-circle\":\"img-circle__205Q7\",\"sr-only\":\"sr-only__3ylsg\",\"sr-only-focusable\":\"sr-only-focusable__2SwBD\",\"clearfix\":\"clearfix__23Fsr\",\"center-block\":\"center-block__3yqwE\",\"pull-right\":\"pull-right__gcdta\",\"pull-left\":\"pull-left__3hy8C\",\"hide\":\"hide__p-3bL\",\"show\":\"show__31OMO\",\"hidden\":\"hidden__qkAHb\",\"invisible\":\"invisible__1ybg2\",\"text-hide\":\"text-hide__DW7pG\",\"ustilet\":\"ustilet__3xNex\",\"blokk\":\"blokk__1BD9X\",\"blokk-null\":\"blokk-null__6CNRs\",\"blokk-xxxs\":\"blokk-xxxs__1iHqT\",\"blokk-xxs\":\"blokk-xxs__34JJ6\",\"blokk-xs\":\"blokk-xs__3JvTQ\",\"blokk-s\":\"blokk-s__3W4OI\",\"blokk-m\":\"blokk-m__3tYqj\",\"blokk-l\":\"blokk-l__2qm7a\",\"blokk-xl\":\"blokk-xl__1wWBA\",\"hidden-xs\":\"hidden-xs__37i4R\",\"hidden-sm\":\"hidden-sm__2Wcco\",\"hidden-md\":\"hidden-md__2XDb-\",\"hidden-lg\":\"hidden-lg__eT6kO\",\"pagineringKnapp\":\"pagineringKnapp__38pkW\",\"pagineringKnapp--hover\":\"pagineringKnapp--hover__2GhC7\",\"pagineringKnapp--focus\":\"pagineringKnapp--focus__1LmY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header__1Jtkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tiltaksoversiktPage\":\"tiltaksoversiktPage__gcUSe\"};","import { SorteringType } from '../../../../utils/sortering-utils';\n\nexport enum Kolonnenavn {\n\tNAVN = 'NAVN',\n\tFODSELSDATO = 'FODSELSDATO',\n\tTILTAKSTYPE = 'TILTAKSTYPE',\n\tTILTAK = 'TILTAK',\n\tSTATUS = 'STATUS',\n\tSTART = 'START',\n\tSLUTT = 'SLUTT'\n}\n\nexport interface BrukerSortering {\n\tkolonnenavn: Kolonnenavn;\n\tsorteringType: SorteringType;\n}","interface ShowProps {\n\tif?: any;\n\tchildren?: any;\n}\n\nexport const Show = (props: ShowProps) => (props.if ? props.children : null);\n","import React from 'react';\nimport NavFrontendSpinner from 'nav-frontend-spinner';\nimport styles from './Spinner.module.less';\n\nexport const Spinner = () => {\n\treturn (\n\t\t<div className={styles.spinner}>\n\t\t\t<NavFrontendSpinner type=\"XL\" />\n\t\t</div>\n\t);\n}\n","import { useState } from 'react';\nimport constate from 'constate';\nimport { TiltakStatus, TiltakType } from '../api/data/bruker';\nimport { BrukerSortering } from '../component/page/tiltaksoversikt/bruker-oversikt/types';\n\nexport const [TiltaksoversiktSokStoreProvider, useTiltaksoversiktSok] = constate(() => {\n\tconst [navnFnrSok, setNavnFnrSok] = useState<string>('');\n\tconst [tiltakTyper, setTiltakTyper] = useState<TiltakType[]>([]);\n\tconst [tiltakStatuser, setTiltakStatuser] = useState<TiltakStatus[]>([]);\n\tconst [brukerSortering, setBrukerSortering] = useState<BrukerSortering>();\n\n\tconst leggTilTiltakType = (tiltakType: TiltakType) => {\n\t\tsetTiltakTyper(prevTyper => {\n\t\t\tif (prevTyper.includes(tiltakType)) {\n\t\t\t\treturn prevTyper;\n\t\t\t}\n\n\t\t\treturn [...prevTyper, tiltakType];\n\t\t});\n\t};\n\n\tconst fjernTilTiltakType = (tiltakType: TiltakType) => {\n\t\tsetTiltakTyper(prevTyper => {\n\t\t\treturn prevTyper.filter((type) => type !== tiltakType);\n\t\t});\n\t};\n\n\tconst leggTilTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatuser(prevStatuser => {\n\t\t\tif (prevStatuser.includes(tiltakStatus)) {\n\t\t\t\treturn prevStatuser;\n\t\t\t}\n\n\t\t\treturn [...prevStatuser, tiltakStatus];\n\t\t});\n\t};\n\n\tconst fjernTilTiltakStatus = (tiltakStatus: TiltakStatus) => {\n\t\tsetTiltakStatuser(prevStatuser => {\n\t\t\treturn prevStatuser.filter((status) => status !== tiltakStatus);\n\t\t});\n\t};\n\n\treturn {\n\t\tnavnFnrSok, setNavnFnrSok,\n\t\ttiltakTyper, leggTilTiltakType, fjernTilTiltakType,\n\t\ttiltakStatuser, leggTilTiltakStatus, fjernTilTiltakStatus,\n\t\tbrukerSortering, setBrukerSortering\n\t};\n});\n","import React from 'react';\nimport { BrukerSortering, Kolonnenavn} from './types';\nimport {\n\tfinnNesteSorteringType,\n\tmapSortDirectionToClassName,\n\tmapSortDirectionToText, SorteringType\n} from '../../../../utils/sortering-utils';\n\ninterface TableHeaderProps {\n\ttitle: string;\n\tname: Kolonnenavn;\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nconst SortableHeader = (props: TableHeaderProps) => {\n\tconst { title, name, sortering, onSortChange } = props;\n\tconst sorteringType = name === sortering?.kolonnenavn\n\t\t? sortering.sorteringType\n\t\t: SorteringType.NONE;\n\n\tconst nesteSorteringType = finnNesteSorteringType(sorteringType);\n\tconst ariaLabel = `Sorter ${title} ${mapSortDirectionToText(nesteSorteringType)}`;\n\n\treturn (\n\t\t<th role=\"columnheader\" className={mapSortDirectionToClassName(sorteringType)} aria-sort={sorteringType}>\n\t\t\t<button aria-label={ariaLabel} onClick={() => onSortChange({ sorteringType: nesteSorteringType, kolonnenavn: name })}>{title}</button>\n\t\t</th>\n\t);\n};\n\ninterface UserTableHeaderProps {\n\tsortering?: BrukerSortering;\n\tonSortChange: (sortering: BrukerSortering) => void;\n}\n\nexport const TabellHeader = (props: UserTableHeaderProps) => {\n\tconst { sortering, onSortChange } = props;\n\treturn (\n\t\t<thead>\n\t\t    <tr>\n\t\t\t    {/* TODO: Er mulig å gjøre koden mer DRY på bekostning av kompleksitet */}\n\t\t\t    <SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Etternavn, Fornavn\" name={Kolonnenavn.NAVN}/>\n\t\t\t    <SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Fødselsdato\" name={Kolonnenavn.FODSELSDATO}/>\n\t\t\t    <SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Tiltakstype\" name={Kolonnenavn.TILTAKSTYPE}/>\n\t\t\t    <SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Tiltak\" name={Kolonnenavn.TILTAK}/>\n\t\t\t    <SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Status\" name={Kolonnenavn.STATUS}/>\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Start\" name={Kolonnenavn.START}/>\n\t\t\t\t<SortableHeader sortering={sortering} onSortChange={onSortChange} title=\"Slutt\" name={Kolonnenavn.SLUTT}/>\n\t\t\t\t<th/>\n\t\t    </tr>\n\t\t</thead>\n    );\n};","\nexport const lagKommaSeparertBrukerNavn = (fornavn: string, etternavn: string): string =>\n\t`${etternavn}, ${fornavn}`;\n\nexport const lagBrukerNavn = (fornavn: string, etternavn: string): string =>\n\t`${fornavn} ${etternavn}`;\n","import { TiltakStatus, TiltakType } from '../api/data/bruker';\n\nexport const mapTiltakStatusTilTekst = (tiltakStatus: TiltakStatus): string => {\n\tswitch (tiltakStatus) {\n\t\tcase TiltakStatus.GJENNOMFORES:\n\t\t\treturn 'Gjennomføres';\n\t\tcase TiltakStatus.NY_BRUKER:\n\t\t\treturn 'Ny Bruker';\n\t\tcase TiltakStatus.PAMELDT:\n\t\t\treturn 'Påmeldt';\n\t\tdefault:\n\t\t\treturn tiltakStatus;\n\t}\n};\n\nexport const mapTiltakTypeTilTekst = (tiltakType: TiltakType): string => {\n\tswitch (tiltakType) {\n\t\tcase TiltakType.AVKLARING:\n\t\t\treturn 'Avklaring';\n\t\tcase TiltakType.GRUPPE_AMO:\n\t\t\treturn 'Gruppe AMO';\n\t\tcase TiltakType.JOBBSOKERKURS:\n\t\t\treturn 'Jobbsøkerkurs';\n\t\tcase TiltakType.OPPFOLGING:\n\t\t\treturn 'Oppfølging';\n\t\tdefault:\n\t\t\treturn tiltakType;\n\t}\n};\n","import React from 'react';\nimport { Bruker } from '../../../../api/data/bruker';\nimport { lagKommaSeparertBrukerNavn } from '../../../../utils/bruker-utils';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../../utils/text-mappers';\nimport { PeopleFilled } from '@navikt/ds-icons';\nimport { Link } from 'react-router-dom';\nimport styles from './Rad.module.less';\nimport { formatDateStr } from '../../../../utils/date-utils';\nimport { BrukerSortering, Kolonnenavn } from './types';\n\ninterface RadProps {\n\tidx: number;\n\tbruker: Bruker;\n\tbrukerSortering?: BrukerSortering;\n}\n\nconst sortClassName = (name: Kolonnenavn, brukerSortering?: BrukerSortering): string | undefined => {\n\tif (!brukerSortering || name !== brukerSortering.kolonnenavn) {\n\t\treturn undefined;\n\t}\n\n\treturn 'tabell__td--sortert';\n}\n\nexport const Rad = (props: RadProps) => {\n\tconst {\n\t\tfodselsdato,\n\t\tfornavn,\n\t\tetternavn,\n\t\ttiltak,\n\t\tid,\n\t} = props.bruker;\n\tconst userSort = props.brukerSortering;\n\n\treturn (\n\t\t<tr>\n\t\t\t<td className={sortClassName(Kolonnenavn.NAVN, userSort)}>{lagKommaSeparertBrukerNavn(fornavn, etternavn)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.FODSELSDATO, userSort)}>{fodselsdato}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.TILTAKSTYPE, userSort)}>{mapTiltakTypeTilTekst(tiltak.type)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.TILTAK, userSort)}>{tiltak.navn}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.STATUS, userSort)}>{mapTiltakStatusTilTekst(tiltak.status)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.START, userSort)}>{tiltak.startdato && formatDateStr(tiltak.startdato)}</td>\n\t\t\t<td className={sortClassName(Kolonnenavn.SLUTT, userSort)}>{tiltak.sluttdato && formatDateStr(tiltak.sluttdato)}</td>\n\t\t\t<td>\n\t\t\t\t<Link to={`/user/${id}`}>\n\t\t\t\t\t<PeopleFilled className={styles.personIcon}/>\n\t\t\t\t</Link>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n","import React from 'react';\nimport { Rad } from './Rad';\nimport { Bruker } from '../../../../api/data/bruker';\nimport { BrukerSortering } from './types';\n\ninterface TabellBodyProps {\n\tsortering?: BrukerSortering;\n\tbrukere: Bruker[];\n}\n\nexport const TabellBody = (props: TabellBodyProps) => {\n    return (\n\t    <tbody>\n\t\t    {props.brukere.map((bruker, idx) => <Rad idx={idx} bruker={bruker} brukerSortering={props.sortering} key={idx} />)}\n\t\t</tbody>\n    );\n};\n","import React from 'react';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { Bruker } from '../../../../api/data/bruker';\nimport { Show } from '../../../felles/Show';\nimport { Spinner } from '../../../felles/spinner/Spinner';\nimport styles from './BrukerOversiktTabell.module.less'\nimport \"nav-frontend-tabell-style\";\nimport { useTiltaksoversiktSok } from '../../../../store/tiltaksoversikt-sok-store';\nimport { TabellHeader } from './TabellHeader';\nimport { TabellBody } from './TabellBody';\n\ninterface UserTableProps {\n\tbrukere: Bruker[];\n\tisLoading: boolean;\n}\n\nexport const BrukerOversiktTabell = (props: UserTableProps) => {\n\tconst { brukerSortering, setBrukerSortering } = useTiltaksoversiktSok();\n\tconst harIngenBrukere = props.brukere.length === 0;\n\n\tconst IngenBrukereAlertstripe = () =>\n\t\t<AlertStripeInfo className={styles.ingenBrukere}>\n\t\t\t<span role=\"alert\" aria-live=\"polite\">Fant ingen brukere</span>\n\t\t</AlertStripeInfo>\n\n\treturn (\n\t\t<>\n\t\t\t<table className=\"tabell tabell--stripet\">\n\t\t\t\t<TabellHeader sortering={brukerSortering} onSortChange={(sort) => setBrukerSortering(sort)} />\n\t\t\t\t<Show if={!props.isLoading && !harIngenBrukere}>\n\t\t\t\t\t<TabellBody brukere={props.brukere} sortering={brukerSortering}/>\n\t\t\t\t</Show>\n\t\t\t</table>\n\t\t\t<Show if={!props.isLoading && harIngenBrukere}>\n\t\t\t\t<IngenBrukereAlertstripe/>\n\t\t\t</Show>\n\t\t\t<Show if={props.isLoading}>\n\t\t\t\t<Spinner/>\n\t\t\t</Show>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport styles from './PagineringKnapp.module.less';\n\nexport const PagineringKnapp = (props: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>) => {\n    const { children, ...rest } = props;\n    return (\n        <button className={styles.pagineringKnapp} {...rest}>\n            {props.children}\n        </button>\n    );\n}","import React from 'react';\nimport { HoyreChevron, VenstreChevron } from 'nav-frontend-chevron';\nimport { Element } from 'nav-frontend-typografi';\nimport { Show } from '../../../felles/Show';\nimport { PagineringKnapp } from './PagineringKnapp';\nimport styles from './PaginationBar.module.less';\n\ninterface PaginationBarProps {\n    totalUsers: number;\n}\n\nexport const PaginationBar = (props: PaginationBarProps) => {\n    const { currentPage, totalPages, pageSize } = {\n        currentPage: 1,\n        totalPages: 4,\n        pageSize: 25\n    };\n\n    const erPaForsteSide: boolean = currentPage === 1;\n    const erPaSisteSide: boolean = currentPage >= totalPages;\n\n    const fraBruker = ((currentPage - 1) * pageSize) + 1;\n    const tilBruker = ((currentPage - 1) * pageSize) + props.totalUsers;\n\n    const handlePageChanged = (newPage: number) => {\n        // setCurrentPage(newPage);\n    }\n\n    return (\n        <div className={styles.paginationBar}>\n            <Element aria-live=\"polite\">\n                Viser {fraBruker}-{tilBruker} av totalt {props.totalUsers} brukere\n            </Element>\n            <div className={styles.paginering}>\n                <PagineringKnapp aria-label=\"Forrige side\" disabled={erPaForsteSide} onClick={() => handlePageChanged(currentPage - 1)}>\n                    <VenstreChevron/>\n                </PagineringKnapp>\n\n                <Show if={!erPaForsteSide}>\n                    <PagineringKnapp aria-label=\"Første side\" onClick={() => handlePageChanged(1)}>1</PagineringKnapp>\n                </Show>\n\n                <PagineringKnapp aria-live=\"polite\" aria-label=\"Valgt side\">\n                    <strong>{currentPage}</strong>\n                </PagineringKnapp>\n\n                <Show if={!erPaSisteSide}>\n                    <PagineringKnapp aria-label=\"Siste side\" onClick={() => handlePageChanged(totalPages)}>\n                        {totalPages}\n                    </PagineringKnapp>\n                </Show>\n\n                <PagineringKnapp aria-label=\"Neste side\" disabled={erPaSisteSide} onClick={() => handlePageChanged(currentPage + 1)}>\n                    <HoyreChevron/>\n                </PagineringKnapp>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Sidetittel } from 'nav-frontend-typografi';\nimport styles from './Header.module.less';\n\nexport const Header = () => {\n\treturn (\n\t\t<header className={styles.header}>\n\t\t\t<Sidetittel>Tiltaksoversikt</Sidetittel>\n\t\t</header>\n\t);\n}\n","import React from 'react';\n\nimport { Checkbox, CheckboxGruppe, Input } from 'nav-frontend-skjema';\nimport Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\nimport { TiltakStatus, TiltakType } from '../../../api/data/bruker';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport { useTiltaksoversiktSok } from '../../../store/tiltaksoversikt-sok-store';\n\nimport globalStyles from '../../../globals.module.less';\n\nexport const FilterMeny = () => {\n\tconst {\n\t\tnavnFnrSok,\n\t\tsetNavnFnrSok,\n\t\ttiltakStatuser,\n\t\tleggTilTiltakStatus,\n\t\tfjernTilTiltakStatus,\n\t\ttiltakTyper,\n\t\tleggTilTiltakType,\n\t\tfjernTilTiltakType\n\t} = useTiltaksoversiktSok();\n\n\treturn (\n\t\t<div>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Søk etter navn eller fnr\"\n\t\t\t\tclassName={globalStyles.blokkM}\n\t\t\t\tvalue={navnFnrSok}\n\t\t\t\tonChange={(e) => setNavnFnrSok(e.target.value)}\n\t\t\t/>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Tiltakstype\" className={globalStyles.blokkM} apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakType).map(type => (\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tkey={type}\n\t\t\t\t\t\t\t\tlabel={mapTiltakTypeTilTekst(type)}\n\t\t\t\t\t\t\t\tname=\"filter-tiltakstype\"\n\t\t\t\t\t\t\t\tchecked={tiltakTyper.includes(type)}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\t\tleggTilTiltakType(type);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfjernTilTiltakType(type);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\n\t\t\t<Ekspanderbartpanel tittel=\"Status\" className={globalStyles.blokkM} apen>\n\t\t\t\t<CheckboxGruppe>\n\t\t\t\t\t{Object.values(TiltakStatus).map(status => (\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tkey={status}\n\t\t\t\t\t\t\t\tlabel={mapTiltakStatusTilTekst(status)}\n\t\t\t\t\t\t\t\tname=\"filter-tiltakstatus\"\n\t\t\t\t\t\t\t\tchecked={tiltakStatuser.includes(status)}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\t\tleggTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfjernTilTiltakStatus(status);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</CheckboxGruppe>\n\t\t\t</Ekspanderbartpanel>\n\t\t</div>\n\t)\n}","import axios, { AxiosError, AxiosPromise, AxiosResponse } from 'axios';\nimport { APP_NAME } from '../utils/constants';\n\nexport const axiosInstance = axios.create({\n\twithCredentials: true,\n\theaders: { 'Nav-Consumer-Id': APP_NAME }\n});\n\nexport function isAnyLoading(...fetchers: { loading: boolean }[]): boolean {\n\treturn fetchers.some(f => f.loading);\n}\n\nexport function isAnyLoadingOrNotStarted(...fetchers: { data?: any; error?: any; loading: boolean }[]): boolean {\n\treturn fetchers.some(f => f.loading || (!f.error && !f.data));\n}\n\nexport function hasAnyFailed(...fetchers: { error?: AxiosError }[]): boolean {\n\treturn fetchers.some(f => f.error);\n}\n\nexport function ifResponseHasData<T>(callback: (data: T) => void): (res: AxiosResponse<T>) => AxiosPromise<T> {\n\treturn (res: AxiosResponse<T>) => {\n\t\tif (res.status < 300 && res.data) {\n\t\t\tcallback(res.data);\n\t\t}\n\t\treturn Promise.resolve(res);\n\t};\n}","export const APP_NAME = 'amt-tiltaksarrangor-flate';\n","import { AxiosPromise } from 'axios';\nimport { Bruker, DetaljertBruker, Tiltaksinstans } from './data/bruker';\nimport { axiosInstance } from './utils';\nimport {\n\tBrukerSokParams,\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody\n} from './data/request-types';\n\nexport const brukerSok = (brukerSokParams: BrukerSokParams): AxiosPromise<Bruker[]> => {\n\treturn axiosInstance.post('/amt-tiltak/api/bruker/sok', brukerSokParams);\n};\n\nexport const fetchBrukerDetaljer = (brukerId: string): AxiosPromise<DetaljertBruker> => {\n\treturn axiosInstance.get(`/amt-tiltak/api/bruker/${brukerId}`);\n};\n\nexport const oppdaterTiltakStartdato = (tiltakinstansId: string, startdato: Date): AxiosPromise<Tiltaksinstans> => {\n\tconst body : OppdaterTiltakStartdatoRequestBody = {\n\t\tstartdato: startdato.toISOString()\n\t};\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/startdato`, body);\n};\n\nexport const oppdaterTiltakSluttdato = (tiltakinstansId: string, sluttdato: Date): AxiosPromise<Tiltaksinstans> => {\n\tconst body : OppdaterTiltakSluttdatoRequestBody = {\n\t\tsluttdato: sluttdato.toISOString()\n\t}\n\treturn axiosInstance.put(`/amt-tiltak/api/tiltak/${tiltakinstansId}/sluttdato`, body);\n};\n","import React, { useEffect, useState } from 'react';\nimport { BrukerOversiktTabell } from './bruker-oversikt/BrukerOversiktTabell';\nimport { PaginationBar } from './paginering/PaginationBar';\nimport { Header } from './Header';\nimport { FilterMeny } from './FilterMeny';\nimport { Bruker } from '../../../api/data/bruker';\nimport { useTiltaksoversiktSok } from '../../../store/tiltaksoversikt-sok-store';\nimport { brukerSok } from '../../../api';\nimport { BrukerSokParams } from '../../../api/data/request-types';\nimport styles from './TiltaksoversiktPage.module.less';\nimport { SorteringType } from '../../../utils/sortering-utils';\n\nexport const TiltaksoversiktPage = () => {\n\tconst { tiltakTyper, tiltakStatuser, navnFnrSok, brukerSortering } = useTiltaksoversiktSok();\n\tconst [brukere, setBrukere] = useState<Bruker[]>([]);\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\t// TODO: this must be debounced\n\t\tsetIsLoading(true);\n\n\t\tconst sokParams: BrukerSokParams = {\n\t\t\tfilter: {\n\t\t\t\tnavnFnrSok,\n\t\t\t\ttiltakTyper,\n\t\t\t\ttiltakStatuser\n\t\t\t},\n\t\t\tsortering: brukerSortering && brukerSortering.sorteringType !== SorteringType.NONE\n\t\t\t\t? { kolonnenavn: brukerSortering.kolonnenavn, sorteringType: brukerSortering.sorteringType }\n\t\t\t\t: undefined\n\t\t};\n\n\t\tbrukerSok(sokParams)\n\t\t\t.then(res => setBrukere(res.data))\n\t\t\t.catch(console.error) // TODO: vis feil i alertstripe\n\t\t\t.finally(() => setIsLoading(false));\n\t}, [tiltakTyper, tiltakStatuser, navnFnrSok, brukerSortering]);\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<main className={styles.tiltaksoversiktPage}>\n\t\t\t\t<FilterMeny/>\n\t\t\t\t<div>\n\t\t\t\t\t<PaginationBar totalUsers={brukere.length}/>\n\t\t\t\t\t<BrukerOversiktTabell brukere={brukere} isLoading={isLoading} />\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { TiltaksoversiktSokStoreProvider } from './tiltaksoversikt-sok-store';\n\ninterface StoreProviderProps {\n\tchildren: React.ReactNode;\n}\n\nconst StoreProvider = (props: StoreProviderProps) => {\n\treturn (\n\t\t<TiltaksoversiktSokStoreProvider>\n\t\t\t{props.children}\n\t\t</TiltaksoversiktSokStoreProvider>\n\t);\n};\n\nexport default StoreProvider;\n","import React, { ReactNode, useState } from 'react';\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport { Ingress, Normaltekst, Sidetittel } from 'nav-frontend-typografi';\nimport { mapTiltakStatusTilTekst, mapTiltakTypeTilTekst } from '../../../utils/text-mappers';\nimport { Knapp } from 'nav-frontend-knapper';\nimport { Input } from 'nav-frontend-skjema';\nimport { oppdaterTiltakSluttdato, oppdaterTiltakStartdato } from '../../../api';\nimport { formatDateInputStr, stringToDate } from '../../../utils/date-utils';\nimport { lagBrukerNavn } from '../../../utils/bruker-utils';\nimport globalStyles from '../../../globals.module.less';\nimport styles from './BrukerPaaTiltakDetaljer.module.less';\n\ninterface SeksjonProps {\n    tittel: string;\n    children?: ReactNode;\n}\n\nconst Seksjon = ({tittel, children}: SeksjonProps) =>\n    <div>\n        <Ingress className={styles.textBold}>{tittel}</Ingress>\n        {children}\n    </div>;\n\nexport const BrukerPaaTiltakDetaljer = (props: { bruker: DetaljertBruker }) => {\n    const { tiltak, navEnhet, navVeileder, kontaktinfo, fornavn, etternavn} = props.bruker;\n    const [startdato, setStartdato] = useState<string>(formatDateInputStr(tiltak.startdato));\n    const [sluttdato, setSluttdato] = useState<string>(formatDateInputStr(tiltak.sluttdato));\n\n    const onStartdatoLagreClick = () => {\n        if(!startdato) return;\n        oppdaterTiltakStartdato(tiltak.id, stringToDate(startdato!));\n\n    }\n    const onSluttdatoLagreClick = () => {\n        if(!sluttdato) return;\n        oppdaterTiltakSluttdato(tiltak.id, stringToDate(sluttdato!));\n    }\n    return (\n        <>\n            <Sidetittel className={globalStyles.blokkM}>{lagBrukerNavn(fornavn, etternavn)}</Sidetittel>\n            <div className={styles.userInfoContent}>\n                <Seksjon tittel=\"Kontaktinformasjon\">\n                    <Normaltekst>Telefon: {kontaktinfo.telefonnummer}</Normaltekst>\n                    <Normaltekst>Email: {kontaktinfo.email}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Status\">\n                    <Normaltekst>{mapTiltakStatusTilTekst(tiltak.status)}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Periode for gjennomføring\">\n                    <div className={styles.periodeInputWrapper}>\n                        <Input\n                            label=\"Start\"\n                            type=\"date\"\n                            value={startdato}\n                            onChange={(e) => setStartdato(e.target.value)}\n                        />\n\n                        <Knapp className={styles.periodeKnapp} onClick={onStartdatoLagreClick} disabled={!startdato}>Lagre</Knapp>\n\n                    </div>\n                    <div className={styles.periodeInputWrapper}>\n                        <Input\n                            label=\"Slutt\"\n                            type=\"date\"\n                            value={sluttdato}\n                            onChange={(e) => setSluttdato(e.target.value)}/>\n\n                        <Knapp className={styles.periodeKnapp} onClick={onSluttdatoLagreClick} disabled={!sluttdato}>Lagre</Knapp>\n                    </div>\n                </Seksjon>\n\n                <Seksjon tittel=\"NAV-kontor\">\n                    <Normaltekst>{navEnhet.enhetNavn}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Veileder\">\n                    <Normaltekst>Navn: {navVeileder?.navn}</Normaltekst>\n                    <Normaltekst>Email: {navVeileder?.email}</Normaltekst>\n                    <Normaltekst>Telefonnummer: {navVeileder?.telefonnummer}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Tiltak\">\n                    <Normaltekst>Type: {mapTiltakTypeTilTekst(tiltak.type)}</Normaltekst>\n                </Seksjon>\n\n                <Seksjon tittel=\"Beskrivelse\" />\n            </div>\n        </>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { fetchBrukerDetaljer } from '../../../api';\nimport { DetaljertBruker } from '../../../api/data/bruker';\nimport { Spinner } from '../../felles/spinner/Spinner';\nimport { AlertStripeFeil } from 'nav-frontend-alertstriper';\nimport { BrukerPaaTiltakDetaljer } from './BrukerPaaTiltakDetaljer';\nimport cls from 'classnames';\nimport styles from './BrukerDetaljerPage.module.less';\nimport globalStyles from '../../../globals.module.less';\n\nexport const BrukerDetaljerPage = () => {\n\tconst { brukerId } = useParams<{ brukerId: string }>();\n\tconst [bruker, setBruker] = useState<DetaljertBruker>();\n\tconst [hasFailed, setHasFailed] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tfetchBrukerDetaljer(brukerId)\n\t\t\t.then(res => setBruker(res.data))\n\t\t\t.catch(() => setHasFailed(true));\n\t}, [brukerId]);\n\n\treturn (\n\t\t<main className={styles.userInfoPage}>\n\t\t\t<Link to=\"/\" className={cls(styles.tilbakeLenke, globalStyles.blokkM)}>Tilbake</Link>\n\t\t\t{bruker\n\t\t\t\t? <BrukerPaaTiltakDetaljer bruker={bruker}/>\n\t\t\t\t: (hasFailed ? <AlertStripeFeil>En feil oppstod</AlertStripeFeil> : <Spinner/>)\n\t\t\t}\n\t\t</main>\n\t);\n}","import React from 'react';\nimport { TiltaksoversiktPage } from './component/page/tiltaksoversikt/TiltaksoversiktPage';\nimport StoreProvider from './store/store-provider';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { BrukerDetaljerPage } from './component/page/bruker-detaljer/BrukerDetaljerPage';\n\nexport const App = () => {\n\treturn (\n\t\t<StoreProvider>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/user/:brukerId'><BrukerDetaljerPage /></Route>\n\t\t\t\t\t<Route path='/'><TiltaksoversiktPage/></Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\t\t</StoreProvider>\n\n\t);\n}\n","class Environment {\n\tget isProduction() {\n\t\treturn !this.isDevelopment;\n\t}\n\n\tget isDevelopment() {\n\t\treturn process.env.REACT_APP_DEV === 'true';\n\t}\n}\n\nconst env = new Environment();\n\nexport default env;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport { App } from './App';\nimport env from './utils/environment';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/nb';\n\ndayjs.locale('nb');\n\nif (env.isDevelopment) {\n    require('./mock');\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import faker from 'faker';\nimport { Bruker, DetaljertBruker, NavEnhet, TiltakStatus, TiltakType } from '../../api/data/bruker';\nimport { OrNothing } from '../../utils/types/or-nothing';\n\nfaker.locale = \"nb_NO\";\nfaker.seed(486756783);\n\nconst navEnheter: NavEnhet[] = [\n\t{\n\t\tenhetId: '0219',\n\t\tenhetNavn: 'NAV Bærum'\n\t},\n\t{\n\t\tenhetId: '0425',\n\t\tenhetNavn: 'NAV Åsnes'\n\t},\n\t{\n\t\tenhetId: '1500',\n\t\tenhetNavn: 'NAV Møre og Romsdal'\n\t},\n\t{\n\t\tenhetId: '0104',\n\t\tenhetNavn: 'NAV Moss'\n\t}\n];\n\nconst randBetween = (min: number, max: number): number => {\n\treturn faker.datatype.number({ min, max })\n};\n\nconst randomFnr = (): string => {\n\tconst dag = randBetween(1, 31);\n\tconst mnd = randBetween(1, 12);\n\tconst ar = randBetween(0, 99);\n\tconst arhundre = randBetween(0, 99).toString().padStart(2, '0');\n\tconst kjonnsiffer = faker.datatype.boolean() ? 4 : 1;\n\tconst individsifre = `${arhundre}${kjonnsiffer}`;\n\tconst kontrollsifre = `${randBetween(0, 9)}${randBetween(0, 9)}`;\n\n\treturn `${dag.toString().padStart(2, '0')}${mnd.toString().padStart(2, '0')}${ar.toString().padStart(2, '0')}${individsifre}${kontrollsifre}`;\n}\n\nconst startDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\tif (status === TiltakStatus.PAMELDT || status === TiltakStatus.GJENNOMFORES) {\n\t\treturn faker.date.recent().toISOString();\n\t}\n\n\treturn undefined;\n};\n\nconst sluttDatoForTiltakStatus = (status: TiltakStatus): OrNothing<string> => {\n\t// TODO: Implement\n\treturn undefined;\n};\n\nconst lagMailFraNavn = (navn: string, mailDomain: string): string => {\n\tconst mailNavn = navn.replaceAll(' ', '.')\n\t\t.replaceAll('æ', 'ae')\n\t\t.replaceAll('ø', 'o')\n\t\t.replaceAll('å', 'a')\n\t\t.toLowerCase();\n\n\treturn `${mailNavn}@${mailDomain}`\n};\n\nexport const lagDetaljerteBrukere = (antallBrukere: number): DetaljertBruker[] => {\n\tconst brukere: DetaljertBruker[] = [];\n\n\tfor (let i = 0; i < antallBrukere; i++) {\n\n\t\tconst status = faker.random.objectElement(TiltakStatus) as TiltakStatus;\n\n\t\tconst brukerFornavn = faker.name.firstName();\n\t\tconst brukerEtternavn = faker.name.lastName();\n\n\t\tconst veilederNavn = faker.name.firstName() + \" \" + faker.name.lastName();\n\n\t\tconst bruker: DetaljertBruker = {\n\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\tfornavn: brukerFornavn,\n\t\t\tetternavn: brukerEtternavn,\n\t\t\tfodselsdato: randomFnr().substring(0, 6),\n\t\t\ttiltak: {\n\t\t\t\tid: randBetween(1000, 1000000).toString(),\n\t\t\t\tstatus: status,\n\t\t\t\ttype: faker.random.objectElement(TiltakType) as TiltakType,\n\t\t\t\tstartdato: startDatoForTiltakStatus(status),\n\t\t\t\tsluttdato: sluttDatoForTiltakStatus(status),\n\t\t\t\tnavn: 'Noe tekst'\n\t\t\t},\n\t\t\tkontaktinfo: {\n\t\t\t\temail: lagMailFraNavn(`${brukerFornavn} ${brukerEtternavn}`, 'example.com'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber()\n\t\t\t},\n\t\t\tnavEnhet: faker.random.arrayElement(navEnheter),\n\t\t\tnavVeileder: {\n\t\t\t\tnavn: veilederNavn,\n\t\t\t\temail: lagMailFraNavn(veilederNavn, 'nav.no'),\n\t\t\t\ttelefonnummer: faker.phone.phoneNumber()\n\t\t\t},\n\t\t};\n\n\t\tbrukere.push(bruker);\n\t}\n\n\treturn brukere;\n};\n\nexport const tilBruker = (detaljertBruker: DetaljertBruker): Bruker => {\n\treturn {\n\t\tid: detaljertBruker.id,\n\t\tfornavn: detaljertBruker.fornavn,\n\t\tetternavn: detaljertBruker.etternavn,\n\t\tfodselsdato: detaljertBruker.fodselsdato,\n\t\ttiltak: detaljertBruker.tiltak\n\t};\n};\n\nexport const mockBrukere = lagDetaljerteBrukere(55);\n","import { Bruker } from '../api/data/bruker';\nimport { BrukerSokParams } from '../api/data/request-types';\nimport { sortDateNullsFirst } from '../utils/date-utils';\nimport { reverseSort } from '../utils';\nimport { Kolonnenavn } from '../component/page/tiltaksoversikt/bruker-oversikt/types';\nimport { SorteringType } from '../utils/sortering-utils';\n\nexport const mockBrukerSok = (brukere: Bruker[], params: BrukerSokParams): Bruker[] => {\n\tconst filtrerteBrukere = filtrerBrukere(brukere, params);\n\tconst sorterteBrukere = sorterBrukere(filtrerteBrukere, params);\n\n\treturn paginerBrukere(sorterteBrukere, params);\n};\n\nconst filtrerBrukere = (brukere: Bruker[], params: BrukerSokParams): Bruker[] => {\n\treturn brukere.filter((bruker) => {\n\t\tconst { navnFnrSok, tiltakStatuser, tiltakTyper } = params.filter;\n\t\tif (navnFnrSok?.trim()) {\n\t\t\tconst matcherFornavn = bruker.fornavn.toLowerCase().includes(navnFnrSok || '');\n\t\t\tconst matcherEtternavn = bruker.etternavn.toLowerCase().includes(navnFnrSok || '');\n\n\t\t\tif (!matcherFornavn && !matcherEtternavn) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (tiltakStatuser.length > 0) {\n\t\t\tif (!tiltakStatuser.includes(bruker.tiltak.status)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (tiltakTyper.length > 0) {\n\t\t\tif (!tiltakTyper.includes(bruker.tiltak.type)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t});\n};\n\nconst paginerBrukere = (brukere: Bruker[], params: BrukerSokParams): Bruker[] => {\n\t// TODO: Implement later\n\treturn brukere;\n};\n\nconst sorterBrukere = (brukere: Bruker[], params: BrukerSokParams): Bruker[] => {\n\tif (!params.sortering || params.sortering.sorteringType === SorteringType.NONE) {\n\t\treturn brukere;\n\t}\n\n\tconst { kolonnenavn, sorteringType } = params.sortering;\n\n\tconst ascendingSort = getAscendingSort(kolonnenavn);\n\tconst sort = sorteringType === SorteringType.ASCENDING ? ascendingSort : reverseSort(ascendingSort);\n\n\treturn brukere.sort(sort);\n};\n\nconst getAscendingSort = (name: Kolonnenavn): (b1: Bruker, b2: Bruker) => number => {\n\treturn (b1, b2) => {\n\t\tswitch (name) {\n\t\t\tcase Kolonnenavn.NAVN:\n\t\t\t\treturn b1.etternavn.localeCompare(b2.etternavn);\n\t\t\tcase Kolonnenavn.FODSELSDATO:\n\t\t\t\treturn b1.fodselsdato.localeCompare(b2.fodselsdato);\n\t\t\tcase Kolonnenavn.TILTAK:\n\t\t\t\treturn b1.tiltak.navn.localeCompare(b2.tiltak.navn);\n\t\t\tcase Kolonnenavn.TILTAKSTYPE:\n\t\t\t\treturn b1.tiltak.type.localeCompare(b2.tiltak.type);\n\t\t\tcase Kolonnenavn.STATUS:\n\t\t\t\treturn b1.tiltak.status.localeCompare(b2.tiltak.status);\n\t\t\tcase Kolonnenavn.START:\n\t\t\t\treturn sortDateNullsFirst(b1.tiltak.startdato, b2.tiltak.startdato);\n\t\t\tcase Kolonnenavn.SLUTT:\n\t\t\t\treturn sortDateNullsFirst(b1.tiltak.sluttdato, b2.tiltak.sluttdato);\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t};\n};\n","\nexport const reverseSort = <T extends any>(sorter: (t1: T, t2: T) => number) => {\n\treturn (t1: T, t2: T): number => {\n\t\treturn sorter(t1, t2) * -1;\n\t}\n}\n","import { setupWorker, rest } from 'msw';\nimport { RequestHandler } from 'msw/lib/types/handlers/RequestHandler';\nimport { mockBrukere, tilBruker } from './data/brukere';\nimport {\n\tBrukerSokParams,\n\tOppdaterTiltakSluttdatoRequestBody,\n\tOppdaterTiltakStartdatoRequestBody\n} from '../api/data/request-types';\nimport { mockBrukerSok } from './bruker-sok';\n\nconst allHandlers: RequestHandler[] = [\n\trest.post('/amt-tiltak/api/bruker/sok', (req, res, ctx) => {\n\t\tconst sokParams = req.body as BrukerSokParams;\n\t\tconst brukere = mockBrukere.map(tilBruker);\n\n\t\treturn res(ctx.delay(500), ctx.json(mockBrukerSok(brukere, sokParams)));\n\t}),\n\trest.get('/amt-tiltak/api/bruker/:brukerId',(req, res, ctx) => {\n\t\tconst brukerId = req.params['brukerId'];\n\t\tconst bruker = mockBrukere.find((b) => b.id === brukerId);\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/startdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakStartdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId']\n\t\tconst bruker = mockBrukere.find(bruker => bruker.tiltak.id === tiltakinstansId);\n\n\t\tif(!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\n\t\tbruker.tiltak.startdato = body.startdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n\trest.put('/amt-tiltak/api/tiltak/:tiltakinstansId/sluttdato', (req, res, ctx) => {\n\t\tconst body = req.body as OppdaterTiltakSluttdatoRequestBody;\n\t\tconst tiltakinstansId = req.params['tiltakinstansId']\n\t\tconst bruker = mockBrukere.find(bruker => bruker.tiltak.id === tiltakinstansId);\n\n\t\tif(!bruker) throw new Error(`Fant ingen tiltak med id: ${tiltakinstansId}`);\n\n\t\tbruker.tiltak.sluttdato = body.sluttdato;\n\n\t\treturn res(ctx.delay(500), ctx.json(bruker.tiltak));\n\t}),\n];\n\nsetupWorker(...allHandlers)\n\t.start({ serviceWorker: { url: process.env.PUBLIC_URL + '/mockServiceWorker.js' } })\n\t.catch(e => {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.error('Unable to setup mocked API endpoints', e);\n\t});","import { OrNothing } from '../../utils/types/or-nothing';\n\nexport interface Bruker {\n\tid: string; // TODO: Skal vi bruke uuid eller heltall?\n\tfodselsdato: string;\n\tfornavn: string; // TODO: Kan hende det holder med kun et felt for navn\n\tetternavn: string;\n\ttiltak: Tiltaksinstans;\n}\n\nexport interface DetaljertBruker {\n\tid: string; // TODO: Skal vi bruke uuid eller heltall?\n\tfodselsdato: string;\n\tfornavn: string; // TODO: Kan hende det holder med kun et felt for navn\n\tetternavn: string;\n\ttiltak: Tiltaksinstans;\n\n\tnavEnhet: NavEnhet;\n\tkontaktinfo: Kontaktinfo;\n\tnavVeileder: OrNothing<NavVeileder>;\n}\n\nexport interface Tiltaksinstans {\n\tid: string;\n\ttype: TiltakType;\n\tstatus: TiltakStatus;\n\tnavn: string;\n\tstartdato: OrNothing<string>;\n\tsluttdato: OrNothing<string>;\n}\n\nexport interface NavEnhet {\n\tenhetId: string;\n\tenhetNavn: string;\n}\n\ninterface Kontaktinfo {\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\ninterface NavVeileder {\n\tnavn: string;\n\temail: OrNothing<string>;\n\ttelefonnummer: OrNothing<string>;\n}\n\nexport enum TiltakType {\n\tJOBBSOKERKURS   = 'JOBBSOKERKURS',\n\tAVKLARING       = 'AVKLARING',\n\tGRUPPE_AMO      = 'GRUPPE_AMO',\n\tOPPFOLGING      = 'OPPFOLGING'\n}\n\nexport enum TiltakStatus {\n\tNY_BRUKER       = 'NY_BRUKER',\n\tPAMELDT         = 'PAMELDT',\n\tGJENNOMFORES    = 'GJENNOMFORES'\n}","import dayjs from 'dayjs';\nimport { OrNothing } from './types/or-nothing';\n\nexport const formatDateStr = (dateStr: string) => {\n\treturn dayjs(dateStr).format('DD. MMM YYYY');\n}\n\nexport const formatDateInputStr = (dateStr: OrNothing<string>) : string => {\n\treturn dateStr ? dayjs(dateStr).format('YYYY-MM-DD') : '';\n}\n\nexport const stringToDate = (dateStr: string) : Date => dayjs(dateStr, 'YYYY-MM-DD').toDate();\n\nexport const sortDateNullsFirst = (d1Str: OrNothing<string>, d2Str: OrNothing<string>): number => {\n\tif (d1Str == null) {\n\t\treturn -1;\n\t}\n\n\tif (d2Str == null) {\n\t\treturn 1;\n\t}\n\n\tconst date1 = dayjs(d1Str);\n\tconst date2 = dayjs(d2Str);\n\n\tif (date1.isSame(date2)) {\n\t\treturn 0;\n\t}\n\n\treturn date1.isBefore(date2) ? -1 : 1;\n};\n\n","export enum SorteringType {\n\tASCENDING = 'ascending',\n\tDESCENDING = 'descending',\n\tNONE = 'none'\n}\n\nexport const mapSortDirectionToText = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'stigende';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'synkende';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const mapSortDirectionToClassName = (sorteringType: SorteringType): string => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn 'tabell__th--sortert-asc';\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn 'tabell__th--sortert-desc';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const finnNesteSorteringType = (sorteringType: SorteringType): SorteringType => {\n\tswitch (sorteringType) {\n\t\tcase SorteringType.ASCENDING:\n\t\t\treturn SorteringType.DESCENDING;\n\t\tcase SorteringType.DESCENDING:\n\t\t\treturn SorteringType.NONE;\n\t\tdefault:\n\t\t\t// This will be the default sort direction\n\t\t\treturn SorteringType.ASCENDING;\n\t}\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__3UCmH\",\"center-block\":\"center-block__qRhQr\",\"pull-right\":\"pull-right__uoRiB\",\"pull-left\":\"pull-left__3Sk0z\",\"hide\":\"hide__3yk1z\",\"show\":\"show__25QKn\",\"hidden\":\"hidden__1vXM7\",\"invisible\":\"invisible__1E0VC\",\"text-hide\":\"text-hide__159n6\",\"ustilet\":\"ustilet__M_vEf\",\"blokk\":\"blokk__1sum3\",\"blokk-null\":\"blokk-null__1kE01\",\"blokk-xxxs\":\"blokk-xxxs__zdZmh\",\"blokk-xxs\":\"blokk-xxs__3wMg6\",\"blokk-xs\":\"blokk-xs__PjJ8i\",\"blokk-s\":\"blokk-s__3mZX8\",\"blokk-m\":\"blokk-m__1ll-c\",\"blokk-l\":\"blokk-l__3QslZ\",\"blokk-xl\":\"blokk-xl__3pfFf\",\"blokkM\":\"blokkM__C-cKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"clearfix__gNfUK\",\"center-block\":\"center-block__29b77\",\"pull-right\":\"pull-right__1_ahA\",\"pull-left\":\"pull-left__1Jt2h\",\"hide\":\"hide__3_Fyb\",\"show\":\"show__uq-yK\",\"hidden\":\"hidden__3C43V\",\"invisible\":\"invisible__3Mk-s\",\"text-hide\":\"text-hide__2TFPd\",\"ustilet\":\"ustilet__3onBT\",\"blokk\":\"blokk__cRVpl\",\"blokk-null\":\"blokk-null__y5Xlc\",\"blokk-xxxs\":\"blokk-xxxs__2duqe\",\"blokk-xxs\":\"blokk-xxs__3xWzh\",\"blokk-xs\":\"blokk-xs__1xorx\",\"blokk-s\":\"blokk-s__1E4oK\",\"blokk-m\":\"blokk-m__31Vvh\",\"blokk-l\":\"blokk-l__I6QuF\",\"blokk-xl\":\"blokk-xl__1AMaw\",\"textBold\":\"textBold__3aBKa\",\"userInfoContent\":\"userInfoContent__3Csxl\",\"periodeInputWrapper\":\"periodeInputWrapper__3DpCu\",\"periodeKnapp\":\"periodeKnapp__1wsHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBar\":\"paginationBar__3iSC_\",\"paginering\":\"paginering__3Koel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfoPage\":\"userInfoPage__NknKL\",\"tilbakeLenke\":\"tilbakeLenke__3zCLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner__3ZKPX\"};"],"sourceRoot":""}