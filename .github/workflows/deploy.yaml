name: Deploy application
on:
  workflow_dispatch: # This workflow can be triggered manually from: https://github.com/navikt/amt-tiltaksarrangor-flate/actions/workflows/deploy.yaml
  push:
    branches:
      - main
env:
  CI: true
  TZ: Europe/Amsterdam

jobs:
  test-and-build:
    name: Test and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Build application
        run: npm run build
      - name: Upload frontend asset files
        uses: actions/upload-artifact@v2
        with:
          name: frontend-assets
          path: build
          retention-days: 1

  deploy-dev:
    name: Deploy application to dev
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - name: Download frontend asset files
        uses: actions/download-artifact@v2
        with:
          name: frontend-assets
          path: build
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCS_SA_KEY_DEV }}
          export_default_credentials: true
      - name: Upload files to GCS
        run: gsutil -m rsync -r build gs://amt-tiltaksarrangor-flate-dev
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/dev@${{ github.sha }}
          release_name: Release to dev
          prerelease: true

  deploy-prod:
    name: Deploy application to prod
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download frontend asset files
        uses: actions/download-artifact@v2
        with:
          name: frontend-assets
          path: build
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCS_SA_KEY_PROD }}
          export_default_credentials: true
      - name: Upload files to GCS
        run: gsutil -m rsync -r build gs://amt-tiltaksarrangor-flate-prod
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/prod@${{ github.sha }}
          release_name: Release to prod
          prerelease: false
